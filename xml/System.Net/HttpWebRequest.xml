<Type Name="HttpWebRequest" FullName="System.Net.HttpWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b93945ea26f4c0b090b30a1356171410056cdb82" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77223455" /></Metadata><TypeSignature Language="C#" Value="public class HttpWebRequest : System.Net.WebRequest, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable HttpWebRequest extends System.Net.WebRequest implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpWebRequest&#xA;Inherits WebRequest&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpWebRequest : System::Net::WebRequest, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type HttpWebRequest = class&#xA;    inherit WebRequest&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.FriendAccessAllowed</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ba60d-101"><see cref="T:System.Net.WebRequest" /> クラスの HTTP 固有の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-101">Provides an HTTP-specific implementation of the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  <span data-ttu-id="ba60d-102">新規の開発には `HttpWebRequest` を使用しないことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-102">We don't recommend that you use `HttpWebRequest` for new development.</span></span> <span data-ttu-id="ba60d-103">代わりに、<xref:System.Net.Http.HttpClient?displayProperty=nameWithType> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-103">Instead, use the <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> class.</span></span>

 <span data-ttu-id="ba60d-104"><xref:System.Net.HttpWebRequest> クラスは、<xref:System.Net.WebRequest> で定義されているプロパティとメソッド、および HTTP を使用してユーザーが直接サーバーと対話できるようにする追加のプロパティとメソッドをサポートします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-104">The <xref:System.Net.HttpWebRequest> class provides support for the properties and methods defined in <xref:System.Net.WebRequest> and for additional properties and methods that enable the user to interact directly with servers using HTTP.</span></span>  
  
 <span data-ttu-id="ba60d-105"><xref:System.Net.HttpWebRequest.%23ctor%2A> コンストラクターは使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-105">Do not use the <xref:System.Net.HttpWebRequest.%23ctor%2A> constructor.</span></span> <span data-ttu-id="ba60d-106"><xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドを使用して、新しい <xref:System.Net.HttpWebRequest> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-106">Use the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method to initialize new <xref:System.Net.HttpWebRequest> objects.</span></span> <span data-ttu-id="ba60d-107">Uniform Resource Identifier (URI) のスキームが `http://` または `https://`の場合、<xref:System.Net.WebRequest.Create%2A> は <xref:System.Net.HttpWebRequest> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-107">If the scheme for the Uniform Resource Identifier (URI) is `http://` or `https://`, <xref:System.Net.WebRequest.Create%2A> returns an <xref:System.Net.HttpWebRequest> object.</span></span>  
  
 <span data-ttu-id="ba60d-108"><xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドは、<xref:System.Net.HttpWebRequest.RequestUri%2A> プロパティで指定されたリソースへの同期要求を行い、応答オブジェクトを含む <xref:System.Net.HttpWebResponse> を返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-108">The <xref:System.Net.HttpWebRequest.GetResponse%2A> method makes a synchronous request to the resource specified in the <xref:System.Net.HttpWebRequest.RequestUri%2A> property and returns an <xref:System.Net.HttpWebResponse> that contains the response object.</span></span> <span data-ttu-id="ba60d-109">応答データは、<xref:System.Net.HttpWebResponse.GetResponseStream%2A>によって返されたストリームを使用して受信できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-109">The response data can be received by using the stream returned by <xref:System.Net.HttpWebResponse.GetResponseStream%2A>.</span></span> <span data-ttu-id="ba60d-110">応答オブジェクトまたは応答ストリームが閉じている場合、残りのデータは失わになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-110">If the response object or the response stream is closed, remaining data will be forfeited.</span></span> <span data-ttu-id="ba60d-111">残りのデータはドレインされ、次の条件に該当する場合は、応答オブジェクトまたはストリームを閉じるときに、後続の要求に対してソケットが再利用されます。これは、次のような状況が発生した場合、受信する必要があるデータの量が少ない場合、または残りのデータは、短い間隔で受信されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-111">The remaining data will be drained and the socket will be re-used for subsequent requests when closing the response object or stream if the following conditions hold: it's a keep-alive or pipelined request, only a small amount of data needs to be received, or the remaining data is received in a small time interval.</span></span> <span data-ttu-id="ba60d-112">上記のいずれの条件も保持しない場合、またはドレイン時間を超過した場合、ソケットは閉じられます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-112">If none of the mentioned conditions hold or the drain time is exceeded, the socket will be closed.</span></span> <span data-ttu-id="ba60d-113">キープアライブまたはパイプライン接続の場合、アプリケーションが EOF までストリームを読み取ることを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-113">For keep-alive or pipelined connections, we strongly recommend that the application reads the streams until EOF.</span></span> <span data-ttu-id="ba60d-114">これにより、後続の要求でソケットが再利用されるため、パフォーマンスが向上し、使用されるリソースが少なくなります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-114">This ensures that the socket will be re-used for subsequent requests resulting in better performance and less resources used.</span></span>  
  
 <span data-ttu-id="ba60d-115">リソースにデータを送信する場合、<xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドは、データの送信に使用する <xref:System.IO.Stream> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-115">When you want to send data to the resource, the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a <xref:System.IO.Stream> object to use to send data.</span></span> <span data-ttu-id="ba60d-116"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドと <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> メソッドは、送信データストリームへの非同期アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-116">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods provide asynchronous access to the send data stream.</span></span>  
  
 <span data-ttu-id="ba60d-117"><xref:System.Net.HttpWebRequest>を使用したクライアント認証の場合、クライアント証明書は、現在のユーザーの My 証明書ストアにインストールする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-117">For client authentication with <xref:System.Net.HttpWebRequest>, the client certificate must be installed in the My certificate store of the current user.</span></span>  
  
 <span data-ttu-id="ba60d-118"><xref:System.Net.HttpWebRequest> クラスは、リソースへのアクセス中にエラーが発生した場合に <xref:System.Net.WebException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-118">The <xref:System.Net.HttpWebRequest> class throws a <xref:System.Net.WebException> when errors occur while accessing a resource.</span></span> <span data-ttu-id="ba60d-119"><xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> プロパティには、エラーの原因を示す <xref:System.Net.WebExceptionStatus> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-119">The <xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> property contains a <xref:System.Net.WebExceptionStatus> value that indicates the source of the error.</span></span> <span data-ttu-id="ba60d-120"><xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> が <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>場合、<xref:System.Net.WebException.Response%2A> プロパティには、リソースから受信した <xref:System.Net.HttpWebResponse> が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-120">When <xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> is <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, the <xref:System.Net.WebException.Response%2A> property contains the <xref:System.Net.HttpWebResponse> received from the resource.</span></span>  
  
 <span data-ttu-id="ba60d-121"><xref:System.Net.HttpWebRequest> は、インターネットリソースに送信される一般的な HTTP ヘッダー値をプロパティとして、メソッドによって設定、またはシステムによって設定します。次の表に、完全な一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-121"><xref:System.Net.HttpWebRequest> exposes common HTTP header values sent to the Internet resource as properties, set by methods, or set by the system; the following table contains a complete list.</span></span> <span data-ttu-id="ba60d-122"><xref:System.Net.HttpWebRequest.Headers%2A> プロパティの他のヘッダーは、名前と値のペアとして設定できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-122">You can set other headers in the <xref:System.Net.HttpWebRequest.Headers%2A> property as name/value pairs.</span></span> <span data-ttu-id="ba60d-123">サーバーとキャッシュは、要求中にヘッダーを変更または追加できることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-123">Note that servers and caches may change or add headers during the request.</span></span>  
  
 <span data-ttu-id="ba60d-124">次の表に、プロパティまたはメソッドまたはシステムによって設定される HTTP ヘッダーの一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-124">The following table lists the HTTP headers that are set either by properties or methods or the system.</span></span>  
  
|<span data-ttu-id="ba60d-125">Header</span><span class="sxs-lookup"><span data-stu-id="ba60d-125">Header</span></span>|<span data-ttu-id="ba60d-126">設定者</span><span class="sxs-lookup"><span data-stu-id="ba60d-126">Set by</span></span>|  
|------------|------------|  
|<span data-ttu-id="ba60d-127">Accept</span><span class="sxs-lookup"><span data-stu-id="ba60d-127">Accept</span></span>|<span data-ttu-id="ba60d-128"><xref:System.Net.HttpWebRequest.Accept%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-128">Set by the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-129">Connection</span><span class="sxs-lookup"><span data-stu-id="ba60d-129">Connection</span></span>|<span data-ttu-id="ba60d-130"><xref:System.Net.HttpWebRequest.Connection%2A> プロパティ、<xref:System.Net.HttpWebRequest.KeepAlive%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-130">Set by the <xref:System.Net.HttpWebRequest.Connection%2A> property, <xref:System.Net.HttpWebRequest.KeepAlive%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-131">ContentLength</span><span class="sxs-lookup"><span data-stu-id="ba60d-131">Content-Length</span></span>|<span data-ttu-id="ba60d-132"><xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-132">Set by the <xref:System.Net.HttpWebRequest.ContentLength%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-133">Content-Type</span><span class="sxs-lookup"><span data-stu-id="ba60d-133">Content-Type</span></span>|<span data-ttu-id="ba60d-134"><xref:System.Net.HttpWebRequest.ContentType%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-134">Set by the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-135">Expect</span><span class="sxs-lookup"><span data-stu-id="ba60d-135">Expect</span></span>|<span data-ttu-id="ba60d-136"><xref:System.Net.HttpWebRequest.Expect%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-136">Set by the <xref:System.Net.HttpWebRequest.Expect%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-137">Date</span><span class="sxs-lookup"><span data-stu-id="ba60d-137">Date</span></span>|<span data-ttu-id="ba60d-138">システムによって現在の日付に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-138">Set by the system to current date.</span></span>|  
|<span data-ttu-id="ba60d-139">Host</span><span class="sxs-lookup"><span data-stu-id="ba60d-139">Host</span></span>|<span data-ttu-id="ba60d-140">システムによって現在のホスト情報に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-140">Set by the system to current host information.</span></span>|  
|<span data-ttu-id="ba60d-141">If-Modified-Since</span><span class="sxs-lookup"><span data-stu-id="ba60d-141">If-Modified-Since</span></span>|<span data-ttu-id="ba60d-142"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-142">Set by the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-143">範囲</span><span class="sxs-lookup"><span data-stu-id="ba60d-143">Range</span></span>|<span data-ttu-id="ba60d-144"><xref:System.Net.HttpWebRequest.AddRange%2A> メソッドによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-144">Set by the <xref:System.Net.HttpWebRequest.AddRange%2A> method.</span></span>|  
|<span data-ttu-id="ba60d-145">Referer</span><span class="sxs-lookup"><span data-stu-id="ba60d-145">Referer</span></span>|<span data-ttu-id="ba60d-146"><xref:System.Net.HttpWebRequest.Referer%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-146">Set by the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-147">Transfer-Encoding</span><span class="sxs-lookup"><span data-stu-id="ba60d-147">Transfer-Encoding</span></span>|<span data-ttu-id="ba60d-148"><xref:System.Net.HttpWebRequest.TransferEncoding%2A> プロパティによって設定されます (<xref:System.Net.HttpWebRequest.SendChunked%2A> プロパティは `true`である必要があります)。</span><span class="sxs-lookup"><span data-stu-id="ba60d-148">Set by the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property (the <xref:System.Net.HttpWebRequest.SendChunked%2A> property must be `true`).</span></span>|  
|<span data-ttu-id="ba60d-149">User-Agent</span><span class="sxs-lookup"><span data-stu-id="ba60d-149">User-Agent</span></span>|<span data-ttu-id="ba60d-150"><xref:System.Net.HttpWebRequest.UserAgent%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-150">Set by the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-151"><xref:System.Net.HttpWebRequest> は自動的に登録されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-151"><xref:System.Net.HttpWebRequest> is registered automatically.</span></span> <span data-ttu-id="ba60d-152">`http://` または `https://`で始まる Uri を使用する前に、<xref:System.Net.HttpWebRequest?displayProperty=nameWithType> を登録するために <xref:System.Net.WebRequest.RegisterPrefix%2A> メソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-152">You do not need to call the <xref:System.Net.WebRequest.RegisterPrefix%2A> method to register <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> before using URIs beginning with `http://` or `https://`.</span></span>  
  
 <span data-ttu-id="ba60d-153">ローカルコンピューターまたはアプリケーション構成ファイルで、既定のプロキシを使用するように指定できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-153">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="ba60d-154"><xref:System.Net.HttpWebRequest.Proxy%2A> プロパティが指定されている場合、<xref:System.Net.HttpWebRequest.Proxy%2A> プロパティのプロキシ設定がローカルコンピューターまたはアプリケーション構成ファイルより優先され、<xref:System.Net.HttpWebRequest> インスタンスは指定されたプロキシ設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-154">If the <xref:System.Net.HttpWebRequest.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.HttpWebRequest.Proxy%2A> property override the local computer or application config file and the <xref:System.Net.HttpWebRequest> instance will use the proxy settings specified.</span></span> <span data-ttu-id="ba60d-155">構成ファイルでプロキシが指定されておらず、<xref:System.Net.HttpWebRequest.Proxy%2A> プロパティが指定されていない場合、<xref:System.Net.HttpWebRequest> クラスは、ローカルコンピューター上の Internet Explorer から継承されたプロキシ設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-155">If no proxy is specified in a config file and the <xref:System.Net.HttpWebRequest.Proxy%2A> property is unspecified, the <xref:System.Net.HttpWebRequest> class uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="ba60d-156">Internet Explorer にプロキシ設定がない場合、要求はサーバーに直接送信されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-156">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="ba60d-157"><xref:System.Net.HttpWebRequest>クラスがワイルドカード文字を Internet Explorer によって直接解析バイパス リストよりも異なる方法で Internet Explorer から継承プロキシ バイ パスの一覧を解析します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-157">The <xref:System.Net.HttpWebRequest> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer differently than the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="ba60d-158">たとえば、<xref:System.Net.HttpWebRequest>クラスでは「nt \*」Internet Explorer からのバイパス リストを解析の正規表現として"nt.$"です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-158">For example, the <xref:System.Net.HttpWebRequest> class will parse a bypass list of "nt\*" from Internet Explorer as a regular expression of "nt.$".</span></span> <span data-ttu-id="ba60d-159">これは、Internet Explorer のネイティブの動作とは異なります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-159">This differs from the native behavior of Internet Explorer.</span></span> <span data-ttu-id="ba60d-160">これの URL"`http://intxxxxx`"を使用してプロキシを使用しないと、<xref:System.Net.HttpWebRequest>クラスが、Internet Explorer を使用してプロキシをバイパスできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-160">So a URL of "`http://intxxxxx`" would bypass the proxy using the <xref:System.Net.HttpWebRequest> class, but would not bypass the proxy using Internet Explorer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-161">フレームワークは、作成時に SSL セッションをキャッシュし、可能であれば、新しい要求に対してキャッシュされたセッションの再利用を試みます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-161">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="ba60d-162">SSL セッションを再利用しようとすると、フレームワークは <xref:System.Net.HttpWebRequest.ClientCertificates%2A> の最初の要素 (存在する場合) を使用するか、<xref:System.Net.HttpWebRequest.ClientCertificates%2A> が空の場合は匿名セッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-162">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-163">セキュリティ上の理由から、cookie は既定で無効になっています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-163">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="ba60d-164">Cookie を使用する場合は、<xref:System.Net.HttpWebRequest.CookieContainer%2A> プロパティを使用して cookie を有効にします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-164">If you want to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
 <span data-ttu-id="ba60d-165">.NET Framework 4.6 には、安全でない暗号およびハッシュ アルゴリズムの接続をブロックする、新しいセキュリティ機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-165">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="ba60d-166">HttpClient、HttpWebRequest、FTPClient、SmtpClient、SslStream などの API を介して TLS/SSL を使用して、.NET Framework 4.6 を対象とするアプリケーションは、既定でセキュリティが強化された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-166">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="ba60d-167">開発者は、既存の SSL3 サービスや TLS (RC4) サービスとの相互運用性を維持するために、この動作を無効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-167">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="ba60d-168">[この記事で](https://support.microsoft.com/kb/3069494)は、新しい動作が無効になるようにコードを変更する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-168">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-169">URI `http://www.contoso.com/`の <xref:System.Net.HttpWebRequest> を作成するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-169">The following code example creates an <xref:System.Net.HttpWebRequest> for the URI `http://www.contoso.com/`.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md"><span data-ttu-id="ba60d-170">DefaultProxy 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="ba60d-170">DefaultProxy Element (Network Settings)</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/changes-to-ntlm-authentication-for-httpwebrequest-in-version-3-5-sp1.md"><span data-ttu-id="ba60d-171">バージョン 3.5 SP1 での HTTPWebRequest の NTLM 認証に対する変更</span><span class="sxs-lookup"><span data-stu-id="ba60d-171">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba60d-172"><see cref="T:System.Net.HttpWebRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-172">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class.</span></span> <span data-ttu-id="ba60d-173">これらのコンストラクターは今後は使用しません。詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-173">These constructors are obsolete; see the Remarks section for details.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ba60d-174">両方の <xref:System.Net.HttpWebRequest> コンストラクターは互換性のために残されているため、使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-174">Both <xref:System.Net.HttpWebRequest> constructors are obsolete and should not be used.</span></span> <span data-ttu-id="ba60d-175"><xref:System.Net.WebRequest.CreateHttp%2A?displayProperty=nameWithType> メソッドを呼び出して、新しい <xref:System.Net.HttpWebRequest> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-175">Call the <xref:System.Net.WebRequest.CreateHttp%2A?displayProperty=nameWithType> method to initialize new <xref:System.Net.HttpWebRequest> objects.</span></span>     
  
      ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWebRequest ();" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpWebRequest();" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba60d-176"><see cref="T:System.Net.HttpWebRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-176">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class.</span></span> <span data-ttu-id="ba60d-177">このコンストラクターは今後は使用しません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-177">This constructor is obsolete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWebRequest (Uri uri);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor(System.Uri)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpWebRequest(Uri ^ uri);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="F#" Value="new System.Net.HttpWebRequest : Uri -&gt; System.Net.HttpWebRequest" Usage="new System.Net.HttpWebRequest uri" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpWebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.HttpWebRequest : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.HttpWebRequest" Usage="new System.Net.HttpWebRequest (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="ba60d-178">新しい <see cref="T:System.Net.HttpWebRequest" /> オブジェクトをシリアル化するために必要な情報を格納する <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba60d-178">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the new <see cref="T:System.Net.HttpWebRequest" /> object.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="ba60d-179">新しい <see cref="T:System.Net.HttpWebRequest" /> オブジェクトに関連付けられているシリアル化ストリームの転送元および転送先を格納する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba60d-179">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the new <see cref="T:System.Net.HttpWebRequest" /> object.</span></span></param>
        <summary><span data-ttu-id="ba60d-180"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスと <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの指定したインスタンスから、<see cref="T:System.Net.HttpWebRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-180">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span></span> <span data-ttu-id="ba60d-181">このコンストラクターは今後は使用しません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-181">This constructor is obsolete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-182">シリアル化を使用する場合は、アプリケーションを完全信頼モードで実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-182">An application must run in full trust mode when using serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="ba60d-183">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="ba60d-183">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="httpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba60d-184">インターネット リソースへの要求を取り消します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-184">Cancels a request to an Internet resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-185"><xref:System.Net.HttpWebRequest.Abort%2A> メソッドは、リソースへの要求を取り消します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-185">The <xref:System.Net.HttpWebRequest.Abort%2A> method cancels a request to a resource.</span></span> <span data-ttu-id="ba60d-186">要求が取り消された後、<xref:System.Net.HttpWebRequest.GetResponse%2A>、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>、<xref:System.Net.HttpWebRequest.EndGetResponse%2A>、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、または <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> メソッドを呼び出すと、<xref:System.Net.WebException> プロパティが <xref:System.Net.WebException.Status%2A> に設定された <xref:System.Net.WebExceptionStatus.RequestCanceled>が発生します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-186">After a request is canceled, calling the <xref:System.Net.HttpWebRequest.GetResponse%2A>, <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>, <xref:System.Net.HttpWebRequest.EndGetResponse%2A>, <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method causes a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.RequestCanceled>.</span></span>  
  
 <span data-ttu-id="ba60d-187">これらの操作のいずれかが未処理であるときに <xref:System.Net.HttpWebRequest.Abort%2A> メソッドが呼び出された場合、<xref:System.Net.HttpWebRequest.Abort%2A> メソッドは、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> または <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドに対して指定されたコールバックを同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-187">The <xref:System.Net.HttpWebRequest.Abort%2A> method will synchronously execute the callback specified to the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> methods if the <xref:System.Net.HttpWebRequest.Abort%2A> method is called while either of these operations are outstanding.</span></span> <span data-ttu-id="ba60d-188">これにより、デッドロックの問題が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-188">This can lead to potential deadlock issues.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-189">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-189">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-190">詳細については、「[ネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-190">For more information, see [Network Tracing](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-191">非同期要求の場合、独自のタイムアウトメカニズムを実装するのは、クライアントアプリケーションの役割です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-191">In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</span></span> <span data-ttu-id="ba60d-192">これを行う方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-192">The following code example shows how to do this.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CPP/begingetresponse.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CS/begingetresponse.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/VB/begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Property Accept As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Accept { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Accept : string with get, set" Usage="System.Net.HttpWebRequest.Accept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-193"><see langword="Accept" /> HTTP ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-193">Gets or sets the value of the <see langword="Accept" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-194"><see langword="Accept" /> HTTP ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-194">The value of the <see langword="Accept" /> HTTP header.</span></span> <span data-ttu-id="ba60d-195">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-195">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-196">`Accept` HTTP ヘッダーをクリアするには、<xref:System.Net.HttpWebRequest.Accept%2A> プロパティを `null`に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-196">To clear the `Accept` HTTP header, set the <xref:System.Net.HttpWebRequest.Accept%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-197">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-197">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ba60d-198">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-198">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-199">次のコード例では、<xref:System.Net.HttpWebRequest.Accept%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-199">The following code example sets the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_Accept#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Accept/CPP/httpwebrequest_accept.cpp#1)]
 [!code-csharp[HttpWebRequest_Accept#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Accept/CS/httpwebrequest_accept.cs#1)]
 [!code-vb[HttpWebRequest_Accept#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Accept/VB/httpwebrequest_accept.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba60d-200">要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-200">Adds a range header to the request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-201">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-201">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-202">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-202">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-203">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-203">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-204">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-204">Servers are not required to support Range header requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (range As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(int range);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int -&gt; unit" Usage="httpWebRequest.AddRange range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="range"><span data-ttu-id="ba60d-205">範囲の先頭または末尾。</span><span class="sxs-lookup"><span data-stu-id="ba60d-205">The starting or ending point of the range.</span></span></param>
        <summary><span data-ttu-id="ba60d-206">要求されたデータの先頭または末尾からの特定の範囲の要求にバイト範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-206">Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-207"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> メソッドは、バイト範囲ヘッダーを要求に追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-207">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="ba60d-208">`range` が正の場合、`range` パラメーターは範囲の開始点を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-208">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="ba60d-209">サーバーは、HTTP エンティティ内のデータの末尾に指定された `range` パラメーターからデータの送信を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-209">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="ba60d-210">`range` が負の場合、`range` パラメーターは範囲の終了点を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-210">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="ba60d-211">サーバーは、HTTP エンティティ内のデータの先頭から、指定された `range` パラメーターへのデータの送信を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-211">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="ba60d-212">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-212">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-213">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-213">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-214">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-214">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-215">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-215">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ba60d-216">サーバーに最初の100バイト (先頭からバイト位置 99) を送信するよう要求する HTTP プロトコル要求の範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-216">An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ba60d-217">この例では、`range` パラメーターは-99 です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-217">For this example, the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="ba60d-218">HTTP サーバーは、範囲ヘッダーが Accept 範囲ヘッダーでサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-218">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="ba60d-219">バイト範囲をサポートしているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-219">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ba60d-220">サーバーからの応答のヘッダーで受け入れ範囲ヘッダーが受信されない場合、サーバーは範囲ヘッダーをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-220">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ba60d-221">範囲をサポートしていないが、受け入れ範囲ヘッダーを認識しているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-221">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ba60d-222">範囲要求から応答を受信すると、要求全体に関連付けられている HTTP ヘッダーのみが解析され、<xref:System.Net.HttpWebResponse> クラスのプロパティを介して使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-222">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ba60d-223">各範囲に関連付けられているヘッダーは、応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-223">Headers associated with each range are returned in the response.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-224">次のコード例では、要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-224">The following code example adds a range header to the request.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/cpp/VS_Snippets_Misc/system.net.httpwebrequest.addrange/cpp/source.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.httpwebrequest.addrange/cs/source.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.net.httpwebrequest.addrange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-225"><paramref name="rangeSpecifier" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-225"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-226">範囲ヘッダーを追加できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-226">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (long range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int64 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (range As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(long range);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int64 -&gt; unit" Usage="httpWebRequest.AddRange range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="range"><span data-ttu-id="ba60d-227">範囲の先頭または末尾。</span><span class="sxs-lookup"><span data-stu-id="ba60d-227">The starting or ending point of the range.</span></span></param>
        <summary><span data-ttu-id="ba60d-228">要求されたデータの先頭または末尾からの特定の範囲の要求にバイト範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-228">Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-229"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> メソッドは、バイト範囲ヘッダーを要求に追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-229">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="ba60d-230">`range` が正の場合、`range` パラメーターは範囲の開始点を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-230">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="ba60d-231">サーバーは、HTTP エンティティ内のデータの末尾に指定された `range` パラメーターからデータの送信を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-231">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="ba60d-232">`range` が負の場合、`range` パラメーターは範囲の終了点を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-232">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="ba60d-233">サーバーは、HTTP エンティティ内のデータの先頭から、指定された `range` パラメーターへのデータの送信を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-233">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="ba60d-234">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-234">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-235">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-235">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-236">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-236">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-237">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-237">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ba60d-238">サーバーに最初の100バイト (先頭からバイト位置 99) を送信するよう要求する HTTP プロトコル要求の範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-238">An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ba60d-239">この例では、`range` パラメーターは-99 です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-239">For this example, the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="ba60d-240">HTTP サーバーは、範囲ヘッダーが Accept 範囲ヘッダーでサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-240">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="ba60d-241">バイト範囲をサポートしているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-241">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ba60d-242">サーバーからの応答のヘッダーで受け入れ範囲ヘッダーが受信されない場合、サーバーは範囲ヘッダーをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-242">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ba60d-243">範囲をサポートしていないが、受け入れ範囲ヘッダーを認識しているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-243">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ba60d-244">範囲要求から応答を受信すると、要求全体に関連付けられている HTTP ヘッダーのみが解析され、<xref:System.Net.HttpWebResponse> クラスのプロパティを介して使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-244">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ba60d-245">各範囲に関連付けられているヘッダーは、応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-245">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-246"><paramref name="rangeSpecifier" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-246"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-247">範囲ヘッダーを追加できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-247">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (from As Integer, to As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(int from, int to);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int * int -&gt; unit" Usage="httpWebRequest.AddRange (from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="to" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="ba60d-248">データの送信を開始する位置。</span><span class="sxs-lookup"><span data-stu-id="ba60d-248">The position at which to start sending data.</span></span></param>
        <param name="to"><span data-ttu-id="ba60d-249">データの送信を終了する位置。</span><span class="sxs-lookup"><span data-stu-id="ba60d-249">The position at which to stop sending data.</span></span></param>
        <summary><span data-ttu-id="ba60d-250">指定した範囲の要求にバイト範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-250">Adds a byte range header to the request for a specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-251"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> メソッドは、バイト範囲ヘッダーを要求に追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-251">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="ba60d-252">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-252">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-253">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-253">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-254">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-254">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-255">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-255">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ba60d-256">最初の100バイトを要求する HTTP プロトコル要求の範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-256">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ba60d-257">この例では、`from` パラメーターは0として指定され、`to` パラメーターは99として指定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-257">For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99.</span></span> <span data-ttu-id="ba60d-258">Range 指定子は、このメソッドによって自動的に "bytes" に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-258">The range specifier is automatically set as "bytes" by this method.</span></span>  
  
 <span data-ttu-id="ba60d-259">HTTP サーバーは、範囲ヘッダーが Accept 範囲ヘッダーでサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-259">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="ba60d-260">バイト範囲をサポートしているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-260">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ba60d-261">サーバーからの応答のヘッダーで受け入れ範囲ヘッダーが受信されない場合、サーバーは範囲ヘッダーをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-261">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ba60d-262">範囲をサポートしていないが、受け入れ範囲ヘッダーを認識しているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-262">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ba60d-263">範囲要求から応答を受信すると、要求全体に関連付けられている HTTP ヘッダーのみが解析され、<xref:System.Net.HttpWebResponse> クラスのプロパティを介して使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-263">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ba60d-264">各範囲に関連付けられているヘッダーは、応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-264">Headers associated with each range are returned in the response.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-265">次のコード例では、要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-265">The following code example adds a range header to the request.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/cpp/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/cpp/source.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/cs/source.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-266"><paramref name="rangeSpecifier" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-266"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-267"><paramref name="from" /> は <paramref name="to" /> より大きい</span><span class="sxs-lookup"><span data-stu-id="ba60d-267"><paramref name="from" /> is greater than <paramref name="to" /></span></span>  
  
<span data-ttu-id="ba60d-268">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-268">-or-</span></span> 
 <span data-ttu-id="ba60d-269"><paramref name="from" /> または <paramref name="to" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-269"><paramref name="from" /> or <paramref name="to" /> is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-270">範囲ヘッダーを追加できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-270">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (long from, long to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int64 from, int64 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (from As Long, to As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(long from, long to);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int64 * int64 -&gt; unit" Usage="httpWebRequest.AddRange (from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="to" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="ba60d-271">データの送信を開始する位置。</span><span class="sxs-lookup"><span data-stu-id="ba60d-271">The position at which to start sending data.</span></span></param>
        <param name="to"><span data-ttu-id="ba60d-272">データの送信を終了する位置。</span><span class="sxs-lookup"><span data-stu-id="ba60d-272">The position at which to stop sending data.</span></span></param>
        <summary><span data-ttu-id="ba60d-273">指定した範囲の要求にバイト範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-273">Adds a byte range header to the request for a specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-274"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> メソッドは、バイト範囲ヘッダーを要求に追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-274">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="ba60d-275">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-275">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-276">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-276">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-277">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-277">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-278">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-278">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ba60d-279">最初の100バイトを要求する HTTP プロトコル要求の範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-279">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ba60d-280">この例では、`from` パラメーターは0として指定され、`to` パラメーターは99として指定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-280">For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99.</span></span> <span data-ttu-id="ba60d-281">Range 指定子は、このメソッドによって自動的に "bytes" に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-281">The range specifier is automatically set as "bytes" by this method.</span></span>  
  
 <span data-ttu-id="ba60d-282">HTTP サーバーは、範囲ヘッダーが Accept 範囲ヘッダーでサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-282">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="ba60d-283">バイト範囲をサポートしているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-283">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ba60d-284">サーバーからの応答のヘッダーで受け入れ範囲ヘッダーが受信されない場合、サーバーは範囲ヘッダーをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-284">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ba60d-285">範囲をサポートしていないが、受け入れ範囲ヘッダーを認識しているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-285">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ba60d-286">範囲要求から応答を受信すると、要求全体に関連付けられている HTTP ヘッダーのみが解析され、<xref:System.Net.HttpWebResponse> クラスのプロパティを介して使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-286">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ba60d-287">各範囲に関連付けられているヘッダーは、応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-287">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-288"><paramref name="rangeSpecifier" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-288"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-289"><paramref name="from" /> は <paramref name="to" /> より大きい</span><span class="sxs-lookup"><span data-stu-id="ba60d-289"><paramref name="from" /> is greater than <paramref name="to" /></span></span>  
  
<span data-ttu-id="ba60d-290">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-290">-or-</span></span> 
 <span data-ttu-id="ba60d-291"><paramref name="from" /> または <paramref name="to" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-291"><paramref name="from" /> or <paramref name="to" /> is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-292">範囲ヘッダーを追加できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-292">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, int range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int32 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, range As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, int range);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string * int -&gt; unit" Usage="httpWebRequest.AddRange (rangeSpecifier, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="range" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier"><span data-ttu-id="ba60d-293">範囲の説明。</span><span class="sxs-lookup"><span data-stu-id="ba60d-293">The description of the range.</span></span></param>
        <param name="range"><span data-ttu-id="ba60d-294">範囲の先頭または末尾。</span><span class="sxs-lookup"><span data-stu-id="ba60d-294">The starting or ending point of the range.</span></span></param>
        <summary><span data-ttu-id="ba60d-295">要求されたデータの先頭または末尾からの特定の範囲の要求に Range ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-295">Adds a Range header to a request for a specific range from the beginning or end of the requested data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-296"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> メソッドは、要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-296">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="ba60d-297">`range` が正の場合、`range` パラメーターは範囲の開始点を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-297">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="ba60d-298">サーバーは、HTTP エンティティ内のデータの末尾に指定された `range` パラメーターからデータの送信を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-298">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="ba60d-299">`range` が負の場合、`range` パラメーターは範囲の終了点を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-299">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="ba60d-300">サーバーは、HTTP エンティティ内のデータの先頭から、指定された `range` パラメーターへのデータの送信を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-300">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="ba60d-301">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-301">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-302">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-302">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-303">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-303">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-304">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-304">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ba60d-305">`rangeSpecifier` パラメーターは通常、ほとんどの HTTP サーバーで認識される唯一の範囲指定子であるため、通常は "bytes" として指定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-305">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="ba60d-306">`rangeSpecifier` パラメーターを他の文字列に設定すると、バイト (IETF によって RFC 2616 で定義されているバイト範囲指定子) 以外のカスタム範囲指定子がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-306">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="ba60d-307">最初の100バイトを要求する HTTP プロトコル要求の範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-307">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=-99\r\n\r\n`  
  
 <span data-ttu-id="ba60d-308">この例では、`rangeSpecifier` パラメーターは "bytes" として指定され、`range` パラメーターは-99 となります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-308">For this example, the `rangeSpecifier` parameter would be specified as "bytes" and the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="ba60d-309">HTTP サーバーは、応答で範囲ヘッダーの Accept ヘッダーがサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-309">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="ba60d-310">バイト範囲をサポートしているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-310">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ba60d-311">サーバーからの応答のヘッダーで受け入れ範囲ヘッダーが受信されない場合、サーバーは範囲ヘッダーをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-311">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ba60d-312">範囲をサポートしていないが、受け入れ範囲ヘッダーを認識しているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-312">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ba60d-313">範囲要求から応答を受信すると、要求全体に関連付けられている HTTP ヘッダーのみが解析され、<xref:System.Net.HttpWebResponse> クラスのプロパティを介して使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-313">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ba60d-314">各範囲に関連付けられているヘッダーは、応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-314">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-315"><paramref name="rangeSpecifier" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-315"><paramref name="rangeSpecifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-316"><paramref name="rangeSpecifier" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-316"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-317">範囲ヘッダーを追加できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-317">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, long range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int64 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, range As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, long range);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string * int64 -&gt; unit" Usage="httpWebRequest.AddRange (rangeSpecifier, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="range" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier"><span data-ttu-id="ba60d-318">範囲の説明。</span><span class="sxs-lookup"><span data-stu-id="ba60d-318">The description of the range.</span></span></param>
        <param name="range"><span data-ttu-id="ba60d-319">範囲の先頭または末尾。</span><span class="sxs-lookup"><span data-stu-id="ba60d-319">The starting or ending point of the range.</span></span></param>
        <summary><span data-ttu-id="ba60d-320">要求されたデータの先頭または末尾からの特定の範囲の要求に Range ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-320">Adds a Range header to a request for a specific range from the beginning or end of the requested data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-321"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> メソッドは、要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-321">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="ba60d-322">`range` が正の場合、`range` パラメーターは範囲の開始点を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-322">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="ba60d-323">サーバーは、HTTP エンティティ内のデータの末尾に指定された `range` パラメーターからデータの送信を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-323">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="ba60d-324">`range` が負の場合、`range` パラメーターは範囲の終了点を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-324">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="ba60d-325">サーバーは、HTTP エンティティ内のデータの先頭から、指定された `range` パラメーターへのデータの送信を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-325">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="ba60d-326">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-326">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-327">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-327">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-328">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-328">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-329">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-329">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ba60d-330">`rangeSpecifier` パラメーターは通常、ほとんどの HTTP サーバーで認識される唯一の範囲指定子であるため、通常は "bytes" として指定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-330">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="ba60d-331">`rangeSpecifier` パラメーターを他の文字列に設定すると、バイト (IETF によって RFC 2616 で定義されているバイト範囲指定子) 以外のカスタム範囲指定子がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-331">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="ba60d-332">最初の100バイトを要求する HTTP プロトコル要求の範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-332">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=-99\r\n\r\n`  
  
 <span data-ttu-id="ba60d-333">この例では、`rangeSpecifier` パラメーターは "bytes" として指定され、`range` パラメーターは-99 となります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-333">For this example, the `rangeSpecifier` parameter would be specified as "bytes" and the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="ba60d-334">HTTP サーバーは、応答で範囲ヘッダーの Accept ヘッダーがサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-334">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="ba60d-335">バイト範囲をサポートしているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-335">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ba60d-336">サーバーからの応答のヘッダーで受け入れ範囲ヘッダーが受信されない場合、サーバーは範囲ヘッダーをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-336">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ba60d-337">範囲をサポートしていないが、受け入れ範囲ヘッダーを認識しているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-337">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ba60d-338">範囲要求から応答を受信すると、要求全体に関連付けられている HTTP ヘッダーのみが解析され、<xref:System.Net.HttpWebResponse> クラスのプロパティを介して使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-338">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ba60d-339">各範囲に関連付けられているヘッダーは、応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-339">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-340"><paramref name="rangeSpecifier" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-340"><paramref name="rangeSpecifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-341"><paramref name="rangeSpecifier" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-341"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-342">範囲ヘッダーを追加できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-342">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, from As Integer, to As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, int from, int to);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string * int * int -&gt; unit" Usage="httpWebRequest.AddRange (rangeSpecifier, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="from" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="to" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier"><span data-ttu-id="ba60d-343">範囲の説明。</span><span class="sxs-lookup"><span data-stu-id="ba60d-343">The description of the range.</span></span></param>
        <param name="from"><span data-ttu-id="ba60d-344">データの送信を開始する位置。</span><span class="sxs-lookup"><span data-stu-id="ba60d-344">The position at which to start sending data.</span></span></param>
        <param name="to"><span data-ttu-id="ba60d-345">データの送信を終了する位置。</span><span class="sxs-lookup"><span data-stu-id="ba60d-345">The position at which to stop sending data.</span></span></param>
        <summary><span data-ttu-id="ba60d-346">指定した範囲の要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-346">Adds a range header to a request for a specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-347"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> メソッドは、要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-347">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="ba60d-348">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-348">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-349">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-349">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-350">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-350">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-351">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-351">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ba60d-352">`rangeSpecifier` パラメーターは通常、ほとんどの HTTP サーバーで認識される唯一の範囲指定子であるため、通常は "bytes" として指定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-352">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="ba60d-353">`rangeSpecifier` パラメーターを他の文字列に設定すると、バイト (IETF によって RFC 2616 で定義されているバイト範囲指定子) 以外のカスタム範囲指定子がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-353">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="ba60d-354">最初の100バイトを要求する HTTP プロトコル要求の範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-354">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ba60d-355">この例では、`rangeSpecifier` パラメーターは "bytes" として指定され、`from` パラメーターは0、`to` パラメーターは99になります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-355">For this example, the `rangeSpecifier` parameter would be specified as a "bytes", the `from` parameter would be 0, and the `to` parameter would be 99.</span></span>  
  
 <span data-ttu-id="ba60d-356">HTTP サーバーは、応答で範囲ヘッダーの Accept ヘッダーがサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-356">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="ba60d-357">バイト範囲をサポートしているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-357">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ba60d-358">Accept 範囲ヘッダーで指定された文字列は、このメソッドの `rangeSpecifier` パラメーターで指定される範囲指定子です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-358">The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the `rangeSpecifier` parameter for this method.</span></span>  
  
 <span data-ttu-id="ba60d-359">サーバーからの応答のヘッダーで受け入れ範囲ヘッダーが受信されない場合、サーバーは範囲ヘッダーをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-359">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ba60d-360">範囲をサポートしていないが、受け入れ範囲ヘッダーを認識しているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-360">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ba60d-361">範囲要求から応答を受信すると、要求全体に関連付けられている HTTP ヘッダーのみが解析され、<xref:System.Net.HttpWebResponse> クラスのプロパティを介して使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-361">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ba60d-362">各範囲に関連付けられているヘッダーは、応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-362">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-363"><paramref name="rangeSpecifier" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-363"><paramref name="rangeSpecifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-364"><paramref name="from" /> は <paramref name="to" /> より大きい</span><span class="sxs-lookup"><span data-stu-id="ba60d-364"><paramref name="from" /> is greater than <paramref name="to" /></span></span>  
  
<span data-ttu-id="ba60d-365">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-365">-or-</span></span> 
 <span data-ttu-id="ba60d-366"><paramref name="from" /> または <paramref name="to" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-366"><paramref name="from" /> or <paramref name="to" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-367"><paramref name="rangeSpecifier" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-367"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-368">範囲ヘッダーを追加できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-368">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, long from, long to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int64 from, int64 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, from As Long, to As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, long from, long to);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string * int64 * int64 -&gt; unit" Usage="httpWebRequest.AddRange (rangeSpecifier, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="from" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="to" Type="System.Int64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier"><span data-ttu-id="ba60d-369">範囲の説明。</span><span class="sxs-lookup"><span data-stu-id="ba60d-369">The description of the range.</span></span></param>
        <param name="from"><span data-ttu-id="ba60d-370">データの送信を開始する位置。</span><span class="sxs-lookup"><span data-stu-id="ba60d-370">The position at which to start sending data.</span></span></param>
        <param name="to"><span data-ttu-id="ba60d-371">データの送信を終了する位置。</span><span class="sxs-lookup"><span data-stu-id="ba60d-371">The position at which to stop sending data.</span></span></param>
        <summary><span data-ttu-id="ba60d-372">指定した範囲の要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-372">Adds a range header to a request for a specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-373"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> メソッドは、要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-373">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="ba60d-374">すべての HTTP エンティティは HTTP メッセージでバイトのシーケンスとして表されるため、バイト範囲の概念は任意の HTTP エンティティにとって意味があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-374">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ba60d-375">ただし、すべてのクライアントとサーバーで、バイト範囲操作をサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-375">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ba60d-376">要求の範囲ヘッダーを使用すると、クライアントは、HTTP エンティティ内の指定されたバイト範囲の一部だけを受信するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-376">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ba60d-377">範囲ヘッダー要求をサポートするためにサーバーは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-377">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ba60d-378">`rangeSpecifier` パラメーターは通常、ほとんどの HTTP サーバーで認識される唯一の範囲指定子であるため、通常は "bytes" として指定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-378">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="ba60d-379">`rangeSpecifier` パラメーターを他の文字列に設定すると、バイト (IETF によって RFC 2616 で定義されているバイト範囲指定子) 以外のカスタム範囲指定子がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-379">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="ba60d-380">最初の100バイトを要求する HTTP プロトコル要求の範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-380">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ba60d-381">この例では、`rangeSpecifier` パラメーターは "bytes" として指定され、`from` パラメーターは0、`to` パラメーターは99になります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-381">For this example, the `rangeSpecifier` parameter would be specified as a "bytes", the `from` parameter would be 0, and the `to` parameter would be 99.</span></span>  
  
 <span data-ttu-id="ba60d-382">HTTP サーバーは、応答で範囲ヘッダーの Accept ヘッダーがサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-382">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="ba60d-383">バイト範囲をサポートしているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-383">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ba60d-384">Accept 範囲ヘッダーで指定された文字列は、このメソッドの `rangeSpecifier` パラメーターで指定される範囲指定子です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-384">The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the `rangeSpecifier` parameter for this method.</span></span>  
  
 <span data-ttu-id="ba60d-385">サーバーからの応答のヘッダーで受け入れ範囲ヘッダーが受信されない場合、サーバーは範囲ヘッダーをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-385">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ba60d-386">範囲をサポートしていないが、受け入れ範囲ヘッダーを認識しているサーバーからの受け入れ範囲ヘッダーの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-386">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ba60d-387">範囲要求から応答を受信すると、要求全体に関連付けられている HTTP ヘッダーのみが解析され、<xref:System.Net.HttpWebResponse> クラスのプロパティを介して使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-387">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ba60d-388">各範囲に関連付けられているヘッダーは、応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-388">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-389"><paramref name="rangeSpecifier" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-389"><paramref name="rangeSpecifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-390"><paramref name="from" /> は <paramref name="to" /> より大きい</span><span class="sxs-lookup"><span data-stu-id="ba60d-390"><paramref name="from" /> is greater than <paramref name="to" /></span></span>  
  
<span data-ttu-id="ba60d-391">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-391">-or-</span></span> 
 <span data-ttu-id="ba60d-392"><paramref name="from" /> または <paramref name="to" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-392"><paramref name="from" /> or <paramref name="to" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-393"><paramref name="rangeSpecifier" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-393"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-394">範囲ヘッダーを追加できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-394">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : Uri" Usage="System.Net.HttpWebRequest.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-395">要求に実際に応答するインターネット リソースの URI (Uniform Resource Identifier) を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-395">Gets the Uniform Resource Identifier (URI) of the Internet resource that actually responds to the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-396">要求に実際に応答するインターネット リソースを識別する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-396">A <see cref="T:System.Uri" /> that identifies the Internet resource that actually responds to the request.</span></span> <span data-ttu-id="ba60d-397">既定値は、<see cref="M:System.Net.WebRequest.Create(System.String)" /> メソッドが要求を初期化するために使用する URI です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-397">The default is the URI used by the <see cref="M:System.Net.WebRequest.Create(System.String)" /> method to initialize the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-398">要求中に発生したすべてのリダイレクトが完了した後、<xref:System.Net.HttpWebRequest.Address%2A> プロパティは URI に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-398">The <xref:System.Net.HttpWebRequest.Address%2A> property is set to the URI after any redirections that happen during the request are complete.</span></span>  
  
 <span data-ttu-id="ba60d-399">元の要求の URI は、<xref:System.Net.HttpWebRequest.RequestUri%2A> プロパティに保持されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-399">The URI of the original request is kept in the <xref:System.Net.HttpWebRequest.RequestUri%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-400">次のコード例では、<xref:System.Net.HttpWebRequest> オブジェクト `req` が、要求を満たすために別の場所にリダイレクトされたかどうかを確認し、要求がリダイレクトされた場合に `true` するように `hasChanged` 変数の値を設定します。それ以外の場合 `hasChanged` は `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-400">The following code example checks to see if the <xref:System.Net.HttpWebRequest> object `req` was redirected to another location to fulfill the request, and sets the value of the `hasChanged` variable to `true` if the request was redirected; otherwise `hasChanged` is set to `false`.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public virtual bool AllowAutoRedirect { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAutoRedirect As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAutoRedirect { bool get(); void set(bool value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.AllowAutoRedirect : bool with get, set" Usage="System.Net.HttpWebRequest.AllowAutoRedirect" />
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-401">要求がリダイレクト応答に従うかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-401">Gets or sets a value that indicates whether the request should follow redirection responses.</span></span></summary>
        <value><span data-ttu-id="ba60d-402">要求がインターネット リソースからのリダイレクト応答に自動的に従う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-402"><see langword="true" /> if the request should automatically follow redirection responses from the Internet resource; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba60d-403">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-403">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-404">HTTP リダイレクトヘッダーをリソースの新しい場所に自動的に従うよう要求する場合は、<xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> を `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-404">Set <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> to `true` if you want the request to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="ba60d-405">リダイレクトの最大数は、<xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-405">The maximum number of redirections to follow is set by the <xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="ba60d-406"><xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> が `false`に設定されている場合、300から399の HTTP 状態コードを含むすべての応答がアプリケーションに返されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-406">If <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> is set to `false`, all responses with an HTTP status code from 300 to 399 is returned to the application.</span></span>  
  
 <span data-ttu-id="ba60d-407">Authorization ヘッダーは自動リダイレクトによってクリアされ、リダイレクトされた場所への再認証が自動的に試行さ <xref:System.Net.HttpWebRequest> ます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-407">The Authorization header is cleared on auto-redirects and <xref:System.Net.HttpWebRequest> automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="ba60d-408">実際には、リダイレクトが発生する可能性がある場合、アプリケーションはカスタム認証情報を Authorization ヘッダーに配置できないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-408">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="ba60d-409">代わりに、アプリケーションでカスタム認証モジュールを実装して登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-409">Instead, the application must implement and register a custom authentication module.</span></span> <span data-ttu-id="ba60d-410"><xref:System.Net.AuthenticationManager?displayProperty=nameWithType> と関連クラスは、カスタム認証モジュールを実装するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-410">The <xref:System.Net.AuthenticationManager?displayProperty=nameWithType> and related class are used to implement a custom authentication module.</span></span> <span data-ttu-id="ba60d-411"><xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> メソッドは、カスタム認証モジュールを登録します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-411">The <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> method registers a custom authentication module.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-412">次のコード例では、<xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> プロパティを使用して、要求がリダイレクト応答に従うことを許可します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-412">The following code example uses the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property to allow the request to follow redirection responses.</span></span>  
  
 [!code-cpp[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/CPP/httpwebrequest_allowautoredirect.cpp#2)]
 [!code-csharp[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/CS/httpwebrequest_allowautoredirect.cs#2)]
 [!code-vb[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/VB/httpwebrequest_allowautoredirect.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public virtual bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReadStreamBuffering : bool with get, set" Usage="System.Net.HttpWebRequest.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-413">インターネット リソースから受け取ったデータをバッファリングするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-413">Gets or sets a value that indicates whether to buffer the received from the Internet resource.</span></span></summary>
        <value><span data-ttu-id="ba60d-414">インターネット リソースから受信したデータのバッファリングを有効にする場合は <see langword="true" />。バッファリングを無効にする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-414"><see langword="true" /> to enable buffering of the data received from the Internet resource; <see langword="false" /> to disable buffering.</span></span> <span data-ttu-id="ba60d-415">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-415">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public virtual bool AllowWriteStreamBuffering { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowWriteStreamBuffering As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.AllowWriteStreamBuffering : bool with get, set" Usage="System.Net.HttpWebRequest.AllowWriteStreamBuffering" />
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWriteStreamBuffering As Boolean" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-416">インターネット リソースに送信するデータをバッファリングするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-416">Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="ba60d-417">インターネット リソースに送信するデータのバッファリングを有効にする場合は <see langword="true" />。バッファリングを無効にする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-417"><see langword="true" /> to enable buffering of the data sent to the Internet resource; <see langword="false" /> to disable buffering.</span></span> <span data-ttu-id="ba60d-418">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-418">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-419"><xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> が `true`場合、データはメモリ内にバッファーされるので、リダイレクトまたは認証要求が発生した場合に再送信できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-419">When <xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> is `true`, the data is buffered in memory so it is ready to be resent in the event of redirections or authentication requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-420">次のコード例では、<xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> プロパティを使用して、データバッファーを無効にします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-420">The following code example uses the <xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> property to disable data buffering.</span></span>  
  
 [!code-cpp[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/CPP/httpwebrequest_allowwritestreambuffering.cpp#1)]
 [!code-csharp[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/CS/httpwebrequest_allowwritestreambuffering.cs#1)]
 [!code-vb[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/VB/httpwebrequest_allowwritestreambuffering.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ba60d-421"><see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> を <see langword="true" /> に設定すると、データバッファーが使用可能なすべてのメモリを使用できるため、大きなデータセットをアップロードするときにパフォーマンスの問題が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-421">Setting <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> to <see langword="true" /> might cause performance problems when uploading large datasets because the data buffer could use all available memory.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDecompression : System.Net.DecompressionMethods with get, set" Usage="System.Net.HttpWebRequest.AutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-422">使用される圧縮解除の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-422">Gets or sets the type of decompression that is used.</span></span></summary>
        <value><span data-ttu-id="ba60d-423">使用される圧縮解除の種類を示す <see cref="T:System.Net.DecompressionMethods" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba60d-423">A <see cref="T:System.Net.DecompressionMethods" /> object that indicates the type of decompression that is used.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-424">オブジェクトの現在の状態では、このプロパティを設定できません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-424">The object's current state does not allow this property to be set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ba60d-425"><see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="ba60d-425">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="ba60d-426">この要求に対して使用する状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba60d-426">The state object for this request.</span></span></param>
        <summary><span data-ttu-id="ba60d-427">データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトの非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-427">Begins an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span></span></summary>
        <returns><span data-ttu-id="ba60d-428">非同期の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-428">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-429"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドは、<xref:System.Net.HttpWebRequest>のデータの送信に使用されるストリームの非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-429">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method starts an asynchronous request for a stream used to send data for the <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="ba60d-430">非同期コールバックメソッドは、<xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> メソッドを使用して実際のストリームを返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-430">The asynchronous callback method uses the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method to return the actual stream.</span></span>  
  
 <span data-ttu-id="ba60d-431"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドでは、このメソッドが非同期になる前に、いくつかの同期セットアップタスク (DNS 解決、プロキシ検出、および TCP ソケット接続など) を完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-431">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</span></span> <span data-ttu-id="ba60d-432">このため、このメソッドは、ユーザーインターフェイス (UI) スレッドでは呼び出さないでください。これは、エラーの例外がスローされる前に初期の同期セットアップタスクを完了するために (ネットワーク設定によっては数分) かかる場合があるためです。メソッドは成功します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-432">As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</span></span>  
  
 <span data-ttu-id="ba60d-433">スレッドプールの詳細については、[マネージスレッドプール](~/docs/standard/threading/the-managed-thread-pool.md)に関するページを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-433">To learn more about the thread pool, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-434">アプリケーションでは、特定の要求に対して同期メソッドと非同期メソッドを混在させることはできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-434">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ba60d-435"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドを呼び出す場合は、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドを使用して応答を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-435">If you call the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-436">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-436">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-437">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-437">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-438">次のコード例では、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドを使用して、ストリームインスタンスの非同期要求を行います。</span><span class="sxs-lookup"><span data-stu-id="ba60d-438">The following code example uses the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method to make an asynchronous request for a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CPP/httpwebrequest_begingetrequeststream.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CS/httpwebrequest_begingetrequeststream.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/VB/httpwebrequest_begingetrequeststream.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="ba60d-439"><see cref="P:System.Net.HttpWebRequest.Method" /> プロパティは GET または HEAD です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-439">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span></span>  
  
<span data-ttu-id="ba60d-440">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-440">-or-</span></span> 
 <span data-ttu-id="ba60d-441"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-441"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-442">前回の <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> への呼び出しでストリームが使用中です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-442">The stream is being used by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /></span></span>  
  
<span data-ttu-id="ba60d-443">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-443">-or-</span></span> 
 <span data-ttu-id="ba60d-444"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-444"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="ba60d-445">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-445">-or-</span></span> 
<span data-ttu-id="ba60d-446">スレッド プールは、スレッドを使い切りました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-446">The thread pool is running out of threads.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba60d-447">要求キャッシュの検証コントロールは、この要求に対する応答がキャッシュから提供されることを示していますが、データを書き込む要求ではキャッシュを使用してはなりません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-447">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span></span> <span data-ttu-id="ba60d-448">正しく実装されていないカスタム キャッシュの検証コントロールを使用すると、この例外が発生する場合があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-448">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="ba60d-449"><see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-449"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba60d-450">.NET Compact Framework アプリケーションでコンテンツの長さが 0 の要求ストリームが取得されず、正しく閉じられませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-450">In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</span></span> <span data-ttu-id="ba60d-451">コンテンツの長さが 0 の要求の処理の詳細については、「[.NET Compact Framework のネットワーク プログラミング](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/1afx2b0f(v=vs.90))」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-451">For more information about handling zero content length requests, see [Network Programming in the .NET Compact Framework](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/1afx2b0f(v=vs.90)).</span></span></exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md"><span data-ttu-id="ba60d-452">DefaultProxy 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="ba60d-452">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ba60d-453"><see cref="T:System.AsyncCallback" /> デリゲート</span><span class="sxs-lookup"><span data-stu-id="ba60d-453">The <see cref="T:System.AsyncCallback" /> delegate</span></span></param>
        <param name="state"><span data-ttu-id="ba60d-454">この要求に対して使用する状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba60d-454">The state object for this request.</span></span></param>
        <summary><span data-ttu-id="ba60d-455">インターネット リソースへの非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-455">Begins an asynchronous request to an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="ba60d-456">応答の非同期要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-456">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request for a response.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-457"><xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドは、インターネットリソースからの応答の非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-457">The <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method starts an asynchronous request for a response from the Internet resource.</span></span> <span data-ttu-id="ba60d-458">非同期コールバックメソッドは、<xref:System.Net.HttpWebRequest.EndGetResponse%2A> メソッドを使用して実際の <xref:System.Net.WebResponse>を返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-458">The asynchronous callback method uses the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method to return the actual <xref:System.Net.WebResponse>.</span></span>  
  
 <span data-ttu-id="ba60d-459"><xref:System.Net.ProtocolViolationException> は、<xref:System.Net.HttpWebRequest> クラスに設定されたプロパティが競合している場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-459">A <xref:System.Net.ProtocolViolationException> is thrown in several cases when the properties set on the <xref:System.Net.HttpWebRequest> class are conflicting.</span></span> <span data-ttu-id="ba60d-460">この例外は、アプリケーションが <xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティと <xref:System.Net.HttpWebRequest.SendChunked%2A> プロパティを `true`に設定し、HTTP GET 要求を送信した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-460">This exception occurs if an application sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property and the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`, and then sends an HTTP GET request.</span></span> <span data-ttu-id="ba60d-461">この例外は、HTTP 1.0 プロトコルのみをサポートするサーバーにアプリケーションがチャンクを送信しようとした場合に発生します。これはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-461">This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</span></span> <span data-ttu-id="ba60d-462">この例外が発生するのは、アプリケーションが <xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティを設定せずにデータを送信しようとした場合、またはバッファリングが無効になっているときに <xref:System.Net.HttpWebRequest.SendChunked%2A> が `false`、および keepalive 接続 (<xref:System.Net.HttpWebRequest.KeepAlive%2A> プロパティが `true`) である場合です`.`</span><span class="sxs-lookup"><span data-stu-id="ba60d-462">This exception occurs if an application tries to send data without setting the <xref:System.Net.HttpWebRequest.ContentLength%2A> property or the <xref:System.Net.HttpWebRequest.SendChunked%2A> is `false` when buffering is disabled and on a keepalive connection (the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`)`.`</span></span>  
  
 <span data-ttu-id="ba60d-463"><xref:System.Net.WebException> がスローされた場合は、例外の <xref:System.Net.WebException.Response%2A> と <xref:System.Net.WebException.Status%2A> のプロパティを使用して、サーバーからの応答を確認します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-463">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
 <span data-ttu-id="ba60d-464"><xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドでは、このメソッドが非同期になる前に、いくつかの同期セットアップタスク (DNS 解決、プロキシ検出、および TCP ソケット接続など) を完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-464">The <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</span></span> <span data-ttu-id="ba60d-465">このため、このメソッドは、ユーザーインターフェイス (UI) スレッドでは呼び出さないでください。これは、エラーの例外がスローされる前に初期の同期セットアップタスクを完了するために (ネットワーク設定によっては数分) かかる場合があるためです。メソッドは成功します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-465">As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</span></span>  
  
 <span data-ttu-id="ba60d-466">スレッドプールの詳細については、[マネージスレッドプール](~/docs/standard/threading/the-managed-thread-pool.md)に関するページを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-466">To learn more about the thread pool, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-467">アプリケーションでは、特定の要求に対して同期メソッドと非同期メソッドを混在させることはできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-467">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ba60d-468"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドを呼び出す場合は、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドを使用して応答を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-468">If you call the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-469">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-469">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-470">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-470">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-471">次のコード例では、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドを使用して、インターネットリソースの非同期要求を行います。</span><span class="sxs-lookup"><span data-stu-id="ba60d-471">The following code example uses the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to make an asynchronous request for an Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-472">非同期要求の場合、独自のタイムアウトメカニズムを実装するのは、クライアントアプリケーションの役割です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-472">In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</span></span> <span data-ttu-id="ba60d-473">次のコード例は、その方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-473">The following code example shows how to do it.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CPP/begingetresponse.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CS/begingetresponse.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/VB/begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-474">前回の <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> への呼び出しでストリームが既に使用中です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-474">The stream is already in use by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /></span></span>  
  
<span data-ttu-id="ba60d-475">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-475">-or-</span></span> 
 <span data-ttu-id="ba60d-476"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-476"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="ba60d-477">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-477">-or-</span></span> 
<span data-ttu-id="ba60d-478">スレッド プールは、スレッドを使い切りました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-478">The thread pool is running out of threads.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="ba60d-479"><see cref="P:System.Net.HttpWebRequest.Method" /> が GET または HEAD で、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が 0 以上であるか <see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-479"><see cref="P:System.Net.HttpWebRequest.Method" /> is GET or HEAD, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero or <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="ba60d-480">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-480">-or-</span></span> 
 <span data-ttu-id="ba60d-481"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-481"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" /> and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span>  
  
<span data-ttu-id="ba60d-482">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-482">-or-</span></span> 
<span data-ttu-id="ba60d-483"><see cref="T:System.Net.HttpWebRequest" /> にはエンティティ本体がありますが、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> メソッドを呼び出さずに <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> メソッドが呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-483">The <see cref="T:System.Net.HttpWebRequest" /> has an entity body but the <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method is called without calling the <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> method.</span></span>  
  
<span data-ttu-id="ba60d-484">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-484">-or-</span></span> 
<span data-ttu-id="ba60d-485"><see cref="P:System.Net.HttpWebRequest.ContentLength" /> が 0 よりも大きい値に設定されていますが、アプリケーションは保証されたデータをすべては書き込みません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-485">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero, but the application does not write all of the promised data.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="ba60d-486"><see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-486"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span></exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md"><span data-ttu-id="ba60d-487">DefaultProxy 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="ba60d-487">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.HttpWebRequest.ClientCertificates" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.HttpWebRequest.ClientCertificates" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-488">この要求に関連付けられているセキュリティ証明書のコレクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-488">Gets or sets the collection of security certificates that are associated with this request.</span></span></summary>
        <value><span data-ttu-id="ba60d-489">この要求に関連付けられているセキュリティ証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-489">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains the security certificates associated with this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-490">アプリケーションでは、証明書をコレクションに追加できますが、それに対するアクセス権がない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-490">An application can add a certificate to a collection, but might not have access rights to it.</span></span> <span data-ttu-id="ba60d-491">コレクションに含まれている証明書を使用するには、アプリケーションが、証明書を発行したエンティティと同じアクセス権を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-491">To use a certificate contained in the collection, the application must have the same access rights as the entity that issued the certificate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-492">フレームワークは、作成時に SSL セッションをキャッシュし、可能であれば、新しい要求に対してキャッシュされたセッションの再利用を試みます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-492">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="ba60d-493">SSL セッションを再利用しようとすると、フレームワークは <xref:System.Net.HttpWebRequest.ClientCertificates%2A> の最初の要素 (存在する場合) を使用するか、<xref:System.Net.HttpWebRequest.ClientCertificates%2A> が空の場合は匿名セッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-493">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-494">パフォーマンス上の理由から、サーバーからの要求があることがわかっている場合を除き、<xref:System.Net.HttpWebRequest> にクライアント証明書を追加しないでください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-494">For performance reasons, you shouldn't add a client certificate to a <xref:System.Net.HttpWebRequest> unless you know the server will ask for it.</span></span>  
>   
>  <span data-ttu-id="ba60d-495">クライアント証明書ストアの証明書を列挙する方法を示すコード例については、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-495">For a code example illustrating how to enumerate the certificates in the client certificate store, see the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-496">設定操作に指定された値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-496">The value specified for a set operation is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public string Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Connection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Connection { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : string with get, set" Usage="System.Net.HttpWebRequest.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-497"><see langword="Connection" /> HTTP ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-497">Gets or sets the value of the <see langword="Connection" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-498"><see langword="Connection" /> HTTP ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-498">The value of the <see langword="Connection" /> HTTP header.</span></span> <span data-ttu-id="ba60d-499">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-499">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-500">要求は、`Connection` HTTP ヘッダーとして <xref:System.Net.HttpWebRequest.Connection%2A> プロパティをインターネットリソースに送信します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-500">The request sends the <xref:System.Net.HttpWebRequest.Connection%2A> property to the Internet resource as the `Connection` HTTP header.</span></span> <span data-ttu-id="ba60d-501"><xref:System.Net.HttpWebRequest.KeepAlive%2A> プロパティの値が `true`場合、`Connection` ヘッダーの末尾に "keep-alive" という値が追加されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-501">If the value of the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`, the value "Keep-alive" is appended to the end of the `Connection` header.</span></span>  
  
 <span data-ttu-id="ba60d-502">`Connection` HTTP ヘッダーをクリアするには、<xref:System.Net.HttpWebRequest.Connection%2A> プロパティを `null`に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-502">To clear the `Connection` HTTP header, set the <xref:System.Net.HttpWebRequest.Connection%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ba60d-503"><xref:System.Net.HttpWebRequest.GetRequestStream%2A>、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.HttpWebRequest.GetResponse%2A>、または <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドを呼び出すことによって要求が開始された後に <xref:System.Net.HttpWebRequest.Connection%2A> プロパティを変更すると、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-503">Changing the <xref:System.Net.HttpWebRequest.Connection%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-504">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-504">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ba60d-505">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-505">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-506">次のコード例では、<xref:System.Net.HttpWebRequest.Connection%2A> プロパティを使用して、接続 HTTP ヘッダーの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-506">The following code example uses the <xref:System.Net.HttpWebRequest.Connection%2A> property to set the value of the Connection HTTP Header.</span></span>  
  
 [!code-cpp[HttpWebRequest_Connection#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Connection/CPP/httpwebrequest_connection.cpp#1)]
 [!code-csharp[HttpWebRequest_Connection#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Connection/CS/httpwebrequest_connection.cs#1)]
 [!code-vb[HttpWebRequest_Connection#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Connection/VB/httpwebrequest_connection.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-507"><see cref="P:System.Net.HttpWebRequest.Connection" /> の値が Keep-alive または Close に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-507">The value of <see cref="P:System.Net.HttpWebRequest.Connection" /> is set to Keep-alive or Close.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.HttpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-508">要求に対して使用する接続グループの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-508">Gets or sets the name of the connection group for the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-509">この要求に対して使用する接続グループの名前。</span><span class="sxs-lookup"><span data-stu-id="ba60d-509">The name of the connection group for this request.</span></span> <span data-ttu-id="ba60d-510">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-510">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-511"><xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> プロパティを使用すると、要求を接続グループに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-511">The <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> property enables you to associate a request with a connection group.</span></span> <span data-ttu-id="ba60d-512">これは、アプリケーションが、データベースサーバーから顧客情報を取得する Web サイトなど、ユーザーごとに1つのサーバーに対して要求を行う場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-512">This is useful when your application makes requests to one server for different users, such as a Web site that retrieves customer information from a database server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-513">次のコード例は、ユーザー情報を使用して接続グループを作成する方法を示しています。このコードが呼び出される前に、`username`、`password`、および `domain` 変数がアプリケーションによって設定されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-513">The following code example show how to use user information to form a connection group, assuming that the variables `username`, `password`, and `domain` are set by the application before this code is called.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ba60d-514">各接続グループは、サーバーに対して追加の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-514">Each connection group creates additional connections for a server.</span></span> <span data-ttu-id="ba60d-515">これにより、そのサーバーの <see cref="P:System.Net.ServicePoint.ConnectionLimit" /> プロパティによって設定された接続の数が超過する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-515">This may result in exceeding the number of connections set by the <see cref="P:System.Net.ServicePoint.ConnectionLimit" /> property for that server.</span></span></para></block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.WebRequest.ConnectionGroupName" />
        <related type="Article" href="~/docs/framework/network-programming/connection-grouping.md"><span data-ttu-id="ba60d-516">接続のグループ化</span><span class="sxs-lookup"><span data-stu-id="ba60d-516">Connection Grouping</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.HttpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-517"><see langword="Content-length" /> HTTP ヘッダーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-517">Gets or sets the <see langword="Content-length" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-518">インターネット リソースに送信するデータのバイト数。</span><span class="sxs-lookup"><span data-stu-id="ba60d-518">The number of bytes of data to send to the Internet resource.</span></span> <span data-ttu-id="ba60d-519">既定値は -1 です。このプロパティが設定されていないこと、および送信する要求データが存在しないことを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-519">The default is -1, which indicates the property has not been set and that there is no request data to send.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-520"><xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティには、要求と共に `Content-length` HTTP ヘッダーとして送信する値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-520">The <xref:System.Net.HttpWebRequest.ContentLength%2A> property contains the value to send as the `Content-length` HTTP header with the request.</span></span>  
  
 <span data-ttu-id="ba60d-521"><xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティの-1 以外の値は、要求によってデータがアップロードされ、データをアップロードするメソッドだけが <xref:System.Net.HttpWebRequest.Method%2A> プロパティで設定できることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-521">Any value other than -1 in the <xref:System.Net.HttpWebRequest.ContentLength%2A> property indicates that the request uploads data and that only methods that upload data are allowed to be set in the <xref:System.Net.HttpWebRequest.Method%2A> property.</span></span>  
  
 <span data-ttu-id="ba60d-522"><xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティを値に設定した後、<xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッド、または <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> と <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> の両方のメソッドを呼び出すことによって返される要求ストリームにバイト数を書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-522">After the <xref:System.Net.HttpWebRequest.ContentLength%2A> property is set to a value, that number of bytes must be written to the request stream that is returned by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method or both the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> and the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-523">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-523">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ba60d-524">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-524">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-525">次のコード例では、<xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティを、ポストされる文字列の長さに設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-525">The following code example sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property to the length of the string being posted.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-526"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" />、または <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> メソッドを呼び出すことにより要求が開始されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-526">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-527">新規 <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-527">The new <see cref="P:System.Net.HttpWebRequest.ContentLength" /> value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.HttpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-528"><see langword="Content-type" /> HTTP ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-528">Gets or sets the value of the <see langword="Content-type" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-529"><see langword="Content-type" /> HTTP ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-529">The value of the <see langword="Content-type" /> HTTP header.</span></span> <span data-ttu-id="ba60d-530">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-530">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-531"><xref:System.Net.HttpWebRequest.ContentType%2A> プロパティには、要求のメディアの種類が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-531">The <xref:System.Net.HttpWebRequest.ContentType%2A> property contains the media type of the request.</span></span> <span data-ttu-id="ba60d-532">要求によって `Content-type` HTTP ヘッダーが送信された場合、<xref:System.Net.HttpWebRequest.ContentType%2A> プロパティに割り当てられた値は、既存の内容を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-532">Values assigned to the <xref:System.Net.HttpWebRequest.ContentType%2A> property replace any existing contents when the request sends the `Content-type` HTTP header.</span></span>  
  
 <span data-ttu-id="ba60d-533">`Content-type` HTTP ヘッダーをクリアするには、<xref:System.Net.HttpWebRequest.ContentType%2A> プロパティを `null`に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-533">To clear the `Content-type` HTTP header, set the <xref:System.Net.HttpWebRequest.ContentType%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-534">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-534">The value for this property is stored in <xref:System.Net.WebHeaderCollection> .</span></span> <span data-ttu-id="ba60d-535"><xref:System.Net.WebHeaderCollection> が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-535">If <xref:System.Net.WebHeaderCollection> is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-536">次のコード例では、<xref:System.Net.HttpWebRequest.ContentType%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-536">The following code example sets the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#1)]
 [!code-csharp[HttpWebRequest_ContentLength#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#1)]
 [!code-vb[HttpWebRequest_ContentLength#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpContinueDelegate ContinueDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpContinueDelegate ContinueDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContinueDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueDelegate As HttpContinueDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpContinueDelegate ^ ContinueDelegate { System::Net::HttpContinueDelegate ^ get(); void set(System::Net::HttpContinueDelegate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContinueDelegate : System.Net.HttpContinueDelegate with get, set" Usage="System.Net.HttpWebRequest.ContinueDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpContinueDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-537">インターネット リソースから HTTP 100-continue 応答を受信したときに呼び出されるデリゲート メソッドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-537">Gets or sets the delegate method called when an HTTP 100-continue response is received from the Internet resource.</span></span></summary>
        <value><span data-ttu-id="ba60d-538">インターネット リソースから HTTP Continue 応答が返されたときに実行されるコールバック メソッドを実装するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="ba60d-538">A delegate that implements the callback method that executes when an HTTP Continue response is returned from the Internet resource.</span></span> <span data-ttu-id="ba60d-539">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-539">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-540"><xref:System.Net.HttpWebRequest.ContinueDelegate%2A> プロパティは、クライアントが 100-Continue 応答を受信したときに呼び出すコールバックメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-540">The <xref:System.Net.HttpWebRequest.ContinueDelegate%2A> property specifies the callback method to call when the client receives a 100-Continue response.</span></span>  
  
 <span data-ttu-id="ba60d-541"><xref:System.Net.HttpWebRequest.ContinueDelegate%2A> プロパティが設定されている場合、<xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType> (100) 型のプロトコル応答を受信するたびに、クライアントはデリゲートを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-541">When the <xref:System.Net.HttpWebRequest.ContinueDelegate%2A> property is set, the client calls the delegate whenever protocol responses of type <xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType> (100) are received.</span></span> <span data-ttu-id="ba60d-542">これは、インターネットリソースから受信されるデータのステータスをクライアントに表示する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-542">This is useful if you want the client to display the status of the data being received from the Internet resource.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength" />
      </Docs>
    </Member>
    <Member MemberName="ContinueTimeout">
      <MemberSignature Language="C#" Value="public int ContinueTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContinueTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContinueTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContinueTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ContinueTimeout : int with get, set" Usage="System.Net.HttpWebRequest.ContinueTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-543">100 回の続行まで待機するミリ秒単位のタイムアウト値をサーバーから取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-543">Gets or sets a timeout, in milliseconds, to wait until the 100-Continue is received from the server.</span></span></summary>
        <value><span data-ttu-id="ba60d-544">100 回の続行まで待機するミリ秒単位のタイムアウト値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-544">The timeout, in milliseconds, to wait until the 100-Continue is received.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-545">タイムアウトの期限が切れる前に 100-Continue 応答を受信した場合は、エンティティ本体を送信できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-545">If the 100-Continue response is received before the timeout expires, the entity body can be sent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public virtual System.Net.CookieContainer CookieContainer { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CookieContainer As CookieContainer" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CookieContainer : System.Net.CookieContainer with get, set" Usage="System.Net.HttpWebRequest.CookieContainer" />
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-546">要求に関連付けられているクッキーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-546">Gets or sets the cookies associated with the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-547">この要求に関連付けられているクッキーを格納している <see cref="T:System.Net.CookieContainer" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-547">A <see cref="T:System.Net.CookieContainer" /> that contains the cookies associated with this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-548"><xref:System.Net.HttpWebRequest.CookieContainer%2A> プロパティは、この要求に関連付けられた cookie を含む <xref:System.Net.CookieContainer> クラスのインスタンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-548">The <xref:System.Net.HttpWebRequest.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this request.</span></span>  
  
 <span data-ttu-id="ba60d-549"><xref:System.Net.HttpWebRequest.CookieContainer%2A> は既定では `null` です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-549"><xref:System.Net.HttpWebRequest.CookieContainer%2A> is `null` by default.</span></span> <span data-ttu-id="ba60d-550"><xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドによって返される <xref:System.Net.HttpWebResponse> の <xref:System.Net.HttpWebResponse.Cookies%2A> プロパティにクッキーが返されるようにするには、<xref:System.Net.CookieContainer> オブジェクトをプロパティに割り当てる必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-550">You must assign a <xref:System.Net.CookieContainer> object to the property to have cookies returned in the <xref:System.Net.HttpWebResponse.Cookies%2A> property of the <xref:System.Net.HttpWebResponse> returned by the <xref:System.Net.HttpWebRequest.GetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-551">セキュリティ上の理由から、cookie は既定で無効になっています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-551">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="ba60d-552">Cookie を使用する場合は、<xref:System.Net.HttpWebRequest.CookieContainer%2A> プロパティを使用して cookie を有効にします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-552">If you want to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-553">次のコード例では、URL に要求を送信し、応答で返されたクッキーを表示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-553">The following code example sends a request to a URL and displays the cookies returned in the response.</span></span>  
  
 [!code-cpp[NCLCookies#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCookies/CPP/cookiessnippets.cpp#1)]
 [!code-csharp[NCLCookies#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCookies/CS/cookiessnippets.cs#1)]
 [!code-vb[NCLCookies#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLCookies/VB/cookiessnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.HttpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-554">要求に対して使用する認証情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-554">Gets or sets authentication information for the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-555">要求と関連付けられた認証資格情報を格納する <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-555">An <see cref="T:System.Net.ICredentials" /> that contains the authentication credentials associated with the request.</span></span> <span data-ttu-id="ba60d-556">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-556">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-557"><xref:System.Net.HttpWebRequest.Credentials%2A> プロパティには、要求のメーカーを識別するための認証情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-557">The <xref:System.Net.HttpWebRequest.Credentials%2A> property contains authentication information to identify the maker of the request.</span></span> <span data-ttu-id="ba60d-558"><xref:System.Net.HttpWebRequest.Credentials%2A> プロパティには、<xref:System.Net.NetworkCredential>のいずれかを指定できます。 <xref:System.Net.CredentialCache>この場合、<xref:System.Net.NetworkCredential> オブジェクトに含まれるユーザー、パスワード、およびドメインの情報を使用して要求を認証します。または、要求の Uniform Resource Identifier (URI) を使用して、要求の認証に使用するユーザー、パスワード、およびドメイン情報を決定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-558">The <xref:System.Net.HttpWebRequest.Credentials%2A> property can be either a <xref:System.Net.NetworkCredential>, in which case the user, password, and domain information contained in the <xref:System.Net.NetworkCredential> object is used to authenticate the request, or it can be a <xref:System.Net.CredentialCache>, in which case the Uniform Resource Identifier (URI) of the request is used to determine the user, password, and domain information to use to authenticate the request.</span></span>  
  
 <span data-ttu-id="ba60d-559">ほとんどのクライアントシナリオでは、<xref:System.Net.CredentialCache.DefaultCredentials%2A> プロパティを使用する必要があります。これには、現在ログオンしているユーザーの資格情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-559">In most client scenarios, you should use the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property, which contains the credentials of the currently logged on user.</span></span> <span data-ttu-id="ba60d-560">これを行うには、このプロパティを設定するのではなく、<xref:System.Net.WebClient.UseDefaultCredentials%2A> プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-560">To do this, set the <xref:System.Net.WebClient.UseDefaultCredentials%2A> property to `true` instead of setting this property.</span></span>  
  
 <span data-ttu-id="ba60d-561">ASP.NET アプリケーションなどの中間層アプリケーションで <xref:System.Net.HttpWebRequest> クラスが使用されている場合、<xref:System.Net.CredentialCache.DefaultCredentials%2A> プロパティの資格情報は、ASP ページ (サーバー側の資格情報) を実行しているアカウントに属しています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-561">If the <xref:System.Net.HttpWebRequest> class is being used in a middle-tier application, such as an ASP.NET application, the credentials in the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property belong to the account running the ASP page (the server-side credentials).</span></span> <span data-ttu-id="ba60d-562">通常、このプロパティは、要求の発行元のクライアントの資格情報に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-562">Typically, you would set this property to the credentials of the client on whose behalf the request is made.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-563">NTLM 認証スキームを使用して別のユーザーの権限を借用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-563">The NTLM authentication scheme cannot be used to impersonate another user.</span></span> <span data-ttu-id="ba60d-564">Kerberos は、偽装をサポートするように特別に構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-564">Kerberos must be specially configured to support impersonation.</span></span>  
  
 <span data-ttu-id="ba60d-565">HttpWebRequest を1つ以上の認証方法に制限するには、<xref:System.Net.CredentialCache> クラスを使用して、資格情報を1つ以上の認証スキームにバインドします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-565">To restrict HttpWebRequest to one or more authentication methods, use the <xref:System.Net.CredentialCache> class and bind your credentials to one or more authentication schemes</span></span>  
  
 <span data-ttu-id="ba60d-566">サポートされている認証方式には、Digest、Negotiate、Kerberos、NTLM、および Basic があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-566">Supported authentication schemes include Digest, Negotiate, Kerberos, NTLM, and Basic.</span></span>  
  
 <span data-ttu-id="ba60d-567">セキュリティ上の理由から、自動的にリダイレクトされる場合は、リダイレクトに含める資格情報を <xref:System.Net.CredentialCache> に格納し、このプロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-567">For security reasons, when automatically following redirects, store the credentials that you want to be included in the redirect in a <xref:System.Net.CredentialCache> and assign it to this property.</span></span> <span data-ttu-id="ba60d-568">このプロパティに <xref:System.Net.CredentialCache>以外のものが含まれている場合は、リダイレクト時に `null` に自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-568">This property will automatically be set to `null` upon redirection if it contains anything except a <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="ba60d-569">このプロパティ値をその条件下で `null` に自動的に設定すると、資格情報が意図しない宛先に送信されるのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-569">Having this property value be automatically set to `null` under those conditions prevents credentials from being sent to any unintended destination.</span></span>
  
## Examples  
 <span data-ttu-id="ba60d-570">次のコード例では、要求の資格情報を設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-570">The following code example sets the credentials for a request.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Date" />
      <MemberSignature Language="VB.NET" Value="Public Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime with get, set" Usage="System.Net.HttpWebRequest.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-571">HTTP 要求で使用する <see langword="Date" /> HTTP ヘッダー値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-571">Gets or sets the <see langword="Date" /> HTTP header value to use in an HTTP request.</span></span></summary>
        <value><span data-ttu-id="ba60d-572">HTTP 要求の Date ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-572">The Date header value in the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-573">日付ヘッダーが `null`場合、戻り値は <xref:System.DateTime.MinValue?displayProperty=nameWithType>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-573">If the Date header is `null`, then the return value will be set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba60d-574"><xref:System.Net.HttpWebRequest.Date%2A> プロパティは、標準の <xref:System.DateTime?displayProperty=nameWithType> オブジェクトであり、<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>、または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>の <xref:System.DateTimeKind?displayProperty=nameWithType> フィールドを含むことができます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-574">The <xref:System.Net.HttpWebRequest.Date%2A> property is a standard <xref:System.DateTime?displayProperty=nameWithType> object and can contain a <xref:System.DateTimeKind?displayProperty=nameWithType> field of <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba60d-575"><xref:System.Net.HttpWebRequest.Date%2A> プロパティを使用する場合は、任意の種類の時刻を設定できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-575">Any kind of time can be set when using the <xref:System.Net.HttpWebRequest.Date%2A> property.</span></span> <span data-ttu-id="ba60d-576"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> が設定または取得された場合、<xref:System.Net.HttpWebRequest.Date%2A> プロパティは <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (ローカル時刻) と見なされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-576">If <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> is set or retrieved, the <xref:System.Net.HttpWebRequest.Date%2A> property is assumed to be <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (local time).</span></span>  
  
 <span data-ttu-id="ba60d-577"><xref:System.Net> 名前空間のクラスは常に、GMT (Utc) 形式を使用した標準形式での転送中に、ネットワークの <xref:System.Net.HttpWebRequest.Date%2A> プロパティを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-577">The classes in the <xref:System.Net> namespace always write it out the <xref:System.Net.HttpWebRequest.Date%2A> property on the wire during transmission in standard form using GMT (Utc) format.</span></span>  
  
 <span data-ttu-id="ba60d-578"><xref:System.Net.HttpWebRequest.Date%2A> プロパティが <xref:System.DateTime.MinValue?displayProperty=nameWithType>に設定されている場合、`Date` HTTP ヘッダーは <xref:System.Net.HttpWebRequest.Headers%2A> プロパティと <xref:System.Net.WebHeaderCollection>から削除されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-578">If the <xref:System.Net.HttpWebRequest.Date%2A> property is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>, then the `Date` HTTP header is removed from the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
 <span data-ttu-id="ba60d-579"><xref:System.Net.HttpWebRequest.Date%2A> プロパティが <xref:System.DateTime.MinValue?displayProperty=nameWithType>の場合、`Date` HTTP ヘッダーが <xref:System.Net.HttpWebRequest.Headers%2A> プロパティと <xref:System.Net.WebHeaderCollection>に含まれていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-579">If the <xref:System.Net.HttpWebRequest.Date%2A> property is <xref:System.DateTime.MinValue?displayProperty=nameWithType>, this indicates that the `Date` HTTP header is not included in the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-580">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-580">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ba60d-581">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-581">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
 <span data-ttu-id="ba60d-582"><xref:System.Net.HttpWebRequest.Date%2A> が設定されていて、本文のない <xref:System.Net.HttpWebRequest> を送信しようとした場合、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>、<xref:System.Net.HttpWebRequest.GetResponse%2A>、および <xref:System.Net.HttpWebRequest.EndGetResponse%2A> の各メソッドによって <xref:System.Net.ProtocolViolationException?displayProperty=nameWithType> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-582">If the <xref:System.Net.HttpWebRequest.Date%2A> is set and an attempt is made to send a <xref:System.Net.HttpWebRequest> with no body, then a <xref:System.Net.ProtocolViolationException?displayProperty=nameWithType> will be thrown by the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, and <xref:System.Net.HttpWebRequest.EndGetResponse%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.HttpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-583">この要求の既定のキャッシュ ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-583">Gets or sets the default cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="ba60d-584">他のポリシーが適用できない場合に、この要求で有効なキャッシュ ポリシーを指定する <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-584">A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> that specifies the cache policy in effect for this request when no other policy is applicable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-585">このプロパティを設定すると、指定したポリシーが HTTP および HTTPS スキームに登録されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-585">Setting this property registers the specified policy for the HTTP and HTTPS schemes.</span></span> <span data-ttu-id="ba60d-586">このポリシーは、次の場合にこの要求に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-586">This policy is used for this request if:</span></span>  
  
 <span data-ttu-id="ba60d-587">この要求には <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> プロパティが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-587">There is no <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> property specified for this request.</span></span>  
  
<span data-ttu-id="ba60d-588">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-588">-or-</span></span>
  
 <span data-ttu-id="ba60d-589">コンピューターおよびアプリケーションの構成ファイルでは、この要求の作成に使用される Uniform Resource Identifier (URI) に適用できるキャッシュポリシーが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-589">The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</span></span>  
  
 <span data-ttu-id="ba60d-590">キャッシュポリシーは、要求されたリソースをリソースホストコンピューターに送信するのではなく、キャッシュから取得できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-590">The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</span></span>  
  
 <span data-ttu-id="ba60d-591">リソースのコピーは、リソースの応答ストリームが取得され、ストリームの末尾に読み取られる場合にのみ、キャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-591">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="ba60d-592">そのため、同じリソースに対する別の要求では、この要求のキャッシュポリシーレベルに応じて、キャッシュされたコピーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-592">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumErrorResponseLength">
      <MemberSignature Language="C#" Value="public static int DefaultMaximumErrorResponseLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultMaximumErrorResponseLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultMaximumErrorResponseLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultMaximumErrorResponseLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaximumErrorResponseLength : int with get, set" Usage="System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-593">HTTP エラー応答の既定の最大長を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-593">Gets or sets the default maximum length of an HTTP error response.</span></span></summary>
        <value><span data-ttu-id="ba60d-594">HTTP エラー応答の既定の最大長。</span><span class="sxs-lookup"><span data-stu-id="ba60d-594">The default maximum length of an HTTP error response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-595">値は 0 より小さく、-1 とは異なっています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-595">The value is less than 0 and is not equal to -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumResponseHeadersLength">
      <MemberSignature Language="C#" Value="public static int DefaultMaximumResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultMaximumResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultMaximumResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultMaximumResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaximumResponseHeadersLength : int with get, set" Usage="System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Use this")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-596"><see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /> プロパティの既定値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-596">Gets or sets the default for the <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /> property.</span></span></summary>
        <value><span data-ttu-id="ba60d-597">受信した応答ヘッダーの KB (1024 バイト) 単位の既定の最大長。</span><span class="sxs-lookup"><span data-stu-id="ba60d-597">The length, in kilobytes (1024 bytes), of the default maximum for response headers received.</span></span> <span data-ttu-id="ba60d-598">既定の構成ファイルは、この値を 64 KB に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-598">The default configuration file sets this value to 64 kilobytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-599">応答ヘッダーの長さは、応答ステータス行と HTTP プロトコルの一部として受信される追加の制御文字を受け取りました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-599">The length of the response header received the response status line and any extra control characters that are received as part of HTTP protocol.</span></span> <span data-ttu-id="ba60d-600">値-1 は、受信した応答ヘッダーに制限が適用されないことを意味します。値0は、すべての要求が失敗することを意味します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-600">A value of -1 means no limit is imposed on the response headers received; a value of 0 means that all requests fail.</span></span>  
  
 <span data-ttu-id="ba60d-601">この値は、構成ファイルでも変更できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-601">This value can also be changed in the configuration file.</span></span> <span data-ttu-id="ba60d-602">このプロパティの影響は、<xref:System.Net.HttpWebRequest> クラスのインスタンスの <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> プロパティを設定することによってオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-602">The impact of this property can be overridden by setting the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property on an instance of the <xref:System.Net.HttpWebRequest> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-603">値は -1 と等しくなく、0 未満です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-603">The value is not equal to -1 and is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndGetRequestStream">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba60d-604">データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトの非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-604">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="httpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ba60d-605">ストリームの保留中の要求。</span><span class="sxs-lookup"><span data-stu-id="ba60d-605">The pending request for a stream.</span></span></param>
        <summary><span data-ttu-id="ba60d-606">データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトの非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-606">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span></span></summary>
        <returns><span data-ttu-id="ba60d-607">要求データを書き込むために使用する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-607">A <see cref="T:System.IO.Stream" /> to use to write request data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-608"><xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> メソッドは、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドによって開始されたストリームの非同期要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-608">The <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method completes an asynchronous request for a stream that was started by the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method.</span></span> <span data-ttu-id="ba60d-609"><xref:System.IO.Stream> オブジェクトが返された後、<xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> メソッドを使用して、<xref:System.Net.HttpWebRequest> でデータを送信できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-609">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-610">ストリームにデータを書き込む前に、<xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティの値を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-610">You must set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property before writing data to the stream.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ba60d-611">ストリームを閉じて再利用するために接続を解放するには、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-611">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="ba60d-612">ストリームを閉じないと、アプリケーションの接続が切断されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-612">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-613">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-613">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-614">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-614">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-615">次のコード例では、<xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> メソッドを使用して、ストリームインスタンスの非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-615">The following code example uses the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method to end an asynchronous request for a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CPP/httpwebrequest_begingetrequeststream.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CS/httpwebrequest_begingetrequeststream.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/VB/httpwebrequest_begingetrequeststream.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-616"><paramref name="asyncResult" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-616"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba60d-617">要求が完了しませんでした。また、ストリームは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-617">The request did not complete, and no stream is available.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-618">呼び出しから <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> まで、<paramref name="asyncResult" /> は現在のインスタンスにより返されませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-618"><paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-619">このメソッドは、<paramref name="asyncResult" /> を使用して既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-619">This method was called previously using <paramref name="asyncResult" />.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="ba60d-620"><see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-620"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="ba60d-621">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-621">-or-</span></span> 
<span data-ttu-id="ba60d-622">この要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-622">An error occurred while processing the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult, out System.Net.TransportContext context);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult, [out] class System.Net.TransportContext&amp; context) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetRequestStream (asyncResult As IAsyncResult, ByRef context As TransportContext) As Stream" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::TransportContext ^ % context);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult * TransportContext -&gt; System.IO.Stream" Usage="httpWebRequest.EndGetRequestStream (asyncResult, context)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult, out System.Net.TransportContext transportContext);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult, [out] class System.Net.TransportContext&amp; transportContext) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetRequestStream (asyncResult As IAsyncResult, ByRef transportContext As TransportContext) As Stream" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::TransportContext ^ % transportContext);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult * TransportContext -&gt; System.IO.Stream" Usage="httpWebRequest.EndGetRequestStream (asyncResult, transportContext)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Net.TransportContext" RefType="out" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="transportContext" Type="System.Net.TransportContext" RefType="out" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ba60d-623">ストリームの保留中の要求。</span><span class="sxs-lookup"><span data-stu-id="ba60d-623">The pending request for a stream.</span></span></param>
        <param name="context"><span data-ttu-id="ba60d-624"><see cref="T:System.Net.TransportContext" /> の <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-624">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</span></span></param>
        <param name="transportContext"><span data-ttu-id="ba60d-625"><see cref="T:System.Net.TransportContext" /> の <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-625">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</span></span></param>
        <summary><span data-ttu-id="ba60d-626">データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトに対する非同期要求を終了し、そのストリームに関連付けられている <see cref="T:System.Net.TransportContext" /> を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-626">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data and outputs the <see cref="T:System.Net.TransportContext" /> associated with the stream.</span></span></summary>
        <returns><span data-ttu-id="ba60d-627">要求データを書き込むために使用する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-627">A <see cref="T:System.IO.Stream" /> to use to write request data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-628"><xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> メソッドは、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドによって開始されたストリームに対する非同期要求を完了し、ストリームに関連付けられている <xref:System.Net.TransportContext> を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-628">The <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method completes an asynchronous request for a stream that was started by the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method and outputs the <xref:System.Net.TransportContext> associated with the stream.</span></span> <span data-ttu-id="ba60d-629"><xref:System.IO.Stream> オブジェクトが返された後、<xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> メソッドを使用して、<xref:System.Net.HttpWebRequest> でデータを送信できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-629">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba60d-630">拡張保護で統合 Windows 認証を使用する一部のアプリケーションでは、基になる TLS チャネルからチャネルバインドトークン (CBT) を取得するために、<xref:System.Net.HttpWebRequest> によって使用されるトランスポート層に対してクエリを実行できる必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-630">Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <xref:System.Net.HttpWebRequest> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</span></span> <span data-ttu-id="ba60d-631"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドは、要求本文 (`POST` と `PUT` 要求) を持つ HTTP メソッドのこの情報へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-631">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method provides access to this information for HTTP methods which have a request body (`POST` and `PUT` requests).</span></span> <span data-ttu-id="ba60d-632">これは、アプリケーションが独自の認証を実装しており、CBT へのアクセスが必要な場合にのみ必要です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-632">This is only needed if the application is implementing its own authentication and needs access to the CBT.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-633">アプリケーションで <xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティの値を設定する必要がある場合は、ストリームを取得してデータを書き込む前に、この操作を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-633">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream and writing data to it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ba60d-634">ストリームを閉じて再利用するために接続を解放するには、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-634">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="ba60d-635">ストリームを閉じないと、アプリケーションの接続が切断されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-635">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-636">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-636">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-637">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-637">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-638">呼び出しから <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> まで、<paramref name="asyncResult" /> は現在のインスタンスにより返されませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-638"><paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-639"><paramref name="asyncResult" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-639"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-640">このメソッドは以前に <paramref name="asyncResult" /> を使用して呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-640">This method was called previously using <paramref name="asyncResult" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba60d-641">要求が完了しませんでした。使用できるストリームはありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-641">The request did not complete, and no stream is available.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="ba60d-642"><see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-642"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="ba60d-643">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-643">-or-</span></span> 
<span data-ttu-id="ba60d-644">この要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-644">An error occurred while processing the request.</span></span></exception>
        <altmember cref="T:System.Net.TransportContext" />
        <altmember cref="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ba60d-645">統合 Windows 認証と拡張保護</span><span class="sxs-lookup"><span data-stu-id="ba60d-645">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="httpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ba60d-646">応答の保留中の要求。</span><span class="sxs-lookup"><span data-stu-id="ba60d-646">The pending request for a response.</span></span></param>
        <summary><span data-ttu-id="ba60d-647">インターネット リソースへの非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-647">Ends an asynchronous request to an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="ba60d-648">インターネット リソースからの応答を格納している <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-648">A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-649"><xref:System.Net.HttpWebRequest.EndGetResponse%2A> メソッドは、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドを呼び出すことによって開始されたインターネットリソースに対する非同期要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-649">The <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method completes an asynchronous request for an Internet resource that was started by calling the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ba60d-650">ストリームを閉じて接続を解放するには、<xref:System.Net.HttpWebResponse.Close%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-650">You must call the <xref:System.Net.HttpWebResponse.Close%2A> method to close the stream and release the connection.</span></span> <span data-ttu-id="ba60d-651">そうしないと、アプリケーションの接続が不足する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-651">Failure to do so may cause your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-652">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-652">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-653">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-653">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-654">次のコード例では、<xref:System.Net.HttpWebRequest.EndGetResponse%2A> メソッドを使用して、インターネットリソースの非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-654">The following code example uses the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method to end an asynchronous request for an Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/CPP/httpwebrequest_begingetresponse.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/CS/httpwebrequest_begingetresponse.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/VB/httpwebrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-655"><paramref name="asyncResult" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-655"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-656">このメソッドは以前に <paramref name="asyncResult." /> を使用して呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-656">This method was called previously using <paramref name="asyncResult." /></span></span>  
  
<span data-ttu-id="ba60d-657">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-657">-or-</span></span> 
<span data-ttu-id="ba60d-658"><see cref="P:System.Net.HttpWebRequest.ContentLength" /> プロパティが 0 を超えていますが、データが要求ストリームに書き込まれていません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-658">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> property is greater than 0 but the data has not been written to the request stream.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="ba60d-659"><see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-659"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="ba60d-660">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-660">-or-</span></span> 
<span data-ttu-id="ba60d-661">この要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-661">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-662">呼び出しから <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> まで、<paramref name="asyncResult" /> は現在のインスタンスにより返されませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-662"><paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Expect">
      <MemberSignature Language="C#" Value="public string Expect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expect" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Expect" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expect { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expect : string with get, set" Usage="System.Net.HttpWebRequest.Expect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-663"><see langword="Expect" /> HTTP ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-663">Gets or sets the value of the <see langword="Expect" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-664"><see langword="Expect" /> HTTP ヘッダーの内容。</span><span class="sxs-lookup"><span data-stu-id="ba60d-664">The contents of the <see langword="Expect" /> HTTP header.</span></span> <span data-ttu-id="ba60d-665">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-665">The default value is <see langword="null" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="ba60d-666">このプロパティの値は <see cref="T:System.Net.WebHeaderCollection" /> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-666">The value for this property is stored in <see cref="T:System.Net.WebHeaderCollection" />.</span></span> <span data-ttu-id="ba60d-667">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-667">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
</para></block></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-668"><see langword="Expect" /> は、部分文字列として "100-continue" を含む文字列に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-668"><see langword="Expect" /> is set to a string that contains "100-continue" as a substring.</span></span></exception>
        <altmember cref="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md"><span data-ttu-id="ba60d-669">DefaultProxy 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="ba60d-669">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="httpWebRequest.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba60d-670"><see cref="T:System.Net.WebRequest" /> インスタンスのハッシュ値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-670">Returns a hash value for a <see cref="T:System.Net.WebRequest" /> instance.</span></span></summary>
        <returns><span data-ttu-id="ba60d-671">整数ハッシュ値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-671">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="ba60d-672">GetHashCode メソッドは、web 要求のハッシュコードを返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-672">The GetHashCode method returns a hash code of the web request.</span></span> <span data-ttu-id="ba60d-673">この値は、ハッシュテーブルのキーとして使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-673">This value can be used as a key in hash tables.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="httpWebRequest.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="ba60d-674">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-674">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="ba60d-675">このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-675">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="ba60d-676"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、ターゲット オブジェクトをシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-676">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-677"><xref:System.Runtime.Serialization.SerializationInfo> に含まれるオブジェクトは、フォーマッタによって自動的に追跡およびシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-677">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRequestStream">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba60d-678">要求データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-678">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="httpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba60d-679">要求データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-679">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data.</span></span></summary>
        <returns><span data-ttu-id="ba60d-680">要求データを書き込むために使用する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-680">A <see cref="T:System.IO.Stream" /> to use to write request data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-681"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドは、<xref:System.Net.HttpWebRequest>のデータを送信するために使用するストリームを返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-681">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a stream to use to send data for the <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="ba60d-682"><xref:System.IO.Stream> オブジェクトが返された後、<xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> メソッドを使用して、<xref:System.Net.HttpWebRequest> でデータを送信できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-682">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba60d-683">アプリケーションで <xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティの値を設定する必要がある場合は、ストリームを取得する前にこれを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-683">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream.</span></span>  
  
 <span data-ttu-id="ba60d-684">ストリームを閉じて再利用するために接続を解放するには、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-684">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="ba60d-685">ストリームを閉じないと、アプリケーションの接続が切断されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-685">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-686">アプリケーションでは、特定の要求に対して同期メソッドと非同期メソッドを混在させることはできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-686">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ba60d-687"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドを呼び出す場合は、<xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドを使用して応答を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-687">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-688">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-688">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-689">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-689">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-690">次のコード例では、<xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドを使用して、ストリームインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-690">The following code example uses the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method to return a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="ba60d-691"><see cref="P:System.Net.HttpWebRequest.Method" /> プロパティは GET または HEAD です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-691">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span></span>  
  
<span data-ttu-id="ba60d-692">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-692">-or-</span></span> 
 <span data-ttu-id="ba60d-693"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-693"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-694"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドが複数回呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-694">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method is called more than once.</span></span>  
  
<span data-ttu-id="ba60d-695">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-695">-or-</span></span> 
 <span data-ttu-id="ba60d-696"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-696"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba60d-697">要求キャッシュの検証コントロールは、この要求に対する応答がキャッシュから提供されることを示していますが、データを書き込む要求ではキャッシュを使用してはなりません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-697">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span></span> <span data-ttu-id="ba60d-698">正しく実装されていないカスタム キャッシュの検証コントロールを使用すると、この例外が発生する場合があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-698">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="ba60d-699"><see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-699"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="ba60d-700">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-700">-or-</span></span> 
<span data-ttu-id="ba60d-701">要求のタイムアウト時間が経過しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-701">The time-out period for the request expired.</span></span>  
  
<span data-ttu-id="ba60d-702">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-702">-or-</span></span> 
<span data-ttu-id="ba60d-703">この要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-703">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba60d-704">.NET Compact Framework アプリケーションでコンテンツの長さが 0 の要求ストリームが取得されず、正しく閉じられませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-704">In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</span></span> <span data-ttu-id="ba60d-705">コンテンツの長さが 0 の要求の処理の詳細については、「[.NET Compact Framework のネットワーク プログラミング](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/1afx2b0f(v=vs.90))」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-705">For more information about handling zero content length requests, see [Network Programming in the .NET Compact Framework](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/1afx2b0f(v=vs.90)).</span></span></exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md"><span data-ttu-id="ba60d-706">DefaultProxy 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="ba60d-706">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetRequestStream (out System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetRequestStream([out] class System.Net.TransportContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequestStream (ByRef context As TransportContext) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetRequestStream([Runtime::InteropServices::Out] System::Net::TransportContext ^ % context);" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : TransportContext -&gt; System.IO.Stream" Usage="httpWebRequest.GetRequestStream context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Net.TransportContext" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ba60d-707"><see cref="T:System.Net.TransportContext" /> の <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-707">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</span></span></param>
        <summary><span data-ttu-id="ba60d-708">要求データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトを取得し、そのストリームに関連付けられている <see cref="T:System.Net.TransportContext" /> を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-708">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data and outputs the <see cref="T:System.Net.TransportContext" /> associated with the stream.</span></span></summary>
        <returns><span data-ttu-id="ba60d-709">要求データを書き込むために使用する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-709">A <see cref="T:System.IO.Stream" /> to use to write request data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-710"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドは、<xref:System.Net.HttpWebRequest> のデータを送信するために使用するストリームを返し、ストリームに関連付けられている <xref:System.Net.TransportContext> を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-710">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a stream to use to send data for the <xref:System.Net.HttpWebRequest> and outputs the <xref:System.Net.TransportContext> associated with the stream.</span></span> <span data-ttu-id="ba60d-711"><xref:System.IO.Stream> オブジェクトが返された後、<xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> メソッドを使用して、<xref:System.Net.HttpWebRequest> でデータを送信できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-711">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba60d-712">拡張保護で統合 Windows 認証を使用する一部のアプリケーションでは、基になる TLS チャネルからチャネルバインドトークン (CBT) を取得するために、<xref:System.Net.HttpWebRequest> によって使用されるトランスポート層に対してクエリを実行できる必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-712">Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <xref:System.Net.HttpWebRequest> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</span></span> <span data-ttu-id="ba60d-713"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドは、要求本文 (`POST` と `PUT` 要求) を持つ HTTP メソッドのこの情報へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-713">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method provides access to this information for HTTP methods which have a request body (`POST` and `PUT` requests).</span></span> <span data-ttu-id="ba60d-714">これは、アプリケーションが独自の認証を実装しており、CBT へのアクセスが必要な場合にのみ必要です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-714">This is only needed if the application is implementing its own authentication and needs access to the CBT.</span></span>  
  
 <span data-ttu-id="ba60d-715">アプリケーションで <xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティの値を設定する必要がある場合は、ストリームを取得する前にこれを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-715">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream.</span></span>  
  
 <span data-ttu-id="ba60d-716">ストリームを閉じて再利用するために接続を解放するには、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-716">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="ba60d-717">ストリームを閉じないと、アプリケーションの接続が切断されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-717">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-718">アプリケーションでは、特定の要求に対して同期メソッドと非同期メソッドを混在させることはできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-718">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ba60d-719"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドを呼び出す場合は、<xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドを使用して応答を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-719">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-720">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-720">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-721">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-721">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="ba60d-722"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドが <see cref="T:System.IO.Stream" /> を取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba60d-722">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method was unable to obtain the <see cref="T:System.IO.Stream" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-723"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドが複数回呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-723">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method is called more than once.</span></span>  
  
<span data-ttu-id="ba60d-724">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-724">-or-</span></span> 
 <span data-ttu-id="ba60d-725"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-725"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba60d-726">要求キャッシュの検証コントロールは、この要求に対する応答がキャッシュから提供されることを示していますが、データを書き込む要求ではキャッシュを使用してはなりません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-726">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span></span> <span data-ttu-id="ba60d-727">正しく実装されていないカスタム キャッシュの検証コントロールを使用すると、この例外が発生する場合があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-727">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="ba60d-728"><see cref="P:System.Net.HttpWebRequest.Method" /> プロパティは GET または HEAD です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-728">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span></span>  
  
<span data-ttu-id="ba60d-729">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-729">-or-</span></span> 
 <span data-ttu-id="ba60d-730"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-730"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="ba60d-731"><see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-731"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="ba60d-732">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-732">-or-</span></span> 
<span data-ttu-id="ba60d-733">要求のタイムアウト時間が経過しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-733">The time-out period for the request expired.</span></span>  
  
<span data-ttu-id="ba60d-734">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-734">-or-</span></span> 
<span data-ttu-id="ba60d-735">この要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-735">An error occurred while processing the request.</span></span></exception>
        <altmember cref="T:System.Net.TransportContext" />
        <altmember cref="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ba60d-736">統合 Windows 認証と拡張保護</span><span class="sxs-lookup"><span data-stu-id="ba60d-736">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="httpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba60d-737">インターネット リソースからの応答を返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-737">Returns a response from an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="ba60d-738">インターネット リソースからの応答を格納している <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-738">A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-739"><xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドは、インターネットリソースからの応答を格納する <xref:System.Net.WebResponse> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-739">The <xref:System.Net.HttpWebRequest.GetResponse%2A> method returns a <xref:System.Net.WebResponse> object that contains the response from the Internet resource.</span></span> <span data-ttu-id="ba60d-740">返される実際のインスタンスは <xref:System.Net.HttpWebResponse>であり、そのクラスに型キャストして、HTTP 固有のプロパティにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-740">The actual instance returned is an <xref:System.Net.HttpWebResponse>, and can be typecast to that class to access HTTP-specific properties.</span></span>  
  
 <span data-ttu-id="ba60d-741"><xref:System.Net.ProtocolViolationException> は、<xref:System.Net.HttpWebRequest> クラスに設定されたプロパティが競合している場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-741">A <xref:System.Net.ProtocolViolationException> is thrown in several cases when the properties set on the <xref:System.Net.HttpWebRequest> class are conflicting.</span></span> <span data-ttu-id="ba60d-742">この例外は、アプリケーションが <xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティと <xref:System.Net.HttpWebRequest.SendChunked%2A> プロパティを `true`に設定し、HTTP GET 要求を送信した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-742">This exception occurs if an application sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property and the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`, and then sends an HTTP GET request.</span></span> <span data-ttu-id="ba60d-743">この例外は、HTTP 1.0 プロトコルのみをサポートするサーバーにアプリケーションがチャンクを送信しようとした場合に発生します。これはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-743">This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</span></span> <span data-ttu-id="ba60d-744">この例外が発生するのは、アプリケーションが <xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティを設定せずにデータを送信しようとした場合、またはバッファリングが無効になっているときに <xref:System.Net.HttpWebRequest.SendChunked%2A> が `false`、および keepalive 接続 (<xref:System.Net.HttpWebRequest.KeepAlive%2A> プロパティが `true`) である場合です`.`</span><span class="sxs-lookup"><span data-stu-id="ba60d-744">This exception occurs if an application tries to send data without setting the <xref:System.Net.HttpWebRequest.ContentLength%2A> property or the <xref:System.Net.HttpWebRequest.SendChunked%2A> is `false` when buffering is disabled and on a keepalive connection (the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`)`.`</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ba60d-745">ストリームを閉じて接続を解放するには、<xref:System.Net.HttpWebResponse.Close%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-745">You must call the <xref:System.Net.HttpWebResponse.Close%2A> method to close the stream and release the connection.</span></span> <span data-ttu-id="ba60d-746">そうしないと、アプリケーションの接続が不足する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-746">Failure to do so may cause your application to run out of connections.</span></span>  
  
 <span data-ttu-id="ba60d-747">POST メソッドを使用する場合は、要求ストリームを取得し、ポストされるデータを書き込み、ストリームを閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-747">When using the POST method, you must get the request stream, write the data to be posted, and close the stream.</span></span> <span data-ttu-id="ba60d-748">このメソッドは、コンテンツの投稿を待機しています。タイムアウトが設定されておらず、コンテンツを提供しない場合は、呼び出し元のスレッドが無期限にブロックされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-748">This method blocks waiting for content to post; if there is no time-out set and you do not provide content, the calling thread blocks indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-749"><xref:System.Net.HttpWebRequest.GetResponse%2A> を複数回呼び出すと、同じ応答オブジェクトが返されます。要求は再発行されません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-749">Multiple calls to <xref:System.Net.HttpWebRequest.GetResponse%2A> return the same response object; the request is not reissued.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-750">アプリケーションでは、特定の要求に対して同期メソッドと非同期メソッドを混在させることはできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-750">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ba60d-751"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドを呼び出す場合は、<xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドを使用して応答を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-751">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-752"><xref:System.Net.WebException> がスローされた場合は、例外の <xref:System.Net.WebException.Response%2A> と <xref:System.Net.WebException.Status%2A> のプロパティを使用して、サーバーからの応答を確認します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-752">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-753">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-753">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ba60d-754">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-754">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-755">セキュリティ上の理由から、cookie は既定で無効になっています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-755">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="ba60d-756">Cookie を使用する場合は、<xref:System.Net.HttpWebRequest.CookieContainer%2A> プロパティを使用して cookie を有効にします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-756">If you wish to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-757">次のコード例では、要求に対する応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-757">The following code example gets the response for a request.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-758">前回の <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> への呼び出しでストリームが既に使用中です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-758">The stream is already in use by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span>  
  
<span data-ttu-id="ba60d-759">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-759">-or-</span></span> 
 <span data-ttu-id="ba60d-760"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-760"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="ba60d-761"><see cref="P:System.Net.HttpWebRequest.Method" /> が GET または HEAD で、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が 0 以上であるか <see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-761"><see cref="P:System.Net.HttpWebRequest.Method" /> is GET or HEAD, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater or equal to zero or <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="ba60d-762">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-762">-or-</span></span> 
 <span data-ttu-id="ba60d-763"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-763"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span>  
  
<span data-ttu-id="ba60d-764">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-764">-or-</span></span> 
<span data-ttu-id="ba60d-765"><see cref="T:System.Net.HttpWebRequest" /> にはエンティティ本体がありますが、<see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドを呼び出さずに <see cref="M:System.Net.HttpWebRequest.GetResponse" /> メソッドが呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-765">The <see cref="T:System.Net.HttpWebRequest" /> has an entity body but the <see cref="M:System.Net.HttpWebRequest.GetResponse" /> method is called without calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method.</span></span>  
  
<span data-ttu-id="ba60d-766">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-766">-or-</span></span> 
<span data-ttu-id="ba60d-767"><see cref="P:System.Net.HttpWebRequest.ContentLength" /> が 0 よりも大きい値に設定されていますが、アプリケーションは保証されたデータをすべては書き込みません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-767">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero, but the application does not write all of the promised data.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ba60d-768">要求のキャッシュ検証コントロールで、この要求の応答がキャッシュから取得できることが示されましたが、この要求にはサーバーに送信するデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-768">The request cache validator indicated that the response for this request can be served from the cache; however, this request includes data to be sent to the server.</span></span> <span data-ttu-id="ba60d-769">データを送信する要求ではキャッシュは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-769">Requests that send data must not use the cache.</span></span> <span data-ttu-id="ba60d-770">正しく実装されていないカスタム キャッシュの検証コントロールを使用すると、この例外が発生する場合があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-770">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="ba60d-771"><see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-771"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="ba60d-772">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-772">-or-</span></span> 
<span data-ttu-id="ba60d-773">要求のタイムアウト時間が経過しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-773">The time-out period for the request expired.</span></span>  
  
<span data-ttu-id="ba60d-774">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-774">-or-</span></span> 
<span data-ttu-id="ba60d-775">この要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-775">An error occurred while processing the request.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md"><span data-ttu-id="ba60d-776">DefaultProxy 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="ba60d-776">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HaveResponse">
      <MemberSignature Language="C#" Value="public virtual bool HaveResponse { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HaveResponse" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.HaveResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HaveResponse As Boolean" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HaveResponse { bool get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.HaveResponse : bool" Usage="System.Net.HttpWebRequest.HaveResponse" />
      <MemberSignature Language="C#" Value="public bool HaveResponse { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HaveResponse As Boolean" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HaveResponse { bool get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-777">インターネット リソースから応答が受信されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-777">Gets a value that indicates whether a response has been received from an Internet resource.</span></span></summary>
        <value><span data-ttu-id="ba60d-778">応答を受信した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-778"><see langword="true" /> if a response has been received; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba60d-779">次のコード例では、<xref:System.Net.HttpWebRequest.HaveResponse%2A> プロパティを調べて、インターネットリソースから応答が受信されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-779">The following code example checks the <xref:System.Net.HttpWebRequest.HaveResponse%2A> property to determine if a response has been received from an Internet resource.</span></span>  
  
 [!code-cpp[Httpwebrequest_HaveResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/CPP/httpwebrequest_haveresponse.cpp#1)]
 [!code-csharp[Httpwebrequest_HaveResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/CS/httpwebrequest_haveresponse.cs#1)]
 [!code-vb[Httpwebrequest_HaveResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/VB/httpwebrequest_haveresponse.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.HttpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-780">HTTP ヘッダーを構成する名前と値のペアのコレクションを指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-780">Specifies a collection of the name/value pairs that make up the HTTP headers.</span></span></summary>
        <value><span data-ttu-id="ba60d-781">HTTP 要求のヘッダーを構成する名前と値のペアを格納している <see cref="T:System.Net.WebHeaderCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-781">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the name/value pairs that make up the headers for the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-782"><xref:System.Net.HttpWebRequest.Headers%2A> コレクションには、要求に関連付けられているプロトコルヘッダーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-782">The <xref:System.Net.HttpWebRequest.Headers%2A> collection contains the protocol headers associated with the request.</span></span> <span data-ttu-id="ba60d-783">次の表に、<xref:System.Net.HttpWebRequest.Headers%2A> コレクションに格納されていないが、システムによって設定されるか、プロパティまたはメソッドによって設定される HTTP ヘッダーを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-783">The following table lists the HTTP headers that are not stored in the <xref:System.Net.HttpWebRequest.Headers%2A> collection but are either set by the system or set by properties or methods.</span></span>  
  
|<span data-ttu-id="ba60d-784">Header</span><span class="sxs-lookup"><span data-stu-id="ba60d-784">Header</span></span>|<span data-ttu-id="ba60d-785">設定者</span><span class="sxs-lookup"><span data-stu-id="ba60d-785">Set by</span></span>|  
|------------|------------|  
|<span data-ttu-id="ba60d-786">Accept</span><span class="sxs-lookup"><span data-stu-id="ba60d-786">Accept</span></span>|<span data-ttu-id="ba60d-787"><xref:System.Net.HttpWebRequest.Accept%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-787">Set by the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-788">Connection</span><span class="sxs-lookup"><span data-stu-id="ba60d-788">Connection</span></span>|<span data-ttu-id="ba60d-789"><xref:System.Net.HttpWebRequest.Connection%2A> プロパティと <xref:System.Net.HttpWebRequest.KeepAlive%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-789">Set by the <xref:System.Net.HttpWebRequest.Connection%2A> property and <xref:System.Net.HttpWebRequest.KeepAlive%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-790">ContentLength</span><span class="sxs-lookup"><span data-stu-id="ba60d-790">Content-Length</span></span>|<span data-ttu-id="ba60d-791"><xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-791">Set by the <xref:System.Net.HttpWebRequest.ContentLength%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-792">Content-Type</span><span class="sxs-lookup"><span data-stu-id="ba60d-792">Content-Type</span></span>|<span data-ttu-id="ba60d-793"><xref:System.Net.HttpWebRequest.ContentType%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-793">Set by the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-794">Expect</span><span class="sxs-lookup"><span data-stu-id="ba60d-794">Expect</span></span>|<span data-ttu-id="ba60d-795"><xref:System.Net.HttpWebRequest.Expect%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-795">Set by the <xref:System.Net.HttpWebRequest.Expect%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-796">Date</span><span class="sxs-lookup"><span data-stu-id="ba60d-796">Date</span></span>|<span data-ttu-id="ba60d-797"><xref:System.Net.HttpWebRequest.Date%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-797">Set by the <xref:System.Net.HttpWebRequest.Date%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-798">Host</span><span class="sxs-lookup"><span data-stu-id="ba60d-798">Host</span></span>|<span data-ttu-id="ba60d-799"><xref:System.Net.HttpWebRequest.Host%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-799">Set by the <xref:System.Net.HttpWebRequest.Host%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-800">If-Modified-Since</span><span class="sxs-lookup"><span data-stu-id="ba60d-800">If-Modified-Since</span></span>|<span data-ttu-id="ba60d-801"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-801">Set by the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-802">範囲</span><span class="sxs-lookup"><span data-stu-id="ba60d-802">Range</span></span>|<span data-ttu-id="ba60d-803"><xref:System.Net.HttpWebRequest.AddRange%2A> メソッドによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-803">Set by the <xref:System.Net.HttpWebRequest.AddRange%2A> method.</span></span>|  
|<span data-ttu-id="ba60d-804">Referer</span><span class="sxs-lookup"><span data-stu-id="ba60d-804">Referer</span></span>|<span data-ttu-id="ba60d-805"><xref:System.Net.HttpWebRequest.Referer%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-805">Set by the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>|  
|<span data-ttu-id="ba60d-806">Transfer-Encoding</span><span class="sxs-lookup"><span data-stu-id="ba60d-806">Transfer-Encoding</span></span>|<span data-ttu-id="ba60d-807"><xref:System.Net.HttpWebRequest.TransferEncoding%2A> プロパティによって設定されます (<xref:System.Net.HttpWebRequest.SendChunked%2A> プロパティは true である必要があります)。</span><span class="sxs-lookup"><span data-stu-id="ba60d-807">Set by the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property (the <xref:System.Net.HttpWebRequest.SendChunked%2A> property must be true).</span></span>|  
|<span data-ttu-id="ba60d-808">User-Agent</span><span class="sxs-lookup"><span data-stu-id="ba60d-808">User-Agent</span></span>|<span data-ttu-id="ba60d-809"><xref:System.Net.HttpWebRequest.UserAgent%2A> プロパティによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-809">Set by the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>|  
  
 <span data-ttu-id="ba60d-810">これらの保護されたヘッダーのいずれかを設定しようとすると、<xref:System.Net.WebHeaderCollection.Add%2A> メソッドによって <xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-810">The <xref:System.Net.WebHeaderCollection.Add%2A> method throws an <xref:System.ArgumentException> if you try to set one of these protected headers.</span></span>  
  
 <span data-ttu-id="ba60d-811"><xref:System.Net.HttpWebRequest.GetRequestStream%2A>、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.HttpWebRequest.GetResponse%2A>、または <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドを呼び出すことによって要求が開始された後に <xref:System.Net.HttpWebRequest.Headers%2A> プロパティを変更すると、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-811">Changing the <xref:System.Net.HttpWebRequest.Headers%2A> property after the request has been started by calling <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="ba60d-812">Web サーバーとキャッシュが変更されたり、Web 要求にヘッダーが追加されたりする可能性があるため、ヘッダー値が変更されないことを想定しないでください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-812">You should not assume that the header values will remain unchanged, because Web servers and caches may change or add headers to a Web request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-813">次のコード例では、<xref:System.Net.HttpWebRequest.Headers%2A> プロパティを使用して、HTTP ヘッダーの名前と値のペアをコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-813">The following code example uses the <xref:System.Net.HttpWebRequest.Headers%2A> property to print the HTTP header name/value pairs to the console.</span></span>  
  
 [!code-cpp[HttpWebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Headers/CPP/httpwebrequest_headers.cpp#1)]
 [!code-csharp[HttpWebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Headers/CS/httpwebrequest_headers.cs#1)]
 [!code-vb[HttpWebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Headers/VB/httpwebrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-814"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" />、または <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> メソッドを呼び出すことにより要求が開始されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-814">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.HttpWebRequest.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-815">要求 URI に依存しない HTTP 要求で使用する Host ヘッダー値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-815">Gets or sets the Host header value to use in an HTTP request independent from the request URI.</span></span></summary>
        <value><span data-ttu-id="ba60d-816">HTTP 要求の Host ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-816">The Host header value in the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-817"><xref:System.Net.HttpWebRequest.Host%2A> プロパティを使用して、要求 URI とは独立した HTTP 要求で使用するホストヘッダー値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-817">The <xref:System.Net.HttpWebRequest.Host%2A> property can be used to set the Host header value to use in an HTTP request independent from the request URI.</span></span> <span data-ttu-id="ba60d-818"><xref:System.Net.HttpWebRequest.Host%2A> プロパティは、ホスト名とオプションのポート番号で構成できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-818">The <xref:System.Net.HttpWebRequest.Host%2A> property can consist of a hostname and an optional port number.</span></span> <span data-ttu-id="ba60d-819">ポート情報のないホストヘッダーは、要求されたサービスの既定のポート (HTTP URL の場合はポート80など) を意味します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-819">A Host header without port information implies the default port for the service requested (port 80 for an HTTP URL, for example).</span></span>  
  
 <span data-ttu-id="ba60d-820">ホストとポートを指定する形式は、IETF によって発行された RFC2616 のセクション14.23 の規則に従う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-820">The format for specifying a host and port must follow the rules in section 14.23 of RFC2616 published by the IETF.</span></span> <span data-ttu-id="ba60d-821">8080のポートを指定するこれらの要件に準拠する例として、<xref:System.Net.HttpWebRequest.Host%2A> プロパティの値を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-821">An example complying with these requirements that specifies a port of 8080 would be the following value for the <xref:System.Net.HttpWebRequest.Host%2A> property:</span></span>  
  
 `www.contoso.com:8080`  
  
 <span data-ttu-id="ba60d-822"><xref:System.Net.HttpWebRequest.Host%2A> プロパティを使用してカスタムホストヘッダー値を明示的に指定すると、領域のキャッシュ、cookie、および認証にも影響します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-822">Using the <xref:System.Net.HttpWebRequest.Host%2A> property to explicitly specify a custom Host header value also affects areas caching, cookies, and authentication.</span></span> <span data-ttu-id="ba60d-823">アプリケーションが特定の URI プレフィックスの資格情報を提供する場合、アプリケーションは URI 内の対象サーバーではなく、ホストヘッダーの値を含む URI を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-823">When an application provides credentials for a specific URI prefix, the applications needs to make sure to use the URI containing the value of the Host header, not the target server in the URI.</span></span> <span data-ttu-id="ba60d-824">リソースをキャッシュするときに使用されるキーは、要求 URI ではなくホストヘッダー値を使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-824">The key used when caching resources, uses the Host header value rather than the request URI.</span></span> <span data-ttu-id="ba60d-825">Cookie は <xref:System.Net.CookieContainer> に格納され、サーバーのドメイン名で論理的にグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-825">Cookies are stored in a <xref:System.Net.CookieContainer> and logically grouped by the server domain name.</span></span> <span data-ttu-id="ba60d-826">アプリケーションでホストヘッダーが指定されている場合、この値はドメインとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-826">If the application specifies a Host header, then this value will be used as domain.</span></span>  
  
 <span data-ttu-id="ba60d-827"><xref:System.Net.HttpWebRequest.Host%2A> プロパティが設定されていない場合、HTTP 要求で使用するホストヘッダー値は、要求 URI に基づいています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-827">If the <xref:System.Net.HttpWebRequest.Host%2A> property is not set, then the Host header value to use in an HTTP request is based on the request URI.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-828">Host ヘッダーを <see langword="null" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-828">The Host header cannot be set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-829">Host ヘッダーに無効な値を設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-829">The Host header cannot be set to an invalid value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-830">Host ヘッダーは、<see cref="T:System.Net.HttpWebRequest" /> の送信が既に開始された後には設定できません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-830">The Host header cannot be set after the <see cref="T:System.Net.HttpWebRequest" /> has already started to be sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IfModifiedSince">
      <MemberSignature Language="C#" Value="public DateTime IfModifiedSince { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IfModifiedSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.IfModifiedSince" />
      <MemberSignature Language="VB.NET" Value="Public Property IfModifiedSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IfModifiedSince { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.IfModifiedSince : DateTime with get, set" Usage="System.Net.HttpWebRequest.IfModifiedSince" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-831"><c>If-Modified-Since</c> HTTP ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-831">Gets or sets the value of the <c>If-Modified-Since</c> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-832"><see langword="If-Modified-Since" /> HTTP ヘッダーの内容を格納する <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-832">A <see cref="T:System.DateTime" /> that contains the contents of the <see langword="If-Modified-Since" /> HTTP header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-833">`If-Modified-Since` ヘッダーが `null`場合、戻り値は <xref:System.DateTime.MinValue?displayProperty=nameWithType>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-833">If the `If-Modified-Since` header is `null`, then the return value will be set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba60d-834"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティは、標準の <xref:System.DateTime?displayProperty=nameWithType> オブジェクトであり、<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>、または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>の <xref:System.DateTimeKind?displayProperty=nameWithType> フィールドを含むことができます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-834">The <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is a standard <xref:System.DateTime?displayProperty=nameWithType> object and can contain a <xref:System.DateTimeKind?displayProperty=nameWithType> field of <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba60d-835"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティを使用する場合は、任意の種類の時刻を設定できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-835">Any kind of time can be set when using the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span> <span data-ttu-id="ba60d-836"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> が設定または取得された場合、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティは <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (ローカル時刻) と見なされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-836">If <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> is set or retrieved, the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is assumed to be <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (local time).</span></span>  
  
 <span data-ttu-id="ba60d-837"><xref:System.Net> 名前空間のクラスは常に、GMT (Utc) 形式を使用した標準形式での転送中に、ネットワークの <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-837">The classes in the <xref:System.Net> namespace always write it out the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property on the wire during transmission in standard form using GMT (Utc) format.</span></span>  
  
 <span data-ttu-id="ba60d-838"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティが <xref:System.DateTime.MinValue?displayProperty=nameWithType>に設定されている場合、`If-Modified-Since` HTTP ヘッダーは <xref:System.Net.HttpWebRequest.Headers%2A> プロパティと <xref:System.Net.WebHeaderCollection>から削除されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-838">If the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>, then the `If-Modified-Since` HTTP header is removed from the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
 <span data-ttu-id="ba60d-839"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティが <xref:System.DateTime.MinValue?displayProperty=nameWithType>の場合、`If-Modified-Since` HTTP ヘッダーが <xref:System.Net.HttpWebRequest.Headers%2A> プロパティと <xref:System.Net.WebHeaderCollection>に含まれていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-839">If the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is <xref:System.DateTime.MinValue?displayProperty=nameWithType>, this indicates that the `If-Modified-Since` HTTP header is not included in the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-840">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-840">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ba60d-841">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-841">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
 <span data-ttu-id="ba60d-842"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティが設定されていて、304 (変更されていない) 状態コードが返された場合、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>、<xref:System.Net.HttpWebRequest.GetResponse%2A>、および <xref:System.Net.HttpWebRequest.EndGetResponse%2A> メソッドによって <xref:System.Net.WebException?displayProperty=nameWithType> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-842">If the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is set and 304 (Not Modified) status code is returned, then a <xref:System.Net.WebException?displayProperty=nameWithType> will be thrown by the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, and <xref:System.Net.HttpWebRequest.EndGetResponse%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-843">次のコード例では、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A> プロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-843">The following code example checks the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/CPP/httpwebrequest_ifmodifiedsince.cpp#1)]
 [!code-csharp[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/CS/httpwebrequest_ifmodifiedsince.cs#1)]
 [!code-vb[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/VB/httpwebrequest_ifmodifiedsince.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.HttpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-844">インターネット リソースへの永続的な接続を行うかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-844">Gets or sets a value that indicates whether to make a persistent connection to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="ba60d-845">インターネット リソースへの要求に、値 Keep-alive を持つ <see langword="true" /> HTTP ヘッダーを格納する場合は <see langword="Connection" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-845"><see langword="true" /> if the request to the Internet resource should contain a <see langword="Connection" /> HTTP header with the value Keep-alive; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba60d-846">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-846">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-847">値 Keep-alive で `Connection` HTTP ヘッダーを送信するには、このプロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-847">Set this property to `true` to send a `Connection` HTTP header with the value Keep-alive.</span></span> <span data-ttu-id="ba60d-848">アプリケーションでは、<xref:System.Net.HttpWebRequest.KeepAlive%2A> を使用して、永続的な接続の優先順位を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-848">An application uses <xref:System.Net.HttpWebRequest.KeepAlive%2A> to indicate a preference for persistent connections.</span></span> <span data-ttu-id="ba60d-849"><xref:System.Net.HttpWebRequest.KeepAlive%2A> プロパティが `true`場合、アプリケーションはそれらをサポートするサーバーへの永続的な接続を行います。</span><span class="sxs-lookup"><span data-stu-id="ba60d-849">When the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`, the application makes persistent connections to the servers that support them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-850">HTTP/1.1 を使用する場合、キープアライブは既定でオンになっています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-850">When using HTTP/1.1, Keep-Alive is on by default.</span></span> <span data-ttu-id="ba60d-851"><xref:System.Net.HttpWebRequest.KeepAlive%2A> を `false` に設定すると、サーバーに `Connection: Close` ヘッダーが送信される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-851">Setting <xref:System.Net.HttpWebRequest.KeepAlive%2A> to `false` may result in sending a `Connection: Close` header to the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-852">次のコード例では、インターネットリソースとの永続的な接続が確立されないように、<xref:System.Net.HttpWebRequest.KeepAlive%2A> プロパティを `false` に設定しています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-852">The following code example sets the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property to `false` to avoid establishing a persistent connection with the Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_Connection#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Connection/CPP/httpwebrequest_connection.cpp#1)]
 [!code-csharp[HttpWebRequest_Connection#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Connection/CS/httpwebrequest_connection.cs#1)]
 [!code-vb[HttpWebRequest_Connection#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Connection/VB/httpwebrequest_connection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaximumAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumAutomaticRedirections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumAutomaticRedirections : int with get, set" Usage="System.Net.HttpWebRequest.MaximumAutomaticRedirections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-853">要求によって実行されるリダイレクトの最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-853">Gets or sets the maximum number of redirects that the request follows.</span></span></summary>
        <value><span data-ttu-id="ba60d-854">要求によって実行されるリダイレクト応答の最大数。</span><span class="sxs-lookup"><span data-stu-id="ba60d-854">The maximum number of redirection responses that the request follows.</span></span> <span data-ttu-id="ba60d-855">既定値は 50 です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-855">The default value is 50.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-856"><xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> プロパティは、<xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> プロパティが `true`場合に、要求に対してリダイレクトの最大数を設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-856">The <xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-857">次のコード例では、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-857">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-858">設定値が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-858">The value is set to 0 or less.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaximumResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumResponseHeadersLength : int with get, set" Usage="System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Use this")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-859">応答ヘッダーの許容最大長を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-859">Gets or sets the maximum allowed length of the response headers.</span></span></summary>
        <value><span data-ttu-id="ba60d-860">応答ヘッダーの長さ (KB 単位、1 KB = 1024 バイト)。</span><span class="sxs-lookup"><span data-stu-id="ba60d-860">The length, in kilobytes (1024 bytes), of the response headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-861">応答ヘッダーの長さには、応答ステータス行、および HTTP プロトコルの一部として受信される追加の制御文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-861">The length of the response header includes the response status line and any extra control characters that are received as part of HTTP protocol.</span></span> <span data-ttu-id="ba60d-862">値-1 は、応答ヘッダーに制限が適用されないことを意味します。値0は、すべての要求が失敗することを意味します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-862">A value of -1 means no limit is imposed on the response headers; a value of 0 means that all requests fail.</span></span>  
  
 <span data-ttu-id="ba60d-863"><xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> プロパティが明示的に設定されていない場合は、<xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A> プロパティの値が既定値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-863">If the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property is not explicitly set, it defaults to the value of the <xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A> property.</span></span>  
  
 <span data-ttu-id="ba60d-864">受信した応答ヘッダーの長さが <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> プロパティの値を超えた場合、<xref:System.Net.HttpWebRequest.EndGetResponse%2A> または <xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドは、<xref:System.Net.WebException.Status%2A> プロパティが <xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded>に設定された <xref:System.Net.WebException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-864">If the length of the response header received exceeds the value of the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property, the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> methods will throw a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-865">次のコード例では、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-865">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-866">プロパティは、要求が送信された後に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-866">The property is set after the request has already been submitted.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-867">値が 0 未満で、-1 と等しくありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-867">The value is less than 0 and is not equal to -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="System.Net.HttpWebRequest.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-868">要求のメディア タイプを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-868">Gets or sets the media type of the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-869">要求のメディア タイプ。</span><span class="sxs-lookup"><span data-stu-id="ba60d-869">The media type of the request.</span></span> <span data-ttu-id="ba60d-870">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-870">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-871"><xref:System.Net.HttpWebRequest.MediaType%2A> プロパティの値は、<xref:System.Net.HttpWebResponse.CharacterSet%2A> プロパティに影響します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-871">The value of the <xref:System.Net.HttpWebRequest.MediaType%2A> property affects the <xref:System.Net.HttpWebResponse.CharacterSet%2A> property.</span></span> <span data-ttu-id="ba60d-872">要求で <xref:System.Net.HttpWebRequest.MediaType%2A> を設定すると、対応するメディアの種類が、応答 `Content-type` HTTP ヘッダーで返される文字セットの一覧から選択されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-872">When you set the <xref:System.Net.HttpWebRequest.MediaType%2A> in the request, the corresponding media type is chosen from the list of character sets returned in the response `Content-type` HTTP header.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.HttpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-873">要求に対して使用するメソッドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-873">Gets or sets the method for the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-874">インターネット リソースと通信するために使用する要求メソッド。</span><span class="sxs-lookup"><span data-stu-id="ba60d-874">The request method to use to contact the Internet resource.</span></span> <span data-ttu-id="ba60d-875">既定値は GET です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-875">The default value is GET.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-876"><xref:System.Net.HttpWebRequest.Method%2A> プロパティは、GET、HEAD、POST、PUT、DELETE、TRACE、OPTIONS のいずれかの HTTP 1.1 プロトコル動詞に設定できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-876">The <xref:System.Net.HttpWebRequest.Method%2A> property can be set to any of the HTTP 1.1 protocol verbs: GET, HEAD, POST, PUT, DELETE, TRACE, or OPTIONS.</span></span>  
  
 <span data-ttu-id="ba60d-877"><xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティが-1 以外の値に設定されている場合、<xref:System.Net.HttpWebRequest.Method%2A> プロパティはデータをアップロードするプロトコルプロパティに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-877">If the <xref:System.Net.HttpWebRequest.ContentLength%2A> property is set to any value other than -1, the <xref:System.Net.HttpWebRequest.Method%2A> property must be set to a protocol property that uploads data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-878">次のコード例では、<xref:System.Net.HttpWebRequest.Method%2A> プロパティを POST に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-878">The following code example sets the <xref:System.Net.HttpWebRequest.Method%2A> property to POST.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-879">メソッドが提供されていません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-879">No method is supplied.</span></span>  
  
 <span data-ttu-id="ba60d-880">- または -</span><span class="sxs-lookup"><span data-stu-id="ba60d-880">-or-</span></span>  
  
 <span data-ttu-id="ba60d-881">メソッドの文字列に無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-881">The method string contains invalid characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pipelined">
      <MemberSignature Language="C#" Value="public bool Pipelined { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pipelined" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Pipelined" />
      <MemberSignature Language="VB.NET" Value="Public Property Pipelined As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pipelined { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Pipelined : bool with get, set" Usage="System.Net.HttpWebRequest.Pipelined" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-882">インターネット リソースへの要求をパイプライン処理するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-882">Gets or sets a value that indicates whether to pipeline the request to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="ba60d-883">要求をパイプライン処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-883"><see langword="true" /> if the request should be pipelined; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba60d-884">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-884">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-885">アプリケーションでは、<xref:System.Net.HttpWebRequest.Pipelined%2A> プロパティを使用して、パイプライン接続の優先順位を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-885">An application uses the <xref:System.Net.HttpWebRequest.Pipelined%2A> property to indicate a preference for pipelined connections.</span></span> <span data-ttu-id="ba60d-886"><xref:System.Net.HttpWebRequest.Pipelined%2A> が `true`されると、アプリケーションはそれらをサポートするサーバーにパイプライン接続を行います。</span><span class="sxs-lookup"><span data-stu-id="ba60d-886">When <xref:System.Net.HttpWebRequest.Pipelined%2A> is `true`, an application makes pipelined connections to the servers that support them.</span></span>  
  
 <span data-ttu-id="ba60d-887">パイプライン接続は、<xref:System.Net.HttpWebRequest.KeepAlive%2A> プロパティも `true`場合にのみ行われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-887">Pipelined connections are made only when the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is also `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-888">次のコード例では、<xref:System.Net.HttpWebRequest.Pipelined%2A> プロパティの値をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-888">The following code example prints the value of the <xref:System.Net.HttpWebRequest.Pipelined%2A> property to the console.</span></span>  
  
 [!code-cpp[HttpWebRequest_PipeLined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_PipeLined/CPP/httpwebrequest_pipelined.cpp#1)]
 [!code-csharp[HttpWebRequest_PipeLined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_PipeLined/CS/httpwebrequest_pipelined.cs#1)]
 [!code-vb[HttpWebRequest_PipeLined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_PipeLined/VB/httpwebrequest_pipelined.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.HttpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-889">要求で Authorization ヘッダーを送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-889">Gets or sets a value that indicates whether to send an Authorization header with the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-890">認証が行われた後で、要求と共に HTTP 認証ヘッダーを送信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-890"><see langword="true" /> to send an  HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba60d-891">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-891">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-892">特定の <xref:System.Uri> に対するクライアント要求が正常に認証されると、<xref:System.Net.HttpWebRequest.PreAuthenticate%2A> が `true`、資格情報が提供されると、各要求と共に、最後のスラッシュまでの特定の <xref:System.Uri> に一致するすべての <xref:System.Uri> に認証ヘッダーが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-892">After a client request to a specific <xref:System.Uri> is successfully authenticated, if <xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `true` and credentials are supplied, the Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span> <span data-ttu-id="ba60d-893">クライアント要求が、次を含む特定の <xref:System.Uri> に対して正常に認証された場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-893">So if the client request successfully authenticated to a specific <xref:System.Uri> that contains the following:</span></span>  
  
 `http://www.contoso.com/firstpath/`  
  
 <span data-ttu-id="ba60d-894">その後、事前認証の Authorization ヘッダーは、各要求と共に、次のいずれかの <xref:System.Uri> インスタンスに送信されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-894">Then the Authorization header for preauthentication is sent with each request to any of the following <xref:System.Uri> instances:</span></span>  
  
 `http://www.contoso.com/firstpath/`  
  
 `http://www.contoso.com/firstpath/default`  
  
 `http://www.contoso.com/firstpath/default.html`  
  
 `http://www.contoso.com/firstpath/sample.html`  
  
 <span data-ttu-id="ba60d-895">ただし、Authorization ヘッダーは、次のいずれかの <xref:System.Uri> インスタンスに要求と共に送信されることはありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-895">However, the Authorization header is not sent with requests to any of the following <xref:System.Uri> instances:</span></span>  
  
 `http://www.contoso.com/`  
  
 `http://www.contoso.com/firstpath`  
  
 `http://www.contoso.com/secondpath/`  
  
 <span data-ttu-id="ba60d-896">特定の <xref:System.Uri> に対するクライアント要求が正常に認証されなかった場合、要求では標準の認証手順が使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-896">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="ba60d-897">最初の要求を除き、<xref:System.Net.WebRequest.PreAuthenticate%2A> のプロパティは、サーバーによる要求が発生するのを待たずに、特定の <xref:System.Uri> に一致する <xref:System.Uri> に、後続の要求と共に認証情報を送信するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-897">With the exception of the first request, the <xref:System.Net.WebRequest.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 <span data-ttu-id="ba60d-898">クライアントとサーバーの間の次のダイアログは、このプロパティの効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-898">The following dialog between client and server illustrates the effect of this property.</span></span> <span data-ttu-id="ba60d-899">このダイアログでは、基本認証が使用されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-899">The dialog assumes that basic authentication is in use.</span></span>  
  
 <span data-ttu-id="ba60d-900"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> は `false`:</span><span class="sxs-lookup"><span data-stu-id="ba60d-900"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `false`:</span></span>  
  
 <span data-ttu-id="ba60d-901">クライアント: Url を取得する</span><span class="sxs-lookup"><span data-stu-id="ba60d-901">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="ba60d-902">サーバー: 401 WWW-認証の基本</span><span class="sxs-lookup"><span data-stu-id="ba60d-902">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="ba60d-903">クライアント: Authorization ヘッダーを使用して取得する</span><span class="sxs-lookup"><span data-stu-id="ba60d-903">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="ba60d-904">サーバー: 200 OK</span><span class="sxs-lookup"><span data-stu-id="ba60d-904">Server: 200 OK</span></span>  
  
 <span data-ttu-id="ba60d-905">クライアント: Url を取得する</span><span class="sxs-lookup"><span data-stu-id="ba60d-905">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="ba60d-906">サーバー: 401 WWW-認証の基本</span><span class="sxs-lookup"><span data-stu-id="ba60d-906">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="ba60d-907">クライアント: Authorization ヘッダーを使用して取得する</span><span class="sxs-lookup"><span data-stu-id="ba60d-907">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="ba60d-908">サーバー: 200 OK</span><span class="sxs-lookup"><span data-stu-id="ba60d-908">Server: 200 OK</span></span>  
  
 <span data-ttu-id="ba60d-909"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> は `true`:</span><span class="sxs-lookup"><span data-stu-id="ba60d-909"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `true`:</span></span>  
  
 <span data-ttu-id="ba60d-910">クライアント: Url を取得する</span><span class="sxs-lookup"><span data-stu-id="ba60d-910">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="ba60d-911">サーバー: 401 WWW-認証の基本</span><span class="sxs-lookup"><span data-stu-id="ba60d-911">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="ba60d-912">クライアント: Authorization ヘッダーを使用して取得する</span><span class="sxs-lookup"><span data-stu-id="ba60d-912">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="ba60d-913">サーバー: 200 OK</span><span class="sxs-lookup"><span data-stu-id="ba60d-913">Server: 200 OK</span></span>  
  
 <span data-ttu-id="ba60d-914">クライアント: 承認ヘッダーを含む Url を取得する</span><span class="sxs-lookup"><span data-stu-id="ba60d-914">Client: GET someUrl with Authorization headers</span></span>  
  
 <span data-ttu-id="ba60d-915">認証方式で事前認証がサポートされていない場合、このプロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-915">If the authentication scheme does not support preauthentication, the value of this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version with get, set" Usage="System.Net.HttpWebRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-916">要求に対して使用する HTTP バージョンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-916">Gets or sets the version of HTTP to use for the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-917">要求に対して使用する HTTP バージョン。</span><span class="sxs-lookup"><span data-stu-id="ba60d-917">The HTTP version to use for the request.</span></span> <span data-ttu-id="ba60d-918">既定値は、<see cref="F:System.Net.HttpVersion.Version11" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-918">The default is <see cref="F:System.Net.HttpVersion.Version11" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-919"><xref:System.Net.HttpWebRequest> クラスは、HTTP のバージョン1.0 および1.1 のみをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-919">The <xref:System.Net.HttpWebRequest> class supports only versions 1.0 and 1.1 of HTTP.</span></span> <span data-ttu-id="ba60d-920"><xref:System.Net.HttpWebRequest.ProtocolVersion%2A> を別のバージョンに設定すると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-920">Setting <xref:System.Net.HttpWebRequest.ProtocolVersion%2A> to a different version throws an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-921">現在の要求の HTTP バージョンを設定するには、<xref:System.Net.HttpVersion> クラスの <xref:System.Net.HttpVersion.Version10> および <xref:System.Net.HttpVersion.Version11> フィールドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-921">To set the HTTP version of the current request, use the <xref:System.Net.HttpVersion.Version10> and <xref:System.Net.HttpVersion.Version11> fields of the <xref:System.Net.HttpVersion> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-922">次のコード例では、<xref:System.Net.HttpWebRequest.ProtocolVersion%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-922">The following code example sets the <xref:System.Net.HttpWebRequest.ProtocolVersion%2A> Property.</span></span>  
  
 [!code-cpp[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/CPP/httpwebrequest_protocolversion.cpp#1)]
 [!code-csharp[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/CS/httpwebrequest_protocolversion.cs#1)]
 [!code-vb[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/VB/httpwebrequest_protocolversion.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-923">HTTP バージョンが 1.0 または 1.1 以外の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-923">The HTTP version is set to a value other than 1.0 or 1.1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.HttpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-924">要求に対して使用するプロキシ情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-924">Gets or sets proxy information for the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-925">要求に対するプロキシで使用する <see cref="T:System.Net.IWebProxy" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba60d-925">The <see cref="T:System.Net.IWebProxy" /> object to use to proxy the request.</span></span> <span data-ttu-id="ba60d-926">既定値は <see cref="P:System.Net.GlobalProxySelection.Select" /> プロパティを呼び出して設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-926">The default value is set by calling the <see cref="P:System.Net.GlobalProxySelection.Select" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-927"><xref:System.Net.HttpWebRequest.Proxy%2A> プロパティは、インターネットリソースへの要求を処理するために使用する <xref:System.Net.WebProxy> オブジェクトを識別します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-927">The <xref:System.Net.HttpWebRequest.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="ba60d-928">プロキシを使用しないことを指定するには、<xref:System.Net.HttpWebRequest.Proxy%2A> プロパティを <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> メソッドによって返されるプロキシインスタンスに設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-928">To specify that no proxy should be used, set the <xref:System.Net.HttpWebRequest.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba60d-929">ローカルコンピューターまたはアプリケーション構成ファイルで、既定のプロキシを使用するように指定できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-929">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="ba60d-930"><xref:System.Net.HttpWebRequest.Proxy%2A> プロパティが指定されている場合、<xref:System.Net.HttpWebRequest.Proxy%2A> プロパティのプロキシ設定がローカルコンピューターまたはアプリケーション構成ファイルより優先され、<xref:System.Net.HttpWebRequest> インスタンスは指定されたプロキシ設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-930">If the <xref:System.Net.HttpWebRequest.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.HttpWebRequest.Proxy%2A> property override the local computer or application config file and the <xref:System.Net.HttpWebRequest> instance will use the proxy settings specified.</span></span> <span data-ttu-id="ba60d-931">構成ファイルでプロキシが指定されておらず、<xref:System.Net.HttpWebRequest.Proxy%2A> プロパティが指定されていない場合、<xref:System.Net.HttpWebRequest> クラスは、ローカルコンピューター上の Internet Explorer から継承されたプロキシ設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-931">If no proxy is specified in a config file and the <xref:System.Net.HttpWebRequest.Proxy%2A> property is unspecified, the <xref:System.Net.HttpWebRequest> class uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="ba60d-932">Internet Explorer にプロキシ設定がない場合、要求はサーバーに直接送信されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-932">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="ba60d-933"><xref:System.Net.HttpWebRequest> クラスは、internet explorer から継承されたワイルドカード文字を使用してプロキシバイパスリストを解析します。バイパスリストは Internet Explorer によって直接解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-933">The <xref:System.Net.HttpWebRequest> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="ba60d-934">たとえば、<xref:System.Net.HttpWebRequest> クラスは、Internet Explorer から "nt.\*" という正規表現として "nt \*" のバイパスリストを解析します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-934">For example, the <xref:System.Net.HttpWebRequest> class will parse a bypass list of "nt\*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="ba60d-935">このため、"`http://nt.com`" の URL は、<xref:System.Net.HttpWebRequest> クラスおよび Internet Explorer を使用してプロキシをバイパスします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-935">So a URL of "`http://nt.com`" would bypass the proxy using the <xref:System.Net.HttpWebRequest> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="ba60d-936"><xref:System.Net.HttpWebRequest> クラスでは、ローカルプロキシバイパスがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-936">The <xref:System.Net.HttpWebRequest> class supports local proxy bypass.</span></span> <span data-ttu-id="ba60d-937">クラスは、次のいずれかの条件が満たされた場合に、宛先がローカルであると見なされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-937">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="ba60d-938">宛先には、フラット名が含まれています (URL にドットがありません)。</span><span class="sxs-lookup"><span data-stu-id="ba60d-938">The destination contains a flat name (no dots in the URL).</span></span>  
  
-   <span data-ttu-id="ba60d-939">宛先にループバックアドレス (<xref:System.Net.IPAddress.Loopback> または <xref:System.Net.IPAddress.IPv6Loopback>) が含まれているか、宛先にローカルコンピューターに割り当てられている <xref:System.Net.IPAddress> が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-939">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
-   <span data-ttu-id="ba60d-940">宛先のドメインサフィックスは、ローカルコンピューターのドメインサフィックス (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>) と一致します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-940">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 <span data-ttu-id="ba60d-941"><xref:System.Net.HttpWebRequest.GetRequestStream%2A>、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.HttpWebRequest.GetResponse%2A>、または <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドを呼び出すことによって要求が開始された後に <xref:System.Net.HttpWebRequest.Proxy%2A> プロパティを変更すると、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-941">Changing the <xref:System.Net.HttpWebRequest.Proxy%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="ba60d-942">プロキシ要素の詳細については、「 [\&lt; defaultProxy\&gt;」を参照してください。要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md)。</span><span class="sxs-lookup"><span data-stu-id="ba60d-942">For information on the proxy element see [\&lt;defaultProxy\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-943">次のコード例では、<xref:System.Net.HttpWebRequest.Proxy%2A> メソッドを使用して、要求のプロキシ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-943">The following code example uses the <xref:System.Net.HttpWebRequest.Proxy%2A> method to get the proxy information for the request.</span></span>  
  
 [!code-cpp[Httpwebrequest_proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Httpwebrequest_proxy/CPP/httpwebrequest_proxy.cpp#1)]
 [!code-csharp[Httpwebrequest_proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Httpwebrequest_proxy/CS/httpwebrequest_proxy.cs#1)]
 [!code-vb[Httpwebrequest_proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Httpwebrequest_proxy/VB/httpwebrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba60d-944"><see cref="P:System.Net.HttpWebRequest.Proxy" /> が <see langword="null" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-944"><see cref="P:System.Net.HttpWebRequest.Proxy" /> is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-945">要求が <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" />、または <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> の呼び出しにより既に開始されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-945">The request has been started by calling <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ba60d-946">呼び出し元には、要求された操作に対するアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-946">The caller does not have permission for the requested operation.</span></span></exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md"><span data-ttu-id="ba60d-947">DefaultProxy 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="ba60d-947">DefaultProxy Element (Network Settings)</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/configuring-internet-applications.md"><span data-ttu-id="ba60d-948">構成 (インターネット アプリケーションを)</span><span class="sxs-lookup"><span data-stu-id="ba60d-948">Configuring Internet Applications</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/proxy-configuration.md"><span data-ttu-id="ba60d-949">プロキシの構成</span><span class="sxs-lookup"><span data-stu-id="ba60d-949">Proxy Configuration</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/automatic-proxy-detection.md"><span data-ttu-id="ba60d-950">自動プロキシ検出</span><span class="sxs-lookup"><span data-stu-id="ba60d-950">Automatic Proxy Detection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.HttpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-951">ストリームへの書き込み時またはストリームからの読み取り時のタイムアウト (ミリ秒単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-951">Gets or sets a time-out in milliseconds when writing to or reading from a stream.</span></span></summary>
        <value><span data-ttu-id="ba60d-952">書き込みまたは読み取りがタイムアウトするまでのミリ秒数。既定値は30万ミリ秒 (5 分) です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-952">The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-953"><xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> プロパティは、<xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドによって返されるストリームに書き込むとき、または <xref:System.Net.HttpWebResponse.GetResponseStream%2A> メソッドによって返されるストリームから読み取るときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-953">The <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property is used when writing to the stream returned by the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.HttpWebResponse.GetResponseStream%2A> method.</span></span>  
  
 <span data-ttu-id="ba60d-954">具体的には、<xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> プロパティは、<xref:System.IO.Stream.Read%2A> メソッドのタイムアウトを制御します。これは、<xref:System.Net.HttpWebResponse.GetResponseStream%2A> メソッドによって返されるストリームを読み取るために使用されます。また、<xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドによって返されるストリームへの書き込みに使用される <xref:System.IO.Stream.Write%2A> メソッドに対しても使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-954">Specifically, the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.HttpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method.</span></span>  
  
 <span data-ttu-id="ba60d-955">要求の完了を待機する時間を指定するには、<xref:System.Net.HttpWebRequest.Timeout%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-955">To specify the amount of time to wait for the request to complete, use the <xref:System.Net.HttpWebRequest.Timeout%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-956"><xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> プロパティを設定する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-956">The following code example shows how to set the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property.</span></span>  
  
 [!code-csharp[Classic HttpWebRequest Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CS/source.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-957">要求は既に送信されています。</span><span class="sxs-lookup"><span data-stu-id="ba60d-957">The request has already been sent.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-958">セット操作に指定された値は 0 以下であり、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-958">The value specified for a set operation is less than or equal to zero and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /></span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Referer" />
      <MemberSignature Language="VB.NET" Value="Public Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Referer : string with get, set" Usage="System.Net.HttpWebRequest.Referer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-959"><see langword="Referer" /> HTTP ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-959">Gets or sets the value of the <see langword="Referer" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-960"><see langword="Referer" /> HTTP ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-960">The value of the <see langword="Referer" /> HTTP header.</span></span> <span data-ttu-id="ba60d-961">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-961">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-962"><xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> プロパティが `true`の場合、要求が別のサイトにリダイレクトされるときに、<xref:System.Net.HttpWebRequest.Referer%2A> プロパティが自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-962">If the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property is `true`, the <xref:System.Net.HttpWebRequest.Referer%2A> property is set automatically when the request is redirected to another site.</span></span>  
  
 <span data-ttu-id="ba60d-963">`Referer` HTTP ヘッダーをクリアするには、<xref:System.Net.HttpWebRequest.Referer%2A> プロパティを `null`に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-963">To clear the `Referer` HTTP header, set the <xref:System.Net.HttpWebRequest.Referer%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-964">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-964">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ba60d-965">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-965">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-966">次のコード例では、<xref:System.Net.HttpWebRequest.Referer%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-966">The following code example sets the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_Referer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Referer/CPP/httpwebrequest_referer.cpp#1)]
 [!code-csharp[HttpWebRequest_Referer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Referer/CS/httpwebrequest_referer.cs#1)]
 [!code-vb[HttpWebRequest_Referer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Referer/VB/httpwebrequest_referer.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.HttpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-967">要求の元の URI (Uniform Resource Identifier) を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-967">Gets the original Uniform Resource Identifier (URI) of the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-968"><see cref="M:System.Net.WebRequest.Create(System.String)" /> メソッドに渡されたインターネット リソースの URI を格納している <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-968">A <see cref="T:System.Uri" /> that contains the URI of the Internet resource passed to the <see cref="M:System.Net.WebRequest.Create(System.String)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-969"><xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>への呼び出しによって <xref:System.Net.HttpWebRequest> に渡される <xref:System.Uri> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba60d-969">The <xref:System.Uri> object passed to <xref:System.Net.HttpWebRequest> by the call to <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba60d-970">リダイレクトヘッダーに従っても、<xref:System.Net.HttpWebRequest.RequestUri%2A> プロパティは変更されません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-970">Following a redirection header does not change the <xref:System.Net.HttpWebRequest.RequestUri%2A> property.</span></span> <span data-ttu-id="ba60d-971">要求に応答した実際の URI を取得するには、<xref:System.Net.HttpWebRequest.Address%2A> プロパティを調べます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-971">To get the actual URI that responded to the request, examine the <xref:System.Net.HttpWebRequest.Address%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-972">次のコード例では、<xref:System.Net.HttpWebRequest> オブジェクト `req` が、要求を満たすために別の場所にリダイレクトされたかどうかを確認し、要求がリダイレクトされた場合に `true` するように `hasChanged` 変数の値を設定します。それ以外の場合、`hasChanged` は `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-972">The following code example checks to see if the <xref:System.Net.HttpWebRequest> object `req` was redirected to another location to fulfill the request, and sets the value of the `hasChanged` variable to `true` if the request was redirected; otherwise, `hasChanged` is set to `false`.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendChunked">
      <MemberSignature Language="C#" Value="public bool SendChunked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendChunked" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.SendChunked" />
      <MemberSignature Language="VB.NET" Value="Public Property SendChunked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendChunked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendChunked : bool with get, set" Usage="System.Net.HttpWebRequest.SendChunked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-973">インターネット リソースへセグメント単位でデータを送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-973">Gets or sets a value that indicates whether to send data in segments to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="ba60d-974">インターネット リソースへセグメント単位でデータを送信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-974"><see langword="true" /> to send data to the Internet resource in segments; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba60d-975">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-975">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-976"><xref:System.Net.HttpWebRequest.SendChunked%2A> が `true`されている場合、要求はセグメント内のインターネットリソースにデータを送信します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-976">When <xref:System.Net.HttpWebRequest.SendChunked%2A> is `true`, the request sends data to the Internet resource in segments.</span></span> <span data-ttu-id="ba60d-977">インターネットリソースはチャンクデータの受信をサポートしている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-977">The Internet resource must support receiving chunked data.</span></span>  
  
 <span data-ttu-id="ba60d-978"><xref:System.Net.HttpWebRequest.GetRequestStream%2A>、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.HttpWebRequest.GetResponse%2A>、または <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドを呼び出すことによって要求が開始された後に <xref:System.Net.HttpWebRequest.SendChunked%2A> プロパティを変更すると、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-978">Changing the <xref:System.Net.HttpWebRequest.SendChunked%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-979">次のコード例では、<xref:System.Net.HttpWebRequest.SendChunked%2A> プロパティを `true` に設定して、データをセグメント単位でインターネットリソースに送信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-979">The following code example sets the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true` so that data can be sent in segments to the Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_SendChunked#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_SendChunked/CPP/httpwebrequest_sendchunked.cpp#2)]
 [!code-csharp[HttpWebRequest_SendChunked#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_SendChunked/CS/httpwebrequest_sendchunked.cs#2)]
 [!code-vb[HttpWebRequest_SendChunked#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_SendChunked/VB/httpwebrequest_sendchunked.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-980"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" />、または <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> メソッドを呼び出すことにより要求が開始されました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-980">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::RemoteCertificateValidationCallback ^ ServerCertificateValidationCallback { System::Net::Security::RemoteCertificateValidationCallback ^ get(); void set(System::Net::Security::RemoteCertificateValidationCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateValidationCallback : System.Net.Security.RemoteCertificateValidationCallback with get, set" Usage="System.Net.HttpWebRequest.ServerCertificateValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-981">サーバー証明書を検証するコールバック関数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-981">Gets or sets a callback function to validate the server certificate.</span></span></summary>
        <value><span data-ttu-id="ba60d-982">サーバー証明書を検証するコールバック関数。</span><span class="sxs-lookup"><span data-stu-id="ba60d-982">A callback function to validate the server certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-983">既定値は、コールバック関数が設定されておらず、<xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A> プロパティが `null`であることです。</span><span class="sxs-lookup"><span data-stu-id="ba60d-983">The default is that no callback function is set and the <xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.HttpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-984">要求に対して使用するサービス ポイントを取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-984">Gets the service point to use for the request.</span></span></summary>
        <value><span data-ttu-id="ba60d-985">インターネット リソースへのネットワーク接続を表す <see cref="T:System.Net.ServicePoint" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-985">A <see cref="T:System.Net.ServicePoint" /> that represents the network connection to the Internet resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-986">要求がリダイレクトされた場合、<xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType> プロパティは <xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType> とは異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-986">The <xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType> property may be different from <xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType> if the request is redirected.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#6)]
 [!code-csharp[System.Net.ServicePoint#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#6)]
 [!code-vb[System.Net.ServicePoint#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCookieContainer">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCookieContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.SupportsCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCookieContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCookieContainer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCookieContainer : bool" Usage="System.Net.HttpWebRequest.SupportsCookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-987">要求が <see cref="T:System.Net.CookieContainer" /> をサポートするかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-987">Gets a value that indicates whether the request provides support for a <see cref="T:System.Net.CookieContainer" />.</span></span></summary>
        <value><span data-ttu-id="ba60d-988">要求が <see cref="T:System.Net.CookieContainer" /> をサポートする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-988"><see langword="true" /> if the request provides support for a <see cref="T:System.Net.CookieContainer" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="ba60d-989">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-989">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="ba60d-990">このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-990">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="ba60d-991"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-991">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-992"><xref:System.Runtime.Serialization.SerializationInfo> に含まれるオブジェクトは、フォーマッタによって自動的に追跡およびシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-992">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.HttpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-993"><see cref="M:System.Net.HttpWebRequest.GetResponse" /> メソッドと <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドのタイムアウト値 (ミリ秒単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-993">Gets or sets the time-out value in milliseconds for the <see cref="M:System.Net.HttpWebRequest.GetResponse" /> and <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> methods.</span></span></summary>
        <value><span data-ttu-id="ba60d-994">要求がタイムアウトするまでのミリ秒単位の待機時間。既定値は10万ミリ秒 (100 秒) です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-994">The number of milliseconds to wait before the request times out. The default value is 100,000 milliseconds (100 seconds).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-995"><xref:System.Net.HttpWebRequest.Timeout%2A> は、<xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドを使用して行われた後続の同期要求が応答を待機する時間 (ミリ秒単位) と、<xref:System.Net.HttpWebRequest.GetRequestStream%2A> メソッドがストリームを待機する時間です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-995"><xref:System.Net.HttpWebRequest.Timeout%2A> is the number of milliseconds that a subsequent synchronous request made with the <xref:System.Net.HttpWebRequest.GetResponse%2A> method waits for a response, and the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method waits for a stream.</span></span> <span data-ttu-id="ba60d-996"><xref:System.Net.HttpWebRequest.Timeout%2A> は、要求と応答全体に適用され、<xref:System.Net.HttpWebRequest.GetRequestStream%2A> と <xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドの呼び出しに対して個別には適用されません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-996">The <xref:System.Net.HttpWebRequest.Timeout%2A> applies to the entire request and response, not individually to the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> and <xref:System.Net.HttpWebRequest.GetResponse%2A> method calls.</span></span> <span data-ttu-id="ba60d-997">リソースがタイムアウト期間内に返されない場合、要求は <xref:System.Net.WebException.Status%2A> プロパティが <xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType>に設定された <xref:System.Net.WebException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-997">If the resource is not returned within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba60d-998"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> または <xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドが呼び出される前に、<xref:System.Net.HttpWebRequest.Timeout%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-998">The <xref:System.Net.HttpWebRequest.Timeout%2A> property must be set before the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> method is called.</span></span> <span data-ttu-id="ba60d-999"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> または <xref:System.Net.HttpWebRequest.GetResponse%2A> メソッドを呼び出した後に <xref:System.Net.HttpWebRequest.Timeout%2A> プロパティを変更しても効果はありません</span><span class="sxs-lookup"><span data-stu-id="ba60d-999">Changing the <xref:System.Net.HttpWebRequest.Timeout%2A> property after calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> method has no effect</span></span>  
  
 <span data-ttu-id="ba60d-1000"><xref:System.Net.HttpWebRequest.Timeout%2A> プロパティは、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A> または <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> メソッドを使用して行われた非同期要求には影響しません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1000">The <xref:System.Net.HttpWebRequest.Timeout%2A> property has no effect on asynchronous requests made with the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> or <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ba60d-1001">非同期要求の場合、クライアントアプリケーションは独自のタイムアウト機構を実装します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1001">In the case of asynchronous requests, the client application implements its own time-out mechanism.</span></span> <span data-ttu-id="ba60d-1002"><xref:System.Net.HttpWebRequest.BeginGetResponse%2A> メソッドの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1002">Refer to the example in the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method.</span></span>  
  
 <span data-ttu-id="ba60d-1003">読み取りまたは書き込み操作がタイムアウトになるまでの待機時間を指定するには、<xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1003">To specify the amount of time to wait before a read or write operation times out, use the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property.</span></span>  
  
 <span data-ttu-id="ba60d-1004">ドメインネームシステム (DNS) のクエリが返されるか、タイムアウトになるまでに最大15秒かかることがあります。解決が必要なホスト名が要求に含まれており、<xref:System.Net.FileWebRequest.Timeout%2A> を15秒未満に設定した場合は、要求のタイムアウトを示すために <xref:System.Net.WebException> がスローされる前に15秒以上かかることがあります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1004">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FileWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba60d-1005">次のコード例では、<xref:System.Net.HttpWebRequest> オブジェクトの <xref:System.Net.HttpWebRequest.Timeout%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1005">The following code example sets the <xref:System.Net.HttpWebRequest.Timeout%2A> property of the <xref:System.Net.HttpWebRequest> object.</span></span>  
  
 [!code-cpp[HttpWebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Timeout/CPP/httpwebrequest_timeout.cpp#1)]
 [!code-csharp[HttpWebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Timeout/CS/httpwebrequest_timeout.cs#1)]
 [!code-vb[HttpWebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Timeout/VB/httpwebrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba60d-1006">指定された値が 0 未満で、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1006">The value specified is less than zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.ReadWriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TransferEncoding">
      <MemberSignature Language="C#" Value="public string TransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.TransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransferEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransferEncoding : string with get, set" Usage="System.Net.HttpWebRequest.TransferEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-1007"><see langword="Transfer-encoding" /> HTTP ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1007">Gets or sets the value of the <see langword="Transfer-encoding" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-1008"><see langword="Transfer-encoding" /> HTTP ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1008">The value of the <see langword="Transfer-encoding" /> HTTP header.</span></span> <span data-ttu-id="ba60d-1009">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1009">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-1010"><xref:System.Net.HttpWebRequest.TransferEncoding%2A> プロパティを設定する前に、まず <xref:System.Net.HttpWebRequest.SendChunked%2A> プロパティを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1010">Before you can set the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property, you must first set the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`.</span></span> <span data-ttu-id="ba60d-1011">`null` に設定して <xref:System.Net.HttpWebRequest.TransferEncoding%2A> をクリアすると、<xref:System.Net.HttpWebRequest.SendChunked%2A>の値には影響しません。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1011">Clearing <xref:System.Net.HttpWebRequest.TransferEncoding%2A> by setting it to `null` has no effect on the value of <xref:System.Net.HttpWebRequest.SendChunked%2A>.</span></span>  
  
 <span data-ttu-id="ba60d-1012"><xref:System.Net.HttpWebRequest.TransferEncoding%2A> プロパティに割り当てられた値によって、既存の内容が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1012">Values assigned to the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property replace any existing contents.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-1013">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1013">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ba60d-1014">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1014">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-1015"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> は、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> である場合に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1015"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set when <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba60d-1016"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> は "Chunked" 値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1016"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to the value "Chunked".</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnsafeAuthenticatedConnectionSharing">
      <MemberSignature Language="C#" Value="public bool UnsafeAuthenticatedConnectionSharing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeAuthenticatedConnectionSharing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeAuthenticatedConnectionSharing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeAuthenticatedConnectionSharing : bool with get, set" Usage="System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-1017">高速 NTLM 認証された接続共有を許可するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1017">Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.</span></span></summary>
        <value><span data-ttu-id="ba60d-1018">認証された接続を確立し続ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1018"><see langword="true" /> to keep the authenticated connection open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-1019">このプロパティの既定値は `false`です。これにより、要求の完了後に現在の接続が閉じられます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1019">The default value for this property is `false`, which causes the current connection to be closed after a request is completed.</span></span> <span data-ttu-id="ba60d-1020">アプリケーションは、新しい要求を発行するたびに認証シーケンスを通過する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1020">Your application must go through the authentication sequence every time it issues a new request.</span></span>  
  
 <span data-ttu-id="ba60d-1021">このプロパティが `true`に設定されている場合、認証が実行された後も、応答を取得するために使用される接続は開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1021">If this property is set to `true`, the connection used to retrieve the response remains open after the authentication has been performed.</span></span> <span data-ttu-id="ba60d-1022">この場合、このプロパティが `true` に設定されている他の要求では、再認証を行わずに接続を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1022">In this case, other requests that have this property set to `true` may use the connection without re-authenticating.</span></span> <span data-ttu-id="ba60d-1023">言い換えると、接続がユーザー A に対して認証されている場合、ユーザー B は接続を再利用する可能性があります。ユーザー B の要求は、ユーザー A の資格情報に基づいて満たされます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1023">In other words, if a connection has been authenticated for user A, user B may reuse A's connection; user B's request is fulfilled based on the credentials of user A.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ba60d-1024">アプリケーションが認証されずに接続を使用する可能性があるため、このプロパティを `true`に設定する場合は、システムに管理上の脆弱性がないことを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1024">Because it is possible for an application to use the connection without being authenticated, you need to be sure that there is no administrative vulnerability in your system when setting this property to `true`.</span></span> <span data-ttu-id="ba60d-1025">アプリケーションが複数のユーザーに対して要求を送信し、リソースを保護するために認証に依存している場合は、次に示すように接続グループを使用しない限り、このプロパティを `true` に設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1025">If your application sends requests for multiple users (impersonates multiple user accounts) and relies on authentication to protect resources, do not set this property to `true` unless you use connection groups as described below.</span></span>  
  
 <span data-ttu-id="ba60d-1026">パフォーマンスの問題が発生し、アプリケーションが統合 Windows 認証を使用する Web サーバーで実行されている場合は、このメカニズムを有効にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1026">You may want to consider enabling this mechanism if your are having performance problems and your application is running on a Web server with integrated Windows authentication.</span></span>  
  
 <span data-ttu-id="ba60d-1027">この設定を有効にすると、システムがセキュリティ上のリスクになります。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1027">Enabling this setting opens the system to security risks.</span></span> <span data-ttu-id="ba60d-1028"><xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> プロパティをに設定する場合は `true` 次の予防措置を講じてください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1028">If you set the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property to `true` be sure to take the following precautions:</span></span>  
  
-   <span data-ttu-id="ba60d-1029"><xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> プロパティを使用して、さまざまなユーザーの接続を管理します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1029">Use the <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> property to manage connections for different users.</span></span> <span data-ttu-id="ba60d-1030">これにより、認証されていないアプリケーションによって接続が使用される可能性を回避できます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1030">This avoids the potential use of the connection by non-authenticated applications.</span></span> <span data-ttu-id="ba60d-1031">たとえば、ユーザー A には、ユーザー B とは異なる一意の接続グループ名が必要です。これにより、ユーザーアカウントごとに分離レイヤーが提供されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1031">For example, user A should have a unique connection group name that is different from user B. This provides a layer of isolation for each user account.</span></span>  
  
-   <span data-ttu-id="ba60d-1032">保護された環境でアプリケーションを実行して、接続の悪用を防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1032">Run your application in a protected environment to help avoid possible connection exploits.</span></span>  
  
 <span data-ttu-id="ba60d-1033">バックエンドサーバーを制御する場合は、代替手段として、認証の永続化を無効にすることを検討してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1033">If you control the back-end server, as an alternative you might consider turning off authentication persistence.</span></span> <span data-ttu-id="ba60d-1034">これにより、パフォーマンスが低下しますが、安全性は向上します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1034">This increases performance to a lesser degree, but it is safer.</span></span> <span data-ttu-id="ba60d-1035">詳細については、「 [Authpersistence](https://docs.microsoft.com/previous-versions/iis/6.0-sdk/ms525244(v=vs.90))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1035">For more details, see [AuthPersistence](https://docs.microsoft.com/previous-versions/iis/6.0-sdk/ms525244(v=vs.90)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba60d-1036"><xref:System.Net.WebRequest.PreAuthenticate%2A> と <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> の両方が `true`に設定されている場合、各要求は安全ではないプールからの接続を使用して送信されますが、Authorization ヘッダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1036">If both <xref:System.Net.WebRequest.PreAuthenticate%2A> and <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> are set to `true`, each request is sent using a connection from the unsafe pool, but with an Authorization header.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.HttpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-1037">既定の資格情報が要求と共に送信されるかどうかを制御する <see cref="T:System.Boolean" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1037">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether default credentials are sent with requests.</span></span></summary>
        <value><span data-ttu-id="ba60d-1038">既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1038"><see langword="true" /> if the default credentials are used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba60d-1039">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1039">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba60d-1040">この <xref:System.Net.HttpWebRequest> オブジェクトによって要求された場合、サーバーによって要求された場合は、現在ログオンしているユーザーの資格情報を使用して認証されるようにするには、このプロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1040">Set this property to `true` when requests made by this <xref:System.Net.HttpWebRequest> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="ba60d-1041">クライアントアプリケーションの場合、これはほとんどのシナリオで望ましい動作です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1041">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="ba60d-1042">ASP.NET アプリケーションなどの中間層アプリケーションでは、このプロパティを使用するのではなく、通常、要求の発行元のクライアントの資格情報に <xref:System.Net.HttpWebRequest.Credentials%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1042">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.HttpWebRequest.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba60d-1043">要求の送信後に、このプロパティを設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1043">You attempted to set this property after the request was sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string with get, set" Usage="System.Net.HttpWebRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba60d-1044"><see langword="User-agent" /> HTTP ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1044">Gets or sets the value of the <see langword="User-agent" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="ba60d-1045"><see langword="User-agent" /> HTTP ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1045">The value of the <see langword="User-agent" /> HTTP header.</span></span> <span data-ttu-id="ba60d-1046">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1046">The default value is <see langword="null" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="ba60d-1047">このプロパティの値は <see cref="T:System.Net.WebHeaderCollection" /> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1047">The value for this property is stored in <see cref="T:System.Net.WebHeaderCollection" />.</span></span> <span data-ttu-id="ba60d-1048">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1048">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba60d-1049">次のコード例では、<xref:System.Net.HttpWebRequest.UserAgent%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba60d-1049">The following code example sets the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_UserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_UserAgent/CPP/httpwebrequest_useragent.cpp#1)]
 [!code-csharp[HttpWebRequest_UserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_UserAgent/CS/httpwebrequest_useragent.cs#1)]
 [!code-vb[HttpWebRequest_UserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_UserAgent/VB/httpwebrequest_useragent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
