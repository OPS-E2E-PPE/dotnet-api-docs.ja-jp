<Type Name="ServicePointManager" FullName="System.Net.ServicePointManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6dd36d192a603d127fbd71ed1b5c8cc24d8e3c49" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75026444" /></Metadata><TypeSignature Language="C#" Value="public class ServicePointManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ServicePointManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePointManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePointManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePointManager" />
  <TypeSignature Language="F#" Value="type ServicePointManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5e18c-101"><see cref="T:System.Net.ServicePoint" /> オブジェクトのコレクションを管理します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-101">Manages the collection of <see cref="T:System.Net.ServicePoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-102"><xref:System.Net.ServicePointManager> は、<xref:System.Net.ServicePoint> クラスのインスタンスの作成、保守、および削除に使用される静的クラスです。</span><span class="sxs-lookup"><span data-stu-id="5e18c-102"><xref:System.Net.ServicePointManager> is a static class used to create, maintain, and delete instances of the <xref:System.Net.ServicePoint> class.</span></span>  
  
 <span data-ttu-id="5e18c-103">アプリケーションが <xref:System.Net.ServicePointManager> オブジェクトを介してインターネットリソース Uniform Resource Identifier (URI) への接続を要求すると、<xref:System.Net.ServicePointManager> は、URI によって識別されるホストとスキームの接続情報を含む <xref:System.Net.ServicePoint> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-103">When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI.</span></span> <span data-ttu-id="5e18c-104">そのホストとスキームに既存の <xref:System.Net.ServicePoint> オブジェクトがある場合、<xref:System.Net.ServicePointManager> オブジェクトは既存の <xref:System.Net.ServicePoint> オブジェクトを返します。それ以外の場合、<xref:System.Net.ServicePointManager> オブジェクトは新しい <xref:System.Net.ServicePoint> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-104">If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object.</span></span>  
  
 <span data-ttu-id="5e18c-105">.NET Framework 4.6 には、安全でない暗号およびハッシュ アルゴリズムの接続をブロックする、新しいセキュリティ機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-105">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="5e18c-106"><xref:System.Net.Http.HttpClient>、<xref:System.Net.HttpWebRequest>、<xref:System.Net.FtpWebRequest>、<xref:System.Net.Mail.SmtpClient>、4.6 <xref:System.Net.Security.SslStream>などの Api を介して TLS/SSL を使用するアプリケーションは、既定でより安全な動作を実現します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-106">Applications using TLS/SSL through APIs such as <xref:System.Net.Http.HttpClient>, <xref:System.Net.HttpWebRequest>, <xref:System.Net.FtpWebRequest>, <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Security.SslStream>, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="5e18c-107">開発者は、既存の SSL3 サービスや TLS (RC4) サービスとの相互運用性を維持するために、この動作を無効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-107">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services or TLS w/ RC4 services.</span></span> <span data-ttu-id="5e18c-108">[この記事で](https://support.microsoft.com/kb/3069494)は、新しい動作が無効になるようにコードを変更する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-108">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-109">URI `www.contoso.com`に接続するための <xref:System.Net.ServicePoint> オブジェクトを作成するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-109">The following code example creates a <xref:System.Net.ServicePoint> object for connections to the URI `www.contoso.com`.</span></span>  
  
 [!code-cpp[Classic ServicePoint Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePoint Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServicePoint Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePoint Example/CS/source.cs#1)]
 [!code-vb[Classic ServicePoint Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePoint Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ServicePoint" />
    <related type="Article" href="https://msdn.microsoft.com/library/6e5def51-3646-4ef6-a7bd-c69151321bec"><span data-ttu-id="5e18c-110">ServicePointManager 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="5e18c-110">ServicePointManager Element (Network Settings)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CertificatePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICertificatePolicy CertificatePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICertificatePolicy CertificatePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.CertificatePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CertificatePolicy As ICertificatePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICertificatePolicy ^ CertificatePolicy { System::Net::ICertificatePolicy ^ get(); void set(System::Net::ICertificatePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CertificatePolicy : System.Net.ICertificatePolicy with get, set" Usage="System.Net.ServicePointManager.CertificatePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use ServerCertificateValidationCallback instead", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("CertificatePolicy is obsoleted for this type, please use ServerCertificateValidationCallback instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICertificatePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-111">サーバーの証明書ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-111">Gets or sets policy for server certificates.</span></span></summary>
        <value><span data-ttu-id="5e18c-112"><see cref="T:System.Net.ICertificatePolicy" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5e18c-112">An object that implements the <see cref="T:System.Net.ICertificatePolicy" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-113"><xref:System.Net.ServicePointManager.CertificatePolicy%2A> プロパティが <xref:System.Net.ICertificatePolicy> インターフェイスオブジェクトに設定されている場合、<xref:System.Net.ServicePointManager> オブジェクトは、既定の証明書ポリシーではなく、そのインスタンスで定義されている証明書ポリシーを使用します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-113">When the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property is set to an <xref:System.Net.ICertificatePolicy> interface object, the <xref:System.Net.ServicePointManager> object uses the certificate policy defined in that instance instead of the default certificate policy.</span></span>  
  
 <span data-ttu-id="5e18c-114">既定の証明書ポリシーでは、有効な証明書と有効期限が切れた有効な証明書が許可されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-114">The default certificate policy allows valid certificates and valid certificates that have expired.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-115">次のコード例は、カスタム証明書ポリシーの証明書ポリシーの例外をキャッチする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-115">The following code example shows how to catch a certificate policy exception for a custom certificate policy.</span></span> <span data-ttu-id="5e18c-116">この例では、証明書ポリシーオブジェクトが定義されていること、Web リソースの Uniform Resource Identifier (URI) が `myUri`変数に含まれていること、およびアプリケーションの処理を実行する `ProcessResponse` という名前のメソッドがあることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-116">It assumes that the certificate policy object has been defined, that the Uniform Resource Identifier (URI) for the Web resource is contained in the variable `myUri`, and that there is a method named `ProcessResponse` that performs the work of the application.</span></span>  
  
 [!code-cpp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CS/source.cs#1)]
 [!code-vb[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5e18c-117"><see cref="P:System.Net.ServicePointManager.CertificatePolicy" /> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-117">To set the <see cref="P:System.Net.ServicePointManager.CertificatePolicy" /> property.</span></span> <span data-ttu-id="5e18c-118">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="5e18c-118">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public static bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertificateRevocationList : bool with get, set" Usage="System.Net.ServicePointManager.CheckCertificateRevocationList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("CRL checks not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-119">証明書が証明機関の失効リストに対して照合されるかどうかを示す <see cref="T:System.Boolean" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-119">Gets or sets a <see cref="T:System.Boolean" /> value that indicates whether the certificate is checked against the certificate authority revocation list.</span></span></summary>
        <value><span data-ttu-id="5e18c-120">証明書失効リストが照合される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5e18c-120"><see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-121"><xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> が `true`場合、証明書の検証プロセスの一環として、証明機関の失効リストに対して証明書がチェックされます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-121">When the <xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> is `true`, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process.</span></span> <span data-ttu-id="5e18c-122">既定値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-122">Its default value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-123">このプロパティを設定するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-123">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5e18c-124">このプロパティを設定する場合は。</span><span class="sxs-lookup"><span data-stu-id="5e18c-124">To set this property.</span></span> <span data-ttu-id="5e18c-125">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="5e18c-125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="ClientCipherSuitesCallback">
      <MemberSignature Language="C#" Value="public static System.Net.CipherSuitesCallback ClientCipherSuitesCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.CipherSuitesCallback ClientCipherSuitesCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ClientCipherSuitesCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ClientCipherSuitesCallback As CipherSuitesCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::CipherSuitesCallback ^ ClientCipherSuitesCallback { System::Net::CipherSuitesCallback ^ get(); void set(System::Net::CipherSuitesCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCipherSuitesCallback : System.Net.CipherSuitesCallback with get, set" Usage="System.Net.ServicePointManager.ClientCipherSuitesCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("This API is no longer supported.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CipherSuitesCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultConnectionLimit">
      <MemberSignature Language="C#" Value="public static int DefaultConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.DefaultConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultConnectionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultConnectionLimit : int with get, set" Usage="System.Net.ServicePointManager.DefaultConnectionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-126"><see cref="T:System.Net.ServicePoint" /> オブジェクトで許可される同時接続の最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-126">Gets or sets the maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="5e18c-127"><see cref="T:System.Net.ServicePoint" /> オブジェクトで許可されているコンカレント接続の最大数。</span><span class="sxs-lookup"><span data-stu-id="5e18c-127">The maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint" /> object.</span></span> <span data-ttu-id="5e18c-128">既定の接続数は、ASP.NET でホストされるアプリケーションの場合は10、それ以外の場合は2になります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-128">The default connection limit is 10 for ASP.NET hosted applications and 2 for all others.</span></span> <span data-ttu-id="5e18c-129">アプリが ASP.NET ホストとして実行されている場合、autoConfig プロパティが <see langword="true" />に設定されていると、構成ファイルからこのプロパティの値を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="5e18c-129">When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to <see langword="true" />.</span></span> <span data-ttu-id="5e18c-130">ただし、autoConfig プロパティが <see langword="true" />であれば、プログラムで値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-130">However, you can change the value programmatically when the autoConfig property is <see langword="true" />.</span></span> <span data-ttu-id="5e18c-131">AppDomain の読み込み時に、目的の値を 1 回だけ設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-131">Set your preferred value once, when the AppDomain loads.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-132"><xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> プロパティは、<xref:System.Net.ServicePoint> オブジェクトを作成するときに <xref:System.Net.ServicePointManager> オブジェクトが <xref:System.Net.ServicePoint.ConnectionLimit%2A> プロパティに割り当てる同時接続の既定の最大数を設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-132">The <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property sets the default maximum number of concurrent connections that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property when creating <xref:System.Net.ServicePoint> objects.</span></span>  
  
 <span data-ttu-id="5e18c-133"><xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> プロパティを変更しても、既存の <xref:System.Net.ServicePoint> オブジェクトには影響しません。変更後に初期化される <xref:System.Net.ServicePoint> のオブジェクトにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-133">Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change.</span></span> <span data-ttu-id="5e18c-134">このプロパティの値が直接または構成によって設定されていない場合、既定値は <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>定数になります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-134">If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e18c-135"><xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> プロパティに対する変更は、HTTP 1.0 接続と HTTP 1.1 接続の両方に影響します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-135">Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections.</span></span> <span data-ttu-id="5e18c-136">HTTP 1.0 および HTTP 1.1 プロトコルの接続制限を個別に変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="5e18c-136">It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="5e18c-137">このプロパティを設定するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-137">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e18c-138"><see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-138"><see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> is less than or equal to 0.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="5e18c-139">無制限の Web アクセス許可の場合。</span><span class="sxs-lookup"><span data-stu-id="5e18c-139">for unrestricted Web permissions.</span></span> <span data-ttu-id="5e18c-140">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e18c-140">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="DefaultNonPersistentConnectionLimit">
      <MemberSignature Language="C#" Value="public const int DefaultNonPersistentConnectionLimit = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultNonPersistentConnectionLimit = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNonPersistentConnectionLimit As Integer  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultNonPersistentConnectionLimit = 4;" />
      <MemberSignature Language="F#" Value="val mutable DefaultNonPersistentConnectionLimit : int" Usage="System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-141">HTTP/1.0 以降のサーバーに接続される <see cref="T:System.Net.ServicePoint" /> オブジェクトで許可する非永続的な接続の既定の数 (4)。</span><span class="sxs-lookup"><span data-stu-id="5e18c-141">The default number of non-persistent connections (4) allowed on a <see cref="T:System.Net.ServicePoint" /> object connected to an HTTP/1.0 or later server.</span></span> <span data-ttu-id="5e18c-142">このフィールドは定数ですが、.NET Framework 2.0 では使用されなくなりました。</span><span class="sxs-lookup"><span data-stu-id="5e18c-142">This field is constant but is no longer used in the .NET Framework 2.0.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPersistentConnectionLimit">
      <MemberSignature Language="C#" Value="public const int DefaultPersistentConnectionLimit = 2;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultPersistentConnectionLimit = (2)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultPersistentConnectionLimit As Integer  = 2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultPersistentConnectionLimit = 2;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="val mutable DefaultPersistentConnectionLimit : int" Usage="System.Net.ServicePointManager.DefaultPersistentConnectionLimit" />
      <MemberSignature Language="C#" Value="public const int DefaultPersistentConnectionLimit = 10;" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultPersistentConnectionLimit = (10)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultPersistentConnectionLimit As Integer  = 10" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultPersistentConnectionLimit = 10;" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-143">HTTP/1.1 以降のサーバーに接続される <see cref="T:System.Net.ServicePoint" /> オブジェクトで許可する永続的な接続の既定の数 (2)。</span><span class="sxs-lookup"><span data-stu-id="5e18c-143">The default number of persistent connections (2) allowed on a <see cref="T:System.Net.ServicePoint" /> object connected to an HTTP/1.1 or later server.</span></span> <span data-ttu-id="5e18c-144">このフィールドは定数であり、<see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> プロパティの値が直接にも構成によっても設定されていない場合に <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> プロパティを初期化するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-144">This field is constant and is used to initialize the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property if the value of the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property has not been set either directly or through configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5e18c-145">次のコード例では、このフィールドを使用して <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-145">The following code example sets the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property using this field.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsRefreshTimeout">
      <MemberSignature Language="C#" Value="public static int DnsRefreshTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DnsRefreshTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.DnsRefreshTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DnsRefreshTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DnsRefreshTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DnsRefreshTimeout : int with get, set" Usage="System.Net.ServicePointManager.DnsRefreshTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-146">ドメイン ネーム サービス (DNS: Domain Name Service) 解決が有効と見なされる期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-146">Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.</span></span></summary>
        <value><span data-ttu-id="5e18c-147">タイムアウト値 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="5e18c-147">The time-out value, in milliseconds.</span></span> <span data-ttu-id="5e18c-148">値が -1 の場合は、タイムアウト期間が無限であることを示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-148">A value of -1 indicates an infinite time-out period.</span></span> <span data-ttu-id="5e18c-149">既定値は 120,000 ミリ秒 (2 分) です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-149">The default value is 120,000 milliseconds (two minutes).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5e18c-150">このプロパティを設定するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-150">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="EnableDnsRoundRobin">
      <MemberSignature Language="C#" Value="public static bool EnableDnsRoundRobin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableDnsRoundRobin" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.EnableDnsRoundRobin" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableDnsRoundRobin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableDnsRoundRobin { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDnsRoundRobin : bool with get, set" Usage="System.Net.ServicePointManager.EnableDnsRoundRobin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-151">ドメイン ネーム サービス (DNS) 解決で、適用可能なインターネット プロトコル (IP) アドレスが順番に使用されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-151">Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.</span></span></summary>
        <value><span data-ttu-id="5e18c-152">DNS 解決によって常に特定のホストの最初の IP アドレスが返される場合は <see langword="false" />。それ以外の場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5e18c-152"><see langword="false" /> if a DNS resolution always returns the first IP address for a particular host; otherwise <see langword="true" />.</span></span> <span data-ttu-id="5e18c-153">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-153">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-154">複数の IP アドレスがホスト名に関連付けられている場合、DNS 解決は通常、最初の IP アドレスのみを返します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-154">When more than one IP address is associated with a host name, a DNS resolution normally returns only the first IP address.</span></span> <span data-ttu-id="5e18c-155">このプロパティを `true`に設定すると、その後の DNS 解決では、特定のホストに使用可能なすべての IP アドレスが循環します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-155">If you set this property to `true`, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host.</span></span> <span data-ttu-id="5e18c-156">このオプションは、サービスがサーバーまたはサーバークラスター間の負荷分散メカニズムとして DNS を使用する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-156">This option is useful when a service uses DNS as a load balancing mechanism between servers or server clusters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-157">このプロパティを設定するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-157">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Security.EncryptionPolicy EncryptionPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.Security.EncryptionPolicy EncryptionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.EncryptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EncryptionPolicy As EncryptionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Security::EncryptionPolicy EncryptionPolicy { System::Net::Security::EncryptionPolicy get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionPolicy : System.Net.Security.EncryptionPolicy" Usage="System.Net.ServicePointManager.EncryptionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns EncryptionPolicy.RequireEncryption.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.EncryptionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-158">この <see cref="T:System.Net.ServicePointManager" /> インスタンスの <see cref="T:System.Net.Security.EncryptionPolicy" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-158">Gets the <see cref="T:System.Net.Security.EncryptionPolicy" /> for this <see cref="T:System.Net.ServicePointManager" /> instance.</span></span></summary>
        <value><span data-ttu-id="5e18c-159">この <see cref="T:System.Net.ServicePointManager" /> のインスタンスに使用する暗号化ポリシー。</span><span class="sxs-lookup"><span data-stu-id="5e18c-159">The encryption policy to use for this <see cref="T:System.Net.ServicePointManager" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-160">構成ファイルで値が指定されていない場合、<xref:System.Net.ServicePointManager.EncryptionPolicy%2A> プロパティは既定で <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>になります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-160">If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e18c-161">これは、この <xref:System.Net.ServicePointManager> インスタンスの SSL/TLS セッションに適用されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-161">This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance.</span></span>  
  
 <span data-ttu-id="5e18c-162">暗号化ポリシーが <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>に設定されている場合は、Null 暗号を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-162">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="P:System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy" />
        <altmember cref="T:System.Net.Security.EncryptionPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e5def51-3646-4ef6-a7bd-c69151321bec"><span data-ttu-id="5e18c-163">ServicePointManager 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="5e18c-163">ServicePointManager Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public static bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Expect100Continue : bool with get, set" Usage="System.Net.ServicePointManager.Expect100Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-164">100-Continue 動作を使用するかどうかを決定する <see cref="T:System.Boolean" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-164">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether 100-Continue behavior is used.</span></span></summary>
        <value><span data-ttu-id="5e18c-165">100-Continue 動作を有効にする場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5e18c-165"><see langword="true" /> to enable 100-Continue behavior.</span></span> <span data-ttu-id="5e18c-166">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-166">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-167">このプロパティが `true`に設定されている場合、100-Continue 動作が使用されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-167">When this property is set to `true`, 100-Continue behavior is used.</span></span> <span data-ttu-id="5e18c-168">`PUT` メソッドと `POST` メソッドを使用するクライアント要求では、<xref:System.Net.ServicePointManager.Expect100Continue%2A> プロパティが `true`、<xref:System.Net.HttpWebRequest.ContentLength%2A> プロパティが0より大きい場合、または <xref:System.Net.HttpWebRequest.SendChunked%2A> プロパティが true の場合、要求には Expect ヘッダーが追加されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-168">Client requests that use the `PUT` and `POST` methods will add an Expect header to the request if the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `true` and <xref:System.Net.HttpWebRequest.ContentLength%2A> property is greater than zero or the <xref:System.Net.HttpWebRequest.SendChunked%2A> property is true.</span></span> <span data-ttu-id="5e18c-169">クライアントは、ポストされるデータをクライアントが送信する必要があることを示すために、サーバーから 100-Continue 応答を受信することを想定しています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-169">The client will expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.</span></span> <span data-ttu-id="5e18c-170">このメカニズムにより、要求ヘッダーに基づいてサーバーが要求を拒否する場合に、クライアントがネットワーク経由で大量のデータを送信することを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-170">This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.</span></span>  
  
 <span data-ttu-id="5e18c-171">たとえば、<xref:System.Net.ServicePointManager.Expect100Continue%2A> プロパティが `false`であるとします。</span><span class="sxs-lookup"><span data-stu-id="5e18c-171">For example, assume the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `false`.</span></span> <span data-ttu-id="5e18c-172">要求がサーバーに送信されると、そのデータが含まれます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-172">When the request is sent to the server, it includes the data.</span></span> <span data-ttu-id="5e18c-173">要求ヘッダーを読み取った後、サーバーが認証を必要とし、401応答を送信する必要がある場合、クライアントは適切な認証ヘッダーを使用してデータを再送信する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-173">If, after reading the request headers, the server requires authentication and must send a 401 response, the client must resend the data with proper authentication headers.</span></span>  
  
 <span data-ttu-id="5e18c-174">このプロパティが `true`場合は、要求ヘッダーがサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-174">If this property is `true`, the request headers are sent to the server.</span></span> <span data-ttu-id="5e18c-175">サーバーが要求を拒否していない場合は、データが送信可能であることを通知する 100-Continue 応答を送信します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-175">If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted.</span></span> <span data-ttu-id="5e18c-176">前の例のように、サーバーが認証を必要とする場合は、401の応答を送信し、クライアントはデータを不必要に転送していないことを示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-176">If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.</span></span>  
  
 <span data-ttu-id="5e18c-177">このプロパティの値を変更しても、既存の <xref:System.Net.ServicePoint> オブジェクトには影響しません。</span><span class="sxs-lookup"><span data-stu-id="5e18c-177">Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="5e18c-178">変更後に作成された新しい <xref:System.Net.ServicePoint> オブジェクトのみが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-178">Only new <xref:System.Net.ServicePoint> objects created after the change are affected.</span></span>  
  
 <span data-ttu-id="5e18c-179">100-Continue 動作は、このプロパティが `true`に設定されている場合でも、HTTP 1.0 要求では使用されません。</span><span class="sxs-lookup"><span data-stu-id="5e18c-179">The 100-Continue behavior is not used for HTTP 1.0 requests even if this property is set to `true`.</span></span>  
  
 <span data-ttu-id="5e18c-180">"100-Continue" 動作の詳細については、「IETF RFC 2616 Section 10.1.1」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e18c-180">The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-181">このプロパティを設定するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-181">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindServicePoint">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e18c-182">要求を処理するための通信を管理するには、既存の <see cref="T:System.Net.ServicePoint" /> オブジェクトを検出するか、新しい <see cref="T:System.Net.ServicePoint" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-182">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communication for this request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (address As Uri) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(Uri ^ address);" />
      <MemberSignature Language="F#" Value="static member FindServicePoint : Uri -&gt; System.Net.ServicePoint" Usage="System.Net.ServicePointManager.FindServicePoint address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5e18c-183">接続先のインターネット リソースの <see cref="T:System.Uri" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5e18c-183">The <see cref="T:System.Uri" /> object of the Internet resource to contact.</span></span></param>
        <summary><span data-ttu-id="5e18c-184">指定した <see cref="T:System.Net.ServicePoint" /> オブジェクトとの通信を管理するには、既存の <see cref="T:System.Net.ServicePoint" /> オブジェクトを検出するか、新しい <see cref="T:System.Uri" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-184">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified <see cref="T:System.Uri" /> object.</span></span></summary>
        <returns><span data-ttu-id="5e18c-185">要求を処理するための通信を管理する <see cref="T:System.Net.ServicePoint" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5e18c-185">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-186"><xref:System.Net.ServicePointManager.FindServicePoint%2A> メソッドは、指定されたインターネットホスト名に関連付けられた <xref:System.Net.ServicePoint> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-186">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="5e18c-187">そのホストに <xref:System.Net.ServicePoint> オブジェクトが存在しない場合、<xref:System.Net.ServicePointManager> オブジェクトによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-187">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e18c-188"><paramref name="address" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-188"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5e18c-189"><see cref="T:System.Net.ServicePoint" /> で定義されている <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> オブジェクトの最大数に達しました。</span><span class="sxs-lookup"><span data-stu-id="5e18c-189">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span></span></exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (string uriString, System.Net.IWebProxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(string uriString, class System.Net.IWebProxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (uriString As String, proxy As IWebProxy) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(System::String ^ uriString, System::Net::IWebProxy ^ proxy);" />
      <MemberSignature Language="F#" Value="static member FindServicePoint : string * System.Net.IWebProxy -&gt; System.Net.ServicePoint" Usage="System.Net.ServicePointManager.FindServicePoint (uriString, proxy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
        <Parameter Name="proxy" Type="System.Net.IWebProxy" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="5e18c-190">接続先のインターネット リソースの URI。</span><span class="sxs-lookup"><span data-stu-id="5e18c-190">The URI of the Internet resource to be contacted.</span></span></param>
        <param name="proxy"><span data-ttu-id="5e18c-191">この要求に対して使用するプロキシ データ。</span><span class="sxs-lookup"><span data-stu-id="5e18c-191">The proxy data for this request.</span></span></param>
        <summary><span data-ttu-id="5e18c-192">指定した URI (Uniform Resource Identifier) との通信を管理するには、既存の <see cref="T:System.Net.ServicePoint" /> オブジェクトを検出するか、新しい <see cref="T:System.Net.ServicePoint" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-192">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified Uniform Resource Identifier (URI).</span></span></summary>
        <returns><span data-ttu-id="5e18c-193">要求を処理するための通信を管理する <see cref="T:System.Net.ServicePoint" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5e18c-193">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-194"><xref:System.Net.ServicePointManager.FindServicePoint%2A> メソッドは、指定されたインターネットホスト名に関連付けられた <xref:System.Net.ServicePoint> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-194">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="5e18c-195">そのホストに <xref:System.Net.ServicePoint> オブジェクトが存在しない場合、<xref:System.Net.ServicePointManager> オブジェクトによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-195">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-196">次のコード例は、このメソッドを呼び出して <xref:System.Net.ServicePoint> オブジェクトにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-196">The following code example demonstrates calling this method to access a <xref:System.Net.ServicePoint> object.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#7)]
 [!code-csharp[System.Net.ServicePoint#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#7)]
 [!code-vb[System.Net.ServicePoint#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="5e18c-197"><paramref name="uriString" /> で指定した URI が無効です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-197">The URI specified in <paramref name="uriString" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5e18c-198"><see cref="T:System.Net.ServicePoint" /> で定義されている <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> オブジェクトの最大数に達しました。</span><span class="sxs-lookup"><span data-stu-id="5e18c-198">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span></span></exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (Uri address, System.Net.IWebProxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(class System.Uri address, class System.Net.IWebProxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (address As Uri, proxy As IWebProxy) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(Uri ^ address, System::Net::IWebProxy ^ proxy);" />
      <MemberSignature Language="F#" Value="static member FindServicePoint : Uri * System.Net.IWebProxy -&gt; System.Net.ServicePoint" Usage="System.Net.ServicePointManager.FindServicePoint (address, proxy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="proxy" Type="System.Net.IWebProxy" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5e18c-199">接続先のインターネット リソースのアドレスを格納している <see cref="T:System.Uri" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5e18c-199">A <see cref="T:System.Uri" /> object that contains the address of the Internet resource to contact.</span></span></param>
        <param name="proxy"><span data-ttu-id="5e18c-200">この要求に対して使用するプロキシ データ。</span><span class="sxs-lookup"><span data-stu-id="5e18c-200">The proxy data for this request.</span></span></param>
        <summary><span data-ttu-id="5e18c-201">指定した <see cref="T:System.Uri" /> オブジェクトとの通信を管理するには、既存の <see cref="T:System.Net.ServicePoint" /> オブジェクトを検出するか、新しい <see cref="T:System.Net.ServicePoint" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-201">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified <see cref="T:System.Uri" /> object.</span></span></summary>
        <returns><span data-ttu-id="5e18c-202">要求を処理するための通信を管理する <see cref="T:System.Net.ServicePoint" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5e18c-202">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-203"><xref:System.Net.ServicePointManager.FindServicePoint%2A> メソッドは、指定されたインターネットホスト名に関連付けられた <xref:System.Net.ServicePoint> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-203">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="5e18c-204">そのホストに <xref:System.Net.ServicePoint> オブジェクトが存在しない場合、<xref:System.Net.ServicePointManager> オブジェクトによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-204">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e18c-205"><paramref name="address" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-205"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5e18c-206"><see cref="T:System.Net.ServicePoint" /> で定義されている <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> オブジェクトの最大数に達しました。</span><span class="sxs-lookup"><span data-stu-id="5e18c-206">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span></span></exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="MaxServicePointIdleTime">
      <MemberSignature Language="C#" Value="public static int MaxServicePointIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxServicePointIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.MaxServicePointIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxServicePointIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxServicePointIdleTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxServicePointIdleTime : int with get, set" Usage="System.Net.ServicePointManager.MaxServicePointIdleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-207"><see cref="T:System.Net.ServicePoint" /> オブジェクトの最大アイドル時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-207">Gets or sets the maximum idle time of a <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="5e18c-208"><see cref="T:System.Net.ServicePoint" /> オブジェクトのミリ秒単位の最大アイドル時間。</span><span class="sxs-lookup"><span data-stu-id="5e18c-208">The maximum idle time, in milliseconds, of a <see cref="T:System.Net.ServicePoint" /> object.</span></span> <span data-ttu-id="5e18c-209">既定値は 100,000 ミリ秒 (100 秒) です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-209">The default value is 100,000 milliseconds (100 seconds).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-210"><xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> プロパティは <xref:System.Net.ServicePoint> オブジェクトを作成するときに <xref:System.Net.ServicePointManager> オブジェクトが <xref:System.Net.ServicePoint.MaxIdleTime%2A> プロパティに割り当てる最大アイドル時間を設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-210">The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="5e18c-211">この値への変更は、値が変更された後に初期化される <xref:System.Net.ServicePoint> のオブジェクトにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-211">Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed.</span></span>  
  
 <span data-ttu-id="5e18c-212"><xref:System.Net.ServicePoint> オブジェクトが <xref:System.Net.ServicePoint.MaxIdleTime%2A>で指定された時間アイドル状態になると、ガベージコレクションの対象になります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-212">After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection.</span></span> <span data-ttu-id="5e18c-213"><xref:System.Net.ServicePoint> オブジェクトに関連付けられている接続の一覧が空の場合、<xref:System.Net.ServicePoint> オブジェクトはアイドル状態になります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-213">A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-214">このプロパティを設定するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-214">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]
 [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]
 [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e18c-215"><see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> が <see cref="F:System.Threading.Timeout.Infinite" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="5e18c-215"><see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> is less than <see cref="F:System.Threading.Timeout.Infinite" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="5e18c-216">無制限の Web アクセス許可の場合。</span><span class="sxs-lookup"><span data-stu-id="5e18c-216">For unrestricted Web permissions.</span></span> <span data-ttu-id="5e18c-217">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e18c-217">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="MaxServicePoints">
      <MemberSignature Language="C#" Value="public static int MaxServicePoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxServicePoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.MaxServicePoints" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxServicePoints As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxServicePoints { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxServicePoints : int with get, set" Usage="System.Net.ServicePointManager.MaxServicePoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-218">同時に維持される <see cref="T:System.Net.ServicePoint" /> オブジェクトの最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-218">Gets or sets the maximum number of <see cref="T:System.Net.ServicePoint" /> objects to maintain at any time.</span></span></summary>
        <value><span data-ttu-id="5e18c-219">維持される <see cref="T:System.Net.ServicePoint" /> オブジェクトの最大数。</span><span class="sxs-lookup"><span data-stu-id="5e18c-219">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects to maintain.</span></span> <span data-ttu-id="5e18c-220">既定値は 0 です。これは <see cref="T:System.Net.ServicePoint" /> オブジェクトの数に制限がないことを示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-220">The default value is 0, which means there is no limit to the number of <see cref="T:System.Net.ServicePoint" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-221">現在存在している <xref:System.Net.ServicePoint> オブジェクトの数を下回るように <xref:System.Net.ServicePointManager.MaxServicePoints%2A> プロパティを小さくすると、アイドル時間が最も長い <xref:System.Net.ServicePoint> オブジェクトが <xref:System.Net.ServicePointManager> によって削除されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-221">When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times.</span></span> <span data-ttu-id="5e18c-222">アクティブな接続を持つ <xref:System.Net.ServicePoint> オブジェクトの数が <xref:System.Net.ServicePointManager.MaxServicePoints%2A>の値よりも大きい場合、<xref:System.Net.ServicePointManager> オブジェクトは、アイドル状態になった <xref:System.Net.ServicePoint> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-222">If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-223">このプロパティを設定するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-223">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]
 [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]
 [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e18c-224"><see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> が 0 未満であるか、または <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-224"><see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="5e18c-225">無制限の Web アクセス許可の場合。</span><span class="sxs-lookup"><span data-stu-id="5e18c-225">for unrestricted Web permissions.</span></span> <span data-ttu-id="5e18c-226">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e18c-226">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="ReusePort">
      <MemberSignature Language="C#" Value="public static bool ReusePort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ReusePort" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ReusePort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ReusePort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ReusePort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReusePort : bool with get, set" Usage="System.Net.ServicePointManager.ReusePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-227">このプロパティの値を <see langword="true" /> に設定すると、HttpWebRequest からのすべての発信 TCP 接続において、ソケットでネイティブ ソケット オプション SO_REUSE_UNICASTPORT が使用されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-227">Setting this property value to <see langword="true" /> causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket.</span></span> <span data-ttu-id="5e18c-228">これにより、基になる発信ポートが共有されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-228">This causes the underlying outgoing ports to be shared.</span></span> <span data-ttu-id="5e18c-229">これは、多数の発信接続が短時間で作成される場合や、アプリにポート不足の危険がある場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-229">This is useful for scenarios where a large number of outgoing connections are made in a short time, and the app risks running out of ports.</span></span></summary>
        <value><span data-ttu-id="5e18c-230"><see cref="T:System.Boolean" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-230">Returns <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-231">既定値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-231">The default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityProtocol">
      <MemberSignature Language="C#" Value="public static System.Net.SecurityProtocolType SecurityProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.SecurityProtocolType SecurityProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.SecurityProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SecurityProtocol As SecurityProtocolType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::SecurityProtocolType SecurityProtocol { System::Net::SecurityProtocolType get(); void set(System::Net::SecurityProtocolType value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityProtocol : System.Net.SecurityProtocolType with get, set" Usage="System.Net.ServicePointManager.SecurityProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.SecurityProtocolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-232">その <see cref="T:System.Net.ServicePointManager" /> オブジェクトが管理する <see cref="T:System.Net.ServicePoint" /> オブジェクトで使用されるセキュリティ プロトコルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-232">Gets or sets the security protocol used by the <see cref="T:System.Net.ServicePoint" /> objects managed by the <see cref="T:System.Net.ServicePointManager" /> object.</span></span></summary>
        <value><span data-ttu-id="5e18c-233"><see cref="T:System.Net.SecurityProtocolType" /> 列挙値に定義されている値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="5e18c-233">One of the values defined in the <see cref="T:System.Net.SecurityProtocolType" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="5e18c-234">このプロパティは、新しい接続に使用する Secure Sockets Layer (SSL) またはトランスポート層セキュリティ (TLS) プロトコルのバージョンを選択します。既存の接続は変更されません。</span><span class="sxs-lookup"><span data-stu-id="5e18c-234">This property selects the version of the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to use for new connections; existing connections aren't changed.</span></span>  
  
<span data-ttu-id="5e18c-235">.NET Framework 4.7 以降では、このプロパティの既定値は <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-235">Starting with the .NET Framework 4.7, the default value of this property is <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e18c-236">これにより、<xref:System.Net.Security.SslStream> (FTP、HTTP、SMTP など) に基づくネットワーク Api を .NET Framework、オペレーティングシステムから、またはシステム管理者によって実行されるカスタム構成から、既定のセキュリティプロトコルを継承することができます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-236">This allows .NET Framework networking APIs based on <xref:System.Net.Security.SslStream> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator.</span></span> <span data-ttu-id="5e18c-237">Windows オペレーティングシステムの各バージョンで既定で有効になっている SSL/TLS プロトコルの詳細については、「 [TLS/SSL (SCHANNEL SSP) のプロトコル](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e18c-237">For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  [Protocols in TLS/SSL (Schannel SSP)](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx).</span></span>
 
<span data-ttu-id="5e18c-238">.NET Framework 4.6.2 を通じて .NET Framework のバージョンの場合、このプロパティには既定値が表示されません。</span><span class="sxs-lookup"><span data-stu-id="5e18c-238">For versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property.</span></span> <span data-ttu-id="5e18c-239">セキュリティのランドスケープは絶えず変化し、既知の弱点を避けるために、既定のプロトコルと保護レベルは時間の経過と共に変更されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-239">The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses.</span></span> <span data-ttu-id="5e18c-240">既定値は、個々のコンピューターの構成、インストールされているソフトウェア、適用されている修正プログラムによって異なります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-240">Defaults vary depending on individual machine configuration, installed software, and applied patches.</span></span>  
  
 <span data-ttu-id="5e18c-241">コードは、特定の保護レベルを使用するか、特定のセキュリティレベルが既定で使用されることを前提として、暗黙的に依存しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-241">Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default.</span></span> <span data-ttu-id="5e18c-242">アプリが特定のセキュリティレベルの使用に依存している場合は、そのレベルを明示的に指定し、確立された接続で実際に使用されていることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-242">If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection.</span></span> <span data-ttu-id="5e18c-243">さらに、コードは、サポートされるプロトコルが変更された場合に堅牢であるように設計する必要があります。このような変更は、多くの場合、新しい脅威を軽減するためにほとんど事前通知が行われます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-243">Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.</span></span>  
  
 <span data-ttu-id="5e18c-244">.NET Framework 4.6 には、安全でない暗号およびハッシュ アルゴリズムの接続をブロックする、新しいセキュリティ機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-244">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="5e18c-245">HttpClient、HttpWebRequest、FTPClient、SmtpClient、SslStream などの API を介して TLS/SSL を使用して、.NET Framework 4.6 を対象とするアプリケーションは、既定でセキュリティが強化された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-245">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="5e18c-246">開発者は、既存の SSL3 サービスや TLS (RC4) サービスとの相互運用性を維持するために、この動作を無効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-246">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="5e18c-247">[この記事で](https://support.microsoft.com/kb/3069494)は、新しい動作が無効になるようにコードを変更する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-247">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5e18c-248">プロパティを設定するために指定された値が有効な <see cref="T:System.Net.SecurityProtocolType" /> 列挙値ではありません。</span><span class="sxs-lookup"><span data-stu-id="5e18c-248">The value specified to set the property is not a valid <see cref="T:System.Net.SecurityProtocolType" /> enumeration value.</span></span></exception>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.SecurityProtocolType" />
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public static System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ServerCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Security::RemoteCertificateValidationCallback ^ ServerCertificateValidationCallback { System::Net::Security::RemoteCertificateValidationCallback ^ get(); void set(System::Net::Security::RemoteCertificateValidationCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateValidationCallback : System.Net.Security.RemoteCertificateValidationCallback with get, set" Usage="System.Net.ServicePointManager.ServerCertificateValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-249">サーバー証明書を検証するコールバックを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-249">Gets or sets the callback to validate a server certificate.</span></span></summary>
        <value><span data-ttu-id="5e18c-250"><see cref="T:System.Net.Security.RemoteCertificateValidationCallback" />。</span><span class="sxs-lookup"><span data-stu-id="5e18c-250">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" />.</span></span> <span data-ttu-id="5e18c-251">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-251">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="5e18c-252">アプリケーションでは、<xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> プロパティを、サーバー証明書のクライアントによるカスタム検証に使用するメソッドに設定できます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-252">An application can set the <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> property to a method to use for custom validation by the client of the server certificate.</span></span> <span data-ttu-id="5e18c-253">カスタム検証を行う場合、<xref:System.Net.Security.RemoteCertificateValidationCallback> に渡される `sender` パラメーターには、ホスト文字列名、または <xref:System.Net.ServicePointManager.CertificatePolicy%2A> プロパティに応じて <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>など) から派生したオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-253">When doing custom validation, the `sender` parameter passed to the <xref:System.Net.Security.RemoteCertificateValidationCallback> can be a host string name or an object derived from <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>, for example) depending on the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property.</span></span>  
  
<span data-ttu-id="5e18c-254">カスタム検証を使用しない場合、証明書の名前は、要求の作成に使用されたホスト名と比較されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-254">When custom validation is not used, the certificate name is compared with the host name used to create the request.</span></span> <span data-ttu-id="5e18c-255">たとえば、<xref:System.Net.WebRequest.Create%28System.String%29> に `"https://www.contoso.com/default.html"`のパラメーターが渡された場合、既定の動作では、クライアントは `www.contoso.com`に対して証明書をチェックします。</span><span class="sxs-lookup"><span data-stu-id="5e18c-255">For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of `"https://www.contoso.com/default.html"`, the default behavior is for the client to check the certificate against `www.contoso.com`.</span></span>  

<span data-ttu-id="5e18c-256">マルチキャストデリゲートであるにもかかわらず、最後に実行されたイベントハンドラーから返される値だけが権限のあるものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-256">Despite being a multicast delegate, only the value returned from the last-executed event handler is considered authoritative.</span></span> <span data-ttu-id="5e18c-257">つまり、複数のデリゲートをアタッチすることができ、すべてのデリゲートが <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>からコールバックを取得します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-257">In other words, you can attach multiple delegates, and they all get a callback from <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>.</span></span> <span data-ttu-id="5e18c-258">各コールバックは、証明書が受け入れられているかどうかを示す値を返します。ただし、最後のデリゲートの値のみが尊重されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-258">Each callback returns a value that indicates whether the certificate is accepted or not; however, only the value from the last delegate is respected.</span></span>
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5e18c-259"><see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" /> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-259">to set the <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" /> property.</span></span> <span data-ttu-id="5e18c-260"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="5e18c-260">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span></span></permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="ServerCipherSuitesCallback">
      <MemberSignature Language="C#" Value="public static System.Net.CipherSuitesCallback ServerCipherSuitesCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.CipherSuitesCallback ServerCipherSuitesCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ServerCipherSuitesCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ServerCipherSuitesCallback As CipherSuitesCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::CipherSuitesCallback ^ ServerCipherSuitesCallback { System::Net::CipherSuitesCallback ^ get(); void set(System::Net::CipherSuitesCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCipherSuitesCallback : System.Net.CipherSuitesCallback with get, set" Usage="System.Net.ServicePointManager.ServerCipherSuitesCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("This API is no longer supported.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CipherSuitesCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public static void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="F#" Value="static member SetTcpKeepAlive : bool * int * int -&gt; unit" Usage="System.Net.ServicePointManager.SetTcpKeepAlive (enabled, keepAliveTime, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveTime" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enabled"><span data-ttu-id="5e18c-261">true に設定すると、指定された <paramref name="keepAliveTime" /> 値および <paramref name="keepAliveInterval" /> 値を使用して、TCP 接続の TCP keep-alive オプションが有効になります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-261">If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <paramref name="keepAliveTime" /> and <paramref name="keepAliveInterval" /> values.</span></span>  
  
<span data-ttu-id="5e18c-262">false に設定すると、TCP keep-alive オプションが無効になり、残りのパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-262">If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.</span></span>  
  
<span data-ttu-id="5e18c-263">既定値は false です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-263">The default value is false.</span></span></param>
        <param name="keepAliveTime"><span data-ttu-id="5e18c-264">最初の keep-alive パケットが送信されるまで活動を行わないタイムアウト値をミリ秒単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-264">Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span>  
  
<span data-ttu-id="5e18c-265">値は 0 よりも大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-265">The value must be greater than 0.</span></span>  <span data-ttu-id="5e18c-266">0 またはそれより小さい値が渡されると、<see cref="T:System.ArgumentOutOfRangeException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-266">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="5e18c-267">受信確認が受信されない場合に、連続する keep-alive パケットが送信されるときの間隔をミリ秒単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-267">Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span>  
  
<span data-ttu-id="5e18c-268">値は 0 よりも大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e18c-268">The value must be greater than 0.</span></span>  <span data-ttu-id="5e18c-269">0 またはそれより小さい値が渡されると、<see cref="T:System.ArgumentOutOfRangeException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-269">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="5e18c-270">TCP 接続での keep-alive オプションを有効または無効にします。</span><span class="sxs-lookup"><span data-stu-id="5e18c-270">Enables or disables the keep-alive option on a TCP connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-271">アプリケーションでは、tcp 接続での keep-alive パケットの使用を TCP/IP プロバイダーに許可するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-271">An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection.</span></span> <span data-ttu-id="5e18c-272">既定では、TCP 接続でのキープアライブパケットの使用は無効になっています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-272">The default is that the use of keep-alive packets on a TCP connection is disabled.</span></span>  
  
 <span data-ttu-id="5e18c-273">TCP ソケットが初期化されるときの既定の設定では、キープアライブタイムアウトは2時間、キープアライブ間隔は1秒に設定されます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-273">The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second.</span></span> <span data-ttu-id="5e18c-274">`keepAliveTime` パラメーターでは、最初のキープアライブパケットが送信されるまで、アクティビティを含まないタイムアウトをミリ秒単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-274">The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span> <span data-ttu-id="5e18c-275">`keepAliveInterval` パラメーターは、受信確認が受信されなかった場合に、連続したキープアライブパケットが送信される間隔をミリ秒単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-275">The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span> <span data-ttu-id="5e18c-276">キープアライブプローブの数は変更できません。また、は10に設定されています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-276">The number of keep-alive probes cannot be changed and is set to 10.</span></span>  
  
 <span data-ttu-id="5e18c-277">キープアライブの結果として TCP 接続が削除されると、<xref:System.Net.Sockets.SocketError.NetworkReset> の <xref:System.Net.Sockets.SocketError> がソケットで進行中の呼び出しに返され、以降の呼び出しは <xref:System.Net.Sockets.SocketError.NotConnected>の <xref:System.Net.Sockets.SocketError> で失敗します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-277">If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e18c-278"><paramref name="keepAliveTime" /> パラメーターまたは <paramref name="keepAliveInterval" /> パラメーターに指定された値が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-278">The value specified for <paramref name="keepAliveTime" /> or <paramref name="keepAliveInterval" /> parameter is less than or equal to 0.</span></span></exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public static bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseNagleAlgorithm : bool with get, set" Usage="System.Net.ServicePointManager.UseNagleAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e18c-279">この <see cref="T:System.Net.ServicePointManager" /> オブジェクトが管理するサービス ポイントで Nagle アルゴリズムが使用されるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-279">Determines whether the Nagle algorithm is used by the service points managed by this <see cref="T:System.Net.ServicePointManager" /> object.</span></span></summary>
        <value><span data-ttu-id="5e18c-280">Nagle アルゴリズムを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5e18c-280"><see langword="true" /> to use the Nagle algorithm; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e18c-281">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e18c-281">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e18c-282">Nagle アルゴリズムを使用して、小さいデータパケットをバッファリングし、それらを1つのパケットとして送信することにより、ネットワークトラフィックを削減します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-282">The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet.</span></span> <span data-ttu-id="5e18c-283">このプロセスは、"nagling" とも呼ばれます。送信されるパケットの数が減り、パケットあたりのオーバーヘッドが減少するため、広く使用されています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-283">This process is also referred to as "nagling"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.</span></span>  
  
 <span data-ttu-id="5e18c-284">このプロパティの値を変更しても、既存の <xref:System.Net.ServicePoint> オブジェクトには影響しません。</span><span class="sxs-lookup"><span data-stu-id="5e18c-284">Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="5e18c-285">変更後に作成された新しいサービスポイントのみが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="5e18c-285">Only new service points created after the change are affected.</span></span>  
  
 <span data-ttu-id="5e18c-286">Nagle アルゴリズムは、IETF RFC 896 で完全に記述されています。</span><span class="sxs-lookup"><span data-stu-id="5e18c-286">The Nagle algorithm is fully described in IETF RFC 896.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e18c-287">このプロパティを設定するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e18c-287">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
  </Members>
</Type>
