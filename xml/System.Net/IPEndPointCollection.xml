<Type Name="IPEndPointCollection" FullName="System.Net.IPEndPointCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07fffe444a60bfce6d3f92ed13e2be5c4b84e06a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78819570" /></Metadata><TypeSignature Language="C#" Value="public class IPEndPointCollection : System.Collections.ObjectModel.Collection&lt;System.Net.IPEndPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit IPEndPointCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Net.IPEndPoint&gt;" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Net.IPEndPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class IPEndPointCollection&#xA;Inherits Collection(Of IPEndPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPEndPointCollection : System::Collections::ObjectModel::Collection&lt;System::Net::IPEndPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type IPEndPointCollection = class&#xA;    inherit Collection&lt;IPEndPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IPEndPointCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Net.IPEndPoint&gt;" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Net.IPEndPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Net.IPEndPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="84132-101">ネットワーク エンドポイントを <see cref="T:System.Net.IPEndPoint" /> オブジェクトとして格納するために使用されるコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="84132-101">Represents a collection used to store network endpoints as <see cref="T:System.Net.IPEndPoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84132-102"><xref:System.Net.IPEndPointCollection> クラスは、<xref:System.Collections.ObjectModel.Collection%601?displayProperty=nameWithType> クラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="84132-102">The <xref:System.Net.IPEndPointCollection> class is derived from the <xref:System.Collections.ObjectModel.Collection%601?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="84132-103"><xref:System.Net.IPEndPoint> クラスには、ホストおよびホスト上のサービスに接続するためにアプリケーションが必要とするローカルまたはリモートのポート情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="84132-103">The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host.</span></span> <span data-ttu-id="84132-104">サービスのホストの IP アドレスとポート番号を組み合わせることによって、<xref:System.Net.IPEndPoint> クラスはサービスへのコネクションポイントを形成します。</span><span class="sxs-lookup"><span data-stu-id="84132-104">By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.</span></span>  
  
 <span data-ttu-id="84132-105"><xref:System.Net.IPEndPointCollection> クラスは、<xref:System.Net.PeerToPeer?displayProperty=nameWithType> 名前空間のクラスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="84132-105">The <xref:System.Net.IPEndPointCollection> class is used by classes in the <xref:System.Net.PeerToPeer?displayProperty=nameWithType> namespace.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="84132-106">パブリック静的 (Visual Basic では<see langword="Shared" />) なこの型のメンバーはスレッド セーフです</span><span class="sxs-lookup"><span data-stu-id="84132-106">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="84132-107">インスタンス メンバーについては、スレッド セーフであることの保証はありません。</span><span class="sxs-lookup"><span data-stu-id="84132-107">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="84132-108"><see cref="T:System.Net.IPEndPointCollection" /> は、コレクションが変更されていない限り、複数のリーダーを同時にサポートできます。</span><span class="sxs-lookup"><span data-stu-id="84132-108">A <see cref="T:System.Net.IPEndPointCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="84132-109">それでも、コレクションを列挙することは、本質的にはスレッドセーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="84132-109">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="84132-110">列挙処理でスレッド セーフを確保するために、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="84132-110">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="84132-111">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="84132-111">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPointCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPointCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84132-112"><see cref="T:System.Net.IPEndPointCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="84132-112">Initializes a new instance of the <see cref="T:System.Net.IPEndPointCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Net.IPEndPoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Net.IPEndPoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Net::IPEndPoint ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Net.IPEndPoint -&gt; unit" Usage="iPEndPointCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="84132-113"><paramref name="item" /> の挿入先である、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="84132-113">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="84132-114">挿入する <see cref="T:System.Net.IPEndPoint" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="84132-114">The <see cref="T:System.Net.IPEndPoint" /> object to insert.</span></span> <span data-ttu-id="84132-115">参照型の場合は <see langword="null" /> の値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="84132-115">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="84132-116"><see cref="T:System.Net.IPEndPoint" /> の指定のインデックス位置に <see cref="T:System.Net.IPEndPointCollection" /> 要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="84132-116">Inserts an <see cref="T:System.Net.IPEndPoint" /> element into the <see cref="T:System.Net.IPEndPointCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84132-117"><xref:System.Net.IPEndPointCollection> は、`null` を有効な値として受け入れません。</span><span class="sxs-lookup"><span data-stu-id="84132-117"><xref:System.Net.IPEndPointCollection> does not accept `null` as a valid value.</span></span> <span data-ttu-id="84132-118"><xref:System.Net.IPEndPointCollection> では、重複する要素を使用できます。</span><span class="sxs-lookup"><span data-stu-id="84132-118"><xref:System.Net.IPEndPointCollection> allows duplicate elements.</span></span>  
  
 <span data-ttu-id="84132-119">`index` が <xref:System.Net.IPEndPointCollection> 内の現在の項目数と等しい場合、`item` は <xref:System.Net.IPEndPointCollection>の最後に追加されます。</span><span class="sxs-lookup"><span data-stu-id="84132-119">If `index` is equal to current count of items in the <xref:System.Net.IPEndPointCollection> , then the `item` is added to the end of <xref:System.Net.IPEndPointCollection>.</span></span>  
  
 <span data-ttu-id="84132-120">このメソッドは O(`n`) 操作です。`n` は <xref:System.Collections.ObjectModel.Collection%601.Count%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="84132-120">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="84132-121"><paramref name="index" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="84132-121">The <paramref name="index" /> parameter is less than zero</span></span> 
<span data-ttu-id="84132-122">または</span><span class="sxs-lookup"><span data-stu-id="84132-122">-or-</span></span> 
<span data-ttu-id="84132-123"><paramref name="index" /> パラメーターが <see cref="T:System.Net.IPEndPointCollection" /> 内の現在の項目数を超える値です。</span><span class="sxs-lookup"><span data-stu-id="84132-123">the <paramref name="index" /> parameter is greater than the current count of items in the <see cref="T:System.Net.IPEndPointCollection" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84132-124"><paramref name="item" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="84132-124">The <paramref name="item" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Net.IPEndPoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Net.IPEndPoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Net::IPEndPoint ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Net.IPEndPoint -&gt; unit" Usage="iPEndPointCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="84132-125">置換する要素の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="84132-125">The zero-based index of the element to replace.</span></span></param>
        <param name="item"><span data-ttu-id="84132-126">指定したインデックス位置に存在する要素の新しい <see cref="T:System.Net.IPEndPoint" /> 値。</span><span class="sxs-lookup"><span data-stu-id="84132-126">The new <see cref="T:System.Net.IPEndPoint" /> value for the element at the specified index.</span></span> <span data-ttu-id="84132-127">参照型の場合は <see langword="null" /> の値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="84132-127">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="84132-128">指定したインデックス位置にある <see cref="T:System.Net.IPEndPoint" /> 要素を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="84132-128">Replaces the <see cref="T:System.Net.IPEndPoint" /> element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84132-129"><xref:System.Net.IPEndPointCollection> は、`null` を有効な値として受け入れません。</span><span class="sxs-lookup"><span data-stu-id="84132-129"><xref:System.Net.IPEndPointCollection> does not accept `null` as a valid value.</span></span> <span data-ttu-id="84132-130"><xref:System.Net.IPEndPointCollection> では、重複する要素を使用できます。</span><span class="sxs-lookup"><span data-stu-id="84132-130"><xref:System.Net.IPEndPointCollection> allows duplicate elements.</span></span>  
  
 <span data-ttu-id="84132-131">このメソッドは、O(1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="84132-131">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="84132-132"><paramref name="index" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="84132-132">The <paramref name="index" /> parameter is less than zero</span></span> 
<span data-ttu-id="84132-133">または</span><span class="sxs-lookup"><span data-stu-id="84132-133">-or-</span></span> 
<span data-ttu-id="84132-134"><paramref name="index" /> パラメーターが <see cref="T:System.Net.IPEndPointCollection" /> 内の現在の項目数を超える値です。</span><span class="sxs-lookup"><span data-stu-id="84132-134">the <paramref name="index" /> parameter is greater than the current count of items in the <see cref="T:System.Net.IPEndPointCollection" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84132-135"><paramref name="item" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="84132-135">The <paramref name="item" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
