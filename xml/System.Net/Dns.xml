<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata><Meta Name="ms.openlocfilehash" Value="648f7011534a9288411335d1ffb8820f86a727ed" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75110197" /></Metadata><TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7abc6-101">単純なドメイン名解決機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-101">Provides simple domain name resolution functionality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-102"><xref:System.Net.Dns> クラスは、インターネットドメインネームシステム (DNS) から特定のホストに関する情報を取得する静的クラスです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-102">The <xref:System.Net.Dns> class is a static class that retrieves information about a specific host from the Internet Domain Name System (DNS).</span></span>  
  
 <span data-ttu-id="7abc6-103">DNS クエリからのホスト情報は、<xref:System.Net.IPHostEntry> クラスのインスタンスで返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-103">The host information from the DNS query is returned in an instance of the <xref:System.Net.IPHostEntry> class.</span></span> <span data-ttu-id="7abc6-104">指定したホストに DNS データベースに複数のエントリがある場合、<xref:System.Net.IPHostEntry> には複数の IP アドレスとエイリアスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-104">If the specified host has more than one entry in the DNS database, <xref:System.Net.IPHostEntry> contains multiple IP addresses and aliases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-105">次の例では、DNS データベースに対して、ホスト `www.contoso.com`に関する情報を照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-105">The following example queries the DNS database for information on the host `www.contoso.com`.</span></span>  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="7abc6-106">解決するホスト名または IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-106">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="7abc6-107">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="7abc6-107">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="7abc6-108">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-108">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="7abc6-109">このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-109">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="7abc6-110">指定したホストのインターネット プロトコル (IP) アドレスを非同期的に返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-110">Asynchronously returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="7abc6-111">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-111">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-112"><xref:System.Net.Dns.BeginGetHostAddresses%2A> メソッドは、DNS サーバーに対して、ホスト名に関連付けられている IP アドレスを非同期的に照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-112">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method asynchronously queries a DNS server for the IP addresses that are associated with a host name.</span></span> <span data-ttu-id="7abc6-113">`hostNameOrAddress` が IP アドレスの場合は、DNS サーバーにクエリを実行せずにこのアドレスが返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-113">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-114">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-114">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-115">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-115">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="7abc6-116">`hostNameOrAddress` 引数として空の文字列が渡された場合、このメソッドはローカルホストの IPv4 アドレスと IPv6 アドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-116">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="7abc6-117">非同期 <xref:System.Net.Dns.BeginGetHostAddresses%2A> 操作は、<xref:System.Net.Dns.EndGetHostAddresses%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-117">The asynchronous <xref:System.Net.Dns.BeginGetHostAddresses%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostAddresses%2A> method.</span></span> <span data-ttu-id="7abc6-118">通常、メソッドは `requestCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-118">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7abc6-119">このメソッドは、操作が完了するまでブロックしません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-119">This method does not block until the operation is complete.</span></span> <span data-ttu-id="7abc6-120">操作が完了するまでブロックするには、<xref:System.Net.Dns.GetHostAddresses%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-120">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostAddresses%2A> method.</span></span>  
  
 <span data-ttu-id="7abc6-121">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-121">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-122"><paramref name="hostNameOrAddress" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-122"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7abc6-123"><paramref name="hostNameOrAddress" /> の長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-123">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-124"><paramref name="hostNameOrAddress" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-124">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-125"><paramref name="hostNameOrAddress" /> は無効な IP アドレスです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-125"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-126">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-126">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-127">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-127">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="7abc6-128">ホストの DNS 名。</span><span class="sxs-lookup"><span data-stu-id="7abc6-128">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="7abc6-129">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="7abc6-129">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="7abc6-130">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-130">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="7abc6-131">このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-131">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="7abc6-132">指定した DNS ホスト名についての <see cref="T:System.Net.IPHostEntry" /> 情報の非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-132">Begins an asynchronous request for <see cref="T:System.Net.IPHostEntry" /> information about the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="7abc6-133">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-133">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-134">非同期 <xref:System.Net.Dns.BeginGetHostByName%2A> 操作は、<xref:System.Net.Dns.EndGetHostByName%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-134">The asynchronous <xref:System.Net.Dns.BeginGetHostByName%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostByName%2A> method.</span></span> <span data-ttu-id="7abc6-135">通常、メソッドは `requestCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-135">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7abc6-136">このメソッドは、操作が完了するまでブロックしません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-136">This method does not block until the operation is complete.</span></span> <span data-ttu-id="7abc6-137">操作が完了するまでブロックするには、<xref:System.Net.Dns.GetHostByName%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-137">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="7abc6-138">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-138">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-139">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-139">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-140">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-140">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-141"><paramref name="hostName" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-141"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-142">DNS クエリの実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-142">An error was encountered executing the DNS query.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-143">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-143">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-144">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-144">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="7abc6-145">非同期プログラミングの概要</span><span class="sxs-lookup"><span data-stu-id="7abc6-145">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7abc6-146">ホスト名または IP アドレスを非同期的に <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-146">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="7abc6-147">解決する IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-147">The IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="7abc6-148">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="7abc6-148">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="7abc6-149">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-149">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="7abc6-150">このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-150">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="7abc6-151">IP アドレスを非同期的に <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-151">Asynchronously resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7abc6-152">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-152">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-153"><xref:System.Net.Dns.BeginGetHostEntry%2A> メソッドは、IP アドレスに関連付けられた IP アドレスとエイリアスを DNS サーバーに非同期的に照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-153">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method asynchronously queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="7abc6-154">**メモ**このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-154">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-155">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-155">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="7abc6-156">非同期 <xref:System.Net.Dns.BeginGetHostEntry%2A> 操作は、<xref:System.Net.Dns.EndGetHostEntry%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-156">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="7abc6-157">通常、メソッドは `requestCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-157">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7abc6-158">このメソッドは、操作が完了するまでブロックしません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-158">This method does not block until the operation is complete.</span></span> <span data-ttu-id="7abc6-159">操作が完了するまでブロックするには、<xref:System.Net.Dns.GetHostEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-159">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="7abc6-160">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-160">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-161">次のコード例では、<xref:System.Net.Dns.BeginGetHostEntry%2A> メソッドを使用して、IP アドレスを <xref:System.Net.IPHostEntry> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-161">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-162"><paramref name="address" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-162"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-163"><paramref name="address" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-163">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-164"><paramref name="address" /> は無効な IP アドレスです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-164"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-165">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-165">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-166">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-166">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="7abc6-167">解決するホスト名または IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-167">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="7abc6-168">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="7abc6-168">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="7abc6-169">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-169">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="7abc6-170">このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-170">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="7abc6-171">ホスト名または IP アドレスを非同期的に <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-171">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7abc6-172">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-172">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-173"><xref:System.Net.Dns.BeginGetHostEntry%2A> メソッドは、DNS サーバーに対して、ホスト名または IP アドレスに関連付けられている IP アドレスを照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-173">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="7abc6-174">**メモ**このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-174">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-175">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-175">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="7abc6-176">非同期 <xref:System.Net.Dns.BeginGetHostEntry%2A> 操作は、<xref:System.Net.Dns.EndGetHostEntry%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-176">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="7abc6-177">通常、メソッドは `requestCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-177">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7abc6-178">このメソッドは、操作が完了するまでブロックしません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-178">This method does not block until the operation is complete.</span></span> <span data-ttu-id="7abc6-179">操作が完了するまでブロックするには、<xref:System.Net.Dns.GetHostEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-179">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="7abc6-180">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-180">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-181">次のコード例では、<xref:System.Net.Dns.BeginGetHostEntry%2A> メソッドを使用して、IP アドレスを <xref:System.Net.IPHostEntry> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-181">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-182"><paramref name="hostNameOrAddress" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-182"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7abc6-183"><paramref name="hostNameOrAddress" /> の長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-183">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-184"><paramref name="hostNameOrAddress" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-184">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-185"><paramref name="hostNameOrAddress" /> は無効な IP アドレスです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-185"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-186">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-186">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-187">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-187">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="7abc6-188">ホストの DNS 名。</span><span class="sxs-lookup"><span data-stu-id="7abc6-188">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="7abc6-189">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="7abc6-189">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="7abc6-190">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-190">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="7abc6-191">このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-191">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="7abc6-192">非同期要求を開始して DNS ホスト名または IP アドレスを <see cref="T:System.Net.IPAddress" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-192">Begins an asynchronous request to resolve a DNS host name or IP address to an <see cref="T:System.Net.IPAddress" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7abc6-193">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-193">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-194">非同期 <xref:System.Net.Dns.BeginResolve%2A> 操作は、<xref:System.Net.Dns.EndResolve%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-194">The asynchronous <xref:System.Net.Dns.BeginResolve%2A> operation must be completed by calling the <xref:System.Net.Dns.EndResolve%2A> method.</span></span> <span data-ttu-id="7abc6-195">通常、メソッドは `requestCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-195">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7abc6-196">このメソッドは、操作が完了するまでブロックしません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-196">This method does not block until the operation is complete.</span></span> <span data-ttu-id="7abc6-197">操作が完了するまでブロックするには、<xref:System.Net.Dns.Resolve%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-197">To block until the operation is complete, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
 <span data-ttu-id="7abc6-198">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-198">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-199">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-199">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-200">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-201">次の例では、<xref:System.Net.Dns.BeginResolve%2A> を使用して、DNS ホスト名を <xref:System.Net.IPAddress>に解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-201">The following example uses <xref:System.Net.Dns.BeginResolve%2A> to resolve a DNS host name to an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-202"><paramref name="hostName" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-202"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-203">呼び出し元に、DNS 情報にアクセスするためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-203">The caller does not have permission to access DNS information.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-204">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-204">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-205">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-205">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="7abc6-206">非同期プログラミングの概要</span><span class="sxs-lookup"><span data-stu-id="7abc6-206">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7abc6-207"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-207">An <see cref="T:System.IAsyncResult" /> instance returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="7abc6-208">DNS 情報の非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-208">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="7abc6-209"><see cref="T:System.Net.IPAddress" /> の <paramref name="hostNameOrAddress" /> パラメーターで指定されたホストの IP アドレスを保持する <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="7abc6-209">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host specified by the <paramref name="hostNameOrAddress" /> parameter of <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-210"><xref:System.Net.Dns.BeginGetHostAddresses%2A> メソッドは、ホスト名に関連付けられた IP アドレスの DNS サーバーを照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-210">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="7abc6-211">`hostNameOrAddress` が IP アドレスの場合は、DNS サーバーにクエリを実行せずにこのアドレスが返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-211">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 <span data-ttu-id="7abc6-212">`hostNameOrAddress` 引数として空の文字列が渡された場合、このメソッドはローカルホストの IPv4 アドレスと IPv6 アドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-212">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="7abc6-213">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-213">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-214">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-214">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7abc6-215"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-215">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="7abc6-216">DNS 情報の非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-216">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="7abc6-217">ホストについての DNS 情報を格納する <see cref="T:System.Net.IPHostEntry" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-217">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-218">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="7abc6-218">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7abc6-219">この操作を同期的に実行するには、<xref:System.Net.Dns.GetHostByName%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-219">To perform this operation synchronously, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="7abc6-220"><xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> プロパティが `true`に設定されている場合、返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティはこのメソッドによって設定されず、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-220">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-221">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-221">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-222">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-222">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-223"><paramref name="asyncResult" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-223"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="7abc6-224">非同期プログラミングの概要</span><span class="sxs-lookup"><span data-stu-id="7abc6-224">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7abc6-225"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-225">An <see cref="T:System.IAsyncResult" /> instance returned by a call to an <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> method.</span></span></param>
        <summary><span data-ttu-id="7abc6-226">DNS 情報の非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-226">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="7abc6-227">ホストについてのアドレス情報を格納する <see cref="T:System.Net.IPHostEntry" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-227">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-228">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="7abc6-228">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7abc6-229">返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティは、このメソッドによって設定されることはなく、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-229">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="7abc6-230">この操作を同期的に実行するには、<xref:System.Net.Dns.GetHostEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-230">To perform this operation synchronously, use a <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-231">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-231">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-232">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-232">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-233"><paramref name="asyncResult" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-233"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7abc6-234"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-234">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="7abc6-235">DNS 情報の非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-235">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="7abc6-236">ホストについての DNS 情報を格納する <see cref="T:System.Net.IPHostEntry" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-236">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-237">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="7abc6-237">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7abc6-238"><xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> が `true`に設定されている場合、返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティはこのメソッドによって設定されず、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-238">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="7abc6-239">この操作を同期的に実行するには、<xref:System.Net.Dns.Resolve%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-239">To perform this operation synchronously, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-240">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-240">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-241">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-241">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-242">次の例では、DNS ホスト情報の非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-242">The following example ends an asynchronous request for DNS host information.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-243"><paramref name="asyncResult" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-243"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="7abc6-244">非同期プログラミングの概要</span><span class="sxs-lookup"><span data-stu-id="7abc6-244">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="7abc6-245">解決するホスト名または IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-245">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="7abc6-246">指定したホストのインターネット プロトコル (IP: Internet Protocol) アドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-246">Returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="7abc6-247"><see cref="T:System.Net.IPAddress" /> パラメーターで指定されたホストの IP アドレスを保持する <paramref name="hostNameOrAddress" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="7abc6-247">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-248"><xref:System.Net.Dns.GetHostAddresses%2A> メソッドは、ホスト名に関連付けられた IP アドレスの DNS サブシステムを照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-248">The <xref:System.Net.Dns.GetHostAddresses%2A> method queries the DNS subsystem for the IP addresses associated with a host name.</span></span> <span data-ttu-id="7abc6-249">`hostNameOrAddress` が IP アドレスの場合は、DNS サーバーにクエリを実行せずにこのアドレスが返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-249">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>
  
 <span data-ttu-id="7abc6-250">`hostNameOrAddress` 引数として空の文字列が渡された場合、このメソッドはローカルホストの IPv4 アドレスと IPv6 アドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-250">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="7abc6-251">Ipv6 アドレスは、ローカルコンピューターに IPv6 がインストールされていない場合、<xref:System.Net.Dns.GetHostAddresses%2A> 方法の結果からフィルター処理されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-251">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostAddresses%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="7abc6-252">その結果、`hostNameOrAddress` パラメーターで IPv6 の結果のみを使用できるようになった場合は、空の <xref:System.Net.IPAddress> インスタンスを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-252">As a result, it is possible to get back an empty <xref:System.Net.IPAddress> instance if only IPv6 results were available for the `hostNameOrAddress` parameter.</span></span>  
 
 <span data-ttu-id="7abc6-253">このメソッドは、基になるオペレーティングシステムの名前解決 Api (Windows 上の Win32 API getaddrinfo、その他のプラットフォームで同等の Api など) を使用して実装されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-253">This method is implemented using the underlying operating system's name resolution APIs (such as the Win32 API getaddrinfo on Windows, and equivalent APIs on other platforms).</span></span>  <span data-ttu-id="7abc6-254">`hosts` ファイルにホストが記述されている場合は、DNS サーバーにクエリを実行せずに IP アドレスまたはアドレスが返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-254">If a host is described in the `hosts` file, the IP address or addresses there will be returned without querying the DNS server.</span></span>

> [!NOTE]
>  <span data-ttu-id="7abc6-255">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-255">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-256">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-256">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-257">次のコード例では、<xref:System.Net.Dns.GetHostAddresses%2A> メソッドを使用して、IP アドレスを <xref:System.Net.IPAddress>型の配列に解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-257">The following code example uses the <xref:System.Net.Dns.GetHostAddresses%2A> method to resolve an IP address to an array of type <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-258"><paramref name="hostNameOrAddress" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-258"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7abc6-259"><paramref name="hostNameOrAddress" /> の長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-259">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-260"><paramref name="hostNameOrAddress" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-260">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-261"><paramref name="hostNameOrAddress" /> は無効な IP アドレスです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-261"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-262">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-262">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-263">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-263">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="7abc6-264">解決するホスト名または IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-264">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="7abc6-265">指定したホストのインターネット プロトコル (IP) アドレスを非同期操作として返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-265">Returns the Internet Protocol (IP) addresses for the specified host as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="7abc6-266">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-266">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="7abc6-267">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<see cref="T:System.Net.IPAddress" /> パラメーターで指定されたホストの IP アドレスを保持する <paramref name="hostNameOrAddress" /> 型の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-267">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-268">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-268">This operation will not block.</span></span> <span data-ttu-id="7abc6-269">返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、`hostNameOrAddress` が解決された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-269">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="7abc6-270">このメソッドは、ホスト名に関連付けられた IP アドレスを DNS サーバーに照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-270">This method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="7abc6-271">`hostNameOrAddress` が IP アドレスの場合は、DNS サーバーにクエリを実行せずにこのアドレスが返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-271">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-272"><paramref name="hostNameOrAddress" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-272"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7abc6-273"><paramref name="hostNameOrAddress" /> の長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-273">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-274"><paramref name="hostNameOrAddress" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-274">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-275"><paramref name="hostNameOrAddress" /> は無効な IP アドレスです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-275"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7abc6-276">IP アドレスの DNS ホスト情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-276">Gets DNS host information for an IP address.</span></span> <span data-ttu-id="7abc6-277">これらのメソッドは今後使用しません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-277">These methods are now obsolete.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="7abc6-278"><see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="7abc6-278">An <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <summary><span data-ttu-id="7abc6-279">指定した <see cref="T:System.Net.IPHostEntry" /> に対する <see cref="T:System.Net.IPAddress" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-279">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from the specified <see cref="T:System.Net.IPAddress" />.</span></span></summary>
        <returns><span data-ttu-id="7abc6-280"><see cref="T:System.Net.IPHostEntry" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-280">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-281">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-281">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-282">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-282">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-283">次の例では、<xref:System.Net.IPAddress>から <xref:System.Net.IPHostEntry> を作成します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-283">The following example creates a <xref:System.Net.IPHostEntry> from an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-284"><paramref name="address" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-284"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-285"><paramref name="address" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-285">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-286">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-286">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-287">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-287">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="7abc6-288">IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-288">An IP address.</span></span></param>
        <summary><span data-ttu-id="7abc6-289">IP アドレスから <see cref="T:System.Net.IPHostEntry" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-289">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from an IP address.</span></span></summary>
        <returns><span data-ttu-id="7abc6-290"><see cref="T:System.Net.IPHostEntry" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-290">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-291">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-291">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-292">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-293"><paramref name="address" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-293"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-294"><paramref name="address" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-294">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7abc6-295"><paramref name="address" /> が有効な IP アドレスではありません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-295"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-296">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-296">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-297">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="7abc6-298">ホストの DNS 名。</span><span class="sxs-lookup"><span data-stu-id="7abc6-298">The DNS name of the host.</span></span></param>
        <summary><span data-ttu-id="7abc6-299">指定した DNS ホスト名の DNS 情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-299">Gets the DNS information for the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="7abc6-300"><see cref="T:System.Net.IPHostEntry" /> で指定したアドレスのホスト情報を格納する <paramref name="hostName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-300">An <see cref="T:System.Net.IPHostEntry" /> object that contains host information for the address specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-301"><xref:System.Net.Dns.GetHostByName%2A> メソッドは、インターネット DNS サーバーにホスト情報を照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-301">The <xref:System.Net.Dns.GetHostByName%2A> method queries the Internet DNS server for host information.</span></span> <span data-ttu-id="7abc6-302">ホスト名として空の文字列を渡すと、このメソッドはローカルコンピューターの標準ホスト名を取得します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-302">If you pass an empty string as the host name, this method retrieves the standard host name for the local computer.</span></span>  
  
 <span data-ttu-id="7abc6-303">DNS 情報に非同期にアクセスするには、<xref:System.Net.Dns.BeginGetHostByName%2A> および <xref:System.Net.Dns.EndGetHostByName%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-303">For asynchronous access to DNS information, use the <xref:System.Net.Dns.BeginGetHostByName%2A> and <xref:System.Net.Dns.EndGetHostByName%2A> methods.</span></span>  
  
 <span data-ttu-id="7abc6-304"><xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> プロパティが `true`に設定されている場合、返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティはこのメソッドによって設定されず、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-304">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-305">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-305">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-306">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-306">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-307">次の例では、<xref:System.Net.Dns.GetHostByName%2A> メソッドを使用して、指定された DNS ホスト名の DNS 情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-307">The following example uses the <xref:System.Net.Dns.GetHostByName%2A> method to get the DNS information for the specified DNS host name.</span></span>  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-308"><paramref name="hostName" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-308"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7abc6-309"><paramref name="hostName" /> の長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-309">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-310"><paramref name="hostName" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-310">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-311">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-311">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-312">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-312">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7abc6-313">ホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-313">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="7abc6-314">IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-314">An IP address.</span></span></param>
        <summary><span data-ttu-id="7abc6-315">IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-315">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7abc6-316"><see cref="T:System.Net.IPHostEntry" /> で指定するホストについてのアドレス情報を格納する <paramref name="address" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-316">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-317"><xref:System.Net.Dns.GetHostEntry%2A> メソッドは、IP アドレスに関連付けられた IP アドレスとエイリアスを DNS サーバーに照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-317">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="7abc6-318">Ipv6 アドレスは、ローカルコンピューターに IPv6 がインストールされていない場合、<xref:System.Net.Dns.GetHostEntry%2A> 方法の結果からフィルター処理されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-318">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="7abc6-319">その結果、`address` パラメーターで IPv6 の結果のみを使用できるようになった場合は、空の <xref:System.Net.IPHostEntry> インスタンスを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-319">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results were available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="7abc6-320">返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティは、このメソッドによって設定されることはなく、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-320">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-321">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-321">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-322">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-322">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  

## Examples  
 <span data-ttu-id="7abc6-323">次のコード例では、<xref:System.Net.Dns.GetHostEntry%2A> メソッドを使用して、IP アドレスを <xref:System.Net.IPHostEntry> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-323">The following code example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-324"><paramref name="address" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-324"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-325"><paramref name="address" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-325">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-326"><paramref name="address" /> は無効な IP アドレスです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-326"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-327">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-327">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-328">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-328">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="7abc6-329">解決するホスト名または IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-329">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="7abc6-330">ホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-330">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7abc6-331"><see cref="T:System.Net.IPHostEntry" /> で指定するホストについてのアドレス情報を格納する <paramref name="hostNameOrAddress" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-331">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-332"><xref:System.Net.Dns.GetHostEntry%2A> メソッドは、DNS サーバーに対して、ホスト名または IP アドレスに関連付けられている IP アドレスを照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-332">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="7abc6-333">`hostNameOrAddress` 引数として空の文字列が渡された場合、このメソッドはローカルホストの IPv4 アドレスと IPv6 アドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-333">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="7abc6-334">ホスト名が見つからなかった場合は、<xref:System.Net.Sockets.SocketException> 例外が 11001 (Windows Sockets error WSAHOST_NOT_FOUND) の値と共に返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-334">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="7abc6-335">この例外は、DNS サーバーが応答しない場合に返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-335">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="7abc6-336">この例外は、名前が公式のホスト名または別名でない場合や、クエリ対象のデータベースに見つからない場合にも返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-336">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="7abc6-337"><xref:System.ArgumentException> 例外は、`hostNameOrAddress` パラメーターに <xref:System.Net.IPAddress.Any> または <xref:System.Net.IPAddress.IPv6Any>が含まれている場合にも返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-337">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="7abc6-338"><xref:System.Net.Dns.GetHostEntry%2A> メソッドは、`hostNameOrAddress` パラメーターに IP リテラル文字列が渡された場合、すべてのプロパティセットと共に返される <xref:System.Net.IPHostEntry> インスタンスをアプリケーションが必要とすることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-338">The <xref:System.Net.Dns.GetHostEntry%2A> method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="7abc6-339">これらのプロパティには、<xref:System.Net.IPHostEntry.AddressList%2A>、<xref:System.Net.IPHostEntry.Aliases%2A>、<xref:System.Net.IPHostEntry.HostName%2A>が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-339">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="7abc6-340">その結果、<xref:System.Net.Dns.GetHostEntry%2A> メソッドの実装では、IP 文字列リテラルが渡されたときに次の動作が行われます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-340">As a result, the implementation of the <xref:System.Net.Dns.GetHostEntry%2A> method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="7abc6-341">メソッドは、アドレスを解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="7abc6-341">The method tries to parse the address.</span></span> <span data-ttu-id="7abc6-342">`hostNameOrAddress` パラメーターに有効な IP 文字列リテラルが含まれている場合、最初のフェーズは成功します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-342">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="7abc6-343">IP 文字列リテラルの IP アドレスを使用した逆引き参照で、ホスト名を取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-343">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="7abc6-344">この結果は、<xref:System.Net.IPHostEntry.HostName%2A> プロパティとして設定されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-344">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="7abc6-345">この逆引き参照のホスト名を使用して、名前に関連付けられているすべての可能な IP アドレスを取得し、<xref:System.Net.IPHostEntry.AddressList%2A> プロパティとして設定します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-345">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="7abc6-346">IPv4 文字列リテラルの場合、上記の3つの手順はすべて成功する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-346">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="7abc6-347">ただし、実際には別のホストに属している IPv4 アドレスの古い DNS レコードが返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-347">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="7abc6-348">これにより、ステップ #3 が失敗し、例外がスローされる可能性があります (IPv4 アドレスには DNS PTR レコードがありますが、IPv4 アドレスには DNS A レコードがありません)。</span><span class="sxs-lookup"><span data-stu-id="7abc6-348">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="7abc6-349">Ipv6 の場合、上記の手順 #2 は失敗する可能性があります。これは、ほとんどの IPv6 展開では、IPv6 アドレスの逆引き (PTR) レコードが登録されないためです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-349">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="7abc6-350">したがって、このメソッドは、<xref:System.Net.IPHostEntry.HostName%2A> プロパティの完全修飾ドメイン (FQDN) ホスト名として文字列 IPv6 リテラルを返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-350">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="7abc6-351"><xref:System.Net.Dns.GetHostAddresses%2A> メソッドは、IP リテラルに関して異なる動作をします。</span><span class="sxs-lookup"><span data-stu-id="7abc6-351">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="7abc6-352">上記の手順 #1 が成功した場合 (IP アドレスとして解析が正常に行われます)、そのアドレスが結果としてすぐに返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-352">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="7abc6-353">逆引き参照は行われません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-353">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="7abc6-354">Ipv6 アドレスは、ローカルコンピューターに IPv6 がインストールされていない場合、<xref:System.Net.Dns.GetHostEntry%2A> 方法の結果からフィルター処理されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-354">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="7abc6-355">その結果、IPv6 の結果のみが `hostNameOrAddress`の場合は、空の <xref:System.Net.IPHostEntry> インスタンスを取得できます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-355">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="7abc6-356">返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティは、このメソッドによって設定されることはなく、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-356">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-357">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-357">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-358">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-358">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-359">次の例では、<xref:System.Net.Dns.GetHostEntry%2A> メソッドを使用して、IP アドレスを <xref:System.Net.IPHostEntry> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-359">The following example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-360"><paramref name="hostNameOrAddress" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-360">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7abc6-361"><paramref name="hostNameOrAddress" /> パラメーターの長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-361">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-362"><paramref name="hostNameOrAddress" /> パラメーターを解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-362">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-363"><paramref name="hostNameOrAddress" /> パラメーターの IP アドレスが無効です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-363">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-364">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-364">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-365">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-365">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7abc6-366">非同期操作としてホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-366">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="7abc6-367">IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-367">An IP address.</span></span></param>
        <summary><span data-ttu-id="7abc6-368">非同期操作として IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-368">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="7abc6-369">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-369">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="7abc6-370">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<see cref="T:System.Net.IPHostEntry" />で指定されているホストに関するアドレス情報を含む <paramref name="address" /> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-370">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-371">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-371">This operation will not block.</span></span> <span data-ttu-id="7abc6-372">返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、`address` が解決された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-372">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `address` has been resolved.</span></span>  
  
 <span data-ttu-id="7abc6-373">このメソッドは、IP アドレスに関連付けられた IP アドレスとエイリアスを DNS サーバーに照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-373">This method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="7abc6-374">Ipv6 アドレスは、ローカルコンピューターに IPv6 がインストールされていない場合に、この方法の結果からフィルター処理されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-374">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="7abc6-375">その結果、IPv6 の結果のみが `address` パラメーターに使用可能な場合、空の <xref:System.Net.IPHostEntry> インスタンスが返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-375">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="7abc6-376">返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティは、このメソッドによって設定されることはなく、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-376">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-377">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-377">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-378">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-378">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-379"><paramref name="address" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-379"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-380"><paramref name="address" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-380">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-381"><paramref name="address" /> は無効な IP アドレスです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-381"><paramref name="address" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="7abc6-382">解決するホスト名または IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-382">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="7abc6-383">非同期操作としてホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-383">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="7abc6-384">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7abc6-384">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="7abc6-385">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<see cref="T:System.Net.IPHostEntry" />で指定されているホストに関するアドレス情報を含む <paramref name="hostNameOrAddress" /> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-385">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-386">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-386">This operation will not block.</span></span> <span data-ttu-id="7abc6-387">返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、`hostNameOrAddress` が解決された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-387">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="7abc6-388">このメソッドは、DNS サーバーに対して、ホスト名または IP アドレスに関連付けられている IP アドレスを照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-388">This method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="7abc6-389">`hostNameOrAddress` 引数として空の文字列が渡された場合、このメソッドはローカルホストの IPv4 アドレスと IPv6 アドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-389">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="7abc6-390">ホスト名が見つからなかった場合は、<xref:System.Net.Sockets.SocketException> 例外が 11001 (Windows Sockets error WSAHOST_NOT_FOUND) の値と共に返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-390">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="7abc6-391">この例外は、DNS サーバーが応答しない場合に返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-391">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="7abc6-392">この例外は、名前が公式のホスト名または別名でない場合や、クエリ対象のデータベースに見つからない場合にも返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-392">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="7abc6-393"><xref:System.ArgumentException> 例外は、`hostNameOrAddress` パラメーターに <xref:System.Net.IPAddress.Any> または <xref:System.Net.IPAddress.IPv6Any>が含まれている場合にも返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-393">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="7abc6-394">このメソッドは、アプリケーションがすべてのプロパティセットと共に返される <xref:System.Net.IPHostEntry> インスタンスを必要とする `hostNameOrAddress` パラメーターに IP リテラル文字列が渡された場合に、を想定しています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-394">This method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="7abc6-395">これらのプロパティには、<xref:System.Net.IPHostEntry.AddressList%2A>、<xref:System.Net.IPHostEntry.Aliases%2A>、<xref:System.Net.IPHostEntry.HostName%2A>が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-395">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="7abc6-396">このため、このメソッドの実装では、IP 文字列リテラルが渡されるときに次の動作が行われます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-396">As a result, the implementation of this method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="7abc6-397">メソッドは、アドレスを解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="7abc6-397">The method tries to parse the address.</span></span> <span data-ttu-id="7abc6-398">`hostNameOrAddress` パラメーターに有効な IP 文字列リテラルが含まれている場合、最初のフェーズは成功します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-398">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="7abc6-399">IP 文字列リテラルの IP アドレスを使用した逆引き参照で、ホスト名を取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-399">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="7abc6-400">この結果は、<xref:System.Net.IPHostEntry.HostName%2A> プロパティとして設定されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-400">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="7abc6-401">この逆引き参照のホスト名を使用して、名前に関連付けられているすべての可能な IP アドレスを取得し、<xref:System.Net.IPHostEntry.AddressList%2A> プロパティとして設定します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-401">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="7abc6-402">IPv4 文字列リテラルの場合、上記の3つの手順はすべて成功する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-402">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="7abc6-403">ただし、実際には別のホストに属している IPv4 アドレスの古い DNS レコードが返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-403">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="7abc6-404">これにより、ステップ #3 が失敗し、例外がスローされる可能性があります (IPv4 アドレスには DNS PTR レコードがありますが、IPv4 アドレスには DNS A レコードがありません)。</span><span class="sxs-lookup"><span data-stu-id="7abc6-404">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="7abc6-405">Ipv6 の場合、上記の手順 #2 は失敗する可能性があります。これは、ほとんどの IPv6 展開では、IPv6 アドレスの逆引き (PTR) レコードが登録されないためです。</span><span class="sxs-lookup"><span data-stu-id="7abc6-405">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="7abc6-406">したがって、このメソッドは、<xref:System.Net.IPHostEntry.HostName%2A> プロパティの完全修飾ドメイン (FQDN) ホスト名として文字列 IPv6 リテラルを返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-406">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="7abc6-407"><xref:System.Net.Dns.GetHostAddresses%2A> メソッドは、IP リテラルに関して異なる動作をします。</span><span class="sxs-lookup"><span data-stu-id="7abc6-407">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="7abc6-408">上記の手順 #1 が成功した場合 (IP アドレスとして解析が正常に行われます)、そのアドレスが結果としてすぐに返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-408">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="7abc6-409">逆引き参照は行われません。</span><span class="sxs-lookup"><span data-stu-id="7abc6-409">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="7abc6-410">Ipv6 アドレスは、ローカルコンピューターに IPv6 がインストールされていない場合に、この方法の結果からフィルター処理されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-410">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="7abc6-411">その結果、IPv6 の結果のみが `hostNameOrAddress`の場合は、空の <xref:System.Net.IPHostEntry> インスタンスを取得できます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-411">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="7abc6-412">返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティは、このメソッドによって設定されることはなく、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-412">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  

 <span data-ttu-id="7abc6-413">このメソッドは、基になるオペレーティングシステムの名前解決 Api (Windows 上の Win32 API getaddrinfo、その他のプラットフォームで同等の Api など) を使用して実装されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-413">This method is implemented using the underlying operating system's name resolution APIs (such as the Win32 API getaddrinfo on Windows, and equivalent APIs on other platforms).</span></span>  <span data-ttu-id="7abc6-414">`hosts` ファイルにホストが記述されている場合は、DNS サーバーにクエリを実行せずに IP アドレスまたはアドレスが返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-414">If a host is described in the `hosts` file, the IP address or addresses there will be returned without querying the DNS server.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="7abc6-415">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-415">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-416">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-416">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-417"><paramref name="hostNameOrAddress" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-417">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7abc6-418"><paramref name="hostNameOrAddress" /> パラメーターの長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-418">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-419"><paramref name="hostNameOrAddress" /> パラメーターを解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-419">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7abc6-420"><paramref name="hostNameOrAddress" /> パラメーターの IP アドレスが無効です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-420">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7abc6-421">ローカル コンピューターのホスト名を取得します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-421">Gets the host name of the local computer.</span></span></summary>
        <returns><span data-ttu-id="7abc6-422">ローカル コンピューターの DNS ホスト名を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="7abc6-422">A string that contains the DNS host name of the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7abc6-423">次の例では、<xref:System.Net.Dns.GetHostName%2A> メソッドを使用して、ローカルコンピューターのホスト名を取得します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-423">The following example uses the <xref:System.Net.Dns.GetHostName%2A> method to obtain the host name of the local computer.</span></span>  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-424">ローカル ホスト名を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-424">An error is encountered when resolving the local host name.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-425">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-425">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-426">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-426">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="7abc6-427">DNS スタイルのホスト名、または IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-427">A DNS-style host name or IP address.</span></span></param>
        <summary><span data-ttu-id="7abc6-428">DNS ホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-428">Resolves a DNS host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7abc6-429"><see cref="T:System.Net.IPHostEntry" /> で指定するホストについてのアドレス情報を格納する <paramref name="hostName" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="7abc6-429">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7abc6-430"><xref:System.Net.Dns.Resolve%2A> メソッドは、DNS サーバーに対して、ホスト名または IP アドレスに関連付けられた IP アドレスを照会します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-430">The <xref:System.Net.Dns.Resolve%2A> method queries a DNS server for the IP address associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="7abc6-431">`hostName` が複数の IP アドレスに関連付けられている DNS スタイルのホスト名である場合、そのホスト名に解決される最初の IP アドレスのみが返されます。</span><span class="sxs-lookup"><span data-stu-id="7abc6-431">When `hostName` is a DNS-style host name associated with multiple IP addresses, only the first IP address that resolves to that host name is returned.</span></span>  
  
 <span data-ttu-id="7abc6-432"><xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> プロパティが `true`に設定されている場合、返される <xref:System.Net.IPHostEntry> インスタンスの <xref:System.Net.IPHostEntry.Aliases%2A> プロパティはこのメソッドによって設定されず、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="7abc6-432">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7abc6-433">このメンバーは、アプリケーションでネットワークトレースを有効にするときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-433">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="7abc6-434">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7abc6-434">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7abc6-435">次の例では、<xref:System.Net.Dns.Resolve%2A> メソッドを使用して、IP アドレスを <xref:System.Net.IPHostEntry> インスタンスに解決します。</span><span class="sxs-lookup"><span data-stu-id="7abc6-435">The following example uses the <xref:System.Net.Dns.Resolve%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7abc6-436"><paramref name="hostName" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7abc6-436"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7abc6-437"><paramref name="hostName" /> の長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7abc6-437">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="7abc6-438"><paramref name="hostName" /> を解決するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7abc6-438">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="7abc6-439">DNS 情報にアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="7abc6-439">for accessing DNS information.</span></span> <span data-ttu-id="7abc6-440">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7abc6-440">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
