<Type Name="CredentialCache" FullName="System.Net.CredentialCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e8a784d6224fc630837a52dfbf2096fbde48536" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77224410" /></Metadata><TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <TypeSignature Language="DocId" Value="T:System.Net.CredentialCache" />
  <TypeSignature Language="VB.NET" Value="Public Class CredentialCache&#xA;Implements ICredentials, ICredentialsByHost, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CredentialCache : System::Collections::IEnumerable, System::Net::ICredentials, System::Net::ICredentialsByHost" />
  <TypeSignature Language="F#" Value="type CredentialCache = class&#xA;    interface ICredentials&#xA;    interface ICredentialsByHost&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="684dc-101">複数の資格情報のストレージを提供します。</span><span class="sxs-lookup"><span data-stu-id="684dc-101">Provides storage for multiple credentials.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-102"><xref:System.Net.CredentialCache> クラスには、複数のインターネットリソースの資格情報が格納されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-102">The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources.</span></span> <span data-ttu-id="684dc-103">複数のリソースにアクセスする必要があるアプリケーションでは、これらのリソースの資格情報を <xref:System.Net.CredentialCache> インスタンスに格納し、必要に応じてインターネットリソースに適切な資格情報のセットを提供することができます。</span><span class="sxs-lookup"><span data-stu-id="684dc-103">Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required.</span></span> <span data-ttu-id="684dc-104"><xref:System.Net.CredentialCache.GetCredential%2A> メソッドが呼び出されると、キャッシュに格納されている Uniform Resource Identifier (URI) と認証の種類を比較し、一致した最初の資格情報のセットを返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-104">When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.</span></span>  
  
 <span data-ttu-id="684dc-105"><xref:System.Net.CredentialCache.DefaultCredentials%2A> プロパティには、現在のセキュリティコンテキストのシステム資格情報が格納されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-105">The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context.</span></span> <span data-ttu-id="684dc-106">クライアントアプリケーションの場合、これらは、現在ログインしているユーザーのユーザー名、パスワード、およびドメインを表します。</span><span class="sxs-lookup"><span data-stu-id="684dc-106">For client applications, these represent the user name, password, and domain of the user who is currently logged in.</span></span> <span data-ttu-id="684dc-107">ASP.NET アプリケーションの場合、既定の資格情報は、ログインしているユーザーまたは権限を借用されているユーザーのユーザー資格情報です。</span><span class="sxs-lookup"><span data-stu-id="684dc-107">For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="684dc-108">次のコード例では、複数のセキュリティ資格情報を使用して <xref:System.Net.CredentialCache> を初期化し、<xref:System.Net.WebRequest>でそれらの資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="684dc-108">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ICredentials" />
    <altmember cref="P:System.Net.WebRequest.Credentials" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CredentialCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="684dc-109"><see cref="T:System.Net.CredentialCache" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="684dc-109">Creates a new instance of the <see cref="T:System.Net.CredentialCache" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-110">コンストラクターは <xref:System.Net.CredentialCache> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="684dc-110">The constructor creates a <xref:System.Net.CredentialCache> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="684dc-111">次のコード例では、複数のセキュリティ資格情報を使用して <xref:System.Net.CredentialCache> を初期化し、<xref:System.Net.WebRequest>でそれらの資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="684dc-111">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="684dc-112"><see cref="T:System.Net.NetworkCredential" /> インスタンスを資格情報キャッシュに追加します。</span><span class="sxs-lookup"><span data-stu-id="684dc-112">Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As Uri, authType As String, cred As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uriPrefix, System::String ^ authType, System::Net::NetworkCredential ^ cred);" />
      <MemberSignature Language="F#" Value="member this.Add : Uri * string * System.Net.NetworkCredential -&gt; unit" Usage="credentialCache.Add (uriPrefix, authType, cred)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="684dc-113">資格情報によってアクセスが許可されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-113">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to.</span></span></param>
        <param name="authType"><span data-ttu-id="684dc-114"><paramref name="uriPrefix" /> で指定されたリソースが使用する認証方式。</span><span class="sxs-lookup"><span data-stu-id="684dc-114">The authentication scheme used by the resource named in <paramref name="uriPrefix" />.</span></span></param>
        <param name="cred"><span data-ttu-id="684dc-115">資格情報キャッシュに追加する <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-115">The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache.</span></span></param>
        <summary><span data-ttu-id="684dc-116"><see cref="T:System.Net.NetworkCredential" /> インスタンスを SMTP 以外のプロトコルで使用する資格情報キャッシュに追加し、URI (Uniform Resource Identifier) プリフィックスおよび認証プロトコルに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="684dc-116">Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-117"><xref:System.Net.CredentialCache.Add%2A> メソッドは、SMTP 以外のプロトコルで使用する <xref:System.Net.NetworkCredential> インスタンスを <xref:System.Net.CredentialCache>に配置します。</span><span class="sxs-lookup"><span data-stu-id="684dc-117">The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="684dc-118">キャッシュには、資格情報が追加された順序で格納されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-118">The cache stores credentials in the order in which they are added to it.</span></span> <span data-ttu-id="684dc-119"><xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> メソッドが呼び出されると、適切に一致する <xref:System.Net.NetworkCredential> インスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-119">When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="684dc-120">次のコード例では、複数のセキュリティ資格情報を使用して <xref:System.Net.CredentialCache> を初期化し、<xref:System.Net.WebRequest>でそれらの資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="684dc-120">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="684dc-121"><paramref name="uriPrefix" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="684dc-121"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="684dc-122">または</span><span class="sxs-lookup"><span data-stu-id="684dc-122">-or-</span></span> 
 <span data-ttu-id="684dc-123"><paramref name="authType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="684dc-123"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="684dc-124">同じ資格情報が 2 回以上追加されました。</span><span class="sxs-lookup"><span data-stu-id="684dc-124">The same credentials are added more than once.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (host As String, port As Integer, authenticationType As String, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ host, int port, System::String ^ authenticationType, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="member this.Add : string * int * string * System.Net.NetworkCredential -&gt; unit" Usage="credentialCache.Add (host, port, authenticationType, credential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="684dc-125">ホスト コンピューターを示す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-125">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="684dc-126"><see cref="T:System.Int32" /> 上の接続先のポートを指定する <paramref name="host" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-126">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="684dc-127"><see cref="T:System.String" /> を使用して <paramref name="host" /> に接続する場合に使用する認証方式を指定する <paramref name="cred" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-127">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" /> using <paramref name="cred" />.</span></span></param>
        <param name="credential"><span data-ttu-id="684dc-128">資格情報キャッシュに追加する <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-128">The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache.</span></span></param>
        <summary><span data-ttu-id="684dc-129">SMTP で使用する <see cref="T:System.Net.NetworkCredential" /> インスタンスを資格情報キャッシュに追加し、ホスト コンピューター、ポート、および認証プロトコルに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="684dc-129">Adds a <see cref="T:System.Net.NetworkCredential" /> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol.</span></span> <span data-ttu-id="684dc-130">このメソッドを使用して追加される資格情報は、SMTP でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="684dc-130">Credentials added using this method are valid for SMTP only.</span></span> <span data-ttu-id="684dc-131">このメソッドは、HTTP 要求および FTP 要求では動作しません。</span><span class="sxs-lookup"><span data-stu-id="684dc-131">This method does not work for HTTP or FTP requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-132">このメソッドは、<xref:System.Net.CredentialCache>に SMTP で使用する <xref:System.Net.NetworkCredential> インスタンスを配置します。</span><span class="sxs-lookup"><span data-stu-id="684dc-132">This method places a <xref:System.Net.NetworkCredential> instance for use with SMTP into the <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="684dc-133">キャッシュには、資格情報が追加された順序で格納されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-133">The cache stores credentials in the order in which they are added to it.</span></span> <span data-ttu-id="684dc-134"><xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> メソッドが呼び出されると、`host`、`port`、および `authType`に一致することによって選択された <xref:System.Net.NetworkCredential> インスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-134">When the <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> method is called, it returns a <xref:System.Net.NetworkCredential> instance that is selected by matching the `host`, `port`, and `authType`.</span></span> <span data-ttu-id="684dc-135">この比較では、区別が実行されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-135">The comparison is done case-insensitively.</span></span>  
  
 <span data-ttu-id="684dc-136">`authType` でサポートされている値は、"NTLM"、"Digest"、"Kerberos"、および "Negotiate" です。</span><span class="sxs-lookup"><span data-stu-id="684dc-136">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span>  
  
 <span data-ttu-id="684dc-137">このメソッドで追加された資格情報は、SMTP でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="684dc-137">Credentials added with this method are only valid for use with SMTP.</span></span> <span data-ttu-id="684dc-138">このメソッドは、HTTP プロトコルまたは FTP プロトコルに対しては機能しません。</span><span class="sxs-lookup"><span data-stu-id="684dc-138">This method does not work for HTTP or FTP protocols.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="684dc-139">次のコード例では、SMTP で使用する複数のセキュリティ資格情報を使用して <xref:System.Net.CredentialCache> を初期化し、<xref:System.Net.Mail.SmtpClient>でこれらの資格情報のいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="684dc-139">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials for use with SMTP and uses one of those credentials with a <xref:System.Net.Mail.SmtpClient>.</span></span>  
  
 [!code-cpp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]
 [!code-csharp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]
 [!code-vb[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="684dc-140"><paramref name="host" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="684dc-140"><paramref name="host" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="684dc-141">または</span><span class="sxs-lookup"><span data-stu-id="684dc-141">-or-</span></span> 
 <span data-ttu-id="684dc-142"><paramref name="authType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="684dc-142"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="684dc-143"><paramref name="authType" /> が使用できる値ではありません。</span><span class="sxs-lookup"><span data-stu-id="684dc-143"><paramref name="authType" /> not an accepted value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="684dc-144"><paramref name="port" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="684dc-144"><paramref name="port" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentials ^ DefaultCredentials { System::Net::ICredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCredentials : System.Net.ICredentials" Usage="System.Net.CredentialCache.DefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="684dc-145">アプリケーションのシステム資格情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="684dc-145">Gets the system credentials of the application.</span></span></summary>
        <value><span data-ttu-id="684dc-146">アプリケーションのシステム資格情報を表す <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-146">An <see cref="T:System.Net.ICredentials" /> that represents the system credentials of the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-147"><xref:System.Net.CredentialCache.DefaultCredentials%2A> プロパティは、NTLM、negotiate、および Kerberos ベースの認証にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-147">The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property applies only to NTLM, negotiate, and Kerberos-based authentication.</span></span>  
  
 <span data-ttu-id="684dc-148"><xref:System.Net.CredentialCache.DefaultCredentials%2A> は、アプリケーションが実行されている現在のセキュリティコンテキストのシステム資格情報を表します。</span><span class="sxs-lookup"><span data-stu-id="684dc-148"><xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running.</span></span> <span data-ttu-id="684dc-149">クライアント側アプリケーションの場合、これらは通常、アプリケーションを実行しているユーザーの Windows 資格情報 (ユーザー名、パスワード、およびドメイン) です。</span><span class="sxs-lookup"><span data-stu-id="684dc-149">For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.</span></span> <span data-ttu-id="684dc-150">ASP.NET アプリケーションの場合、既定の資格情報は、ログインしているユーザーまたは権限を借用しているユーザーのユーザー資格情報です。</span><span class="sxs-lookup"><span data-stu-id="684dc-150">For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.</span></span>  
  
 <span data-ttu-id="684dc-151">資格情報を <xref:System.Net.NetworkCredential> インスタンスとして取得するには、<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="684dc-151">To get the credentials as a <xref:System.Net.NetworkCredential> instance, use the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property.</span></span>  
  
 <span data-ttu-id="684dc-152">`authType` でサポートされている値は、"NTLM"、"Digest"、"Kerberos"、および "Negotiate" です。</span><span class="sxs-lookup"><span data-stu-id="684dc-152">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span> <span data-ttu-id="684dc-153">このメソッドは、HTTP プロトコルまたは FTP プロトコルに対しては機能しません。</span><span class="sxs-lookup"><span data-stu-id="684dc-153">This method does not work for HTTP or FTP protocols.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="684dc-154"><xref:System.Net.CredentialCache.DefaultCredentials%2A> によって返された <xref:System.Net.ICredentials> インスタンスを使用して、現在のセキュリティコンテキストのユーザー名、パスワード、またはドメインを表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="684dc-154">The <xref:System.Net.ICredentials> instance returned by <xref:System.Net.CredentialCache.DefaultCredentials%2A> cannot be used to view the user name, password, or domain of the current security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="684dc-155">次のコード例では、<xref:System.Net.CredentialCache.DefaultCredentials%2A> プロパティを使用して、アプリケーションのシステム資格情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="684dc-155">The following code example uses the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property to get the system credentials of the application.</span></span>  
  
 [!code-cpp[CredentialCache_DefaultCredentials#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]
 [!code-csharp[CredentialCache_DefaultCredentials#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]
 [!code-vb[CredentialCache_DefaultCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultNetworkCredentials As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::NetworkCredential ^ DefaultNetworkCredentials { System::Net::NetworkCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNetworkCredentials : System.Net.NetworkCredential" Usage="System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="684dc-156">現在のセキュリティ コンテキストのネットワーク資格情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="684dc-156">Gets the network credentials of the current security context.</span></span></summary>
        <value><span data-ttu-id="684dc-157">現在のユーザーまたはアプリケーションのネットワーク資格情報を表す <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-157">An <see cref="T:System.Net.NetworkCredential" /> that represents the network credentials of the current user or application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-158"><xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> プロパティによって返される資格情報は、NTLM、negotiate、および Kerberos ベースの認証にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-158">The credentials returned by the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.</span></span>  
  
 <span data-ttu-id="684dc-159"><xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> によって返される資格情報は、アプリケーションが実行されている現在のセキュリティコンテキストの認証資格情報を表します。</span><span class="sxs-lookup"><span data-stu-id="684dc-159">The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running.</span></span> <span data-ttu-id="684dc-160">クライアント側アプリケーションの場合、これらは通常、アプリケーションを実行しているユーザーの Windows 資格情報 (ユーザー名、パスワード、およびドメイン) です。</span><span class="sxs-lookup"><span data-stu-id="684dc-160">For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.</span></span> <span data-ttu-id="684dc-161">ASP.NET アプリケーションの場合、既定のネットワーク資格情報は、ログインしているユーザーまたは権限を借用しているユーザーのユーザー資格情報です。</span><span class="sxs-lookup"><span data-stu-id="684dc-161">For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCredential">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="684dc-162">指定した URI (Uniform Resource Identifier) またはホスト、および認証の種類に関連付けられている <see cref="T:System.Net.NetworkCredential" /> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-162">Returns a <see cref="T:System.Net.NetworkCredential" /> instance associated with a specified Uniform Resource Identifier (URI) or host, and authentication type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (uriPrefix As Uri, authType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : Uri * string -&gt; System.Net.NetworkCredential&#xA;override this.GetCredential : Uri * string -&gt; System.Net.NetworkCredential" Usage="credentialCache.GetCredential (uriPrefix, authType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentials.GetCredential(System.Uri,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="684dc-163">資格情報によってアクセスが許可されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-163">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to.</span></span></param>
        <param name="authType"><span data-ttu-id="684dc-164"><paramref name="uriPrefix" /> で指定されたリソースが使用する認証方式。</span><span class="sxs-lookup"><span data-stu-id="684dc-164">The authentication scheme used by the resource named in <paramref name="uriPrefix" />.</span></span></param>
        <summary><span data-ttu-id="684dc-165">指定した URI (Uniform Resource Identifier) と認証の種類に関連付けられた <see cref="T:System.Net.NetworkCredential" /> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-165">Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.</span></span></summary>
        <returns><span data-ttu-id="684dc-166"><see cref="T:System.Net.NetworkCredential" />。または、キャッシュに一致する資格情報がない場合は<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-166">A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-167"><xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> メソッドは、<xref:System.Net.CredentialCache> を検索し、指定された URI と承認の種類の <xref:System.Net.NetworkCredential> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-167">The <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified URI and authorization type.</span></span> <span data-ttu-id="684dc-168"><xref:System.Net.CredentialCache> に一致する <xref:System.Net.NetworkCredential> インスタンスが含まれていない場合は、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-168">If the <xref:System.Net.CredentialCache> contains no matching <xref:System.Net.NetworkCredential> instance, `null` is returned.</span></span>  
  
 <span data-ttu-id="684dc-169"><xref:System.Net.CredentialCache.GetCredential%2A> は、キャッシュ内の最長一致 URI プレフィックスを使用して、認証の種類に対して返す資格情報のセットを決定します。</span><span class="sxs-lookup"><span data-stu-id="684dc-169"><xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type.</span></span> <span data-ttu-id="684dc-170">次の表に例を示します。</span><span class="sxs-lookup"><span data-stu-id="684dc-170">The following table shows examples.</span></span>  
  
|<span data-ttu-id="684dc-171">URI プレフィックス</span><span class="sxs-lookup"><span data-stu-id="684dc-171">URI Prefix</span></span>|<span data-ttu-id="684dc-172">次と一致する</span><span class="sxs-lookup"><span data-stu-id="684dc-172">Matches</span></span>|  
|----------------|-------------|  
|`http://www.contoso.com/portal/news.htm`|<span data-ttu-id="684dc-173">特定の Web ページに対する要求 `news.htm`ます。</span><span class="sxs-lookup"><span data-stu-id="684dc-173">Requests for the specific Web page `news.htm`.</span></span>|  
|`http://www.contoso.com/portal/`|<span data-ttu-id="684dc-174">ページ `news.htm`を除く、`portal` パス内のすべてのコンテンツを要求します。</span><span class="sxs-lookup"><span data-stu-id="684dc-174">Requests for all content in the `portal` path, except the page `news.htm`.</span></span>|  
|`http://www.contoso.com/`|<span data-ttu-id="684dc-175">`portal` パス内のリソースを除く、`www.contoso.com`のすべてのリソースに対する要求。</span><span class="sxs-lookup"><span data-stu-id="684dc-175">Requests for all resources at `www.contoso.com`, except those in the `portal` path.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="684dc-176">次のコード例では、<xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> メソッドを使用して、指定された URI と認証の種類に関連付けられた <xref:System.Net.NetworkCredential> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-176">The following code example uses the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method to return the <xref:System.Net.NetworkCredential> instance associated with the specified URI and authentication type.</span></span>  
  
 [!code-cpp[CredentialCache_GetCredential#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]
 [!code-csharp[CredentialCache_GetCredential#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]
 [!code-vb[CredentialCache_GetCredential#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="684dc-177"><paramref name="uriPrefix" /> または <paramref name="authType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="684dc-177"><paramref name="uriPrefix" /> or <paramref name="authType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (host As String, port As Integer, authenticationType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : string * int * string -&gt; System.Net.NetworkCredential&#xA;override this.GetCredential : string * int * string -&gt; System.Net.NetworkCredential" Usage="credentialCache.GetCredential (host, port, authenticationType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="684dc-178">ホスト コンピューターを示す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-178">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="684dc-179"><see cref="T:System.Int32" /> 上の接続先のポートを指定する <paramref name="host" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-179">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="684dc-180"><see cref="T:System.String" /> に接続する場合に使用する認証方式を指定する <paramref name="host" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-180">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />.</span></span></param>
        <summary><span data-ttu-id="684dc-181">指定したホスト、ポート、および認証プロトコルに関連付けられている <see cref="T:System.Net.NetworkCredential" /> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-181">Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified host, port, and authentication protocol.</span></span></summary>
        <returns><span data-ttu-id="684dc-182"><see cref="T:System.Net.NetworkCredential" />。または、キャッシュに一致する資格情報がない場合は<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-182">A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-183">このメソッドは、<xref:System.Net.CredentialCache> を検索し、指定されたホスト、ポート、および承認の種類の <xref:System.Net.NetworkCredential> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-183">This method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified host, port, and authorization type.</span></span> <span data-ttu-id="684dc-184">このメソッドに渡される `host`、`port`、および `authType` の値は、<xref:System.Net.CredentialCache.Add%2A> メソッドを使用して資格情報が <xref:System.Net.CredentialCache> に追加されたときに指定された値と比較して大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="684dc-184">The `host`, `port`, and `authType` values passed to this method are case-insensitively compared to the values specified when the credential was added to the <xref:System.Net.CredentialCache> using the <xref:System.Net.CredentialCache.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="684dc-185">`authType` でサポートされている値は、"NTLM"、"Digest"、"Kerberos"、および "Negotiate" です。</span><span class="sxs-lookup"><span data-stu-id="684dc-185">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="684dc-186"><paramref name="host" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="684dc-186"><paramref name="host" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="684dc-187">または</span><span class="sxs-lookup"><span data-stu-id="684dc-187">-or-</span></span> 
 <span data-ttu-id="684dc-188"><paramref name="authType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="684dc-188"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="684dc-189"><paramref name="authType" /> が使用できる値ではありません。</span><span class="sxs-lookup"><span data-stu-id="684dc-189"><paramref name="authType" /> not an accepted value.</span></span>  
  
<span data-ttu-id="684dc-190">または</span><span class="sxs-lookup"><span data-stu-id="684dc-190">-or-</span></span> 
 <span data-ttu-id="684dc-191"><paramref name="host" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="684dc-191"><paramref name="host" /> is equal to the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="684dc-192"><paramref name="port" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="684dc-192"><paramref name="port" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="credentialCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="684dc-193"><see cref="T:System.Net.CredentialCache" /> インスタンスを繰り返し処理できる列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-193">Returns an enumerator that can iterate through the <see cref="T:System.Net.CredentialCache" /> instance.</span></span></summary>
        <returns><span data-ttu-id="684dc-194"><see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Net.CredentialCache" /> です。</span><span class="sxs-lookup"><span data-stu-id="684dc-194">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Net.CredentialCache" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="684dc-195">次のコード例では、<xref:System.Net.CredentialCache.GetEnumerator%2A> メソッドを使用して、<xref:System.Net.CredentialCache> インスタンスを反復処理できる列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="684dc-195">The following code example uses the <xref:System.Net.CredentialCache.GetEnumerator%2A> method to return an enumerator that can iterate through the <xref:System.Net.CredentialCache> instance.</span></span>  
  
 [!code-cpp[CredentialCache_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]
 [!code-csharp[CredentialCache_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]
 [!code-vb[CredentialCache_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="684dc-196">キャッシュから <see cref="T:System.Net.NetworkCredential" /> インスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="684dc-196">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (uriPrefix As Uri, authType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberSignature Language="F#" Value="member this.Remove : Uri * string -&gt; unit" Usage="credentialCache.Remove (uriPrefix, authType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="684dc-197">資格情報が使用されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-197">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential is used for.</span></span></param>
        <param name="authType"><span data-ttu-id="684dc-198"><paramref name="uriPrefix" /> で指定されたホストが使用する認証方式。</span><span class="sxs-lookup"><span data-stu-id="684dc-198">The authentication scheme used by the host named in <paramref name="uriPrefix" />.</span></span></param>
        <summary><span data-ttu-id="684dc-199"><see cref="T:System.Net.NetworkCredential" /> インスタンスが指定した URI (Uniform Resource Identifier) プレフィックスと認証プロトコルに関連付けられている場合に、このインスタンスをキャッシュから削除します。</span><span class="sxs-lookup"><span data-stu-id="684dc-199">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-200">このメソッドは、指定された URI プレフィックスと認証プロトコルが資格情報に関連付けられているものと一致する場合、<xref:System.Net.CredentialCache> から <xref:System.Net.NetworkCredential> インスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="684dc-200">This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential.</span></span> <span data-ttu-id="684dc-201">同じ <xref:System.Net.NetworkCredential> に対して <xref:System.Net.CredentialCache.Remove%2A> メソッドを複数回呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="684dc-201">Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.</span></span>  
  
 <span data-ttu-id="684dc-202">`authType` が `null` または `uriPrefix` が `null`ている場合、または一致する資格情報がキャッシュに見つからない場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="684dc-202">If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="684dc-203">次のコード例では、このメソッドを使用して、キャッシュから <xref:System.Net.NetworkCredential> インスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="684dc-203">The following code example uses this method to delete a <xref:System.Net.NetworkCredential> instance from the cache.</span></span>  
  
 [!code-cpp[CredentialCache_Add_Remove#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]
 [!code-csharp[CredentialCache_Add_Remove#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]
 [!code-vb[CredentialCache_Add_Remove#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (host As String, port As Integer, authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="member this.Remove : string * int * string -&gt; unit" Usage="credentialCache.Remove (host, port, authenticationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="684dc-204">ホスト コンピューターを示す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-204">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="684dc-205"><see cref="T:System.Int32" /> 上の接続先のポートを指定する <paramref name="host" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-205">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="684dc-206"><see cref="T:System.String" /> に接続する場合に使用する認証方式を指定する <paramref name="host" />。</span><span class="sxs-lookup"><span data-stu-id="684dc-206">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />.</span></span></param>
        <summary><span data-ttu-id="684dc-207"><see cref="T:System.Net.NetworkCredential" /> インスタンスが指定したホスト、ポート、および認証プロトコルに関連付けられている場合に、このインスタンスをキャッシュから削除します。</span><span class="sxs-lookup"><span data-stu-id="684dc-207">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified host, port, and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="684dc-208">このメソッドは、指定されたホスト、ポート、および認証プロトコルが資格情報に関連付けられているものと一致する場合、<xref:System.Net.CredentialCache> から <xref:System.Net.NetworkCredential> インスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="684dc-208">This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential.</span></span> <span data-ttu-id="684dc-209">同じ <xref:System.Net.NetworkCredential> に対して <xref:System.Net.CredentialCache.Remove%2A> メソッドを複数回呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="684dc-209">Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.</span></span>  
  
 <span data-ttu-id="684dc-210">`authType` が `null` または `uriPrefix` が `null`ている場合、または一致する資格情報がキャッシュに見つからない場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="684dc-210">If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
