<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e894abbd7a49687b29b23a6de784e8d21256497e" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73338127" /></Metadata><TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fd89e-101">Web 要求を処理する際、URL のエンコーディングおよびデコーディングのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-102"><xref:System.Web.HttpUtility> クラスには、HTML エンコード文字列で使用するためのエンコードおよびデコードユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="fd89e-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="fd89e-103"><xref:System.Uri?displayProperty=nameWithType> クラスには、同様の目的で使用できるメソッドとプロパティも含まれています。</span><span class="sxs-lookup"><span data-stu-id="fd89e-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="fd89e-104">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</span><span class="sxs-lookup"><span data-stu-id="fd89e-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd89e-105">HTTP での転送用に HTML でエンコードされた文字列をデコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fd89e-106">デコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-106">The string to decode.</span></span></param>
        <summary><span data-ttu-id="fd89e-107">HTTP での転送用に HTML でエンコードされた文字列をデコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="fd89e-108">デコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-108">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-109">空白や句読点などの文字が HTTP ストリームで渡される場合は、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fd89e-110">Html エンコーディングでは、HTML で許可されていない文字を、同等の文字エンティティに変換します。HTML デコードでは、エンコードが反転されます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="fd89e-111">たとえば、テキストのブロックに埋め込まれている場合、`<` と `>` の文字は `&lt;` としてエンコードされ、HTTP 伝送に `&gt;` ます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="fd89e-112">`value` パラメーターが `null`の場合、デコードされた文字列は `null`ます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="fd89e-113">`value` パラメーターが空の文字列の場合、デコードされた文字列は空の文字列になります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="output" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fd89e-114">デコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-114">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="fd89e-115"><see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="fd89e-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="fd89e-116">HTML エンコードされた文字列をデコードされた文字列に変換し、デコードされた文字列を <see cref="T:System.IO.TextWriter" /> 出力ストリームに送信します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-117">空白や句読点などの文字が HTTP ストリームで渡される場合は、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fd89e-118">Html エンコーディングでは、HTML で許可されていない文字を、同等の文字エンティティに変換します。HTML デコードでは、エンコードが反転されます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="fd89e-119">たとえば、テキストのブロックに埋め込まれている場合、`<` と `>` の文字は `&lt;` としてエンコードされ、HTTP 伝送に `&gt;` ます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd89e-120"><paramref name="output" /> パラメーターが <see langword="null" /> でない場合、<paramref name="value" /> パラメーターは <see langword="null" /> にできません。</span><span class="sxs-lookup"><span data-stu-id="fd89e-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd89e-121">文字列を HTML エンコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-121">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fd89e-122">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-122">The string to encode.</span></span></param>
        <summary><span data-ttu-id="fd89e-123">文字列を、HTML エンコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-123">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="fd89e-124">エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-124">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-125">空白や句読点などの文字が HTTP ストリームで渡される場合は、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fd89e-126">Html エンコーディングでは、HTML で許可されていない文字を、同等の文字エンティティに変換します。HTML デコードでは、エンコードが反転されます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="fd89e-127">たとえば、テキストのブロックに埋め込まれている場合、`<` と `>` の文字は `&lt;` としてエンコードされ、HTTP 伝送に `&gt;` ます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="fd89e-128">`value` パラメーターが `null`の場合、返されたエンコードされた文字列は `null`ます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="fd89e-129">`value` パラメーターが空の文字列の場合、返されるエンコードされた文字列は空の文字列になります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="fd89e-130">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</span><span class="sxs-lookup"><span data-stu-id="fd89e-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="output" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fd89e-131">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-131">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="fd89e-132"><see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="fd89e-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="fd89e-133">文字列を HTML エンコードされた文字列に変換し、出力の <see cref="T:System.IO.TextWriter" /> ストリームとして出力を返します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-134">空白や句読点などの文字が HTTP ストリームで渡される場合は、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fd89e-135">Html エンコーディングでは、HTML で許可されていない文字を、同等の文字エンティティに変換します。HTML デコードでは、エンコードが反転されます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="fd89e-136">たとえば、テキストのブロックに埋め込まれている場合、`<` と `>` の文字は `&lt;` としてエンコードされ、HTTP 伝送に `&gt;` ます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd89e-137"><paramref name="output" /> パラメーターが <see langword="null" /> でない場合、<paramref name="value" /> パラメーターは <see langword="null" /> にできません。</span><span class="sxs-lookup"><span data-stu-id="fd89e-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="fd89e-138">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</span><span class="sxs-lookup"><span data-stu-id="fd89e-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="fd89e-139">デコード対象となる URL エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-139">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="fd89e-140">URL 伝送用にエンコードされた文字列を、デコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="fd89e-141">デコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-141">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-142">空白や句読点などの文字が HTTP ストリームで渡される場合は、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fd89e-143">Url エンコードは、URL で許可されていない文字を等価の16進数のエスケープシーケンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="fd89e-144"><xref:System.Net.WebUtility.UrlEncode%2A> メソッドは、URL エンコードされた文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="fd89e-145">URL デコードは、16進数のエスケープシーケンスを対応する ASCII 文字に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="fd89e-146">たとえば、URL でエンコードされたテキストのブロックに埋め込まれている場合、エスケープシーケンス `%3c` と `%3e` は `<` と `>`の文字にデコードされます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="fd89e-147">デコード対象となる URL エンコードされた <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="fd89e-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="fd89e-148">デコードする <see cref="T:System.Byte" /> 配列の先頭からのオフセット (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="fd89e-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="fd89e-149"><see cref="T:System.Byte" /> の配列からデコードするバイト数です。</span><span class="sxs-lookup"><span data-stu-id="fd89e-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="fd89e-150">URL 内で伝送する目的でエンコードされたバイト配列を、デコードされたバイト配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="fd89e-151">デコードされた <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-151">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-152">空白や句読点などの文字が HTTP ストリームで渡される場合は、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fd89e-153">Url エンコードは、URL で許可されていない文字を等価の16進数のエスケープシーケンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="fd89e-154"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A> メソッドは、URL エンコードされたバイト配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="fd89e-155">URL デコードは、16進数のエスケープシーケンスを対応する ASCII 文字に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="fd89e-156">たとえば、URL でエンコードされたテキストのブロックに埋め込まれている場合、エスケープシーケンス `%3c` と `%3e` は `<` と `>`の文字にデコードされます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fd89e-157">URL エンコードするテキスト。</span><span class="sxs-lookup"><span data-stu-id="fd89e-157">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="fd89e-158">テキスト文字列を URL エンコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-158">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="fd89e-159">URL エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-160">空白や句読点などの文字が HTTP ストリームで渡される場合は、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fd89e-161">Url エンコードは、16進数のエスケープシーケンスで構成される文字エンティティである URL で許可されていない文字を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="fd89e-162">変換された文字列は、UTF-8 形式に準拠している必要があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="fd89e-163">URL エンコードは、文字、数字、および次の区切り文字を除くすべての文字コードを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="fd89e-164">`-` (マイナス記号)</span><span class="sxs-lookup"><span data-stu-id="fd89e-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="fd89e-165">`_` (アンダースコア)</span><span class="sxs-lookup"><span data-stu-id="fd89e-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="fd89e-166">`.` (期間)</span><span class="sxs-lookup"><span data-stu-id="fd89e-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="fd89e-167">`!` (感嘆符)</span><span class="sxs-lookup"><span data-stu-id="fd89e-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="fd89e-168">`*` (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="fd89e-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="fd89e-169">`(` と `)` (始めかっこと終わりかっこ)</span><span class="sxs-lookup"><span data-stu-id="fd89e-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="fd89e-170">各 ' ' (スペース) 文字は、`+` (正符号) 文字に変換されます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-170">Each ' ' (space) character is converted to a `+` (plus) character.</span></span>
 
 <span data-ttu-id="fd89e-171">たとえば、URL で送信されるテキストのブロックに埋め込まれている場合、`<` と `>` の文字は `%3c` および `%3e`としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-171">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="fd89e-172"><xref:System.Net.WebUtility.UrlDecode%2A> メソッドは、エンコードを逆にします。</span><span class="sxs-lookup"><span data-stu-id="fd89e-172">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fd89e-173">URL エンコードする <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-173">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="fd89e-174">エンコードする <see cref="T:System.Byte" /> 配列の先頭からのオフセット (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="fd89e-174">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="fd89e-175"><see cref="T:System.Byte" /> の配列からエンコードするバイト数です。</span><span class="sxs-lookup"><span data-stu-id="fd89e-175">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="fd89e-176">バイト配列を URL エンコードされたバイト配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="fd89e-176">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="fd89e-177">エンコードされた <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="fd89e-177">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd89e-178">空白や句読点などの文字が HTTP ストリームで渡される場合は、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-178">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fd89e-179">Url エンコードは、16進数のエスケープシーケンスで構成される文字エンティティである URL で許可されていない文字を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-179">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="fd89e-180">変換された文字列は、UTF-8 形式に準拠している必要があります。</span><span class="sxs-lookup"><span data-stu-id="fd89e-180">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="fd89e-181">URL エンコードは、文字、数字、および次の区切り文字を除くすべての文字コードを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-181">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="fd89e-182">`-` (マイナス記号)</span><span class="sxs-lookup"><span data-stu-id="fd89e-182">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="fd89e-183">`_` (アンダースコア)</span><span class="sxs-lookup"><span data-stu-id="fd89e-183">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="fd89e-184">`.` (期間)</span><span class="sxs-lookup"><span data-stu-id="fd89e-184">`.` (period)</span></span>  
  
-   <span data-ttu-id="fd89e-185">`!` (感嘆符)</span><span class="sxs-lookup"><span data-stu-id="fd89e-185">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="fd89e-186">`*` (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="fd89e-186">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="fd89e-187">`'` (単一引用符)</span><span class="sxs-lookup"><span data-stu-id="fd89e-187">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="fd89e-188">`(` と `)` (始めかっこと終わりかっこ)</span><span class="sxs-lookup"><span data-stu-id="fd89e-188">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="fd89e-189">たとえば、URL で送信されるテキストのブロックに埋め込まれている場合、`<` と `>` の文字は `%3c` および `%3e`としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="fd89e-189">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="fd89e-190"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A> メソッドは、エンコードを逆にします。</span><span class="sxs-lookup"><span data-stu-id="fd89e-190">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
