<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4791f3343a0f567378e8825670fc11db15500546" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75170153" /></Metadata><TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type FtpWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ファイル転送プロトコル (FTP: File Transfer Protocol) クライアントを実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  新しい開発には `FtpWebRequest` クラスを使用しないことをお勧めします。 `FtpWebRequest`の詳細および代替手段については、「WebRequest を GitHub で[使用することはでき](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md)ません。」を参照してください。

 <xref:System.Net.FtpWebRequest>のインスタンスを取得するには、<xref:System.Net.WebRequest.Create%2A> メソッドを使用します。 <xref:System.Net.WebClient> クラスを使用して、FTP サーバーから情報をアップロードしたり、ダウンロードしたりすることもできます。 これらの方法のいずれかを使用して、FTP スキームを使用するネットワークリソース (`"ftp://contoso.com"`など) を指定すると、<xref:System.Net.FtpWebRequest> クラスによって、プログラムで FTP サーバーと対話できるようになります。  
  
 URI は、相対 URI でも絶対 URI でもかまいません。 URI が `"ftp://contoso.com/%2fpath"` (% 2f がエスケープされた '/') の形式である場合、URI は absolute で、現在のディレクトリは `/path`ます。 ただし、URI が `"ftp://contoso.com/path"`の形式である場合は、まず、.NET Framework (<xref:System.Net.FtpWebRequest.Credentials%2A> プロパティによって設定されたユーザー名とパスワードを使用して) FTP サーバーにログインします。次に、現在のディレクトリを `<UserLoginDirectory>/path`に設定します。  
  
 サーバーの有効なユーザー名とパスワードが必要です。または、サーバーで匿名ログオンが許可されている必要があります。 サーバーへの接続に使用する資格情報は、<xref:System.Net.FtpWebRequest.Credentials%2A> プロパティを設定することによって指定できます。また、<xref:System.Net.WebRequest.Create%2A> メソッドに渡された URI の <xref:System.Uri.UserInfo%2A> 部分に含めることもできます。 URI に <xref:System.Uri.UserInfo%2A> 情報を含めると、<xref:System.Net.FtpWebRequest.Credentials%2A> プロパティは、指定されたユーザー名とパスワードの情報を持つ新しいネットワーク資格情報に設定されます。  
  
> [!CAUTION]
>  <xref:System.Net.FtpWebRequest.EnableSsl%2A> プロパティが `true`でない限り、ユーザー名とパスワードの情報を含むすべてのデータとコマンドがクリアテキストでサーバーに送信されます。 ネットワークトラフィックを監視するすべてのユーザーは、資格情報を表示し、それらを使用してサーバーに接続できます。 資格情報が必要で Secure Sockets Layer (SSL) をサポートする FTP サーバーに接続する場合は、<xref:System.Net.FtpWebRequest.EnableSsl%2A> を `true`に設定する必要があります。  
  
 FTP リソースにアクセスするには、<xref:System.Net.WebPermission> が必要です。それ以外の場合は、<xref:System.Security.SecurityException> 例外がスローされます。  
  
 <xref:System.Net.FtpWebRequest.Method%2A> プロパティを <xref:System.Net.WebRequestMethods.Ftp> 構造体で定義された値に設定して、サーバーに送信する FTP コマンドを指定します。 テキストデータを転送するには、<xref:System.Net.FtpWebRequest.UseBinary%2A> プロパティを既定値 (`true`) から `false`に変更します。 詳細と制限については、「<xref:System.Net.FtpWebRequest.Method%2A>」を参照してください。  
  
 <xref:System.Net.FtpWebRequest> オブジェクトを使用してサーバーにファイルをアップロードする場合は、<xref:System.Net.FtpWebRequest.GetRequestStream%2A> メソッド、またはそれに対応する非同期の <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> および <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> メソッドを呼び出すことによって取得される要求ストリームに、ファイルの内容を書き込む必要があります。 要求を送信する前に、ストリームに書き込み、ストリームを閉じる必要があります。  
  
 要求は、<xref:System.Net.FtpWebRequest.GetResponse%2A> メソッド、またはそれに対応する非同期の <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> および <xref:System.Net.FtpWebRequest.EndGetResponse%2A> メソッドを呼び出すことによって、サーバーに送信されます。 要求された操作が完了すると、<xref:System.Net.FtpWebResponse> オブジェクトが返されます。 <xref:System.Net.FtpWebResponse> オブジェクトは、操作の状態と、サーバーからダウンロードされたすべてのデータを提供します。  
  
 <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> プロパティを使用して、サーバーに対する読み取りまたは書き込みのタイムアウト値を設定できます。 タイムアウト期間を超過すると、呼び出し元のメソッドは、<xref:System.Net.WebExceptionStatus> が <xref:System.Net.WebExceptionStatus.Timeout>に設定された <xref:System.Net.WebException> をスローします。  
  
 FTP サーバーからファイルをダウンロードするときに、コマンドが正常に実行された場合は、要求されたファイルの内容を応答オブジェクトのストリームで使用できます。 このストリームには、<xref:System.Net.FtpWebResponse.GetResponseStream%2A> メソッドを呼び出すことによってアクセスできます。 詳細については、「 <xref:System.Net.FtpWebResponse>」を参照してください。  
  
 <xref:System.Net.FtpWebRequest.Proxy%2A> プロパティが直接または構成ファイルで設定されている場合、FTP サーバーとの通信は、指定されたプロキシを介して行われます。 指定したプロキシが HTTP プロキシである場合は、<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>、<xref:System.Net.WebRequestMethods.Ftp.ListDirectory>、および <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> コマンドのみがサポートされます。  
  
 ダウンロードされたバイナリコンテンツのみがキャッシュされます。つまり、<xref:System.Net.WebRequestMethods.Ftp.DownloadFile> コマンドを使用して受信したコンテンツは、<xref:System.Net.FtpWebRequest.UseBinary%2A> プロパティを `true`に設定します。  
  
 可能であれば、複数の <xref:System.Net.FtpWebRequest>が既存の接続を再利用します。  
  
 FTP プロトコルの詳細については、「 [RFC 959: ファイル転送プロトコル](https://www.ietf.org/rfc/rfc959.txt)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、FTP サーバーからファイルを削除する方法を示しています。  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 次のコード例は、<xref:System.Net.WebClient> クラスを使用して FTP サーバーからファイルをダウンロードする方法を示しています。  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 次のコード例は、非同期操作を使用して FTP サーバーにファイルをアップロードする方法を示しています。  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">この要求によって参照されるリソースにアクセスするために使用します。 <see cref="F:System.Net.NetworkAccess.Connect" /> (関連する列挙体)</permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="ftpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同期の FTP 操作を終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 進行中の操作がない場合、このメソッドは何も行いません。 ファイル転送が進行中の場合、このメソッドは転送を終了します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、ユーザーがファイルの非同期アップロードをローカルディレクトリからサーバーに終了する方法を示しています。  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="callback" /> デリゲートに渡されます。</param>
        <summary>書き込み用に、要求のコンテンツ ストリームの非同期的なオープンを開始します。</summary>
        <returns>操作の状態を示す <see cref="T:System.IAsyncResult" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> メソッドを呼び出すことにより、非同期操作を完了する必要があります。 通常、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> は `callback`によって参照されるメソッドによって呼び出されます。 操作の状態を確認するには、このメソッドによって返される <xref:System.IAsyncResult> オブジェクトのプロパティを確認します。  
  
 このメソッドは、ストリームを待機している間はブロックしません。 ブロックするには、このメソッドの代わりに <xref:System.Net.FtpWebRequest.GetRequestStream%2A> を呼び出します。  
  
 非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、要求のストリームを取得する非同期操作を開始する方法を示しています。 このコード例は、<xref:System.Net.FtpWebRequest> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このメソッドまたは <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> の前回の呼び出しがまだ完了していません。</exception>
        <exception cref="T:System.Net.WebException">FTP サーバーへの接続を確立できませんでした。</exception>
        <exception cref="T:System.Net.ProtocolViolationException"><see cref="P:System.Net.FtpWebRequest.Method" /> プロパティが <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> に設定されていません。</exception>
        <block subset="none" type="usage"><para>この方法では、ネットワークトラフィックが生成されます。</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="callback" /> デリゲートに渡されます。</param>
        <summary>要求の非同期的な送信と、FTP サーバーからの応答の非同期的な受信を開始します。</summary>
        <returns>操作の状態を示す <see cref="T:System.IAsyncResult" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.EndGetResponse%2A> メソッドを呼び出すことにより、非同期操作を完了する必要があります。 通常、<xref:System.Net.FtpWebRequest.EndGetResponse%2A> は `callback`によって参照されるメソッドによって呼び出されます。 操作の状態を確認するには、<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドによって返された <xref:System.IAsyncResult> オブジェクトのプロパティを確認します。  
  
 <xref:System.Net.FtpWebRequest.Proxy%2A> プロパティが直接または構成ファイルで設定されている場合、FTP サーバーとの通信は、指定されたプロキシを介して行われます。  
  
 <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> は、サーバーからの応答を待機している間はブロックしません。 ブロックするには、<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>の代わりに <xref:System.Net.FtpWebRequest.GetResponse%2A> メソッドを呼び出します。  
  
 非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  <xref:System.Net.WebException> がスローされた場合は、例外の <xref:System.Net.WebException.Response%2A> と <xref:System.Net.WebException.Status%2A> のプロパティを使用して、サーバーからの応答を確認します。  
  
   
  
## Examples  
 次のコード例は、要求のストリームを取得する非同期操作を終了し、応答を取得する要求を開始する方法を示しています。 このコード例は、<xref:System.Net.FtpWebRequest> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> または <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> は、このインスタンスに対して既に呼び出されています。</exception>
        <block subset="none" type="usage"><para>この方法では、ネットワークトラフィックが生成されます。</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.FtpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーへの暗号化接続を確立するために使用する証明書を取得または設定します。</summary>
        <value>クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クライアント証明書は、最初の SSL 接続ネゴシエーション中にクライアントを認証するために使用されます。 詳細については、「 <xref:System.Net.FtpWebRequest.EnableSsl%2A>」を参照してください。  
  
> [!NOTE]
>  .NET Framework は、作成時に SSL セッションをキャッシュし、可能であれば、新しい要求に対してキャッシュされたセッションの再利用を試行します。 SSL セッションを再利用しようとすると、.NET Framework は <xref:System.Net.HttpWebRequest.ClientCertificates%2A> の最初の要素 (存在する場合) を使用するか、<xref:System.Net.HttpWebRequest.ClientCertificates%2A> が空の場合は匿名セッションを再利用しようとします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定操作に指定された値は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の要求を送信するために使用するサービス ポイントが含まれる接続グループの名前を取得または設定します。</summary>
        <value>接続グループ名を格納している <see cref="T:System.String" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接続グループは、一連の要求を特定の接続または接続のセットに関連付けます。 接続グループ内の接続は、同じアプリケーションドメインから送信された要求によってのみ再利用できます。要求の資格情報が同じで、要求によって接続グループ名が指定されている場合です。 要求で接続グループ名が指定されていない場合は、接続グループに関連付けられていない、要求されたサーバーへの既存の接続を使用できます。 資格情報が同じでない場合は、既存の接続が閉じられ、新しい要求が再認証される必要があります。  
  
 接続グループを使用すると、ユーザーのすべての要求で、ユーザーの資格情報で認証された接続を再利用できるため、パフォーマンスが向上します。  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FtpWebRequest.GetResponse%2A>、または <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドを呼び出した後に <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> プロパティを変更すると、<xref:System.InvalidOperationException> 例外が発生します。  
  
   
  
## Examples  
 次のコード例では、このプロパティの値を取得します。  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">接続の管理</related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.FtpWebRequest" /> クラスによって無視される値を取得または設定します。</summary>
        <value>無視される必要がある <see cref="T:System.Int64" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ContentLength%2A> プロパティは、<xref:System.Net.WebRequest> クラスおよび <xref:System.Net.WebResponse> クラスの他の実装との互換性のためだけに用意されています。 <xref:System.Net.FtpWebRequest.ContentLength%2A>を使用する理由はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentOffset : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この要求でダウンロードされるファイル内のバイト オフセットを取得または設定します。</summary>
        <value>ファイルのオフセットをバイト単位で指定する <see cref="T:System.Int64" /> インスタンス。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 FTP サーバーからファイルをダウンロードする場合は、<xref:System.Net.FtpWebRequest.ContentOffset%2A> プロパティを設定します。 このオフセットは、ダウンロードするデータの先頭を示すサーバーのファイル内の位置を示します。 オフセットは、ファイルの先頭からのバイト数として指定されます。最初のバイトのオフセットが0です。  
  
 <xref:System.Net.FtpWebRequest.ContentOffset%2A> を設定すると、<xref:System.Net.FtpWebRequest> は再起動 (`REST`) コマンドをサーバーに送信します。 データをサーバーにアップロードする場合、ほとんどの FTP サーバーの実装では、このコマンドは無視されます。  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FtpWebRequest.GetResponse%2A>、または <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドを呼び出した後に <xref:System.Net.FtpWebRequest.ContentOffset%2A> を変更すると、<xref:System.InvalidOperationException> 例外が発生します。  
  
   
  
## Examples  
 次のコード例は、サーバーからファイルの一部をダウンロードし、ダウンロードしたデータをローカルファイルに追加する方法を示しています。  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティに対して指定された値が 0 未満です。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.FtpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
        <value>常に <see cref="T:System.NotSupportedException" /> をスローします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ContentType%2A> プロパティは、<xref:System.Net.WebRequest> クラスおよび <xref:System.Net.WebResponse> クラスの他の実装との互換性のためだけに用意されています。 <xref:System.Net.FtpWebRequest.ContentType%2A>を使用する理由はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">コンテンツ タイプの情報が FTP でサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.FtpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーとの通信に使用する資格情報を取得または設定します。</summary>
        <value><see cref="T:System.Net.ICredentials" /> インスタンス。プロパティが設定されていない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 匿名ログオンを使用して接続する場合は、資格情報を指定する必要はありません。 <xref:System.Net.NetworkCredential>; 型の資格情報を使用して、<xref:System.Net.FtpWebRequest.Credentials%2A> プロパティを設定する必要があります。これにより、ユーザー名とパスワードを読み取り、サーバーに送信できるようになります。  
  
> [!CAUTION]
>  <xref:System.Net.FtpWebRequest.EnableSsl%2A> プロパティが `true`に設定されていない限り、資格情報はサーバーに送信されるときに暗号化されません。  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FtpWebRequest.GetResponse%2A>、または <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドを呼び出した後に <xref:System.Net.FtpWebRequest.Credentials%2A> を変更すると、<xref:System.InvalidOperationException> 例外が発生します。  
  
   
  
## Examples  
 次のコード例では、このプロパティの値を取得し、それを使用してユーザー名を表示します。  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定操作に指定された値は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Net.ICredentials" /> 以外の種類の <see cref="T:System.Net.NetworkCredential" /> が、設定操作に指定されました。</exception>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべての FTP 要求に対する既定のキャッシュ ポリシーを定義します。</summary>
        <value>FTP 要求に対するキャッシュ ポリシーを定義する <see cref="T:System.Net.Cache.RequestCachePolicy" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> コマンドを使用して受信したコンテンツだけがキャッシュされます。  
  
 次の表では、<xref:System.Net.FtpWebRequest>での FTP キャッシュポリシーの影響について説明します。  
  
|ポリシー|効果|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|リソースが最新で、コンテンツの長さが正確で、有効期限、変更、およびコンテンツの長さの属性が存在する場合、キャッシュされたリソースを返します。|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|サーバーからリソースを返します。|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|コンテンツの長さが存在し、エントリのサイズと一致する場合、キャッシュされたリソースを返します。それ以外の場合は、<xref:System.Net.WebException>をスローします。|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|コンテンツの長さが指定され、エントリのサイズと一致する場合に、キャッシュされたリソースを返します。それ以外の場合は、リソースがサーバーからダウンロードされ、呼び出し元に返されます。|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|キャッシュされたリソースのタイムスタンプがサーバー上のリソースのタイムスタンプと同じ場合は、キャッシュされたリソースを返します。それ以外の場合は、リソースがサーバーからダウンロードされ、キャッシュに格納されて、呼び出し元に返されます。|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|サーバーからリソースをダウンロードし、キャッシュに格納して、リソースを呼び出し元に返します。|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|キャッシュされたリソースが存在する場合は、削除されます。 リソースはサーバーからダウンロードされ、呼び出し元に返されます。|  
  
> [!NOTE]
>  <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> 設定すると、すべての構成設定が上書きされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">呼び出し元がこのプロパティを <see langword="null" /> に設定しようとしました。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/0eb0c5cb-dd97-484d-8614-785e88877abb">defaultFtpCachePolicy (ネットワーク設定)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.FtpWebRequest.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SSL 接続を使用する必要があるかどうかを指定する <see cref="T:System.Boolean" /> を取得または設定します。</summary>
        <value>制御およびデータの伝送が暗号化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <xref:System.Net.FtpWebRequest.EnableSsl%2A> プロパティが `true`でない限り、ユーザー名とパスワードの情報を含むすべてのデータとコマンドがクリアテキストでサーバーに送信されます。 ネットワークトラフィックを監視するすべてのユーザーは、資格情報を表示し、それらを使用してサーバーに接続できます。 資格情報を必要とし、SSL をサポートする FTP サーバーに接続する場合は、<xref:System.Net.FtpWebRequest.EnableSsl%2A> を `true`に設定する必要があります。  
  
 `"AUTH TLS"` コマンドは、暗号化されたセッションを要求するためにサーバーに送信されます。 サーバーがこのコマンドを認識しない場合は、<xref:System.Net.WebException> 例外が発生します。  
  
   
  
## Examples  
 次のコード例では、暗号化された接続を使用して、FTP サーバーからディレクトリの一覧をダウンロードします。  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">FTP サーバーへの接続が既に確立されています。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="ftpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">操作の開始時に返された <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
        <summary><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> で開始された保留中の非同期操作を終了します。</summary>
        <returns>このインスタンスに関連付けられている、書き込み可能な <see cref="T:System.IO.Stream" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 操作が完了していない場合、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> メソッドは、操作が完了するまでブロックします。 操作が完了したかどうかを確認するには、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>を呼び出す前に <xref:System.IAsyncResult.IsCompleted%2A> プロパティを確認します。  
  
 「例外」に記載されている例外に加えて、書き込み用にストリームを開くときにスローされた例外を再スロー <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> ます。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、要求のストリームを取得する非同期操作を終了する方法を示しています。 このコード例は、<xref:System.Net.FtpWebRequest> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> の呼び出しで、<see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> が取得されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">このメソッドは、<paramref name="asyncResult" /> で識別される操作に対して既に呼び出されています。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="ftpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">操作の開始時に返された <see cref="T:System.IAsyncResult" />。</param>
        <summary><see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> で開始された保留中の非同期操作を終了します。</summary>
        <returns><see cref="T:System.Net.WebResponse" /> インスタンスを格納している <see cref="T:System.Net.FtpWebResponse" /> 参照。 このオブジェクトは、要求に対する FTP サーバーの応答を格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.EndGetResponse%2A> メソッドが呼び出されたときに操作が完了していない場合、<xref:System.Net.FtpWebRequest.EndGetResponse%2A> は操作が完了するまでブロックします。 ブロックされないようにするには、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>を呼び出す前に <xref:System.IAsyncResult.IsCompleted%2A> プロパティを確認します。  
  
 「例外」に記載されている例外に加えて、サーバーとの通信中にスローされた例外を <xref:System.Net.FtpWebRequest.EndGetResponse%2A> 再スローします。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、非同期操作を終了して応答を取得する方法を示しています。 このコード例は、<xref:System.Net.FtpWebRequest> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> の呼び出しで、<see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> が取得されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">このメソッドは、<paramref name="asyncResult" /> で識別される操作に対して既に呼び出されています。</exception>
        <exception cref="T:System.Net.WebException">HTTP プロキシの使用中にエラーが発生しました。</exception>
        <block subset="none" type="usage"><para>この方法では、ネットワークトラフィックが生成されます。</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="ftpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>FTP サーバーにデータをアップロードするために使用するストリームを取得します。</summary>
        <returns>現在の要求でサーバーに送信されるデータを格納するために使用する、書き込み可能な <see cref="T:System.IO.Stream" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A> メソッドを呼び出す前に、要求のプロパティを設定します。 ストリームにデータを書き込んだ後は、要求を送信する前にストリームを閉じる必要があります。  
  
 <xref:System.Net.FtpWebRequest.Method%2A> プロパティを <xref:System.Net.WebRequestMethods.Ftp.UploadFile> または <xref:System.Net.WebRequestMethods.Ftp.AppendFile>に設定していない場合は、ストリームを取得できません。  
  
 ストリームの待機中にブロックを <xref:System.Net.FtpWebRequest.GetRequestStream%2A> します。 これを回避するには、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>の代わりに <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> メソッドを呼び出します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、要求のデータストリームにファイルをコピーし、データをアップロードしてファイルに追加する要求をサーバーに送信する方法を示します。  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> が呼び出されており、完了していません。  
  
または 
HTTP プロキシが有効で、<see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />、<see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />、または <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 以外の FTP コマンドを使用しようとしました。</exception>
        <exception cref="T:System.Net.WebException">FTP サーバーへの接続を確立できませんでした。</exception>
        <exception cref="T:System.Net.ProtocolViolationException"><see cref="P:System.Net.FtpWebRequest.Method" /> プロパティが、<see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> または <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" /> に設定されていません。</exception>
        <block subset="none" type="usage"><para>この方法では、ネットワークトラフィックが生成されます。</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="ftpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>FTP サーバーの応答を返します。</summary>
        <returns><see cref="T:System.Net.WebResponse" /> インスタンスを格納している <see cref="T:System.Net.FtpWebResponse" /> 参照。 このオブジェクトは、要求に対する FTP サーバーの応答を格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 FTP 固有のプロパティにアクセスするには、このメソッドによって返される <xref:System.Net.WebResponse> オブジェクトを <xref:System.Net.FtpWebResponse>にキャストする必要があります。  
  
 <xref:System.Net.FtpWebRequest.GetResponse%2A> によってコントロール接続が確立され、データ接続を作成することもできます。 <xref:System.Net.FtpWebRequest.GetResponse%2A> は、応答が受信されるまでブロックします。 これを回避するには、<xref:System.Net.FtpWebRequest.GetResponse%2A>の代わりに <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> および <xref:System.Net.FtpWebRequest.EndGetResponse%2A> メソッドを呼び出すことによって、この操作を非同期的に実行できます。  
  
 <xref:System.Net.FtpWebRequest.Proxy%2A> プロパティが直接または構成ファイルで設定されている場合、FTP サーバーとの通信はプロキシを介して行われます。  
  
 <xref:System.Net.WebException> がスローされた場合は、例外の <xref:System.Net.WebException.Response%2A> と <xref:System.Net.WebException.Status%2A> のプロパティを使用して、サーバーからの応答を確認します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  <xref:System.Net.FtpWebRequest.GetResponse%2A> を複数回呼び出すと、同じ応答オブジェクトが返されます。要求は再発行されません。  
  
   
  
## Examples  
 次のコード例では、ファイルを要求のデータストリームにコピーし、データをファイルに追加する要求をサーバーに送信する方法を示します。 この例では、<xref:System.Net.FtpWebRequest.GetResponse%2A> を呼び出して要求を送信し、サーバーから応答が返されるまでブロックします。  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> または <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> は、このインスタンスに対して既に呼び出されています。  
  
または 
HTTP プロキシが有効で、<see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />、<see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />、または <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 以外の FTP コマンドを使用しようとしました。</exception>
        <exception cref="T:System.Net.WebException"><see cref="P:System.Net.FtpWebRequest.EnableSsl" /> は <see langword="true" /> に設定されていますが、サーバーはこの機能をサポートしていません。  
  
または 
<see cref="P:System.Net.FtpWebRequest.Timeout" /> が指定され、タイムアウトの時間が経過しました。</exception>
        <block subset="none" type="usage"><para>この方法では、ネットワークトラフィックが生成されます。</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.FtpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>空の <see cref="T:System.Net.WebHeaderCollection" /> オブジェクトを取得します。</summary>
        <value>空の <see cref="T:System.Net.WebHeaderCollection" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.Headers%2A> プロパティは、<xref:System.Net.WebRequest> クラスおよび <xref:System.Net.WebResponse> クラスの他の実装との互換性のためだけに用意されています。 <xref:System.Net.FtpWebRequest.Headers%2A>を使用する理由はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.FtpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求の完了後に FTP サーバーへの制御接続を閉じるかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
        <value>サーバーへの接続を破棄させない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.KeepAlive%2A> プロパティが `false`に設定されている場合、<xref:System.Net.FtpWebResponse.Close%2A> メソッドを呼び出すと、コントロール接続が閉じられます。  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FtpWebRequest.GetResponse%2A>、または <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドを呼び出した後に <xref:System.Net.FtpWebRequest.KeepAlive%2A> を変更すると、<xref:System.InvalidOperationException> 例外が発生します。  
  
   
  
## Examples  
 次のコード例では、指定された <xref:System.Net.FtpWebRequest> オブジェクトのプロパティ値を取得して表示します。  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.FtpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーに送信するためのコマンドを取得または設定します。</summary>
        <value>サーバーに送信するための FTP コマンドを格納している <see cref="T:System.String" /> 値。 既定値は <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.Method%2A> プロパティは、サーバーに送信されるコマンドを決定します。 <xref:System.Net.FtpWebRequest.Method%2A> は、<xref:System.Net.WebRequestMethods.Ftp> クラスのパブリックフィールドメンバーに定義されている文字列を使用して設定します。 <xref:System.Net.WebRequestMethods.Ftp> クラスで定義されている文字列は、<xref:System.Net.FtpWebRequest.Method%2A> プロパティでサポートされているオプションのみであることに注意してください。 <xref:System.Net.FtpWebRequest.Method%2A> プロパティを他の値に設定すると、<xref:System.ArgumentException> の例外が発生します。  
  
 <xref:System.Net.FtpWebRequest.Method%2A> を <xref:System.Net.WebRequestMethods.Ftp.UploadFile>に設定する場合は、<xref:System.Net.FtpWebRequest.GetRequestStream%2A> メソッドを呼び出す前に、この操作を行う必要があります。 正しい順序でこれらのメンバーを呼び出さないと、要求ストリームを取得しようとすると <xref:System.Net.ProtocolViolationException> 例外が発生します。  
  
 <xref:System.Net.FtpWebRequest> オブジェクトに指定する資格情報には、指定されたメソッドを実行するためのアクセス許可が必要です。 それ以外の場合、FTP コマンドは失敗します。  
  
 コマンドの成功または失敗を確認するには、<xref:System.Net.FtpWebResponse.StatusCode%2A> と <xref:System.Net.FtpWebResponse.StatusDescription%2A> のプロパティを確認します。  
  
   
  
## Examples  
 次のコード例では、このプロパティを <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>に設定します。  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <exception cref="T:System.ArgumentException">メソッドが無効です。  
  
または
  
 このメソッドはサポートされていません。  
  
または
  
 複数のメソッドが指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
        <value>常に <see cref="T:System.NotSupportedException" /> をスローします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> プロパティは、<xref:System.Net.WebRequest> クラスおよび <xref:System.Net.WebResponse> クラスの他の実装との互換性のためだけに用意されています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">事前認証は FTP でサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.FtpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーとの通信に使用するプロキシを取得または設定します。</summary>
        <value>FTP サーバーとの通信を行う <see cref="T:System.Net.IWebProxy" /> インスタンス。 .NET Core では、その値は <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

### <a name="on-net-framework"></a>.NET Framework

 <xref:System.Net.FtpWebRequest.Proxy%2A> プロパティは、FTP サーバーと通信する <xref:System.Net.IWebProxy> インスタンスを識別します。 プロキシは、構成ファイルと Internet Explorer のローカルエリアネットワークの設定を使用して、システムによって設定されます。 プロキシを使用しないように指定するには、<xref:System.Net.FtpWebRequest.Proxy%2A> を <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> メソッドによって返されるプロキシインスタンスに設定します。 自動プロキシ検出の詳細については、「[自動プロキシ検出](~/docs/framework/network-programming/automatic-proxy-detection.md)」を参照してください。  
  
 要求のストリームにデータを書き込む前に、または応答を取得する前に、<xref:System.Net.FtpWebRequest.Proxy%2A> を設定する必要があります。 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FtpWebRequest.GetResponse%2A>、または <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドを呼び出した後に <xref:System.Net.FtpWebRequest.Proxy%2A> を変更すると、<xref:System.InvalidOperationException> 例外が発生します。  
  
 <xref:System.Net.FtpWebRequest> クラスは、HTTP および ISA ファイアウォールクライアントプロキシをサポートしています。  
  
 指定したプロキシが HTTP プロキシである場合は、<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>、<xref:System.Net.WebRequestMethods.Ftp.ListDirectory>、および <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> コマンドのみがサポートされます。  
  
### <a name="on-net-core"></a>.NET Core で   

`FtpWebRequest.Proxy` プロパティはサポートされていません。 プロパティを設定しても効果はありません。 プロパティ値を取得すると `null`が返されます。 


## Examples  
 次のコード例では、このプロパティ値を表示します。  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">このプロパティは <see langword="null" /> に設定できません。</exception>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ストリームからの読み取り時またはストリームへの書き込み時のタイムアウトを取得または設定します。</summary>
        <value>読み取りまたは書き込みがタイムアウトするまでのミリ秒数。既定値は30万ミリ秒 (5 分) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> は、<xref:System.Net.FtpWebRequest.GetRequestStream%2A> メソッドによって返されるストリームに書き込むとき、または <xref:System.Net.FtpWebResponse.GetResponseStream%2A> メソッドによって返されるストリームから読み取るときに使用されます。  
  
 具体的には、<xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> プロパティは、<xref:System.IO.Stream.Read%2A> メソッドのタイムアウトを制御します。これは、<xref:System.Net.FtpWebResponse.GetResponseStream%2A> メソッドによって返されるストリームを読み取るために使用されます。また、<xref:System.Net.FtpWebRequest.GetRequestStream%2A> メソッドによって返されるストリームへの書き込みに使用される <xref:System.IO.Stream.Write%2A> メソッドに対しても使用されます。 タイムアウト期間を超過すると、呼び出し元のメソッドは、<xref:System.Net.WebExceptionStatus> が <xref:System.Net.WebExceptionStatus.Timeout>に設定された <xref:System.Net.WebException> をスローします。  
  
 要求の完了を待機する時間を指定するには、<xref:System.Net.FtpWebRequest.Timeout%2A> プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求が既に送信されています。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">設定操作に指定された値は 0 以下であり、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenameTo : string with get, set" Usage="System.Net.FtpWebRequest.RenameTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>名前を変更されたファイルの新しい名前を取得または設定します。</summary>
        <value>名前を変更されたファイルの新しい名前。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">設定操作として指定した値が、<see langword="null" /> または空の文字列です。</exception>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.FtpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスで要求された URI を取得します。</summary>
        <value>ファイル転送プロトコルを使用してアクセスされるリソースを識別する <see cref="T:System.Uri" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.RequestUri%2A> プロパティの値は、このインスタンスを取得するために <xref:System.Net.WebRequest.Create%2A> メソッドが呼び出されたときに指定された URI です。  
  
   
  
## Examples  
 次のコード例では、このプロパティ値を表示します。  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.FtpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーに接続するために使用する <see cref="T:System.Net.ServicePoint" /> オブジェクトを取得します。</summary>
        <value>接続の動作をカスタマイズするために使用できる <see cref="T:System.Net.ServicePoint" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint> オブジェクトが存在しない場合は、FTP サーバー用に作成されます。 FTP サーバーに対して開くことができる接続の最大数を設定するには、このプロパティによって返される <xref:System.Net.ServicePoint> インスタンスの <xref:System.Net.ServicePoint.ConnectionLimit%2A> プロパティを設定します。  
  
   
  
## Examples  
 次のコード例では、要求からサービスポイントを取得し、接続の最大数を1に設定します。  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.FtpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求に対するミリ秒単位の待機時間を取得または設定します。</summary>
        <value>要求がタイムアウトするまでのミリ秒数を格納する <see cref="T:System.Int32" /> 値。既定値は <see cref="F:System.Threading.Timeout.Infinite" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 無限値を指定するには、<xref:System.Net.FtpWebRequest.Timeout%2A> プロパティを <xref:System.Threading.Timeout.Infinite> (-1) に設定します。 これが既定値です。  
  
 <xref:System.Net.FtpWebRequest.Timeout%2A> は、<xref:System.Net.FtpWebRequest.GetResponse%2A> メソッドを使用して行われた同期要求が応答を待機し、<xref:System.Net.FtpWebRequest.GetRequestStream%2A> メソッドがストリームを待機するミリ秒数です。 リソースがタイムアウト期間内に応答しない場合、要求は <xref:System.Net.WebException.Status%2A> プロパティが <xref:System.Net.WebExceptionStatus.Timeout>に設定された <xref:System.Net.WebException> をスローします。  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FtpWebRequest.GetResponse%2A>、または <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドを呼び出した後に <xref:System.Net.FtpWebRequest.Timeout%2A> を変更すると、<xref:System.InvalidOperationException> 例外が発生します。  
  
 ドメインネームシステム (DNS) のクエリが返されるか、タイムアウトになるまでに最大15秒かかることがあります。解決が必要なホスト名が要求に含まれており、<xref:System.Net.FtpWebRequest.Timeout%2A> を15秒未満に設定した場合は、要求のタイムアウトを示すために <xref:System.Net.WebException> がスローされる前に15秒以上かかることがあります。  
  
   
  
## Examples  
 このプロパティを設定するコード例を次に示します。  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値が 0 未満で、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseBinary : bool with get, set" Usage="System.Net.FtpWebRequest.UseBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイル転送のデータ型を指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
        <value><see langword="true" /> の場合は、転送されるデータがバイナリであることがサーバーに示されます。<see langword="false" /> の場合は、データがテキストであることが示されます。 既定値は <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 画像などのバイナリデータを送信する場合は、このプロパティを `true`に設定します。 テキストを送信する場合は、プロパティを `false`に設定します。 `true` を指定すると、<xref:System.Net.FtpWebRequest> は `"TYPE I"` コマンドをサーバーに送信します。 `false` を指定すると、<xref:System.Net.FtpWebRequest> は `"Type A"` コマンドをサーバーに送信します。 FTP サーバーでは、これらのコマンドを無視できます。  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FtpWebRequest.GetResponse%2A>、または <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドを呼び出した後に <xref:System.Net.FtpWebRequest.UseBinary%2A> を変更すると、<xref:System.InvalidOperationException> 例外が発生します。  
  
   
  
## Examples  
 次のコード例では、指定された <xref:System.Net.FtpWebRequest> オブジェクトのプロパティ値を取得して表示します。  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
        <value>常に <see cref="T:System.NotSupportedException" /> をスローします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> プロパティは、<xref:System.Net.WebRequest> クラスおよび <xref:System.Net.WebResponse> クラスの他の実装との互換性のためだけに用意されています。 <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>を使用する理由はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">既定の資格情報が FTP でサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePassive : bool with get, set" Usage="System.Net.FtpWebRequest.UsePassive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント アプリケーションのデータ転送処理の動作を取得または設定します。</summary>
        <value>クライアント アプリケーションのデータ転送処理がデータ ポートで接続を待機する場合は <see langword="false" />。それ以外で、クライアントがデータ ポートで接続を開始する必要がある場合は <see langword="true" />。 既定値は <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.UsePassive%2A> プロパティを `true` に設定すると、"`PASV"` コマンドがサーバーに送信されます。 このコマンドは、データポートでリッスンするようにサーバーに要求し、転送コマンドの受信時に1つを開始するのではなく、接続を待機します。  
  
 <xref:System.Net.FtpWebRequest.UsePassive%2A>を使用して指定された動作の詳細については、「 [RFC 959: "ファイル転送プロトコル"」、「セクション 3.2: データ接続の確立」、「4.1.2: パラメーターコマンドの転送](https://www.ietf.org/rfc/rfc959.txt)」を参照してください。  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FtpWebRequest.GetResponse%2A>、または <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> メソッドを呼び出した後に <xref:System.Net.FtpWebRequest.UsePassive%2A> を変更すると、<xref:System.InvalidOperationException> 例外が発生します。  
  
 <xref:System.Net.FtpWebRequest.UsePassive%2A> が `true`に設定されている場合、FTP サーバーはファイルのサイズを送信しない可能性があり、ダウンロードの進行状況は常にゼロになります。 <xref:System.Net.FtpWebRequest.UsePassive%2A> が `false`に設定されている場合は、ファイアウォールによってアラートが生成され、ファイルのダウンロードがブロックされる可能性があります。  
  
   
  
## Examples  
 次のコード例では、指定された <xref:System.Net.FtpWebRequest> オブジェクトのプロパティ値を取得して表示します。  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>
