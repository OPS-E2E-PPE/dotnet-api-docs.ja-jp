<Type Name="WebRequest" FullName="System.Net.WebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f7cd4bbfc04c68f1419ca96d6bce26da56be103" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75108156" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebRequest extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRequest&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequest abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebRequest = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ec2c1-101">Uniform Resource Identifier (URI) に対する要求を実行します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-101">Makes a request to a Uniform Resource Identifier (URI).</span></span> <span data-ttu-id="ec2c1-102">これは <see langword="abstract" /> クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-102">This is an <see langword="abstract" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="ec2c1-103">新規の開発には `WebRequest` またはその派生クラスを使用しないことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-103">We don't recommend that you use `WebRequest` or its derived classes for new development.</span></span> <span data-ttu-id="ec2c1-104">代わりに、<xref:System.Net.Http.HttpClient?displayProperty=nameWithType> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-104">Instead, use the <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> class.</span></span>

 <span data-ttu-id="ec2c1-105"><xref:System.Net.WebRequest> は、の `abstract` 基底クラスです。インターネットからデータにアクセスするための、NET の要求/応答モデル。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-105"><xref:System.Net.WebRequest> is the `abstract` base class for .NET's request/response model for accessing data from the Internet.</span></span> <span data-ttu-id="ec2c1-106">要求/応答モデルを使用するアプリケーションは、プロトコルに依存しない方法でインターネットからデータを要求できます。この方法では、アプリケーションは <xref:System.Net.WebRequest> クラスのインスタンスと連携し、プロトコル固有の子孫クラスは要求の詳細を実行します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-106">An application that uses the request/response model can request data from the Internet in a protocol-agnostic manner, in which the application works with instances of the <xref:System.Net.WebRequest> class while protocol-specific descendant classes carry out the details of the request.</span></span>  
  
 <span data-ttu-id="ec2c1-107">要求は、サーバー上の Web ページなどの特定の URI にアプリケーションから送信されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-107">Requests are sent from an application to a particular URI, such as a Web page on a server.</span></span> <span data-ttu-id="ec2c1-108">URI は、アプリケーションに登録されている <xref:System.Net.WebRequest> 子孫のリストから作成する適切な子孫クラスを決定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-108">The URI determines the proper descendant class to create from a list of <xref:System.Net.WebRequest> descendants registered for the application.</span></span> <span data-ttu-id="ec2c1-109"><xref:System.Net.WebRequest> の子孫は通常、HTTP や FTP などの特定のプロトコルを処理するように登録されますが、サーバー上の特定のサーバーまたはパスへの要求を処理するように登録できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-109"><xref:System.Net.WebRequest> descendants are typically registered to handle a specific protocol, such as HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</span></span>  
  
 <span data-ttu-id="ec2c1-110"><xref:System.Net.WebRequest> クラスは、インターネットリソースへのアクセス中にエラーが発生した場合に <xref:System.Net.WebException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-110">The <xref:System.Net.WebRequest> class throws a <xref:System.Net.WebException> when errors occur while accessing an Internet resource.</span></span> <span data-ttu-id="ec2c1-111"><xref:System.Net.WebException.Status%2A> プロパティは、エラーの原因を示す <xref:System.Net.WebExceptionStatus> の値の1つです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-111">The <xref:System.Net.WebException.Status%2A> property is one of the <xref:System.Net.WebExceptionStatus> values that indicates the source of the error.</span></span> <span data-ttu-id="ec2c1-112"><xref:System.Net.WebException.Status%2A> が <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>場合、<xref:System.Net.WebException.Response%2A> プロパティには、インターネットリソースから受信した <xref:System.Net.WebResponse> が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-112">When <xref:System.Net.WebException.Status%2A> is <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, the <xref:System.Net.WebException.Response%2A> property contains the <xref:System.Net.WebResponse> received from the Internet resource.</span></span>  
  
 <span data-ttu-id="ec2c1-113"><xref:System.Net.WebRequest> クラスは `abstract` クラスであるため、実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A> メソッドによって返される子孫クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-113">Because the <xref:System.Net.WebRequest> class is an `abstract` class, the actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by <xref:System.Net.WebRequest.Create%2A> method.</span></span> <span data-ttu-id="ec2c1-114">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-114">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-115"><xref:System.Net.WebRequest.Create%2A> メソッドを使用して、新しい <xref:System.Net.WebRequest> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-115">Use the <xref:System.Net.WebRequest.Create%2A> method to initialize new <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="ec2c1-116"><xref:System.Net.WebRequest> コンストラクターは使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-116">Do not use the <xref:System.Net.WebRequest> constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-117">WebRequest オブジェクトを作成するアプリケーションが通常のユーザーの資格情報で実行されている場合、そのユーザーに対してアクセス許可が明示的に付与されていない限り、アプリケーションはローカルコンピューターストアにインストールされている証明書にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-117">If the application that creates the WebRequest object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-118">次の例では、<xref:System.Net.WebRequest> インスタンスを作成し、応答を返す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-118">The following example shows how to create a <xref:System.Net.WebRequest> instance and return the response.</span></span>  
  
 [!code-cpp[NclWebRequestSimple#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#1)]
 [!code-csharp[NclWebRequestSimple#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#1)]
 [!code-vb[NclWebRequestSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission"><span data-ttu-id="ec2c1-119">要求された URI または要求のリダイレクト先の URI にアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-119">To access the requested URI or any URI that the request is redirected to.</span></span> <span data-ttu-id="ec2c1-120"><see cref="F:System.Net.NetworkAccess.Connect" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ec2c1-120">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" />.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="ec2c1-121"><see cref="T:System.Net.WebRequest" />から継承する場合は、<see cref="P:System.Net.WebRequest.Method" />、<see cref="P:System.Net.WebRequest.RequestUri" />、<see cref="P:System.Net.WebRequest.Headers" />、<see cref="P:System.Net.WebRequest.ContentLength" />、<see cref="P:System.Net.WebRequest.ContentType" />、<see cref="P:System.Net.WebRequest.Credentials" />、<see cref="P:System.Net.WebRequest.PreAuthenticate" />、<see cref="M:System.Net.WebRequest.GetRequestStream" />、<see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />、<see cref="M:System.Net.WebRequest.GetResponse" />、<see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />の各メンバーをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-121">When you inherit from <see cref="T:System.Net.WebRequest" />, you must override the following members: <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />, <see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, and <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />.</span></span> <span data-ttu-id="ec2c1-122">さらに、<see cref="M:System.Net.WebRequest.Create(System.Uri)" />を呼び出すときに使用する <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> メソッドを定義する <see cref="T:System.Net.IWebRequestCreate" /> インターフェイスの実装を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-122">In addition, you must provide an implementation of the <see cref="T:System.Net.IWebRequestCreate" /> interface, which defines the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method used when you call <see cref="M:System.Net.WebRequest.Create(System.Uri)" />.</span></span> <span data-ttu-id="ec2c1-123"><see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> メソッドまたは構成ファイルを使用して、<see cref="T:System.Net.IWebRequestCreate" /> インターフェイスを実装するクラスを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-123">You must register the class that implements the <see cref="T:System.Net.IWebRequestCreate" /> interface, using the <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> method or the configuration file.</span></span></para></block>
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="~/docs/framework/network-programming/requesting-data.md"><span data-ttu-id="ec2c1-124">データの要求</span><span class="sxs-lookup"><span data-stu-id="ec2c1-124">Requesting Data</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md"><span data-ttu-id="ec2c1-125">プラグ可能なプロトコルのプログラミング</span><span class="sxs-lookup"><span data-stu-id="ec2c1-125">Programming Pluggable Protocols</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec2c1-126"><see cref="T:System.Net.WebRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-126">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2c1-127"><see cref="T:System.Net.WebRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-127">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-128"><xref:System.Net.WebRequest.Create%2A> メソッドを使用して、新しい <xref:System.Net.WebRequest> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-128">Use the <xref:System.Net.WebRequest.Create%2A> method to initialize new <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="ec2c1-129">コンストラクターは使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-129">Do not use the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-130">次の例では、<xref:System.Net.WebRequest> クラスで <xref:System.Net.WebRequest.Create%2A> メソッドを呼び出すことによって <xref:System.Net.WebRequest> インスタンスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-130">The following example shows how to create a <xref:System.Net.WebRequest> instance by calling the <xref:System.Net.WebRequest.Create%2A> method on the <xref:System.Net.WebRequest> class.</span></span>  
  
 [!code-cpp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest.WebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebRequest : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebRequest" Usage="new System.Net.WebRequest (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="ec2c1-131">新しい <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスをシリアル化するために必要な情報を格納する <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-131">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.WebRequest" /> instance.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="ec2c1-132">新しい <see cref="T:System.Runtime.Serialization.StreamingContext" /> インスタンスに関連付けられているシリアル化ストリームのソースを示す <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-132">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the source of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" /> instance.</span></span></param>
        <summary><span data-ttu-id="ec2c1-133"><see cref="T:System.Net.WebRequest" /> クラスと <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスの指定したインスタンスから、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-133">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-134">派生クラスによって実装された場合、このコンストラクターは <xref:System.Net.WebRequest> 子孫の <xref:System.Runtime.Serialization.ISerializable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-134">When implemented by a descendant class, this constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Net.WebRequest> descendant.</span></span>  
  
 <span data-ttu-id="ec2c1-135">シリアル化を使用する場合は、アプリケーションを完全信頼モードで実行する必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-135">Notice that an application must run in full trust mode when using serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-136">コンストラクターが派生クラスでオーバーライドされていないのに、そのコンストラクターへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-136">Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.</span></span></exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="ec2c1-137">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="ec2c1-137">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public abstract void Abort ();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Abort ()" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Abort();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="webRequest.Abort " FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual void Abort ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webRequest.Abort " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2c1-138">要求を中止します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-138">Aborts the request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-139"><xref:System.Net.WebRequest.Abort%2A> メソッドは、<xref:System.Net.WebRequest.BeginGetResponse%2A> メソッドで開始されたインターネットリソースへの非同期要求をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-139">The <xref:System.Net.WebRequest.Abort%2A> method cancels asynchronous requests to Internet resources started with the <xref:System.Net.WebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-140"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-140">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-141">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-141">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-142">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-142">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-143">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-143">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationLevel : System.Net.Security.AuthenticationLevel with get, set" Usage="System.Net.WebRequest.AuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-144">この要求で使用する認証レベルおよび偽装レベルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-144">Gets or sets values indicating the level of authentication and impersonation used for this request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-145"><see cref="T:System.Net.Security.AuthenticationLevel" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-145">A bitwise combination of the <see cref="T:System.Net.Security.AuthenticationLevel" /> values.</span></span> <span data-ttu-id="ec2c1-146">既定値は <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-146">The default value is <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.</span></span>  
  
<span data-ttu-id="ec2c1-147">相互認証では、クライアントとサーバーの両方が、それらの身元を証明する資格情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-147">In mutual authentication, both the client and server present credentials to establish their identity.</span></span> <span data-ttu-id="ec2c1-148"><see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> と <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> は、Kerberos 認証に関連する値です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-148">The <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> and <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> values are relevant for Kerberos authentication.</span></span> <span data-ttu-id="ec2c1-149">Kerberos 認証は、直接サポートすることも、Negotiate セキュリティ プロトコルを使用して実際のセキュリティ プロトコルを選択する場合に使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-149">Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol.</span></span> <span data-ttu-id="ec2c1-150">認証プロトコルの詳細については、「[インターネット認証](https://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-150">For more information about authentication protocols, see [Internet Authentication](https://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a).</span></span>  
  
<span data-ttu-id="ec2c1-151">相互認証が行われたかどうかを確認するには、<see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> プロパティをチェックします。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-151">To determine whether mutual authentication occurred, check the <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> property.</span></span>  
  
<span data-ttu-id="ec2c1-152"><see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 認証フラグの値を指定していて相互認証が行われない場合、アプリケーションは、相互認証が失敗したことを示す <see cref="T:System.IO.IOException" /> 内部例外を持つ <see cref="T:System.Net.ProtocolViolationException" /> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-152">If you specify the <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> authentication flag value and mutual authentication does not occur, your application will receive an <see cref="T:System.IO.IOException" /> with a <see cref="T:System.Net.ProtocolViolationException" /> inner exception indicating that mutual authentication failed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec2c1-153">次のコード例では、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-153">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NclCredPolicy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetRequestStream (callback, state)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetRequestStream (callback, state)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ec2c1-154"><see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-154">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="ec2c1-155">非同期要求の状態情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-155">An object containing state information for this asynchronous request.</span></span></param>
        <summary><span data-ttu-id="ec2c1-156">派生クラスでオーバーライドされると、<see cref="M:System.Net.WebRequest.GetRequestStream" /> メソッドの非同期バージョンを提供します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-156">When overridden in a descendant class, provides an asynchronous version of the <see cref="M:System.Net.WebRequest.GetRequestStream" /> method.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-157">非同期の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-157">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-158"><xref:System.Net.WebRequest.BeginGetRequestStream%2A> メソッドは、インターネットリソースにデータを送信するために使用されるストリームの非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-158">The <xref:System.Net.WebRequest.BeginGetRequestStream%2A> method starts an asynchronous request for a stream used to send data to an Internet resource.</span></span> <span data-ttu-id="ec2c1-159"><xref:System.AsyncCallback> デリゲートを実装するコールバックメソッドは、<xref:System.Net.WebRequest.EndGetRequestStream%2A> メソッドを使用して要求ストリームを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-159">The callback method that implements the <xref:System.AsyncCallback> delegate uses the <xref:System.Net.WebRequest.EndGetRequestStream%2A> method to return the request stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-160"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-160">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-161">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-161">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-162">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-162">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-163">次の例では、<xref:System.Net.WebRequest.BeginGetRequestStream%2A> を使用して、要求ストリームを非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-163">The following example uses the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> to asynchronously obtain the request stream.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-164">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-164">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="ec2c1-165">非同期要求を行う</span><span class="sxs-lookup"><span data-stu-id="ec2c1-165">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetResponse (callback, state)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetResponse (callback, state)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ec2c1-166"><see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-166">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="ec2c1-167">非同期要求の状態情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-167">An object containing state information for this asynchronous request.</span></span></param>
        <summary><span data-ttu-id="ec2c1-168">派生クラスでオーバーライドされると、インターネット リソースの非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-168">When overridden in a descendant class, begins an asynchronous request for an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-169">非同期の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-169">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-170"><xref:System.Net.WebRequest.BeginGetResponse%2A> メソッドは、応答の非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-170">The <xref:System.Net.WebRequest.BeginGetResponse%2A> method starts an asynchronous request for a response.</span></span> <span data-ttu-id="ec2c1-171"><xref:System.AsyncCallback> デリゲートを実装するコールバックメソッドは、<xref:System.Net.WebRequest.EndGetResponse%2A> メソッドを使用して、インターネットリソースから <xref:System.Net.WebResponse> を返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-171">The callback method that implements the <xref:System.AsyncCallback> delegate uses the <xref:System.Net.WebRequest.EndGetResponse%2A> method to return the <xref:System.Net.WebResponse> from the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-172"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-172">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-173">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-173">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-174">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-174">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-175">WebException がスローされた場合は、例外の <xref:System.Net.WebException.Response%2A> と <xref:System.Net.WebException.Status%2A> のプロパティを使用して、サーバーからの応答を確認します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-175">If a WebException is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-176">次の例では、<xref:System.Net.WebRequest.BeginGetResponse%2A> を使用して、ターゲットリソースを非同期に要求します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-176">The following example uses <xref:System.Net.WebRequest.BeginGetResponse%2A> to asynchronously request the target resource.</span></span> <span data-ttu-id="ec2c1-177">リソースが取得されると、指定されたコールバックメソッドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-177">When the resource has been obtained, the specified callback method will be executed.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#2)]
 [!code-csharp[WebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#2)]
 [!code-vb[WebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-178">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-178">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <altmember cref="M:System.Net.WebRequest.GetResponse" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="ec2c1-179">非同期要求を行う</span><span class="sxs-lookup"><span data-stu-id="ec2c1-179">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-180">この要求のキャッシュ ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-180">Gets or sets the cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-181">キャッシュ ポリシーを定義する <see cref="T:System.Net.Cache.RequestCachePolicy" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-181">A <see cref="T:System.Net.Cache.RequestCachePolicy" /> object that defines a cache policy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-182">キャッシュから応答を取得できるかどうかは、現在のキャッシュポリシーとキャッシュ内の要求されたリソースの存在によって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-182">The current cache policy and the presence of the requested resource in the cache determine whether a response can be retrieved from the cache.</span></span> <span data-ttu-id="ec2c1-183">キャッシュされた応答を使用すると、通常はアプリケーションのパフォーマンスが向上しますが、キャッシュ内の応答がサーバーの応答と一致しないというリスクがあります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-183">Using cached responses usually improves application performance, but there is a risk that the response in the cache does not match the response on the server.</span></span>  
  
 <span data-ttu-id="ec2c1-184">既定のキャッシュポリシーを指定するには、machine.config 構成ファイルを使用するか、ハイパーテキスト転送プロトコル (HTTP) または Secure ハイパーテキスト転送プロトコル (HTTPS) URI スキームを使用する要求の <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-184">Default cache policy can be specified in the Machine.config configuration file or by setting the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property for requests that use the Hypertext Transfer Protocol (HTTP) or Secure Hypertext Transfer Protocol (HTTPS) URI scheme.</span></span>  
  
 <span data-ttu-id="ec2c1-185">リソースのコピーは、リソースの応答ストリームが取得され、ストリームの末尾に読み取られる場合にのみ、キャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-185">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="ec2c1-186">そのため、同じリソースに対する別の要求では、この要求のキャッシュポリシーレベルに応じて、キャッシュされたコピーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-186">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-187">次のコード例は、Web 要求のキャッシュポリシーを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-187">The following code example demonstrates setting the cache policy for a Web request.</span></span>  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.DefaultCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public virtual string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.WebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-188">派生クラスでオーバーライドされると、要求で使用する接続グループの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-188">When overridden in a descendant class, gets or sets the name of the connection group for the request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-189">要求で使用する接続グループの名前。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-189">The name of the connection group for the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-190"><xref:System.Net.WebRequest.ConnectionGroupName%2A> プロパティは、アプリケーション内の特定の要求を1つ以上の接続プールに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-190">The <xref:System.Net.WebRequest.ConnectionGroupName%2A> property associates specific requests within an application to one or more connection pools.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-191"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-191">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-192">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-192">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-193">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-193">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-194">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-194">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ec2c1-195"><see cref="P:System.Net.WebRequest.ConnectionGroupName" /> プロパティは、通常、セキュリティエラーの可能性を回避するために、一連の資格情報を共有する要求のグループをインターネットリソースへの接続と関連付けます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-195">The <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> property typically associates a group of requests that share a set of credentials with a connection to an Internet resource to avoid potential security failures.</span></span></para></block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
        <related type="Article" href="~/docs/framework/network-programming/connection-grouping.md"><span data-ttu-id="ec2c1-196">接続のグループ化</span><span class="sxs-lookup"><span data-stu-id="ec2c1-196">Connection Grouping</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.WebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-197">派生クラスでオーバーライドされると、送信している要求データのコンテンツ長を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-197">When overridden in a descendant class, gets or sets the content length of the request data being sent.</span></span></summary>
        <value><span data-ttu-id="ec2c1-198">送信している要求データのバイト数。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-198">The number of bytes of request data being sent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-199"><xref:System.Net.WebRequest.ContentLength%2A> プロパティには、<xref:System.Net.WebRequest> インスタンスによってインターネットリソースに送信されるデータのバイト数が格納されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-199">The <xref:System.Net.WebRequest.ContentLength%2A> property contains the number of bytes of data sent to the Internet resource by the <xref:System.Net.WebRequest> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-200"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-200">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-201">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-201">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-202">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-202">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-203">次の例では、<xref:System.Net.WebRequest.ContentLength%2A> プロパティを、送信バイトバッファーのバイト数に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-203">The following example sets the <xref:System.Net.WebRequest.ContentLength%2A> property to the amount of bytes in the outgoing byte buffer.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-204">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-204">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public abstract string ContentType { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ContentType As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.WebRequest.ContentType" />
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-205">派生クラスでオーバーライドされると、送信している要求データのコンテンツ タイプを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-205">When overridden in a descendant class, gets or sets the content type of the request data being sent.</span></span></summary>
        <value><span data-ttu-id="ec2c1-206">要求データのコンテンツ タイプ。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-206">The content type of the request data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-207"><xref:System.Net.WebRequest.ContentType%2A> プロパティには、要求のメディアの種類が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-207">The <xref:System.Net.WebRequest.ContentType%2A> property contains the media type of the request.</span></span> <span data-ttu-id="ec2c1-208">これは、通常、コンテンツの MIME エンコードです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-208">This is typically the MIME encoding of the content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-209"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-209">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-210">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-210">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-211">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-211">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-212">次の例では、<xref:System.Net.WebRequest.ContentType%2A> プロパティを適切なメディアの種類に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-212">The following example sets the <xref:System.Net.WebRequest.ContentType%2A> property to the appropriate media type.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-213">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-213">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec2c1-214">新しい <see cref="T:System.Net.WebRequest" /> を初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-214">Initializes a new <see cref="T:System.Net.WebRequest" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUriString As String) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString"><span data-ttu-id="ec2c1-215">インターネット リソースを識別する URI。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-215">The URI that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="ec2c1-216">指定した URI スキーム用に新しい <see cref="T:System.Net.WebRequest" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-216">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-217">特定の URI スキーム用の <see cref="T:System.Net.WebRequest" /> 派生クラス。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-217">A <see cref="T:System.Net.WebRequest" /> descendant for the specific URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-218"><xref:System.Net.WebRequest.Create%2A> メソッドは、実行時に決定された <xref:System.Net.WebRequest> クラスの子孫を、`requestUri`に対して最も近い登録済みの一致として返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-218">The <xref:System.Net.WebRequest.Create%2A> method returns a descendant of the <xref:System.Net.WebRequest> class determined at run time as the closest registered match for `requestUri`.</span></span>  
  
 <span data-ttu-id="ec2c1-219">たとえば、`http://` または `https://` で始まる URI が `requestUri`で渡されると、<xref:System.Net.WebRequest.Create%2A>によって <xref:System.Net.HttpWebRequest> が返されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-219">For example, when a URI beginning with `http://` or `https://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.Create%2A>.</span></span> <span data-ttu-id="ec2c1-220">代わりに `ftp://` で始まる URI が渡された場合、<xref:System.Net.WebRequest.Create%2A> メソッドは <xref:System.Net.FtpWebRequest> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-220">If a URI beginning with `ftp://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FtpWebRequest> instance.</span></span> <span data-ttu-id="ec2c1-221">代わりに `file://` で始まる URI が渡された場合、<xref:System.Net.WebRequest.Create%2A> メソッドは <xref:System.Net.FileWebRequest> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-221">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span>  
  
 <span data-ttu-id="ec2c1-222">登録済みの事前登録済みの予約の種類には、次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-222">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="ec2c1-223">.NET には、`http://`、`https://`、`ftp://`、および `file://` URI スキームのサポートが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-223">.NET includes support for the `http://`, `https://`, `ftp://`, and `file://` URI schemes.</span></span> <span data-ttu-id="ec2c1-224">他の要求を処理するためのカスタム <xref:System.Net.WebRequest> 子孫は、<xref:System.Net.WebRequest.RegisterPrefix%2A> メソッドに登録されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-224">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span>  
  
 <span data-ttu-id="ec2c1-225"><xref:System.Net.WebRequest.Create%2A> メソッドは、`requestUriString` パラメーターを使用して、新しい <xref:System.Net.WebRequest>に渡す <xref:System.Uri> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-225">The <xref:System.Net.WebRequest.Create%2A> method uses the `requestUriString` parameter to create a <xref:System.Uri> instance that it passes to the new <xref:System.Net.WebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-226">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-226">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ec2c1-227">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-227">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-228">次の例では、<xref:System.Net.WebRequest.Create%2A> を使用して、<xref:System.Net.HttpWebRequest> インスタンスをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-228">The following example uses <xref:System.Net.WebRequest.Create%2A> to instantiate an <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="ec2c1-229">ターゲット URL を表す文字列は、コンストラクターパラメーターとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-229">A string representing the target URL is used as the constructor parameter.</span></span>  
  
 [!code-cpp[WebResponse_ResponseUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse_ResponseUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse_ResponseUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec2c1-230"><paramref name="requestUriString" /> で指定された要求スキームが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-230">The request scheme specified in <paramref name="requestUriString" /> has not been registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec2c1-231"><paramref name="requestUriString" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-231"><paramref name="requestUriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec2c1-232">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-232">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="ec2c1-233"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.FormatException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-233">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="ec2c1-234"><paramref name="requestUriString" /> で指定された URI は、有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-234">The URI specified in <paramref name="requestUriString" /> is not a valid URI.</span></span></exception>
        <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md"><span data-ttu-id="ec2c1-235">プラグ可能なプロトコルのプログラミング</span><span class="sxs-lookup"><span data-stu-id="ec2c1-235">Programming Pluggable Protocols</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="ec2c1-236">要求されたリソースの URI を格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-236">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</span></span></param>
        <summary><span data-ttu-id="ec2c1-237">指定した URI スキーム用に新しい <see cref="T:System.Net.WebRequest" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-237">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-238">指定した URI スキーム用の <see cref="T:System.Net.WebRequest" /> 派生クラス。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-238">A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-239"><xref:System.Net.WebRequest.Create%2A> メソッドは、実行時に決定された <xref:System.Net.WebRequest> クラスの子孫を、`requestUri`に対して最も近い登録済みの一致として返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-239">The <xref:System.Net.WebRequest.Create%2A> method returns a descendant of the <xref:System.Net.WebRequest> class determined at run time as the closest registered match for `requestUri`.</span></span>  
  
 <span data-ttu-id="ec2c1-240">たとえば、`http://www.contoso.com/text/` への要求を処理し、`http://www.contoso.com/code/`への要求を処理する別の名前付きの Handler1 を <xref:System.Net.WebRequest> 作成する場合、<xref:System.Net.WebRequest.Create%2A> メソッドを使用して、指定された URI に関連付けられている WebRequest 子孫を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-240">For example, if you create a <xref:System.Net.WebRequest> descendant, Handler1, to handle requests to `http://www.contoso.com/text/` and another named Handler2 to handle requests to `http://www.contoso.com/code/`, you can use <xref:System.Net.WebRequest.Create%2A> method to return the WebRequest descendant associated with either specified URI.</span></span>  
  
 <span data-ttu-id="ec2c1-241">URI のスキーム部分のみに基づいて <xref:System.Net.WebRequest> クラスの子孫を返すには、<xref:System.Net.WebRequest.CreateDefault%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-241">To return a descendant of the <xref:System.Net.WebRequest> class based on only the scheme portion of a URI, use the <xref:System.Net.WebRequest.CreateDefault%2A> method.</span></span>  
  
 <span data-ttu-id="ec2c1-242">たとえば、`http://` または `https://` で始まる URI が `requestUri`で渡されると、<xref:System.Net.WebRequest.Create%2A>によって <xref:System.Net.HttpWebRequest> が返されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-242">For example, when a URI beginning with `http://` or `https://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.Create%2A>.</span></span> <span data-ttu-id="ec2c1-243">代わりに `ftp://` で始まる URI が渡された場合、<xref:System.Net.WebRequest.Create%2A> メソッドは <xref:System.Net.FileWebRequest> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-243">If a URI beginning with `ftp://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span> <span data-ttu-id="ec2c1-244">代わりに `file://` で始まる URI が渡された場合、<xref:System.Net.WebRequest.Create%2A> メソッドは <xref:System.Net.FileWebRequest> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-244">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span>  
  
 <span data-ttu-id="ec2c1-245">登録済みの事前登録済みの予約の種類には、次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-245">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="ec2c1-246">.NET には、`http://`、`https://`、`ftp://`、および `file://` URI スキームのサポートが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-246">.NET includes support for the `http://`, `https://`, `ftp://`, and `file://` URI schemes.</span></span> <span data-ttu-id="ec2c1-247">他の要求を処理するためのカスタム <xref:System.Net.WebRequest> 子孫は、<xref:System.Net.WebRequest.RegisterPrefix%2A> メソッドに登録されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-247">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-248">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-248">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ec2c1-249">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-249">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-250">次の例では、<xref:System.Net.WebRequest.Create%2A> を使用して、<xref:System.Net.HttpWebRequest> インスタンスをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-250">The following example uses <xref:System.Net.WebRequest.Create%2A> to instantiate an <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="ec2c1-251">ターゲット URL を表す Uri は、コンストラクターパラメーターとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-251">A Uri representing the target URL is used as the constructor parameter.</span></span>  
  
 [!code-cpp[WebRequest_Create#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Create/CPP/webrequest_create.cpp#1)]
 [!code-csharp[WebRequest_Create#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Create/CS/webrequest_create.cs#1)]
 [!code-vb[WebRequest_Create#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Create/VB/webrequest_create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec2c1-252"><paramref name="requestUri" /> で指定された要求スキームが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-252">The request scheme specified in <paramref name="requestUri" /> is not registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec2c1-253"><paramref name="requestUri" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-253"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec2c1-254">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-254">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest CreateDefault (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest CreateDefault(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ CreateDefault(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateDefault : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.CreateDefault requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="ec2c1-255">要求されたリソースの URI を格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-255">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</span></span></param>
        <summary><span data-ttu-id="ec2c1-256">指定した URI スキーム用に新しい <see cref="T:System.Net.WebRequest" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-256">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-257">指定した URI スキーム用の <see cref="T:System.Net.WebRequest" /> 派生クラス。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-257">A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-258"><xref:System.Net.WebRequest.CreateDefault%2A> メソッドは、URI のスキーム部分のみに基づいて <xref:System.Net.WebRequest> の子孫インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-258">The <xref:System.Net.WebRequest.CreateDefault%2A> method returns a <xref:System.Net.WebRequest> descendant instance based on only the scheme portion of a URI.</span></span>  
  
 <span data-ttu-id="ec2c1-259">たとえば、`http://` で始まる URI が `requestUri`で渡された場合、<xref:System.Net.WebRequest.CreateDefault%2A>によって <xref:System.Net.HttpWebRequest> が返されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-259">For example, when a URI beginning with `http://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateDefault%2A>.</span></span> <span data-ttu-id="ec2c1-260">代わりに `file://` で始まる URI が渡された場合、<xref:System.Net.WebRequest.CreateDefault%2A> メソッドは <xref:System.Net.FileWebRequest>を返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-260">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.CreateDefault%2A> method will return a <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-261">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-261">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ec2c1-262">詳細については、「 [.net のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-262">For more information, see [Network Tracing in .NET](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec2c1-263"><paramref name="requestUri" /> で指定された要求スキームが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-263">The request scheme specified in <paramref name="requestUri" /> is not registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec2c1-264"><paramref name="requestUri" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-264"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec2c1-265">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-265">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateHttp">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec2c1-266">指定した URI 用に新しい <see cref="T:System.Net.HttpWebRequest" /> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-266">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUriString As String) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : string -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString"><span data-ttu-id="ec2c1-267">インターネット リソースを識別する URI 文字列。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-267">A URI string that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="ec2c1-268">指定した URI 文字列用に新しい <see cref="T:System.Net.HttpWebRequest" /> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-268">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI string.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-269">指定した URI 文字列の <see cref="T:System.Net.HttpWebRequest" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-269">An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-270"><xref:System.Net.WebRequest.CreateHttp%28System.String%29> メソッドは、`requestUriString`の <xref:System.Net.HttpWebRequest> クラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-270">The <xref:System.Net.WebRequest.CreateHttp%28System.String%29> method returns an instance of the <xref:System.Net.HttpWebRequest> class for the `requestUriString`.</span></span>  
  
 <span data-ttu-id="ec2c1-271">`http://` または `https://` で始まる URI が `requestUriString` パラメーターで渡されると、<xref:System.Net.WebRequest.CreateHttp%28System.String%29>によって <xref:System.Net.HttpWebRequest> が返されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-271">When a URI that begins with `http://` or `https://` is passed in the `requestUriString` parameter, a <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateHttp%28System.String%29>.</span></span> <span data-ttu-id="ec2c1-272">他のスキームでは、<xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-272">Any other scheme will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="ec2c1-273"><xref:System.Net.WebRequest.CreateHttp%28System.String%29> メソッドは、`requestUriString` パラメーターを使用して、新しい <xref:System.Net.HttpWebRequest>に渡す <xref:System.Uri> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-273">The <xref:System.Net.WebRequest.CreateHttp%28System.String%29> method uses the `requestUriString` parameter to create a <xref:System.Uri> instance that it passes to the new <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="ec2c1-274">メソッドが正常に実行された場合、返された <xref:System.Net.HttpWebRequest> インスタンスの <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> プロパティは `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-274">If the method is successful, the <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> property on the returned <xref:System.Net.HttpWebRequest> instance is set to `false`.</span></span>  
  
 <span data-ttu-id="ec2c1-275">.NET には、`http://` および `https://` URI スキームのサポートが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-275">.NET includes support for the `http://` and  `https://` URI schemes.</span></span> <span data-ttu-id="ec2c1-276">他の要求を処理するためのカスタム <xref:System.Net.WebRequest> 子孫は、<xref:System.Net.WebRequest.RegisterPrefix%2A> メソッドに登録されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-276">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span> <span data-ttu-id="ec2c1-277"><xref:System.Net.WebRequest.Create%28System.String%29> メソッドを使用して、他のスキームの <xref:System.Net.WebRequest> クラスの子孫を作成できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-277">The <xref:System.Net.WebRequest.Create%28System.String%29> method can be used to create a descendant of the <xref:System.Net.WebRequest> class for other schemes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec2c1-278"><paramref name="requestUriString" /> で指定された要求スキームが、http スキームまたは https スキームです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-278">The request scheme specified in <paramref name="requestUriString" /> is the http or https scheme.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec2c1-279"><paramref name="requestUriString" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-279"><paramref name="requestUriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec2c1-280">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-280">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="ec2c1-281"><paramref name="requestUriString" /> で指定された URI は、有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-281">The URI specified in <paramref name="requestUriString" /> is not a valid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUri As Uri) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : Uri -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="ec2c1-282">インターネット リソースを識別する URI。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-282">A URI that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="ec2c1-283">指定した URI 用に新しい <see cref="T:System.Net.HttpWebRequest" /> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-283">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-284">指定した URI 文字列の <see cref="T:System.Net.HttpWebRequest" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-284">An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-285"><xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> メソッドは、`requestUri`の <xref:System.Net.HttpWebRequest> クラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-285">The <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> method returns an instance of the <xref:System.Net.HttpWebRequest> class for the `requestUri`.</span></span>  
  
 <span data-ttu-id="ec2c1-286">`http://` または `http://` で始まる URI が `requestUri` パラメーターで渡されると、<xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>によって <xref:System.Net.HttpWebRequest> が返されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-286">When a URI that begins with `http://` or `http://` is passed in the `requestUri` parameter, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>.</span></span> <span data-ttu-id="ec2c1-287">もう1つのスキームは、<xref:System.NotSupportedException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-287">Another other scheme will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="ec2c1-288"><xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> メソッドは、`requestUri` パラメーターを使用して新しい <xref:System.Net.HttpWebRequest> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-288">The <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> method uses the `requestUri` parameter to create a new <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="ec2c1-289">メソッドが正常に実行された場合、返された <xref:System.Net.HttpWebRequest> インスタンスの <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> プロパティは `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-289">If the method is successful, the <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> property on the returned <xref:System.Net.HttpWebRequest> instance is set to `false`.</span></span>  
  
 <span data-ttu-id="ec2c1-290">.NET には、`http://` および `https://` URI スキームのサポートが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-290">.NET includes support for the `http://` and  `https://` URI schemes.</span></span> <span data-ttu-id="ec2c1-291">他の要求を処理するためのカスタム <xref:System.Net.WebRequest> 子孫は、<xref:System.Net.WebRequest.RegisterPrefix%2A> メソッドに登録されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-291">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span> <span data-ttu-id="ec2c1-292"><xref:System.Net.WebRequest.Create%28System.Uri%29> メソッドを使用して、他のスキームの <xref:System.Net.WebRequest> クラスの子孫を作成できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-292">The <xref:System.Net.WebRequest.Create%28System.Uri%29> method can be used to create a descendant of the <xref:System.Net.WebRequest> class for other schemes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec2c1-293"><paramref name="requestUri" /> で指定された要求スキームが、http スキームまたは https スキームです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-293">The request scheme specified in <paramref name="requestUri" /> is the http or https scheme.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec2c1-294"><paramref name="requestUri" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-294"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec2c1-295">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-295">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="ec2c1-296"><paramref name="requestUri" /> で指定された URI は、有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-296">The URI specified in <paramref name="requestUri" /> is not a valid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebRequestCreate CreatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebRequestCreate CreatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CreatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreatorInstance As IWebRequestCreate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebRequestCreate ^ CreatorInstance { System::Net::IWebRequestCreate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreatorInstance : System.Net.IWebRequestCreate" Usage="System.Net.WebRequest.CreatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebRequestCreate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-297">派生クラスでオーバーライドされると、<see cref="T:System.Net.IWebRequestCreate" /> クラスから派生するファクトリ オブジェクトを取得します。このクラスは、指定 URI に対して要求を行うためにインスタンス化される <see cref="T:System.Net.WebRequest" /> を作成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-297">When overridden in a descendant class, gets the factory object derived from the <see cref="T:System.Net.IWebRequestCreate" /> class used to create the <see cref="T:System.Net.WebRequest" /> instantiated for making the request to the specified URI.</span></span></summary>
        <value><span data-ttu-id="ec2c1-298"><see cref="T:System.Net.WebRequest" /> メソッドによって返される派生 <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> 型。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-298">The derived <see cref="T:System.Net.WebRequest" /> type returned by the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="ec2c1-299">このプロパティを使用すると、アプリケーションは、要求の作成に使用された <xref:System.Net.IWebRequestCreate> 派生ファクトリオブジェクトを判断できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-299">This property allows an application to determine which <xref:System.Net.IWebRequestCreate> derived factory object was used to create the request.</span></span> <span data-ttu-id="ec2c1-300">このオブジェクトは、 [WebRequestCreator](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))または[WebRequestCreator](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))のいずれかになりますが、<xref:System.Net.IWebRequestCreate>から派生したカスタムインスタンスである場合もあります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-300">This object may be [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) or [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)), but it may also be a custom instance derived from <xref:System.Net.IWebRequestCreate>.</span></span> <span data-ttu-id="ec2c1-301">これにより、アプリケーションは、[!INCLUDE[silverlight](~/includes/silverlight-md.md)]、[!INCLUDE[silverlight](~/includes/silverlight-md.md)] クライアント、または一部のカスタムオブジェクトをホストしているブラウザーが <xref:System.Net.WebRequest> インスタンスの HTTP 要求と応答を処理するかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-301">This allows an application to determine whether the browser hosting [!INCLUDE[silverlight](~/includes/silverlight-md.md)], the [!INCLUDE[silverlight](~/includes/silverlight-md.md)] client, or some custom object handles HTTP requests and responses for the <xref:System.Net.WebRequest> instance.</span></span> <span data-ttu-id="ec2c1-302"><xref:System.Net.WebRequest.RegisterPrefix%2A> メソッドを使用すると、特定の URI への要求を行うときにインスタンス化される派生 <xref:System.Net.WebRequest> 型をアプリケーションで構成できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-302">The <xref:System.Net.WebRequest.RegisterPrefix%2A> method allows an application to configure which derived <xref:System.Net.WebRequest> type will be instantiated when making a request to a specific URI.</span></span> <span data-ttu-id="ec2c1-303"><xref:System.Net.WebRequest> 作成者は、通常、HTTP や HTTPS などの特定のプロトコルを処理するように登録されますが、サーバー上の特定のサーバーまたはパスへの要求を処理するように登録できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-303"><xref:System.Net.WebRequest> creators are typically registered to handle a specific protocol, such HTTP or HTTPS, but can be registered to handle a request to a specific server or path on a server.</span></span> <span data-ttu-id="ec2c1-304">これは、複数の派生 <xref:System.Net.WebRequest> 型で同じプロトコルの要求を処理できる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-304">This is useful when more than one derived <xref:System.Net.WebRequest> type can process requests for the same protocol.</span></span> <span data-ttu-id="ec2c1-305">[!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] 以降のランタイムでは、それぞれ異なる機能を持つ複数の HTTP ハンドラーがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-305">The [!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] and later runtime supports multiple HTTP handlers each having different capabilities.</span></span> <span data-ttu-id="ec2c1-306">たとえば、WebRequestCreator の状態転送 (REST) を使用する web サービスでは、 [ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))ハンドラーが必要になる場合がありますが、SOAP web サービスでは既定の[WebRequestCreator http](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))ハンドラーを使用できる場合があります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-306">For example, a web service that uses Representational State Transfer (REST) might require the [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) handler while a SOAP web service might be able to use the default [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) handler.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-307">派生クラスでオーバーライドされると、インターネット リソースを使用して要求を認証するために使用されるネットワーク資格情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-307">When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</span></span></summary>
        <value><span data-ttu-id="ec2c1-308">要求に関連付けられた認証資格情報を格納する <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-308">An <see cref="T:System.Net.ICredentials" /> containing the authentication credentials associated with the request.</span></span> <span data-ttu-id="ec2c1-309">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-309">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-310"><xref:System.Net.WebRequest.Credentials%2A> プロパティには、インターネットリソースにアクセスするために必要な認証資格情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-310">The <xref:System.Net.WebRequest.Credentials%2A> property contains the authentication credentials required to access the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-311"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-311">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-312">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-312">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-313">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-313">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-314">次の例では、現在のユーザーの既定の資格情報を使用して <xref:System.Net.WebRequest.Credentials%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-314">The following example sets the <xref:System.Net.WebRequest.Credentials%2A> property using the default credentials of the current user.</span></span> <span data-ttu-id="ec2c1-315">要求が行われると、このプロパティに格納されている資格情報がクライアントの検証に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-315">When the request is made, credentials stored in this property are used to validate the client.</span></span> <span data-ttu-id="ec2c1-316">これは、<xref:System.Net.WebRequest.UseDefaultCredentials%2A> プロパティを `true`に設定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-316">This is identical to setting the <xref:System.Net.WebRequest.UseDefaultCredentials%2A> property to `true`.</span></span>  
  
 [!code-cpp[NclWebRequestSimple#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#2)]
 [!code-csharp[NclWebRequestSimple#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#2)]
 [!code-vb[NclWebRequestSimple#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-317">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-317">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.HttpWebRequest.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-318">この要求の既定のキャッシュ ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-318">Gets or sets the default cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-319">他のポリシーが適用できない場合に、この要求で有効なキャッシュ ポリシーを指定する <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-319">A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> that specifies the cache policy in effect for this request when no other policy is applicable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-320">このポリシーは、次の条件に該当する場合にこの要求に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-320">This policy is used for this request if the following conditions exist:</span></span>  
  
-   <span data-ttu-id="ec2c1-321">この要求には <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> プロパティが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-321">There is no <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property specified for this request.</span></span>  
  
-   <span data-ttu-id="ec2c1-322">コンピューターおよびアプリケーションの構成ファイルでは、この要求の作成に使用される Uniform Resource Identifier (URI) に適用できるキャッシュポリシーが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-322">The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</span></span>  
  
 <span data-ttu-id="ec2c1-323">キャッシュポリシーは、要求されたリソースをリソースホストコンピューターに送信するのではなく、キャッシュから取得できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-323">The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</span></span>  
  
 <span data-ttu-id="ec2c1-324">リソースのコピーは、リソースの応答ストリームが取得され、ストリームの末尾に読み取られる場合にのみ、キャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-324">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="ec2c1-325">そのため、同じリソースに対する別の要求では、この要求のキャッシュポリシーレベルに応じて、キャッシュされたコピーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-325">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-326">次のコード例は、Web 要求の既定のキャッシュポリシーを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-326">The following code example demonstrates setting the default cache policy for Web requests.</span></span>  
  
 [!code-cpp[NCLSimpleCache#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#15)]
 [!code-csharp[NCLSimpleCache#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="ec2c1-327">ネットワークリソースへの無制限アクセス。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-327">For unrestricted access to network resources.</span></span> <span data-ttu-id="ec2c1-328">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="ec2c1-328">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy DefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.IWebProxy DefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultWebProxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::IWebProxy ^ DefaultWebProxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultWebProxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.DefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-329">グローバル HTTP プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-329">Gets or sets the global HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="ec2c1-330"><see cref="T:System.Net.IWebProxy" /> のインスタンスへのすべての呼び出しで使用される <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-330">An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-331"><xref:System.Net.WebRequest.DefaultWebProxy%2A> プロパティは、グローバルプロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-331">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property gets or sets the global proxy.</span></span> <span data-ttu-id="ec2c1-332">要求がプロキシをサポートしていて、<xref:System.Net.HttpWebRequest.Proxy%2A> プロパティを使用して明示的に設定されているプロキシがない場合は、<xref:System.Net.WebRequest.DefaultWebProxy%2A> プロパティによって、すべての <xref:System.Net.WebRequest> インスタンスが使用する既定のプロキシが決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-332">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property determines the default proxy that all <xref:System.Net.WebRequest> instances use if the request supports proxies and no proxy is set explicitly using the <xref:System.Net.HttpWebRequest.Proxy%2A> property.</span></span> <span data-ttu-id="ec2c1-333">プロキシは、現在 <xref:System.Net.FtpWebRequest> と <xref:System.Net.HttpWebRequest>でサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-333">Proxies are currently supported by <xref:System.Net.FtpWebRequest> and <xref:System.Net.HttpWebRequest>.</span></span>  
  
 <span data-ttu-id="ec2c1-334"><xref:System.Net.WebRequest.DefaultWebProxy%2A> プロパティは、app.config ファイルからプロキシ設定を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-334">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property reads proxy settings from the app.config file.</span></span> <span data-ttu-id="ec2c1-335">構成ファイルがない場合は、現在のユーザーの Internet Explorer (IE) プロキシ設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-335">If there is no config file, the current user's Internet Explorer (IE) proxy settings are used.</span></span>  
  
 <span data-ttu-id="ec2c1-336"><xref:System.Net.WebRequest.DefaultWebProxy%2A> プロパティが null に設定されている場合、<xref:System.Net.WebRequest.Create%2A> または <xref:System.Net.WebRequest.CreateDefault%2A> メソッドによって作成される <xref:System.Net.WebRequest> クラスの後続のすべてのインスタンスにはプロキシがありません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-336">If the <xref:System.Net.WebRequest.DefaultWebProxy%2A> property is set to null, all subsequent instances of the <xref:System.Net.WebRequest> class created by the <xref:System.Net.WebRequest.Create%2A> or <xref:System.Net.WebRequest.CreateDefault%2A> methods do not have a proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="ec2c1-337">グローバル HTTP プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-337">To get or set the global HTTP proxy.</span></span> <span data-ttu-id="ec2c1-338">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="ec2c1-338">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="webRequest.EndGetRequestStream asyncResult" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream&#xA;override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="webRequest.EndGetRequestStream asyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ec2c1-339">ストリームの保留中の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-339">An <see cref="T:System.IAsyncResult" /> that references a pending request for a stream.</span></span></param>
        <summary><span data-ttu-id="ec2c1-340">派生クラスでオーバーライドされると、インターネット リソースにデータを書き込むための <see cref="T:System.IO.Stream" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-340">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-341">データを書き込む <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-341">A <see cref="T:System.IO.Stream" /> to write data to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-342"><xref:System.Net.WebRequest.EndGetRequestStream%2A> メソッドは、<xref:System.Net.WebRequest.BeginGetRequestStream%2A> メソッドによって開始された非同期ストリーム要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-342">The <xref:System.Net.WebRequest.EndGetRequestStream%2A> method completes an asynchronous stream request that was started by the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-343">ガベージコレクションのタイミングの問題を回避するには、<xref:System.Net.WebRequest.EndGetResponse%2A>を呼び出した後 <xref:System.Net.WebResponse.GetResponseStream%2A> から返されたストリームで <xref:System.IO.Stream.Close%2A> メソッドを呼び出すことによって、応答ストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-343">To avoid timing issues with garbage collection, be sure to close the response stream by calling the <xref:System.IO.Stream.Close%2A> method on the stream returned by <xref:System.Net.WebResponse.GetResponseStream%2A> after calling <xref:System.Net.WebRequest.EndGetResponse%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-344"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-344">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-345">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-345">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-346">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-346">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-347">次の例では、<xref:System.Net.WebRequest.EndGetRequestStream%2A>を呼び出すことによって要求ストリームを取得し、使用します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-347">The following example obtains and uses the request stream by calling the <xref:System.Net.WebRequest.EndGetRequestStream%2A>.</span></span> <span data-ttu-id="ec2c1-348"><xref:System.Net.WebRequest.EndGetRequestStream%2A> メソッドは、<xref:System.Net.WebRequest.BeginGetRequestStream%2A>への非同期呼び出しを完了します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-348">The <xref:System.Net.WebRequest.EndGetRequestStream%2A> method completes the asynchronous call to <xref:System.Net.WebRequest.BeginGetRequestStream%2A>.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-349">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-349">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="ec2c1-350">非同期要求を行う</span><span class="sxs-lookup"><span data-stu-id="ec2c1-350">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public abstract System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="webRequest.EndGetResponse asyncResult" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="webRequest.EndGetResponse asyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ec2c1-351">応答に対する保留中の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-351">An <see cref="T:System.IAsyncResult" /> that references a pending request for a response.</span></span></param>
        <summary><span data-ttu-id="ec2c1-352">派生クラスでオーバーライドされると、<see cref="T:System.Net.WebResponse" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-352">When overridden in a descendant class, returns a <see cref="T:System.Net.WebResponse" />.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-353">インターネット要求への応答を格納する <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-353">A <see cref="T:System.Net.WebResponse" /> that contains a response to the Internet request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-354"><xref:System.Net.WebRequest.EndGetResponse%2A> メソッドは、<xref:System.Net.WebRequest.BeginGetResponse%2A> メソッドで開始されたインターネットリソースに対する非同期要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-354">The <xref:System.Net.WebRequest.EndGetResponse%2A> method completes an asynchronous request for an Internet resource that was started with the <xref:System.Net.WebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-355"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-355">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-356">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-356">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-357">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-357">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-358">次の例では、<xref:System.Net.WebRequest.EndGetResponse%2A> を呼び出して、ターゲットリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-358">The following example calls the <xref:System.Net.WebRequest.EndGetResponse%2A> to retrieve the target resource.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#1)]
 [!code-csharp[WebRequest_BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#1)]
 [!code-vb[WebRequest_BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-359">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-359">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="ec2c1-360">非同期要求を行う</span><span class="sxs-lookup"><span data-stu-id="ec2c1-360">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webRequest.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="ec2c1-361">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-361">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="ec2c1-362">このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-362">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="ec2c1-363"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-363">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-364"><xref:System.Runtime.Serialization.SerializationInfo> に含まれるオブジェクトは、フォーマッタによって自動的に追跡およびシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-364">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStream : unit -&gt; System.IO.Stream&#xA;override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="webRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2c1-365">派生クラスでオーバーライドされると、インターネット リソースにデータを書き込むための <see cref="T:System.IO.Stream" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-365">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-366">インターネット リソースにデータを書き込む <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-366">A <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-367"><xref:System.Net.WebRequest.GetRequestStream%2A> メソッドは、インターネットリソースにデータを送信する要求を開始し、インターネットリソースにデータを送信するための <xref:System.IO.Stream> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-367">The <xref:System.Net.WebRequest.GetRequestStream%2A> method initiates a request to send data to the Internet resource and returns a <xref:System.IO.Stream> instance for sending data to the Internet resource.</span></span>  
  
 <span data-ttu-id="ec2c1-368"><xref:System.Net.WebRequest.GetRequestStream%2A> メソッドは、<xref:System.IO.Stream>への同期アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-368">The <xref:System.Net.WebRequest.GetRequestStream%2A> method provides synchronous access to the <xref:System.IO.Stream>.</span></span> <span data-ttu-id="ec2c1-369">非同期アクセスの場合は、<xref:System.Net.WebRequest.BeginGetRequestStream%2A> メソッドと <xref:System.Net.WebRequest.EndGetRequestStream%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-369">For asynchronous access, use the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> and <xref:System.Net.WebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-370"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-370">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-371">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-371">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-372">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-372">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-373">次の例では、<xref:System.Net.WebRequest.GetRequestStream%2A> メソッドを使用してストリームを取得し、ストリームにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-373">The following example uses the <xref:System.Net.WebRequest.GetRequestStream%2A> method to obtain a stream and then writes data that stream.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-374">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-374">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="ec2c1-375">ネットワーク上でストリームを使用する</span><span class="sxs-lookup"><span data-stu-id="ec2c1-375">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRequestStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetRequestStreamAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webRequest.GetRequestStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2c1-376">派生クラスでオーバーライドされると、インターネット リソースへのデータ書き込みの <see cref="T:System.IO.Stream" /> を非同期操作として返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-376">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-377">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-377">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-378">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-378">This operation will not block.</span></span> <span data-ttu-id="ec2c1-379">返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、インターネットリソースにデータを書き込むための <xref:System.IO.Stream> が使用可能な場合に完了します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-379">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the <xref:System.IO.Stream> for writing data to the Internet resource is available.</span></span>  
  
 <span data-ttu-id="ec2c1-380"><xref:System.Net.WebRequest.GetRequestStreamAsync%2A>を呼び出した後、<xref:System.Net.WebRequest.GetResponseAsync%2A>を呼び出す前に要求ストリームを閉じてください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-380">After you call <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>, make sure you close the request stream before you call <xref:System.Net.WebRequest.GetResponseAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : unit -&gt; System.Net.WebResponse&#xA;override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="webRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2c1-381">派生クラスでオーバーライドされると、インターネット要求への応答を返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-381">When overridden in a descendant class, returns a response to an Internet request.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-382">インターネット要求への応答を格納する <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-382">A <see cref="T:System.Net.WebResponse" /> containing the response to the Internet request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-383"><xref:System.Net.WebRequest.GetResponse%2A> メソッドは、インターネットリソースに要求を送信し、<xref:System.Net.WebResponse> のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-383">The <xref:System.Net.WebRequest.GetResponse%2A> method sends a request to an Internet resource and returns a <xref:System.Net.WebResponse> instance.</span></span> <span data-ttu-id="ec2c1-384">要求が <xref:System.Net.WebRequest.GetRequestStream%2A>の呼び出しによって既に開始されている場合、<xref:System.Net.WebRequest.GetResponse%2A> メソッドは要求を完了し、任意の応答を返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-384">If the request has already been initiated by a call to <xref:System.Net.WebRequest.GetRequestStream%2A>, the <xref:System.Net.WebRequest.GetResponse%2A> method completes the request and returns any response.</span></span>  
  
 <span data-ttu-id="ec2c1-385"><xref:System.Net.WebRequest.GetResponse%2A> メソッドは、<xref:System.Net.WebResponse>への同期アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-385">The <xref:System.Net.WebRequest.GetResponse%2A> method provides synchronous access to the <xref:System.Net.WebResponse>.</span></span> <span data-ttu-id="ec2c1-386">非同期アクセスの場合は、<xref:System.Net.WebRequest.BeginGetResponse%2A> メソッドと <xref:System.Net.WebRequest.EndGetResponse%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-386">For asynchronous access, use the <xref:System.Net.WebRequest.BeginGetResponse%2A> and <xref:System.Net.WebRequest.EndGetResponse%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-387"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-387">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-388">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-388">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-389">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-389">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-390">WebException がスローされた場合は、例外の <xref:System.Net.WebException.Response%2A> と <xref:System.Net.WebException.Status%2A> のプロパティを使用して、サーバーからの応答を確認します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-390">If a WebException is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-391">次の例では、<xref:System.Net.WebRequest.Timeout%2A> プロパティを1万ミリ秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-391">The following example sets the <xref:System.Net.WebRequest.Timeout%2A> property to 10000 milliseconds.</span></span> <span data-ttu-id="ec2c1-392">リソースが返される前にタイムアウト期間が経過すると、<xref:System.Net.WebException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-392">If the timeout period expires before the resource can be returned, a <xref:System.Net.WebException> is thrown.</span></span>  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-393">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-393">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Net.WebResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebResponse&gt; GetResponseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsync () As Task(Of WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::WebResponse ^&gt; ^ GetResponseAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;&#xA;override this.GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;" Usage="webRequest.GetResponseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2c1-394">派生クラスでオーバーライドされると、インターネット要求への応答を非同期操作として返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-394">When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-395">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-395">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-396">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-396">This operation will not block.</span></span> <span data-ttu-id="ec2c1-397">返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、インターネット要求への応答が利用可能になると完了します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-397">The returned <xref:System.Threading.Tasks.Task%601> object will complete after a response to an Internet request is available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy GetSystemWebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy GetSystemWebProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetSystemWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemWebProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ GetSystemWebProxy();" />
      <MemberSignature Language="F#" Value="static member GetSystemWebProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebRequest.GetSystemWebProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2c1-398">現在の偽装ユーザーの Internet Explorer の設定で構成されたプロキシを返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-398">Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-399"><see cref="T:System.Net.IWebProxy" /> のインスタンスへのすべての呼び出しで使用される <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-399">An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-400"><xref:System.Net.WebRequest.GetSystemWebProxy%2A> メソッドは、現在のユーザーの Internet Explorer (IE) プロキシ設定を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-400"><xref:System.Net.WebRequest.GetSystemWebProxy%2A> method reads the current user's Internet Explorer (IE) proxy settings.</span></span> <span data-ttu-id="ec2c1-401">このプロセスには、自動的にプロキシ設定を検出するための IE オプション、自動構成スクリプトを使用する方法、プロキシサーバーの手動設定、および高度な手動プロキシサーバー設定が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-401">This process includes the IE options to automatically detect proxy settings, use an automatic configuration script, manual proxy server settings, and advanced manual proxy server settings.</span></span>  
  
 <span data-ttu-id="ec2c1-402">アプリケーションが複数のユーザーを偽装している場合は、<xref:System.Net.WebRequest.GetSystemWebProxy%2A> メソッドを使用して、偽装されたユーザーごとにプロキシを取得できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-402">If your application is impersonating several users, you can use the <xref:System.Net.WebRequest.GetSystemWebProxy%2A> method to retrieve a proxy for each impersonated user.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="ec2c1-403">グローバル HTTP プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-403">To get or set the global HTTP proxy.</span></span> <span data-ttu-id="ec2c1-404">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="ec2c1-404">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public abstract System.Net.WebHeaderCollection Headers { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Headers As WebHeaderCollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebRequest.Headers" />
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Headers As WebHeaderCollection" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-405">派生クラスでオーバーライドされると、要求に関連付けられたヘッダーの名前/値ペアのコレクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-405">When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-406">要求に関連付けられたヘッダーの名前/値ペアを格納する <see cref="T:System.Net.WebHeaderCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-406">A <see cref="T:System.Net.WebHeaderCollection" /> containing the header name/value pairs associated with this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-407"><xref:System.Net.WebRequest.Headers%2A> プロパティには、インターネットリソースに送信するヘッダー情報を含む <xref:System.Net.WebHeaderCollection> インスタンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-407">The <xref:System.Net.WebRequest.Headers%2A> property contains a <xref:System.Net.WebHeaderCollection> instance containing the header information to send to the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-408"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-408">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-409">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-409">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-410">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-410">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-411">次の例では、この要求に関連付けられているヘッダーの名前と値のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-411">The following example displays the header name/value pairs associated with this request.</span></span>  
  
 [!code-cpp[WebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Headers/CPP/webrequest_headers.cpp#1)]
 [!code-csharp[WebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Headers/CS/webrequest_headers.cs#1)]
 [!code-vb[WebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Headers/VB/webrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-412">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-412">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.Net.WebRequest.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-413">現在の要求に対する偽装レベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-413">Gets or sets the impersonation level for the current request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-414"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-414">A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-415">偽装レベルによって、サーバーがクライアントの資格情報をどのように使用できるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-415">The impersonation level determines how the server can use the client's credentials.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public abstract string Method { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Method As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.WebRequest.Method" />
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-416">派生クラスでオーバーライドされると、要求で使用するプロトコル メソッドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-416">When overridden in a descendant class, gets or sets the protocol method to use in this request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-417">要求で使用するプロトコル メソッド。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-417">The protocol method to use in this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-418">派生クラスでオーバーライドされると、この要求で使用する要求メソッドが <xref:System.Net.WebRequest.Method%2A> プロパティに格納されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-418">When overridden in a descendant class, the <xref:System.Net.WebRequest.Method%2A> property contains the request method to use in this request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-419"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-419">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-420">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-420">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-421">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-421">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-422">次の例では、要求がターゲットホストにデータをポストすることを示すために、<xref:System.Net.WebRequest.Method%2A> プロパティを POST に設定しています。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-422">The following example sets the <xref:System.Net.WebRequest.Method%2A> property to POST to indicate that the request will post data to the target host.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-423">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-423">If the property is not overridden in a descendant class, any attempt is made to get or set the property.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ec2c1-424"><see cref="P:System.Net.WebRequest.Method" /> プロパティには、実装されているプロトコルの任意の有効な要求メソッドを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-424">The <see cref="P:System.Net.WebRequest.Method" /> property can contain any valid request method for the protocol implemented.</span></span> <span data-ttu-id="ec2c1-425">既定値は、プロトコル固有のプロパティの設定を必要としない既定の要求/応答トランザクションを提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-425">The default value must provide a default request/response transaction that does not require protocol-specific properties to be set.</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Method" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public virtual bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.WebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-426">派生クラスでオーバーライドされる場合、要求を事前認証するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-426">When overridden in a descendant class, indicates whether to pre-authenticate the request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-427">事前認証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-427"><see langword="true" /> to pre-authenticate; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-428">最初の要求を除き、<xref:System.Net.WebRequest.PreAuthenticate%2A> のプロパティは、サーバーによるチャレンジを待機せずに、以降の要求で認証情報を送信するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-428">With the exception of the first request, the <xref:System.Net.WebRequest.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests without waiting to be challenged by the server.</span></span> <span data-ttu-id="ec2c1-429"><xref:System.Net.WebRequest.PreAuthenticate%2A> が `false`場合、<xref:System.Net.WebRequest> は認証チャレンジを待機してから認証情報を送信します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-429">When <xref:System.Net.WebRequest.PreAuthenticate%2A> is `false`, the <xref:System.Net.WebRequest> waits for an authentication challenge before sending authentication information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-430"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-430">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-431">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-431">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-432">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-432">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-433">次の例では、<xref:System.Net.WebRequest.PreAuthenticate%2A> プロパティを `true` に設定して、<xref:System.Net.WebRequest.Credentials%2A> プロパティに格納されている <xref:System.Net.NetworkCredential> がリソース要求と共に送信されるようにします。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-433">The following example sets the <xref:System.Net.WebRequest.PreAuthenticate%2A> property to `true` so that the <xref:System.Net.NetworkCredential> stored in the <xref:System.Net.WebRequest.Credentials%2A> property will be sent to along with the resource request.</span></span>  
  
 [!code-cpp[WebRequest_PreAuthenticate#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CPP/webrequest_preauthenticate.cpp#1)]
 [!code-csharp[WebRequest_PreAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CS/webrequest_preauthenticate.cs#1)]
 [!code-vb[WebRequest_PreAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_PreAuthenticate/VB/webrequest_preauthenticate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-434">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-434">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-435">派生クラスでオーバーライドされると、インターネット リソースにアクセスするために使用するネットワーク プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-435">When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</span></span></summary>
        <value><span data-ttu-id="ec2c1-436">インターネット リソースにアクセスするために使用する <see cref="T:System.Net.IWebProxy" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-436">The <see cref="T:System.Net.IWebProxy" /> to use to access the Internet resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-437"><xref:System.Net.WebRequest.Proxy%2A> プロパティは、要求がインターネットリソースにアクセスするために使用するネットワークプロキシを識別します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-437">The <xref:System.Net.WebRequest.Proxy%2A> property identifies the network proxy that the request uses to access the Internet resource.</span></span> <span data-ttu-id="ec2c1-438">要求は、インターネットリソースに直接ではなく、プロキシサーバーを介して行われます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-438">The request is made through the proxy server rather than directly to the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-439"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-439">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-440">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-440">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-441">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-441">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-442">次の例では、現在のネットワークプロキシアドレスを表示し、ユーザーが新しいネットワークプロキシアドレスとポート番号を割り当てることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-442">The following example displays the current network proxy address and allows the user to assign a new network proxy address and port number.</span></span>  
  
 [!code-cpp[WebRequest_Proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Proxy/CPP/webrequest_proxy.cpp#1)]
 [!code-csharp[WebRequest_Proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Proxy/CS/webrequest_proxy.cs#1)]
 [!code-vb[WebRequest_Proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Proxy/VB/webrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-443">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-443">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="P:System.Net.HttpWebRequest.Proxy" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPortableWebRequestCreator">
      <MemberSignature Language="C#" Value="public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPortableWebRequestCreator(class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPortableWebRequestCreator (creator As IWebRequestCreate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPortableWebRequestCreator(System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPortableWebRequestCreator : System.Net.IWebRequestCreate -&gt; unit" Usage="System.Net.WebRequest.RegisterPortableWebRequestCreator creator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="creator"><span data-ttu-id="ec2c1-444">登録する <see cref="T:System.Net.IWebRequestCreate" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-444">The <see cref="T:System.Net.IWebRequestCreate" /> object to register.</span></span></param>
        <summary><span data-ttu-id="ec2c1-445"><see cref="T:System.Net.IWebRequestCreate" /> オブジェクトを登録します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-445">Register an <see cref="T:System.Net.IWebRequestCreate" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefix">
      <MemberSignature Language="C#" Value="public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegisterPrefix (prefix As String, creator As IWebRequestCreate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RegisterPrefix(System::String ^ prefix, System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPrefix : string * System.Net.IWebRequestCreate -&gt; bool" Usage="System.Net.WebRequest.RegisterPrefix (prefix, creator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ec2c1-446"><see cref="T:System.Net.WebRequest" /> 派生クラスが処理する完全な URI または URI プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-446">The complete URI or URI prefix that the <see cref="T:System.Net.WebRequest" /> descendant services.</span></span></param>
        <param name="creator"><span data-ttu-id="ec2c1-447"><see cref="T:System.Net.WebRequest" /> が <see cref="T:System.Net.WebRequest" /> 派生クラスを作成するために呼び出す作成メソッド。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-447">The create method that the <see cref="T:System.Net.WebRequest" /> calls to create the <see cref="T:System.Net.WebRequest" /> descendant.</span></span></param>
        <summary><span data-ttu-id="ec2c1-448">指定した URI 用の <see cref="T:System.Net.WebRequest" /> 派生クラスを登録します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-448">Registers a <see cref="T:System.Net.WebRequest" /> descendant for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="ec2c1-449">登録が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-449"><see langword="true" /> if registration is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-450"><xref:System.Net.WebRequest.RegisterPrefix%2A> メソッドは、<xref:System.Net.WebRequest> の子孫をサービス要求に登録します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-450">The <xref:System.Net.WebRequest.RegisterPrefix%2A> method registers <xref:System.Net.WebRequest> descendants to service requests.</span></span> <span data-ttu-id="ec2c1-451"><xref:System.Net.WebRequest> の子孫は通常、HTTP や FTP などの特定のプロトコルを処理するように登録されますが、サーバー上の特定のサーバーまたはパスへの要求を処理するように登録できます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-451"><xref:System.Net.WebRequest> descendants are typically registered to handle a specific protocol, such HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</span></span>  
  
 <span data-ttu-id="ec2c1-452">登録済みの事前登録済みの予約の種類には、次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-452">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="ec2c1-453">詳細については、「<xref:System.Net.WebRequest.Create%28System.String%29> および <xref:System.Net.WebRequest.Create%28System.Uri%29> メソッド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-453">For more information, see the <xref:System.Net.WebRequest.Create%28System.String%29> and <xref:System.Net.WebRequest.Create%28System.Uri%29> methods.</span></span>  
  
 <span data-ttu-id="ec2c1-454">重複するプレフィックスは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-454">Duplicate prefixes are not allowed.</span></span> <span data-ttu-id="ec2c1-455">重複するプレフィックスを登録しようとした場合、<xref:System.Net.WebRequest.RegisterPrefix%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-455"><xref:System.Net.WebRequest.RegisterPrefix%2A> returns `false` if an attempt is made to register a duplicate prefix.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-456"><xref:System.Net.HttpWebRequest> クラスは、既定で HTTP および HTTPS スキームのサービス要求に登録されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-456">The <xref:System.Net.HttpWebRequest> class is registered to service requests for HTTP and HTTPS schemes by default.</span></span> <span data-ttu-id="ec2c1-457">これらのスキーマに対して別の <xref:System.Net.WebRequest> の子孫を登録しようとすると、失敗します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-457">Attempts to register a different <xref:System.Net.WebRequest> descendant for these schemes will fail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec2c1-458"><paramref name="prefix" /> は <see langword="null" /> です</span><span class="sxs-lookup"><span data-stu-id="ec2c1-458"><paramref name="prefix" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="ec2c1-459">または</span><span class="sxs-lookup"><span data-stu-id="ec2c1-459">-or-</span></span> 
 <span data-ttu-id="ec2c1-460"><paramref name="creator" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-460"><paramref name="creator" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public abstract Uri RequestUri { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequestUri As Uri" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Uri ^ RequestUri { Uri ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="C#" Value="public virtual Uri RequestUri { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestUri As Uri" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-461">派生クラスでオーバーライドされると、要求に関連付けられたインターネット リソースの URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-461">When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</span></span></summary>
        <value><span data-ttu-id="ec2c1-462">要求に関連付けられているリソースを表す <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-462">A <see cref="T:System.Uri" /> representing the resource associated with the request</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-463">派生クラスでオーバーライドされた場合、<xref:System.Net.WebRequest.RequestUri%2A> プロパティは <xref:System.Net.WebRequest.Create%2A> メソッドが要求の作成に使用する <xref:System.Uri> インスタンスを格納します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-463">When overridden in a descendant class, the <xref:System.Net.WebRequest.RequestUri%2A> property contains the <xref:System.Uri> instance that <xref:System.Net.WebRequest.Create%2A> method uses to create the request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-464"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-464">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-465">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-465">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-466">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-466">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-467">次の例では、<xref:System.Net.WebRequest.RequestUri%2A> プロパティをチェックして、最初に要求されたサイトを確認します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-467">The following example checks the <xref:System.Net.WebRequest.RequestUri%2A> property to determine the site originally requested.</span></span>  
  
 [!code-cpp[WebRequest_RequestUri1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_RequestUri1/CPP/webrequest_requesturi.cpp#1)]
 [!code-csharp[WebRequest_RequestUri1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_RequestUri1/CS/webrequest_requesturi.cs#1)]
 [!code-vb[WebRequest_RequestUri1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_RequestUri1/VB/webrequest_requesturi.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-468">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-468">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ec2c1-469">
            <see cref="P:System.Net.WebRequest.RequestUri" /> には、<see cref="M:System.Net.WebRequest.Create(System.Uri)" /> メソッドに渡された元の <see cref="T:System.Uri" /> インスタンスが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-469">
            <see cref="P:System.Net.WebRequest.RequestUri" /> must contain the original <see cref="T:System.Uri" /> instance passed to the <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> method.</span></span> <span data-ttu-id="ec2c1-470">プロトコルで要求を別の URI にリダイレクトして要求を処理できる場合、子孫は、実際に要求を処理する URI を格納するプロパティを提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-470">If the protocol is able to redirect the request to a different URI to service the request, the descendant must provide a property to contain the URI that actually services the request</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.RequestUri" />
        <altmember cref="P:System.Net.HttpWebRequest.Address" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="ec2c1-471"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> のシリアル化されたデータを保持している <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-471">A <see cref="T:System.Runtime.Serialization.SerializationInfo" />, which holds the serialized data for the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="ec2c1-472">新しい <see cref="T:System.Runtime.Serialization.StreamingContext" /> に関連付けられているシリアル化ストリームの転送先を格納している <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-472">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="ec2c1-473">派生クラスでオーバーライドされる場合、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスに、<see cref="T:System.Net.WebRequest" /> をシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-473">When overridden in a descendant class, populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.WebRequest" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-474">インターフェイスが派生クラスでオーバーライドされていないのに、オブジェクトのシリアル化が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-474">An attempt is made to serialize the object, when the interface is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.WebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-475">要求がタイムアウトするまでのミリ秒単位の時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-475">Gets or sets the length of time, in milliseconds, before the request times out.</span></span></summary>
        <value><span data-ttu-id="ec2c1-476">要求がタイムアウトするまでの時間の長さ (ミリ秒単位)。または、要求がタイムアウトしないことを示す値 <see cref="F:System.Threading.Timeout.Infinite" /> ます。既定値は、派生クラスによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-476">The length of time, in milliseconds, until the request times out, or the value <see cref="F:System.Threading.Timeout.Infinite" /> to indicate that the request does not time out. The default value is defined by the descendant class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-477"><xref:System.Net.WebRequest.Timeout%2A> プロパティは、要求がタイムアウトして <xref:System.Net.WebException>をスローするまでの時間の長さをミリ秒単位で示します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-477">The <xref:System.Net.WebRequest.Timeout%2A> property indicates the length of time, in milliseconds, until the request times out and throws a <xref:System.Net.WebException>.</span></span> <span data-ttu-id="ec2c1-478"><xref:System.Net.WebRequest.Timeout%2A> プロパティは、<xref:System.Net.WebRequest.GetResponse%2A> メソッドを使用して行われた同期要求のみに影響します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-478">The <xref:System.Net.WebRequest.Timeout%2A> property affects only synchronous requests made with the <xref:System.Net.WebRequest.GetResponse%2A> method.</span></span> <span data-ttu-id="ec2c1-479">非同期要求をタイムアウトさせるには、<xref:System.Net.WebRequest.Abort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-479">To time out asynchronous requests, use the <xref:System.Net.WebRequest.Abort%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2c1-480"><xref:System.Net.WebRequest> クラスは、`abstract` クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-480">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="ec2c1-481">実行時の <xref:System.Net.WebRequest> インスタンスの実際の動作は、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-481">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec2c1-482">既定値と例外の詳細については、<xref:System.Net.HttpWebRequest> や <xref:System.Net.FileWebRequest>などの派生クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-482">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2c1-483">次の例では、<xref:System.Net.WebRequest.Timeout%2A> プロパティを1万ミリ秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-483">The following example sets the <xref:System.Net.WebRequest.Timeout%2A> property to 10000 milliseconds.</span></span> <span data-ttu-id="ec2c1-484">リソースが返される前にタイムアウト期間が経過すると、<xref:System.Net.WebException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-484">If the timeout period expires before the resource can be returned, a <xref:System.Net.WebException> is thrown.</span></span>  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-485">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-485">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ec2c1-486">子孫クラスは、<see cref="P:System.Net.WebException.Status" /> フィールドが <see cref="F:System.Net.WebExceptionStatus.Timeout" />に設定された <see cref="T:System.Net.WebException" /> をスローすることによってタイムアウトを通知します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-486">Descendant classes signal a timeout by throwing a <see cref="T:System.Net.WebException" /> with the <see cref="P:System.Net.WebException.Status" /> field set to <see cref="F:System.Net.WebExceptionStatus.Timeout" />.</span></span> <span data-ttu-id="ec2c1-487"><see cref="P:System.Net.WebRequest.Timeout" /> がに設定されている場合 <see cref="F:System.Threading.Timeout.Infinite" /> 子孫クラスはタイムアウトしません。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-487">When <see cref="P:System.Net.WebRequest.Timeout" /> is set to <see cref="F:System.Threading.Timeout.Infinite" /> the descendant class does not time out.</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2c1-488">派生クラスでオーバーライドされる場合、<see cref="T:System.Boolean" /> が要求と共に送信されるかどうかを制御する <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-488">When overridden in a descendant class, gets or sets a <see cref="T:System.Boolean" /> value that controls whether <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</span></span></summary>
        <value><span data-ttu-id="ec2c1-489">既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-489"><see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span></span> <span data-ttu-id="ec2c1-490">既定値は <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-490">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2c1-491">この <xref:System.Net.WebRequest> オブジェクトによって要求された場合、サーバーによって要求された場合は、現在ログオンしているユーザーの資格情報を使用して認証されるようにするには、このプロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-491">Set this property to `true` when requests made by this <xref:System.Net.WebRequest> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="ec2c1-492">クライアントアプリケーションの場合、これはほとんどのシナリオで望ましい動作です。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-492">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="ec2c1-493">ASP.NET アプリケーションなどの中間層アプリケーションでは、このプロパティを使用するのではなく、通常、要求の発行元のクライアントの資格情報に <xref:System.Net.WebRequest.Credentials%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-493">For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.WebRequest.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec2c1-494">要求の送信後に、このプロパティを設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-494">You attempted to set this property after the request was sent.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ec2c1-495">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="ec2c1-495">Any attempt is made to access the property, when the property is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
