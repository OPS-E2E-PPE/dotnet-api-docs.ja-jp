<Type Name="ToolboxCategory" FullName="System.Activities.Presentation.Toolbox.ToolboxCategory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d270f09341918147e14bd44e5ad47c8a49a950c3" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78726252" /></Metadata><TypeSignature Language="C#" Value="public sealed class ToolboxCategory : System.Collections.IList, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxCategory extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolboxCategory&#xA;Implements IList, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxCategory sealed : System::Collections::IList, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ToolboxCategory = class&#xA;    interface INotifyPropertyChanged&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="29b7a-101">分類されたツールボックス項目のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="29b7a-101">A collection of toolbox items that have been categorized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-102"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> コレクションは、<xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper> メソッドおよび <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Add%2A> メソッドを使用してコレクションのインスタンスに対して追加または削除される <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove%2A> 型の項目を格納します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-102">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection contains items of type <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper> that are added and removed from an instance of the collection using the  <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Add%2A> and <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove%2A> methods.</span></span>  
  
 <span data-ttu-id="29b7a-103"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> クラスは、<xref:System.ComponentModel.INotifyPropertyChanged> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-103">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> class implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface.</span></span> <span data-ttu-id="29b7a-104">これにより、ツールボックス項目を格納しているコレクションは、<xref:System.Activities.Presentation.Toolbox.ToolboxCategory.CategoryName%2A> プロパティのようなプロパティが変更されたり、<xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Add%2A> や <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove%2A> のようなメソッドを通じてコレクションの内容が変更されたりしたときに、通知を提供できます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-104">This allows the collection that is storing the toolbox items to provide notifications when properties like the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.CategoryName%2A> property are changed and methods like <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Add%2A> and <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove%2A> are used to change the contents of the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29b7a-105"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-105">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29b7a-106"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-106">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-107"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> コレクションに割り当てられた既定の名前は、空の `string`です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-107">The default name assigned to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection is an empty `string`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategory (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategory(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.Toolbox.ToolboxCategory : string -&gt; System.Activities.Presentation.Toolbox.ToolboxCategory" Usage="new System.Activities.Presentation.Toolbox.ToolboxCategory name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="29b7a-108">ツールボックス カテゴリ コレクションの名前。</span><span class="sxs-lookup"><span data-stu-id="29b7a-108">The name of the toolbox category collection.</span></span></param>
        <summary><span data-ttu-id="29b7a-109">指定した名前を使用して、<see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-109">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> class with a specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-110"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> コレクションに割り当てられた名前は、空の `string`にすることができます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-110">The name assigned to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection can be an empty `string`.</span></span> <span data-ttu-id="29b7a-111">これは、パラメーターなしのコンストラクターの <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.%23ctor%2A>によって割り当てられる値です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-111">This is the value assigned by the parameterless constructor, <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.%23ctor%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.Add(System.Activities.Presentation.Toolbox.ToolboxItemWrapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (tool As ToolboxItemWrapper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^ tool);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Activities.Presentation.Toolbox.ToolboxItemWrapper -&gt; unit" Usage="toolboxCategory.Add tool" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />
      </Parameters>
      <Docs>
        <param name="tool"><span data-ttu-id="29b7a-112">コレクションに追加する <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="29b7a-112">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> item to add to the collection.</span></span></param>
        <summary><span data-ttu-id="29b7a-113">指定したツールをツールボックス カテゴリ コレクションの末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-113">Adds a specified tool to the end of the toolbox category collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29b7a-114"><paramref name="tool" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-114">The <paramref name="tool" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Activities.Presentation.Toolbox.ToolboxCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29b7a-115">ツールボックス カテゴリの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-115">Gets or sets the name of the toolbox category.</span></span></summary>
        <value><span data-ttu-id="29b7a-116">ツールボックス カテゴリの名前。</span><span class="sxs-lookup"><span data-stu-id="29b7a-116">The name of the toolbox category.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-117">設定すると、プロパティによって通知が提供されます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-117">When set, the property provides a notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Toolbox.ToolboxItemWrapper this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Toolbox.ToolboxItemWrapper Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As ToolboxItemWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^ default[int] { System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Activities.Presentation.Toolbox.ToolboxItemWrapper" Usage="System.Activities.Presentation.Toolbox.ToolboxCategory.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Toolbox.ToolboxItemWrapper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="29b7a-118">取得または設定するツールの 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="29b7a-118">The zero-based index of the tool to get or set.</span></span></param>
        <summary><span data-ttu-id="29b7a-119">指定したインデックス位置にあるツールを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-119">Gets or sets the tool at the specified index.</span></span></summary>
        <value><span data-ttu-id="29b7a-120">指定した <paramref name="index" /> の位置にある <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29b7a-120">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> object at the specified <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="29b7a-121"><paramref name="index" /> が、<see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> コレクションに対して無効です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-121">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Toolbox.ToolboxCategory.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyChanged As PropertyChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29b7a-122">プロパティ値が変更するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-122">Occurs when a property value changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxItemWrapper tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.Remove(System.Activities.Presentation.Toolbox.ToolboxItemWrapper)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (tool As ToolboxItemWrapper) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^ tool);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Activities.Presentation.Toolbox.ToolboxItemWrapper -&gt; bool" Usage="toolboxCategory.Remove tool" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />
      </Parameters>
      <Docs>
        <param name="tool"><span data-ttu-id="29b7a-123">コレクションから削除する <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="29b7a-123">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> item to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="29b7a-124">指定したツールのうち、ツールボックス カテゴリ コレクションで最初に出現したものを削除します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-124">Removes the first occurrence of a specified tool from the toolbox category collection.</span></span></summary>
        <returns><span data-ttu-id="29b7a-125">ツールが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-125"><see langword="true" /> if the tool is successfully removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="29b7a-126">このメソッドは、ツールがコレクションで見つからなかった場合にも <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-126">This method also returns <see langword="false" /> if the tool was not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29b7a-127"><paramref name="tool" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-127">The <paramref name="tool" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="toolboxCategory.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="29b7a-128"><see cref="T:System.Array" /> コレクションから要素がコピーされる 1 次元の <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-128">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span> <span data-ttu-id="29b7a-129"><see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-129">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="29b7a-130">コピーの開始位置を示す、配列のインデックス。</span><span class="sxs-lookup"><span data-stu-id="29b7a-130">The index of the array at which the copying begins.</span></span></param>
        <summary><span data-ttu-id="29b7a-131"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> コレクション全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー先である <see cref="T:System.Array" /> の指定したインデックス位置が、コピー開始位置になります。</span><span class="sxs-lookup"><span data-stu-id="29b7a-131">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-132">要素は、列挙子が <xref:System.Array> コレクションを反復処理するのと同じ順序で、<xref:System.Activities.Presentation.Toolbox.ToolboxCategory> にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-132">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29b7a-133"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-133">The <paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.Count : int" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29b7a-134"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> に格納されているツールの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-134">Gets the number of tools contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <value><span data-ttu-id="29b7a-135"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> に格納されている要素の数。</span><span class="sxs-lookup"><span data-stu-id="29b7a-135">The number of elements contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-136"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.ICollection> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-136"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29b7a-137"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-137">Gets a value that indicates whether access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="29b7a-138"><see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-138"><see langword="true" /> if access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-139"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.ICollection> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-139"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.ICollection> interface.</span></span> <span data-ttu-id="29b7a-140"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> プロパティは、<xref:System.Activities.Presentation.Toolbox.ToolboxCategory> へのアクセスを同期するために使用できるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-140">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object, which can be used to synchronize access to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29b7a-141"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-141">Gets an object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <value><span data-ttu-id="29b7a-142"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> へのアクセスを同期するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29b7a-142">An object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-143"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.ICollection> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-143"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="toolboxCategory.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29b7a-144"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> コレクションを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-144">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></summary>
        <returns><span data-ttu-id="29b7a-145"><see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-145">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-146">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="29b7a-146">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="29b7a-147">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-147">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="29b7a-148">この位置では、<xref:System.Collections.Generic.IEnumerator%601.Current> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-148">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="29b7a-149">そのため、<xref:System.Collections.IEnumerator.MoveNext> の値を読み取る前に、<xref:System.Collections.Generic.IEnumerator%601.Current> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="29b7a-149">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="29b7a-150">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-150">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="29b7a-151">要素の追加、変更、削除などの変更がコレクションに対して実行されると、列挙子は無効になり、動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="29b7a-151">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="29b7a-152">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="29b7a-152">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="toolboxCategory.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="29b7a-153">新しい要素が挿入される位置。</span><span class="sxs-lookup"><span data-stu-id="29b7a-153">The position into which the new element is inserted.</span></span></param>
        <summary><span data-ttu-id="29b7a-154">ツールを <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-154">Adds a tool to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <returns><span data-ttu-id="29b7a-155">コレクションに追加されたツールの、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="29b7a-155">The zero-based index of the tool added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-156"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-156"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29b7a-157"><paramref name="value" /> が、コレクションによって実装される <see cref="T:System.Collections.IList" /> に代入できない型です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-157">The <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" /> implemented by the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="toolboxCategory.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29b7a-158"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> からすべてのツールを削除します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-158">Removes all the tools from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-159"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-159"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="toolboxCategory.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="29b7a-160">コレクション内で検索するツール <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-160">The tool <see cref="T:System.Object" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="29b7a-161"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> に特定のツールが格納されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-161">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> contains a specific tool.</span></span></summary>
        <returns><span data-ttu-id="29b7a-162"><paramref name="value" /> が <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-162"><see langword="true" /> if the <paramref name="value" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-163"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-163"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29b7a-164"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-164">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="toolboxCategory.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="29b7a-165"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> 内で検索される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-165">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></param>
        <summary><span data-ttu-id="29b7a-166"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> 内にある特定のツールのインデックスを判断します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-166">Determines the index of a specific tool in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <returns><span data-ttu-id="29b7a-167"><paramref name="value" /> が <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> 内に存在する場合は、その 0 から始まるインデックス。それ以外の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="29b7a-167">The zero-based index of <paramref name="value" /> if found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-168"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-168"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29b7a-169"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-169">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="toolboxCategory.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="29b7a-170"><paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="29b7a-170">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="29b7a-171">コレクションに追加するツール。</span><span class="sxs-lookup"><span data-stu-id="29b7a-171">The tool added to the collection.</span></span></param>
        <summary><span data-ttu-id="29b7a-172">ツールを <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> 内の指定されたインデックス位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-172">Inserts a tool into the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-173"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-173"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="29b7a-174">`index` が <xref:System.Collections.IList> 内の項目数に等しければ、`value` が末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-174">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="29b7a-175">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-175">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="29b7a-176">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-176">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="29b7a-177"><paramref name="index" /> が、<see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> コレクションに対して無効です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-177">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29b7a-178"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-178">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29b7a-179"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> が読み取り専用であるか、またはその固定サイズを超過しています。</span><span class="sxs-lookup"><span data-stu-id="29b7a-179">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is read-only, or it has a fixed size that has been exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29b7a-180"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> が固定サイズかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-180">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="29b7a-181"><see langword="true" /> が固定サイズの場合は <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-181"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-182"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-182"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29b7a-183"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-183">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="29b7a-184"><see langword="true" /> が読み取り専用である場合は <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-184"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-185"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-185"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="29b7a-186">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="29b7a-186">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="29b7a-187">取得または設定するツール項目の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="29b7a-187">The zero-based index of the tool item to get or set.</span></span></param>
        <summary><span data-ttu-id="29b7a-188">指定したインデックス位置にあるツールを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-188">Gets or sets the tool at the specified index.</span></span></summary>
        <value><span data-ttu-id="29b7a-189">指定したインデックス位置にツール <see cref="T:System.Object" /> ます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-189">The tool <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-190"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-190"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="29b7a-191">このプロパティでは、`myCollection[index]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-191">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="toolboxCategory.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="29b7a-192"><see cref="T:System.Object" /> から削除するツール <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-192">The tool <see cref="T:System.Object" /> to remove from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></param>
        <summary><span data-ttu-id="29b7a-193">特定のツールが <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> 内にあるときに、最初に出現したものを削除します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-193">Removes the first occurrence of a specific tool from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-194"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-194"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="29b7a-195">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-195">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="29b7a-196">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-196">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategory.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="toolboxCategory.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="29b7a-197">削除するツール項目の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="29b7a-197">The zero-based index of the tool item to remove.</span></span></param>
        <summary><span data-ttu-id="29b7a-198"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> コレクション内の指定したインデックス位置にあるツールを削除します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-198">Removes the tool at the specified index of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29b7a-199"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-199"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="29b7a-200">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-200">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="29b7a-201">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="29b7a-201">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="29b7a-202"><paramref name="index" /> が、<see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> コレクションに対して無効です。</span><span class="sxs-lookup"><span data-stu-id="29b7a-202">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tools">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxItemWrapper&gt; Tools { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Toolbox.ToolboxItemWrapper&gt; Tools" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategory.Tools" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tools As ICollection(Of ToolboxItemWrapper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^&gt; ^ Tools { System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxItemWrapper ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tools : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxItemWrapper&gt;" Usage="System.Activities.Presentation.Toolbox.ToolboxCategory.Tools" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxItemWrapper&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29b7a-203"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> 内のツールを取得します。</span><span class="sxs-lookup"><span data-stu-id="29b7a-203">Gets the tools in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></summary>
        <value><span data-ttu-id="29b7a-204"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />を格納している <see cref="T:System.Collections.Generic.ICollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="29b7a-204">An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
