<Type Name="ToolboxCategoryItems" FullName="System.Activities.Presentation.Toolbox.ToolboxCategoryItems">
  <Metadata><Meta Name="ms.openlocfilehash" Value="829f32d5213b84a9755d7683aa43d0ec4e4f076d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82501741" /></Metadata><TypeSignature Language="C#" Value="public sealed class ToolboxCategoryItems : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxCategoryItems extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolboxCategoryItems&#xA;Implements ICollection(Of ToolboxCategory), IEnumerable(Of ToolboxCategory), IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxCategoryItems sealed : System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ToolboxCategoryItems = class&#xA;    interface ICollection&lt;ToolboxCategory&gt;&#xA;    interface seq&lt;ToolboxCategory&gt;&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type ToolboxCategoryItems = class&#xA;    interface ICollection&lt;ToolboxCategory&gt;&#xA;    interface seq&lt;ToolboxCategory&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5c299-101"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="5c299-101">A collection of <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> objects.</span></span> <span data-ttu-id="5c299-102">このクラスは <see langword="sealed" /> であるため、継承できません。</span><span class="sxs-lookup"><span data-stu-id="5c299-102">This class is <see langword="sealed" /> and so cannot be inherited.</span></span> <span data-ttu-id="5c299-103">このクラスでは、Visual Studio 2010 の外部で Windows ワークフロー ​​デザイナーを再ホストする場合のツールボックス項目の分類がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="5c299-103">This class provides support for the categorization of toolbox items when re-hosting the Windows Workflow Designer outside of Visual Studio 2010.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategoryItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategoryItems();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c299-104"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5c299-104">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Add(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit&#xA;override this.Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit" Usage="toolboxCategoryItems.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5c299-105">コレクションに追加する <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-105">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="5c299-106">指定したツールボックス カテゴリをツールボックス カテゴリ項目コレクションの末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="5c299-106">Adds a specified toolbox category to the end of the toolbox category items collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c299-107"><paramref name="item" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c299-107">The <paramref name="item" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="toolboxCategoryItems.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c299-108"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクションからすべての項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="5c299-108">Removes all the items from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Contains(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5c299-109">検索するツールボックス カテゴリ項目。</span><span class="sxs-lookup"><span data-stu-id="5c299-109">The toolbox category item to look for.</span></span></param>
        <summary><span data-ttu-id="5c299-110"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクションに特定のツールボックス カテゴリ項目が格納されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="5c299-110">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection contains a specific toolbox category item.</span></span></summary>
        <returns><span data-ttu-id="5c299-111"><paramref name="item" /> が <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-111"><see langword="true" /> if the <paramref name="item" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c299-112"><paramref name="item" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c299-112">The <paramref name="item" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.CopyTo(System.Activities.Presentation.Toolbox.ToolboxCategory[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ToolboxCategory(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit&#xA;override this.CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit" Usage="toolboxCategoryItems.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Activities.Presentation.Toolbox.ToolboxCategory[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="5c299-113"><see cref="T:System.Array" /> コレクションから要素がコピーされる 1 次元の <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-113">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span> <span data-ttu-id="5c299-114"><see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span><span class="sxs-lookup"><span data-stu-id="5c299-114">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="5c299-115">対象の配列の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="5c299-115">The zero-based index of the target array.</span></span></param>
        <summary><span data-ttu-id="5c299-116"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクション全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー先である <see cref="T:System.Array" /> の指定したインデックス位置が、コピー開始位置になります。</span><span class="sxs-lookup"><span data-stu-id="5c299-116">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-117">要素は、列挙子が <xref:System.Array> コレクションを反復処理するのと同じ順序で、<xref:System.Activities.Presentation.Toolbox.ToolboxCategory> にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="5c299-117">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c299-118"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c299-118">The <paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c299-119"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> に格納されているツールの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="5c299-119">Gets the number of tools contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <value><span data-ttu-id="5c299-120"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> に格納されている要素の数。</span><span class="sxs-lookup"><span data-stu-id="5c299-120">The number of elements contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-121"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.ICollection> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-121"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements  the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;" Usage="toolboxCategoryItems.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c299-122"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクションを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="5c299-122">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <returns><span data-ttu-id="5c299-123"><see cref="T:System.Collections.Generic.IEnumerator`1" /> の <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-123">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-124">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="5c299-124">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5c299-125">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="5c299-125">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5c299-126">この位置では、<xref:System.Collections.Generic.IEnumerator%601.Current> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="5c299-126">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="5c299-127">そのため、<xref:System.Collections.IEnumerator.MoveNext> の値を読み取る前に、<xref:System.Collections.Generic.IEnumerator%601.Current> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c299-127">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="5c299-128">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="5c299-128">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5c299-129">要素の追加、変更、削除などの変更がコレクションに対して実行されると、列挙子は無効になり、動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="5c299-129">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="5c299-130">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="5c299-130">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c299-131"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5c299-131">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="5c299-132"><see langword="true" /> が読み取り専用である場合は <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-132"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-133"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-133"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="5c299-134">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="5c299-134">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Toolbox.ToolboxCategory this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Toolbox.ToolboxCategory Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As ToolboxCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Toolbox::ToolboxCategory ^ default[int] { System::Activities::Presentation::Toolbox::ToolboxCategory ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Activities.Presentation.Toolbox.ToolboxCategory" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Toolbox.ToolboxCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5c299-135">取得するツールボックス カテゴリ項目の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="5c299-135">The zero-based index of the toolbox category item to get.</span></span></param>
        <summary><span data-ttu-id="5c299-136">指定したインデックス位置にあるツールボックス カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="5c299-136">Gets the toolbox category at the specified index.</span></span></summary>
        <value><span data-ttu-id="5c299-137">指定したインデックス位置にあるツールボックス カテゴリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-137">The toolbox category <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-138"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-138"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="5c299-139">このプロパティでは、`myCollection[index]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="5c299-139">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Remove(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5c299-140">削除する <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-140">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to remove.</span></span></param>
        <summary><span data-ttu-id="5c299-141"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 内で最初に見つかった特定のツールボックス カテゴリを削除します。</span><span class="sxs-lookup"><span data-stu-id="5c299-141">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="5c299-142">コレクション内で項目が見つかって削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-142"><see langword="true" /> if the item is found and removed from the collection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5c299-143">このメソッドは、指定した <paramref name="item" /> が見つからなかった場合にも <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5c299-143">This method returns <see langword="false" /> if the <paramref name="item" /> specified is not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="toolboxCategoryItems.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="5c299-144"><see cref="T:System.Array" /> コレクションから要素がコピーされる先である、1 次元の <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-144">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span> <span data-ttu-id="5c299-145"><see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span><span class="sxs-lookup"><span data-stu-id="5c299-145">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="5c299-146">対象の配列の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="5c299-146">The zero-based index of the target array.</span></span></param>
        <summary><span data-ttu-id="5c299-147"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクション全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー先である <see cref="T:System.Array" /> の指定したインデックス位置が、コピー開始位置になります。</span><span class="sxs-lookup"><span data-stu-id="5c299-147">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-148">要素は、列挙子が <xref:System.Array> コレクションを反復処理するのと同じ順序で、<xref:System.Activities.Presentation.Toolbox.ToolboxCategory> にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="5c299-148">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c299-149"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c299-149">The <paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.Count : int" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c299-150"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクションに格納されているツールボックス カテゴリ数を取得します。</span><span class="sxs-lookup"><span data-stu-id="5c299-150">Gets the number of toolbox categories contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <value><span data-ttu-id="5c299-151"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクションに格納されている項目数。</span><span class="sxs-lookup"><span data-stu-id="5c299-151">The number of items contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-152"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.ICollection> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-152"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c299-153"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5c299-153">Gets a value that indicates whether access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="5c299-154"><see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-154"><see langword="true" /> if access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-155"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.ICollection> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-155"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span> <span data-ttu-id="5c299-156"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> プロパティは、<xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> へのアクセスを同期するために使用できるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5c299-156">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object, which can be used to synchronize access to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c299-157"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="5c299-157">Gets an object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <value><span data-ttu-id="5c299-158"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> へのアクセスを同期するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5c299-158">An object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-159"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.ICollection> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-159"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="toolboxCategoryItems.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c299-160"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクションを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="5c299-160">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <returns><span data-ttu-id="5c299-161"><see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-161">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-162">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="5c299-162">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5c299-163">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="5c299-163">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5c299-164">この位置では、<xref:System.Collections.Generic.IEnumerator%601.Current> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="5c299-164">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="5c299-165">そのため、<xref:System.Collections.IEnumerator.MoveNext> の値を読み取る前に、<xref:System.Collections.Generic.IEnumerator%601.Current> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c299-165">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="5c299-166">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="5c299-166">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5c299-167">要素の追加、変更、削除などの変更がコレクションに対して実行されると、列挙子は無効になり、動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="5c299-167">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="5c299-168">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="5c299-168">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="toolboxCategoryItems.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5c299-169">新しい要素が挿入される位置。</span><span class="sxs-lookup"><span data-stu-id="5c299-169">The position into which the new element is inserted.</span></span></param>
        <summary><span data-ttu-id="5c299-170">ツールを <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="5c299-170">Adds a tool to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="5c299-171">コレクションに追加されたツールの、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="5c299-171">The zero-based index of the tool added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-172"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-172"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c299-173"><paramref name="value" /> が、コレクションによって実装される <see cref="T:System.Collections.IList" /> に代入できない型です。</span><span class="sxs-lookup"><span data-stu-id="5c299-173">The <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" /> implemented by the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="toolboxCategoryItems.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c299-174"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> からすべてのツールを削除します。</span><span class="sxs-lookup"><span data-stu-id="5c299-174">Removes all the tools from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-175"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-175"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="toolboxCategoryItems.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5c299-176">コレクション内で検索するツール <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-176">The tool <see cref="T:System.Object" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="5c299-177"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> に特定のツールが格納されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="5c299-177">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> contains a specific tool.</span></span></summary>
        <returns><span data-ttu-id="5c299-178"><paramref name="value" /> が <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-178"><see langword="true" /> if the <paramref name="value" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-179"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-179"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c299-180"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c299-180">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="toolboxCategoryItems.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5c299-181"><see cref="T:System.Collections.IList" /> 内で検索するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5c299-181">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="5c299-182"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 内にある特定のツールのインデックスを判断します。</span><span class="sxs-lookup"><span data-stu-id="5c299-182">Determines the index of a specific tool in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="5c299-183">リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="5c299-183">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-184"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-184"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c299-185"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c299-185">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="toolboxCategoryItems.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5c299-186"><paramref name="value" /> を挿入する位置の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="5c299-186">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="5c299-187">コレクションに挿入される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-187">The <see cref="T:System.Object" /> inserted into the collection.</span></span></param>
        <summary><span data-ttu-id="5c299-188">ツールボックス カテゴリを、<see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクション内の指定したインデックス位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="5c299-188">Inserts a toolbox category into the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-189"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-189"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="5c299-190">`index` が <xref:System.Collections.IList> 内の項目数に等しければ、`value` が末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="5c299-190">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="5c299-191">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="5c299-191">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="5c299-192">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="5c299-192">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5c299-193"><paramref name="index" /> が、<see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクションに対して無効です。</span><span class="sxs-lookup"><span data-stu-id="5c299-193">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c299-194"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c299-194">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5c299-195">コレクションが読み取り専用であるか、またはその固定サイズを超過しています。</span><span class="sxs-lookup"><span data-stu-id="5c299-195">The collection is read-only or has a fixed size that has been exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c299-196"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> が固定サイズかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5c299-196">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="5c299-197"><see langword="true" /> が固定サイズの場合は <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-197"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-198"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-198"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c299-199"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5c299-199">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="5c299-200"><see langword="true" /> が読み取り専用である場合は <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-200"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-201"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-201"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="5c299-202">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="5c299-202">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5c299-203">取得または設定するツールボックス カテゴリ項目の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="5c299-203">The zero-based index of the toolbox category item to get or set.</span></span></param>
        <summary><span data-ttu-id="5c299-204">コレクション内の指定のインデックス位置にあるツールボックス カテゴリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5c299-204">Gets or sets the toolbox category at a specified index of the collection.</span></span></summary>
        <value><span data-ttu-id="5c299-205">指定したインデックス位置にあるツールボックス カテゴリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-205">The toolbox category <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-206"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-206"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="5c299-207">このプロパティでは、`myCollection[index]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="5c299-207">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c299-208"><paramref name="value" /> 設定は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c299-208">The <paramref name="value" /> set is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="toolboxCategoryItems.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5c299-209"><see cref="T:System.Object" /> コレクションから削除するツール <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span><span class="sxs-lookup"><span data-stu-id="5c299-209">The tool <see cref="T:System.Object" /> to remove from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></param>
        <summary><span data-ttu-id="5c299-210"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 内で最初に見つかった特定のツールボックス カテゴリを削除します。</span><span class="sxs-lookup"><span data-stu-id="5c299-210">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-211"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-211"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="5c299-212">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="5c299-212">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="5c299-213">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="5c299-213">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="toolboxCategoryItems.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5c299-214">削除するツールボックス カテゴリ項目の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="5c299-214">The zero-based index of the toolbox category item to remove.</span></span></param>
        <summary><span data-ttu-id="5c299-215"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクション内の指定したインデックス位置にあるツールボックス カテゴリを削除します。</span><span class="sxs-lookup"><span data-stu-id="5c299-215">Removes a toolbox category at the specified index of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c299-216"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> は、<xref:System.Collections.IList> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c299-216"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="5c299-217">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="5c299-217">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="5c299-218">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="5c299-218">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5c299-219"><paramref name="index" /> が、<see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> コレクションに対して無効です。</span><span class="sxs-lookup"><span data-stu-id="5c299-219">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
