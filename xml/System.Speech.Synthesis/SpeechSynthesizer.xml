<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdf1c30b65215edc94db71ce68335c822a8e1680" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78786564" /></Metadata><TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="abdb8-101">インストール済みの音声合成エンジン機能へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-101">Provides access to the functionality of an installed speech synthesis engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-102">新しい <xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトを作成すると、既定のシステム音声が使用されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="abdb8-103">インストールされている音声合成 (音声合成) のいずれかを使用するように <xref:System.Speech.Synthesis.SpeechSynthesizer> を構成するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> または <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="abdb8-104">インストールされている音声に関する情報を取得するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> メソッドと <xref:System.Speech.Synthesis.VoiceInfo> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="abdb8-105">このクラスは、音声合成の次の側面を制御することもできます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="abdb8-106"><xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトの出力を構成するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、および <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> の各メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="abdb8-107">音声を生成するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="abdb8-108"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、テキスト、<xref:System.Speech.Synthesis.Prompt> または <xref:System.Speech.Synthesis.PromptBuilder> オブジェクト、または[音声合成マークアップ言語 (SSML) バージョン 1.0](https://go.microsoft.com/fwlink/?LinkId=201763)から音声を生成することができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="abdb8-109">音声合成を一時停止および再開するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> メソッドと <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="abdb8-110">辞書を追加または削除するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> メソッドと <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="abdb8-111"><xref:System.Speech.Synthesis.SpeechSynthesizer> では、1つまたは複数の辞書を使用して単語の発音をガイドできます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="abdb8-112">音声出力の配信を変更するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> プロパティと <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="abdb8-113"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、プロンプトで特定の機能 (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>、<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>、<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>) が発生したときにイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="abdb8-114">また、読み上げ操作の開始 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) と終了 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) について報告するイベントや、話し方の声の変化 (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>) も発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abdb8-115"><xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A>への最後の参照を解放する前に、必ず<xref:System.Speech.Synthesis.SpeechSynthesizer>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="abdb8-116">そうしないと、ガベージ コレクターが <xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-117">次の例は、<xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトを初期化して文字列を読み上げるコンソールアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361644(v%3doffice.14)"><span data-ttu-id="abdb8-118">音声合成</span><span class="sxs-lookup"><span data-stu-id="abdb8-118">Speech Synthesis</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-119"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-119">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-120">新しい <xref:System.Speech.Synthesis.SpeechSynthesizer> インスタンスを初期化すると、既定のシステム音声が使用されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-120">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="abdb8-121">インストールされている音声合成 (音声合成) のいずれかを使用するように <xref:System.Speech.Synthesis.SpeechSynthesizer> を構成するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> または <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-121">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="abdb8-122">インストールされている音声に関する情報を取得するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> メソッドと <xref:System.Speech.Synthesis.VoiceInfo> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-122">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLexicon (uri As Uri, mediaType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="member this.AddLexicon : Uri * string -&gt; unit" Usage="speechSynthesizer.AddLexicon (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="abdb8-123">辞書情報の場所。</span><span class="sxs-lookup"><span data-stu-id="abdb8-123">The location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="abdb8-124">辞書のメディア タイプ。</span><span class="sxs-lookup"><span data-stu-id="abdb8-124">The media type of the lexicon.</span></span> <span data-ttu-id="abdb8-125">メディアの種類の値では大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-125">Media type values are not case sensitive.</span></span></param>
        <summary><span data-ttu-id="abdb8-126">用語集を <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-126">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-127">発音辞書とは、サポートされている発音記号の文字と文字で構成される単語または語句とその発音をまとめたものです。</span><span class="sxs-lookup"><span data-stu-id="abdb8-127">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="abdb8-128">辞書を使用して、アプリケーションで特殊な語彙のカスタム発音を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-128">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="abdb8-129">外部辞書ファイルに指定された発音は、音声シンセサイザーの内部辞書または辞書の発音よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-129">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="abdb8-130">ただし、<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>、<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>、または <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> メソッドを使用して作成されたプロンプトでインラインで指定された発音は、どの辞書に指定されている発音よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-130">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="abdb8-131">インライン発音は、単語が1回出現する場合にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-131">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="abdb8-132">詳細については[、「辞書と発音のアルファベット](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-132">See [Lexicons and Phonetic Alphabets](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) for more information.</span></span>  
  
 <span data-ttu-id="abdb8-133"><xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトに複数の辞書を追加できます。`mediaType` パラメーターでは、次の2つの値がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="abdb8-133">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="abdb8-134">`application/pls+xml` 値は、辞書が[発音辞書仕様 (てい) バージョン 1.0](https://go.microsoft.com/fwlink/?LinkId=201766)に準拠していることを示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-134">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="abdb8-135">この形式を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="abdb8-135">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="abdb8-136">`application/vdn.ms-sapi-lex` 値は、辞書形式が非圧縮辞書であることを示します。これは、Microsoft 独自の形式です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-136">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="abdb8-137">これは従来の形式であり、上記のてい形式を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="abdb8-137">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-138">次の例は、"blue" という単語のカスタム発音を含む辞書を追加および削除した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="abdb8-138">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="abdb8-139">辞書では、"bleep" のように音を鳴らす "青" の発音を定義しています。</span><span class="sxs-lookup"><span data-stu-id="abdb8-139">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="abdb8-140">辞書が読み込まれている間、音声シンセサイザーは辞書に定義されている発音を使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-140">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="abdb8-141">次に、用語集ファイル Blue. ていの内容を示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-141">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberSignature Language="F#" Value="member this.BookmarkReached : EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " Usage="member this.BookmarkReached : System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-142"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> がプロンプトのブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-142">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-143"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> のメソッドの処理中にこのイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-143">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="abdb8-144">イベントに関連付けられているデータの詳細については、「<xref:System.Speech.Synthesis.BookmarkReachedEventArgs>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-144">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="abdb8-145"><xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> メソッドを使用して、ブックマークを追加できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-145">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-146">次の例では、2つのブックマークを含むプロンプトを作成し、再生用の WAV ファイルに出力を送信します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-146">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="abdb8-147">イベントがコンソールに発生したときに、<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> イベントのハンドラーによって、ブックマークの名前とその位置がオーディオストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-147">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nighttime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-148"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを破棄し、セッション中に使用するリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-148">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="speechSynthesizer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-149"><see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> メソッドが呼び出されなかった場合にリソースをクリーンアップするための安全装置として動作します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-149">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentlySpokenPrompt : unit -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.GetCurrentlySpokenPrompt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-150"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> が読み上げているプロンプトを取得します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-150">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span></span></summary>
        <returns><span data-ttu-id="abdb8-151">現在読み上げられているプロンプト オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-151">Returns the prompt object that is currently being spoken.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abdb8-152">現在システムにインストールされている音声合成 (音声変換) の音声のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-152">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-153">アプリケーションが <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>を呼び出すと、メソッドは、レジストリ内で検出された各ボイス (音声合成エンジン) が特定の最小条件を満たしていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-153">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="abdb8-154">検証に失敗した音声に対しては、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-154">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="abdb8-155">アプリケーションでは、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`音声を選択できません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-155">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="abdb8-156">通常、アプリケーションは音声の <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティを設定しません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-156">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-157">インストール済みの音声合成 (音声変換) の音声を返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-157">Returns all of the installed speech synthesis (text-to-speech) voices.</span></span></summary>
        <returns><span data-ttu-id="abdb8-158">システムに現在インストールされている、音声の読み取り専用のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-158">Returns a read-only collection of the voices currently installed on the system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-159">音声は、システムにインストールされている音声合成 (音声合成または TTS) のエンジンです。</span><span class="sxs-lookup"><span data-stu-id="abdb8-159">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-160">次の例は、<xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトを初期化し、インストールされている音声の一覧 (音声合成用エンジン) をコンソールに出力し、各音声に使用できる情報を示すコンソールアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-160">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : System.Globalization.CultureInfo -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="abdb8-161">音声がサポートする必要があるロケール。</span><span class="sxs-lookup"><span data-stu-id="abdb8-161">The locale that the voice must support.</span></span></param>
        <summary><span data-ttu-id="abdb8-162">特定のロケールをサポートする、インストール済みの音声合成 (音声変換) の音声を返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-162">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span></span></summary>
        <returns><span data-ttu-id="abdb8-163">指定のロケールをサポートするシステムに現在インストールされている、音声の読み取り専用のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-163">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-164">インストールされているどの音声も指定されたロケールをサポートしていない場合、このメソッドは空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-164">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="abdb8-165">Microsoft Windows とシステム。 Speech API 有効な国コードをすべて受け入れます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-165">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="abdb8-166">カルチャプロパティで指定された言語を使用して音声合成エンジンを実行するには、その言語の国コードをサポートする音声合成エンジンがインストールされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="abdb8-166">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="abdb8-167">Microsoft Windows 7 に付属している音声合成エンジンは、次の言語の国コードで動作します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-167">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="abdb8-168">en-US.</span><span class="sxs-lookup"><span data-stu-id="abdb8-168">en-US.</span></span> <span data-ttu-id="abdb8-169">英語 (U.S.)</span><span class="sxs-lookup"><span data-stu-id="abdb8-169">English (United States)</span></span>  
  
-   <span data-ttu-id="abdb8-170">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="abdb8-170">zh-CN.</span></span> <span data-ttu-id="abdb8-171">中国語 (中国)</span><span class="sxs-lookup"><span data-stu-id="abdb8-171">Chinese (China)</span></span>  
  
-   <span data-ttu-id="abdb8-172">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="abdb8-172">zh-TW.</span></span> <span data-ttu-id="abdb8-173">中国語 (台湾)</span><span class="sxs-lookup"><span data-stu-id="abdb8-173">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="abdb8-174">"En" など、2文字の言語コードも許可されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-174">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-175">次の例は、<xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトを初期化し、en-us ロケールをサポートするインストール済みの音声のリストをコンソールに出力するコンソールアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-175">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="speechSynthesizer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-176"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを一時停止します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-176">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberSignature Language="F#" Value="member this.PhonemeReached : EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " Usage="member this.PhonemeReached : System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-177">音素に到達したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-177">Raised when a phoneme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-178">音素は、記述された言語の基本コンポーネントです。通常は、1つまたは複数の個別のサウンドを表すアルファベットの文字 (または2文字の組み合わせ) です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-178">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="abdb8-179">たとえば、"c" という文字は、"cinder" の "s" のように聞こえる可能性のある音素、または "catch" の "k" のようなものです。</span><span class="sxs-lookup"><span data-stu-id="abdb8-179">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="abdb8-180">書かれた単語は、音素の集合体です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-180">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="abdb8-181">単語内の音素を変更すると、そのスペルが変更されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-181">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="abdb8-182"><xref:System.Speech.Synthesis.SpeechSynthesizer> インスタンスは、音素を構成する単語の各部分に対して <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> イベントを生成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-182">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="abdb8-183">たとえば、"theme" という語の場合、3つの <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> イベントが生成されます。1つは "th" サウンド、もう1つは "e" サウンド、もう1つは "m" サウンド (me) 用です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-183">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="abdb8-184">イベントに関連付けられているデータの例と情報については、「<xref:System.Speech.Synthesis.PhonemeReachedEventArgs>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-184">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rate : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-185">現在の <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの読み上げ速度を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-185">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="abdb8-186"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの読み上げ速度を -10 ～ 10 の範囲で返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-186">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abdb8-187">次の例では、読み上げ速度が-2 に設定された文字列を示しています。</span><span class="sxs-lookup"><span data-stu-id="abdb8-187">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveLexicon (uri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.RemoveLexicon : Uri -&gt; unit" Usage="speechSynthesizer.RemoveLexicon uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="abdb8-188">辞書文書の場所。</span><span class="sxs-lookup"><span data-stu-id="abdb8-188">The location of the lexicon document.</span></span></param>
        <summary><span data-ttu-id="abdb8-189"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトから辞書を削除します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-189">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-190">例については、「<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-190">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="speechSynthesizer.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-191">一時停止した後、<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを再開します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-191">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SelectVoice : string -&gt; unit" Usage="speechSynthesizer.SelectVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="abdb8-192">選択する音声の名前。</span><span class="sxs-lookup"><span data-stu-id="abdb8-192">The name of the voice to select.</span></span></param>
        <summary><span data-ttu-id="abdb8-193">特定の音声を名前で選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-193">Selects a specific voice by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-194"><xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> メソッドと <xref:System.Speech.Synthesis.VoiceInfo> クラスを使用して、インストールされている音声合成 (TTS) 音声の名前を取得します。このテキストは選択できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-194">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="abdb8-195">音声を選択するには、<xref:System.Speech.Synthesis.VoiceInfo.Name%2A> プロパティの内容全体を、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> メソッドの引数として渡します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-195">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="abdb8-196"><xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトは、音声の <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> プロパティに `name` が含まれている最初にインストールされた音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="abdb8-197"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、大文字と小文字を区別し、部分文字列の比較を実行して、音声が `name`と一致するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-197">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="abdb8-198">アプリケーションが <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>を呼び出すと、メソッドは、レジストリで見つかった各音声が特定の最小条件を満たしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-198">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="abdb8-199">検証に失敗した音声に対しては、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-199">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="abdb8-200">アプリケーションでは、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`音声を選択できません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-200">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="abdb8-201">通常、アプリケーションは音声の <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティを設定しません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-201">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="abdb8-202">性別、年齢、またはロケールで音声を選択するには、いずれかの <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-202">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abdb8-203">特定の特徴を持つ音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-203">Selects a voice with specific characteristics.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-204"><xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> メソッドと <xref:System.Speech.Synthesis.VoiceInfo> クラスを使用して、インストールされている音声合成 (TTS) 音声の名前を取得します。このテキストは選択できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-204">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="abdb8-205"><xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトは、指定した特性に一致する最初にインストールされた音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-205">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="abdb8-206">アプリケーションが <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>を呼び出すと、メソッドは、レジストリで見つかった各音声が特定の最小条件を満たしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-206">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="abdb8-207">検証に失敗した音声に対しては、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-207">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="abdb8-208">アプリケーションでは、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`音声を選択できません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-208">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="abdb8-209">通常、アプリケーションは音声の <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティを設定しません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-209">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="abdb8-210">名前で音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-210">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="abdb8-211">選択する音声の性別。</span><span class="sxs-lookup"><span data-stu-id="abdb8-211">The gender of the voice to select.</span></span></param>
        <summary><span data-ttu-id="abdb8-212">特定の性別の音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-212">Selects a voice with a specific gender.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-213"><xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> メソッドと <xref:System.Speech.Synthesis.VoiceInfo> クラスを使用して、インストールされている音声合成 (TTS) 音声の名前を取得します。このテキストは選択できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-213">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="abdb8-214"><xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトは、<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> プロパティが `gender` パラメーターと一致する最初にインストールされた音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-214">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="abdb8-215">アプリケーションが <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>を呼び出すと、メソッドは、レジストリで見つかった各音声が特定の最小条件を満たしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-215">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="abdb8-216">検証に失敗した音声に対しては、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-216">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="abdb8-217">アプリケーションでは、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`音声を選択できません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-217">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="abdb8-218">通常、アプリケーションは音声の <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティを設定しません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-218">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="abdb8-219">他の特性に基づいて音声を選択する方法については、「その他の <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 方法」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-219">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="abdb8-220">名前で音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-220">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="abdb8-221">選択する音声の性別。</span><span class="sxs-lookup"><span data-stu-id="abdb8-221">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="abdb8-222">選択する音声の期間。</span><span class="sxs-lookup"><span data-stu-id="abdb8-222">The age of the voice to select.</span></span></param>
        <summary><span data-ttu-id="abdb8-223">特定の性別と年齢の音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-223">Selects a voice with a specific gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-224"><xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> メソッドと <xref:System.Speech.Synthesis.VoiceInfo> クラスを使用して、インストールされている音声合成 (TTS) 音声の名前を取得します。このテキストは選択できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-224">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="abdb8-225"><xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトは、インストールされている最初の音声を選択し、その <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> と <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> プロパティが `gender` パラメーターと `age` パラメーターと一致します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-225">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="abdb8-226">アプリケーションが <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>を呼び出すと、メソッドは、レジストリで見つかった各音声が特定の最小条件を満たしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-226">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="abdb8-227">検証に失敗した音声に対しては、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-227">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="abdb8-228">アプリケーションでは、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`音声を選択できません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-228">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="abdb8-229">通常、アプリケーションは音声の <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティを設定しません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-229">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="abdb8-230">他の特性に基づいて音声を選択する方法については、「その他の <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 方法」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-230">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="abdb8-231">名前で音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-231">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="abdb8-232">選択する音声の性別。</span><span class="sxs-lookup"><span data-stu-id="abdb8-232">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="abdb8-233">選択する音声の期間。</span><span class="sxs-lookup"><span data-stu-id="abdb8-233">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="abdb8-234">選択する音声の場所。</span><span class="sxs-lookup"><span data-stu-id="abdb8-234">The position of the voice to select.</span></span></param>
        <summary><span data-ttu-id="abdb8-235">音声が並べられる位置に基づき、特定の性別や年齢の音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-235">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-236"><xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> メソッドと <xref:System.Speech.Synthesis.VoiceInfo> クラスを使用して、インストールされている音声合成 (TTS) 音声の名前を取得します。このテキストは選択できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-236">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="abdb8-237"><xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトは、<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> と <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> プロパティが `gender` および `age` パラメーターと一致する、インストールされている音声を検索します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="abdb8-238"><xref:System.Speech.Synthesis.SpeechSynthesizer> によって検出された一致がカウントされ、カウントが `voiceAlternate` パラメーターと等しい場合は音声が返されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-238">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="abdb8-239">アプリケーションが <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>を呼び出すと、メソッドは、レジストリで見つかった各音声が特定の最小条件を満たしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-239">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="abdb8-240">検証に失敗した音声に対しては、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-240">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="abdb8-241">アプリケーションでは、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`音声を選択できません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-241">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="abdb8-242">通常、アプリケーションは音声の <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティを設定しません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-242">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="abdb8-243">他の特性に基づいて音声を選択するには、他の <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> のオーバーロードを参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-243">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="abdb8-244">名前で音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-244">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int * System.Globalization.CultureInfo -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="abdb8-245">選択する音声の性別。</span><span class="sxs-lookup"><span data-stu-id="abdb8-245">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="abdb8-246">選択する音声の期間。</span><span class="sxs-lookup"><span data-stu-id="abdb8-246">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="abdb8-247">選択する音声の場所。</span><span class="sxs-lookup"><span data-stu-id="abdb8-247">The position of the voice to select.</span></span></param>
        <param name="culture"><span data-ttu-id="abdb8-248">選択する音声のロケール。</span><span class="sxs-lookup"><span data-stu-id="abdb8-248">The locale of the voice to select.</span></span></param>
        <summary><span data-ttu-id="abdb8-249">音声が並べられる位置に基づき、特定の性別、年齢、ロケールの音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-249">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-250"><xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトは、<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>、<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>、および <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> プロパティが `gender`、`age`、および `culture` パラメーターと一致する音声を検索します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="abdb8-251"><xref:System.Speech.Synthesis.SpeechSynthesizer> によって検出された一致がカウントされ、カウントが `voiceAlternate` パラメーターと等しい場合は音声が返されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-251">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="abdb8-252">Microsoft Windows とシステム。 Speech API 有効な国コードをすべて受け入れます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-252">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="abdb8-253">`culture` パラメーターに指定された言語を使用して音声合成エンジンを実行するには、その言語の国コードをサポートする音声合成エンジンがインストールされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="abdb8-253">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="abdb8-254">Microsoft Windows 7 に付属している音声合成エンジンは、次の言語の国コードで動作します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-254">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="abdb8-255">en-US.</span><span class="sxs-lookup"><span data-stu-id="abdb8-255">en-US.</span></span> <span data-ttu-id="abdb8-256">英語 (U.S.)</span><span class="sxs-lookup"><span data-stu-id="abdb8-256">English (United States)</span></span>  
  
-   <span data-ttu-id="abdb8-257">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="abdb8-257">zh-CN.</span></span> <span data-ttu-id="abdb8-258">中国語 (中国)</span><span class="sxs-lookup"><span data-stu-id="abdb8-258">Chinese (China)</span></span>  
  
-   <span data-ttu-id="abdb8-259">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="abdb8-259">zh-TW.</span></span> <span data-ttu-id="abdb8-260">中国語 (台湾)</span><span class="sxs-lookup"><span data-stu-id="abdb8-260">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="abdb8-261">"En" など、2文字の言語コードも許可されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-261">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="abdb8-262">アプリケーションが <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>を呼び出すと、メソッドは、レジストリで見つかった各音声が特定の最小条件を満たしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-262">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="abdb8-263">検証に失敗した音声に対しては、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-263">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="abdb8-264">アプリケーションでは、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティが `False`音声を選択できません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-264">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="abdb8-265">通常、アプリケーションは音声の <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> プロパティを設定しません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-265">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="abdb8-266">他の特性に基づいて音声を選択するには、他の <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> のオーバーロードを参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-266">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="abdb8-267">名前で音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-267">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToAudioStream : System.IO.Stream * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToAudioStream (audioDestination, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="abdb8-268">合成出力を追加するストリーム。</span><span class="sxs-lookup"><span data-stu-id="abdb8-268">The stream to which to append synthesis output.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="abdb8-269">合成出力に使用する形式。</span><span class="sxs-lookup"><span data-stu-id="abdb8-269">The format to use for the synthesis output.</span></span></param>
        <summary><span data-ttu-id="abdb8-270"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、オーディオ ストリームへの出力を追加するように構成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-270">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-271"><xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> を呼び出して、ストリームへの <xref:System.Speech.Synthesis.SpeechSynthesizer>の参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-271">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s  reference to the stream.</span></span>  
  
 <span data-ttu-id="abdb8-272">その他の出力構成オプションについては、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>、および <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> の各メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-272">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToDefaultAudioDevice : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToDefaultAudioDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-273"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、既定のオーディオ デバイスへの出力を送信するように構成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-273">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-274">コンピューターの既定のオーディオデバイスを構成するには、Windows の**コントロールパネル**の **[サウンド]** ウィンドウを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-274">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="abdb8-275">その他の出力構成オプションについては、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>、および <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> の各メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-275">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-276">次の例では、シンセサイザーを使用して、既定のオーディオ出力に対して語句を読み上げます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-276">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToNull : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-277"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、合成操作からの出力をデバイス、ファイル、またはストリームに送信しないように設定します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-277">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-278">このメソッドを使用して、ファイルまたはストリームへの <xref:System.Speech.Synthesis.SpeechSynthesizer>の参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-278">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s reference to a file or stream.</span></span> <span data-ttu-id="abdb8-279">例については、「<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-279">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="abdb8-280">その他の出力構成オプションについては、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>、および <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> の各メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-280">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abdb8-281"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、WAVE 形式のオーディオ形式ファイルに出力を追加するように構成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-281">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-282">ファイルへの <xref:System.Speech.Synthesis.SpeechSynthesizer>の参照を解放するには、たとえば <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>を呼び出すことによって、<xref:System.Speech.Synthesis.SpeechSynthesizer>の出力を再構成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-282">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="abdb8-283">その他の出力構成オプションについては、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、および <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> の各メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-283">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="abdb8-284">ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="abdb8-284">The path to the file.</span></span></param>
        <summary><span data-ttu-id="abdb8-285"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、WAVE 形式のオーディオを含むファイルに出力を追加するように構成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-285">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-286">出力を構成し、オーディオ形式を指定するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-286">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-287">次の例では、<xref:System.Media.SoundPlayer> のインスタンスを使用して、.wav ファイルに出力されたプロンプトを再生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-287">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="abdb8-288"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> の呼び出しは非同期であるため、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> イベントのハンドラーで <xref:System.Media.SoundPlayer> インスタンス (および <xref:System.Media.SoundPlayer.Play%2A> メソッドが呼び出されます) が作成されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-288">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile (path, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="abdb8-289">ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="abdb8-289">The path to the file.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="abdb8-290">オーディオ形式の情報。</span><span class="sxs-lookup"><span data-stu-id="abdb8-290">The audio format information.</span></span></param>
        <summary><span data-ttu-id="abdb8-291"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> のオブジェクトを、指定された形式で WAVE 形式のオーディオ形式ファイルに出力を追加するように構成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-291">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abdb8-292">次の例では、音声合成の出力形式を指定し、WAV ファイルに送信します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-292">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveStream : System.IO.Stream -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveStream audioDestination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="abdb8-293">合成出力を追加するストリーム。</span><span class="sxs-lookup"><span data-stu-id="abdb8-293">The stream to which to append synthesis output.</span></span></param>
        <summary><span data-ttu-id="abdb8-294"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、WAVE 形式のオーディオを含むストリームに出力を追加するように構成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-294">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-295">ストリームへの <xref:System.Speech.Synthesis.SpeechSynthesizer>の参照を解放するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>を呼び出すなどして、シンセサイザーの出力を再構成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-295">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="abdb8-296">その他の出力構成オプションについては、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、および <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> の各メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-296">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-297">次の例では、WAV ストリームに語句を出力します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-297">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream streamAudio = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abdb8-298">文字列、<see cref="T:System.Speech.Synthesis.Prompt" /> オブジェクト、または <see cref="T:System.Speech.Synthesis.PromptBuilder" /> オブジェクトから同期で出力される音声を生成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-298">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-299"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> メソッドは、音声を同期的に生成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-299">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="abdb8-300">メソッドは、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> インスタンスの内容が完全に話されるまでは戻りません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-300">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="abdb8-301">これは、音声を生成する最も簡単な方法です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-301">This is the simplest way to generate speech.</span></span> <span data-ttu-id="abdb8-302">ただし、アプリケーションで読み上げ中にタスクを実行する必要がある場合は (テキストの強調表示、アニメーションの表示、コントロールの監視などのタスク)、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> メソッドまたは <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> メソッドを使用して、音声を非同期に生成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-302">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="abdb8-303">このメソッドの呼び出し中に、<xref:System.Speech.Synthesis.SpeechSynthesizer> は次のイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-303">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="abdb8-304">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="abdb8-305">シンセサイザーの読み上げの状態が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-305">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="abdb8-306">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="abdb8-307">シンセサイザーが音声の生成を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-307">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="abdb8-308">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="abdb8-309">シンセサイザーが1つの文字または文字の組み合わせに到達するたびに発生し、言語の音声を個別に発音します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-309">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="abdb8-310">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="abdb8-311">シンセサイザーが単語の読み上げを完了するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-311">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="abdb8-312">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="abdb8-313">音声の生成に使用される口の位置または顔の筋肉を変更する必要があるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-313">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="abdb8-314">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="abdb8-315">シンセサイザーがプロンプトでブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-315">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="abdb8-316">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="abdb8-317">シンセサイザーの読み上げ音声が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-317">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="abdb8-318"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> メソッドの処理中に <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> イベントを発生させません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-318">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (prompt As Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.Speak prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="abdb8-319">話すコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="abdb8-319">The content to speak.</span></span></param>
        <summary><span data-ttu-id="abdb8-320">非同期的に <see cref="T:System.Speech.Synthesis.Prompt" /> オブジェクトのコンテンツを指示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-320">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-321"><xref:System.Speech.Synthesis.Prompt> オブジェクトの内容を非同期に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-321">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-322">次の例では、文字列から <xref:System.Speech.Synthesis.Prompt> オブジェクトを作成し、そのオブジェクトを引数として <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-322">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (promptBuilder As PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="speechSynthesizer.Speak promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="abdb8-323">話すコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="abdb8-323">The content to speak.</span></span></param>
        <summary><span data-ttu-id="abdb8-324">非同期的に <see cref="T:System.Speech.Synthesis.PromptBuilder" /> オブジェクトのコンテンツを指示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-324">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-325"><xref:System.Speech.Synthesis.PromptBuilder> オブジェクトの内容を非同期に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-325">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-326">次の例では、文字列から <xref:System.Speech.Synthesis.PromptBuilder> オブジェクトを作成し、そのオブジェクトを引数として <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-326">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.Speak : string -&gt; unit" Usage="speechSynthesizer.Speak textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="abdb8-327">読み上げるテキスト。</span><span class="sxs-lookup"><span data-stu-id="abdb8-327">The text to speak.</span></span></param>
        <summary><span data-ttu-id="abdb8-328">同期的に文字列のコンテンツを指示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-328">Synchronously speaks the contents of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-329">SSML マークアップを含む文字列を同期的に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-329">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="abdb8-330">文字列の内容を非同期に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-330">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-331">次の例に示すように、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> メソッドは、音声出力を同期的に生成する最も簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-331">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abdb8-332">文字列、<see cref="T:System.Speech.Synthesis.Prompt" /> オブジェクト、または <see cref="T:System.Speech.Synthesis.PromptBuilder" /> オブジェクトから非同期で出力される音声を生成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-332">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-333"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> メソッドは、音声を非同期的に生成します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-333">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="abdb8-334">メソッドは、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> オブジェクトの内容が読み上げを完了するのを待たずに直ちに戻ります。</span><span class="sxs-lookup"><span data-stu-id="abdb8-334">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="abdb8-335">アプリケーションで読み上げ中にタスクを実行する必要がある場合は <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> を使用します。たとえば、強調表示テキスト、ペイントアニメーション、モニターコントロールなどのタスクを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="abdb8-335">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="abdb8-336">このメソッドの呼び出し中に、<xref:System.Speech.Synthesis.SpeechSynthesizer> は次のイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-336">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="abdb8-337">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="abdb8-338">シンセサイザーの読み上げの状態が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-338">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="abdb8-339">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="abdb8-340">シンセサイザーが音声の生成を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-340">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="abdb8-341">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="abdb8-342">シンセサイザーが1つの文字または文字の組み合わせに到達するたびに発生し、言語の音声を個別に発音します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-342">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="abdb8-343">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="abdb8-344">シンセサイザーが単語の読み上げを完了するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-344">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="abdb8-345">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="abdb8-346">音声の生成に使用される口の位置または顔の筋肉を変更する必要があるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-346">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="abdb8-347">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="abdb8-348">シンセサイザーがプロンプトでブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-348">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="abdb8-349">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="abdb8-350">シンセサイザーの読み上げ音声が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-350">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="abdb8-351">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="abdb8-352">シンセサイザーが <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 操作を終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-352">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="abdb8-353">アプリケーションで読み上げ中にタスクを実行する必要がない場合は、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> メソッドまたは <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> メソッドを使用して、同期的に音声を生成することができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-353">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsync (prompt As Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsync prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="abdb8-354">話すコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="abdb8-354">The content to speak.</span></span></param>
        <summary><span data-ttu-id="abdb8-355">非同期的に <see cref="T:System.Speech.Synthesis.Prompt" /> のオブジェクトのコンテンツを指示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-355">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-356"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> メソッドを使用して、プロンプトの非同期の読み上げを取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-356">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="abdb8-357"><xref:System.Speech.Synthesis.Prompt> オブジェクトの内容を同期的に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-357">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-358">次の例では、文字列から <xref:System.Speech.Synthesis.Prompt> オブジェクトを作成し、そのオブジェクトを引数として <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-358">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (promptBuilder As PromptBuilder) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="abdb8-359">話すコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="abdb8-359">The content to speak.</span></span></param>
        <summary><span data-ttu-id="abdb8-360">非同期的に <see cref="T:System.Speech.Synthesis.PromptBuilder" /> のオブジェクトのコンテンツを指示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-360">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="abdb8-361">発話するコンテンツを格納するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-361">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-362"><xref:System.Speech.Synthesis.PromptBuilder> オブジェクトの内容を同期的に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-362">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-363">次の例では、文字列から <xref:System.Speech.Synthesis.PromptBuilder> オブジェクトを作成し、そのオブジェクトを引数として <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-363">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="abdb8-364">読み上げるテキスト。</span><span class="sxs-lookup"><span data-stu-id="abdb8-364">The text to speak.</span></span></param>
        <summary><span data-ttu-id="abdb8-365">非同期的に文字列のコンテンツを指示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-365">Asynchronously speaks the contents of a string.</span></span></summary>
        <returns><span data-ttu-id="abdb8-366">発話するコンテンツを格納するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-366">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-367">SSML マークアップを含む文字列を非同期に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-367">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="abdb8-368">文字列の内容を同期的に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-368">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="abdb8-369"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> メソッドを使用して、プロンプトの非同期の読み上げを取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-369">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-370">次の例に示すように、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> メソッドは、音声出力を非同期に生成する最も簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-370">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancel (prompt As Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancel : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancel prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="abdb8-371">読み上げ操作を取り消すコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="abdb8-371">The content for which to cancel a speak operation.</span></span></param>
        <summary><span data-ttu-id="abdb8-372">キューに挿入されたプロンプトの非同期合成操作をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="abdb8-372">Cancels the asynchronous synthesis operation for a queued prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-373">また、このメソッドを使用して、次のような非同期の読み上げ操作をキャンセルすることもできます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-373">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="abdb8-374"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> メソッドによって指定された <xref:System.String> の内容。</span><span class="sxs-lookup"><span data-stu-id="abdb8-374">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="abdb8-375"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> メソッドによって指定された <xref:System.Speech.Synthesis.PromptBuilder> の内容。</span><span class="sxs-lookup"><span data-stu-id="abdb8-375">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="abdb8-376"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> メソッドによって指定された SSML を含む <xref:System.String> の内容。</span><span class="sxs-lookup"><span data-stu-id="abdb8-376">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="abdb8-377"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>、または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>を呼び出すと、Speech は <xref:System.Speech.Synthesis.Prompt> オブジェクトを作成し、メソッドのパラメーターの内容をそのオブジェクトに設定し、<xref:System.Speech.Synthesis.Prompt> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-377">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="abdb8-378">返された <xref:System.Speech.Synthesis.Prompt>のコピーを保持している場合は、それを <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> に渡して、<xref:System.String> または <xref:System.Speech.Synthesis.PromptBuilder> オブジェクトで指定された読み上げコンテンツを取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-378">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancelAll : unit -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancelAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abdb8-379">すべてのキュー操作、非同期操作、音声合成操作をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="abdb8-379">Cancels all queued, asynchronous, speech synthesis operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abdb8-380">次の例では、新しいプロンプトを読み上げることができるように、プロンプトの非同期読み上げをキャンセルするために <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-380">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="abdb8-381"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 操作が取り消されると、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> イベントが発生することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-381">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberSignature Language="F#" Value="member this.SpeakCompleted : EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " Usage="member this.SpeakCompleted : System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-382"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> がプロンプトの読み上げを完了するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-382">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-383"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> メソッドの完了時に <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-383">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="abdb8-384"><xref:System.Speech.Synthesis.SpeakCompletedEventArgs> クラスにはプロパティがなく、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> イベントからのデータは返されません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-384">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="abdb8-385">これは、アプリケーションの作成者が <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> イベントのイベントハンドラーを作成できるようにするために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abdb8-385">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberSignature Language="F#" Value="member this.SpeakProgress : EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " Usage="member this.SpeakProgress : System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-386"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> がプロンプトの個々の各単語を読み上げた後に発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-386">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-387"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> の各メソッドを使用してプロンプトで読み上げる新しい単語ごとにこのイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-387">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="abdb8-388">イベントに関連付けられているデータの例と詳細については、「<xref:System.Speech.Synthesis.SpeakProgressEventArgs>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-388">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsml : string -&gt; unit" Usage="speechSynthesizer.SpeakSsml textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="abdb8-389">読み上げる SSML 文字列。</span><span class="sxs-lookup"><span data-stu-id="abdb8-389">The SSML string to speak.</span></span></param>
        <summary><span data-ttu-id="abdb8-390">同期的に SSML マークアップを含む <see cref="T:System.String" /> を指示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-390">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-391">`textToSpeak` パラメーターの内容には `speak` 要素が含まれている必要があり、 [Speech 合成マークアップ言語 (SSML) バージョン 1.0](https://go.microsoft.com/fwlink/?LinkId=201763)に準拠している必要があります。</span><span class="sxs-lookup"><span data-stu-id="abdb8-391">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="abdb8-392">詳細については、「 [Speech 合成マークアップ言語のリファレンス](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-392">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="abdb8-393">SSML マークアップを含む文字列を非同期に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-393">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="abdb8-394"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> を使用すると、SSML マークアップを含まない文字列の同期を開始できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-394">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="abdb8-395">このメソッドの呼び出し中に、<xref:System.Speech.Synthesis.SpeechSynthesizer> は次のイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-395">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="abdb8-396">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="abdb8-397">シンセサイザーの読み上げの状態が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-397">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="abdb8-398">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="abdb8-399">シンセサイザーが音声の生成を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-399">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="abdb8-400">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="abdb8-401">シンセサイザーが1つの文字または文字の組み合わせに到達するたびに発生し、言語の音声を個別に発音します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-401">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="abdb8-402">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="abdb8-403">シンセサイザーが単語の読み上げを完了するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-403">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="abdb8-404">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="abdb8-405">音声の生成に使用される口の位置または顔の筋肉を変更する必要があるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-405">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="abdb8-406">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="abdb8-407">シンセサイザーがプロンプトでブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-407">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="abdb8-408">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="abdb8-409">シンセサイザーの読み上げ音声が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-409">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="abdb8-410"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> メソッドの処理中に <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> イベントを発生させません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-410">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-411">次の例では、日付1/29/2009 を月、日、年の順に日付として表示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-411">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt synchronously.
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsmlAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakSsmlAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="abdb8-412">読み上げるための SMML のマークアップ。</span><span class="sxs-lookup"><span data-stu-id="abdb8-412">The SMML markup to speak.</span></span></param>
        <summary><span data-ttu-id="abdb8-413">非同期的に SSML マークアップを含む <see cref="T:System.String" /> を指示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-413">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-414">`textToSpeak` パラメーターの内容には `speak` 要素が含まれている必要があり、 [Speech 合成マークアップ言語 (SSML) バージョン 1.0](https://go.microsoft.com/fwlink/?LinkId=201763)に準拠している必要があります。</span><span class="sxs-lookup"><span data-stu-id="abdb8-414">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="abdb8-415">詳細については、「 [Speech 合成マークアップ言語のリファレンス](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-415">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="abdb8-416">SSML マークアップを含む文字列を同期的に読み上げるには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-416">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="abdb8-417"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> を使用すると、SSML マークアップを含まない文字列の非同期の発音を開始できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-417">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="abdb8-418">このメソッドの呼び出し中に、<xref:System.Speech.Synthesis.SpeechSynthesizer> は次のイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-418">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="abdb8-419">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="abdb8-420">シンセサイザーの読み上げの状態が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-420">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="abdb8-421">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="abdb8-422">シンセサイザーが音声の生成を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-422">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="abdb8-423">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="abdb8-424">シンセサイザーが1つの文字または文字の組み合わせに到達するたびに発生し、言語の音声を個別に発音します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-424">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="abdb8-425">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="abdb8-426">シンセサイザーが単語の読み上げを完了するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-426">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="abdb8-427">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="abdb8-428">音声の生成に使用される口の位置または顔の筋肉を変更する必要があるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-428">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="abdb8-429">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="abdb8-430">シンセサイザーがプロンプトでブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-430">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="abdb8-431">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="abdb8-432">シンセサイザーの読み上げ音声が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-432">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="abdb8-433">[https://login.microsoftonline.com/consumers/](<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>)</span><span class="sxs-lookup"><span data-stu-id="abdb8-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="abdb8-434">シンセサイザーが <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 操作の処理を終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-434">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="abdb8-435">アプリケーションが対話中にタスクを実行する必要がない場合は、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> メソッドを使用して同期的に音声を生成することができます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-435">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberSignature Language="F#" Value="member this.SpeakStarted : EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " Usage="member this.SpeakStarted : System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-436"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> がプロンプトの読み上げを開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-436">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-437"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、または <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> のいずれかのメソッドを使用してプロンプトの処理を開始するときに、このイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-437">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="abdb8-438"><xref:System.Speech.Synthesis.SpeakStartedEventArgs> クラスにはプロパティがなく、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> イベントからのデータは返されません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-438">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="abdb8-439">これは、アプリケーションの作成者が <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> イベントのイベントハンドラーを作成できるようにするために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abdb8-439">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-440"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの現在の音声読み上げの状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-440">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="abdb8-441"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの現在の音声読み上げの状態を返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-441">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-442">変更後に <xref:System.Speech.Synthesis.SpeechSynthesizer> の新しい状態を取得するには、<xref:System.Speech.Synthesis.StateChangedEventArgs> クラスの <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-442">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-443">次の例は、プロンプトを表示する前、途中、および後の <xref:System.Speech.Synthesis.SpeechSynthesizer> の状態を示しています。</span><span class="sxs-lookup"><span data-stu-id="abdb8-443">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-444"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> の状態が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-444">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-445"><xref:System.Speech.Synthesis.SpeechSynthesizer> は、その対話 <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> が変更されたときにこのイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-445">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="abdb8-446">イベントに関連付けられているデータの例と詳細については、「<xref:System.Speech.Synthesis.StateChangedEventArgs>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-446">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="abdb8-447">音声合成を一時停止および再開するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> メソッドと <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-447">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberSignature Language="F#" Value="member this.VisemeReached : EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " Usage="member this.VisemeReached : System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-448">viseme に到達したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-448">Raised when a viseme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-449">Viseme は、音素の pronouncing 時の口と顔の基本的な位置です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-449">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="abdb8-450">Visemes は、音素の視覚的表現です。</span><span class="sxs-lookup"><span data-stu-id="abdb8-450">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="abdb8-451">Speech は米国英語の21の音素をサポートしており、それぞれが1つ以上のに対応しています。</span><span class="sxs-lookup"><span data-stu-id="abdb8-451">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="abdb8-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> イベントは、新しい音素に達したときに、前の音素と一致した viseme が異なる場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="abdb8-453">いくつかの visemes は複数の音素を表しているため、次の音素に到達した場合は、前の音素と同じ viseme に到達すると、<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> イベントは生成されません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-453">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="abdb8-454">たとえば、読み上げられた単語 "this zone" については、"this" の "s" と "zone" の "z" に対して <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-454">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="abdb8-455">ただし、"viseme" の "s" と同じに対応しているため、"zone" の "z" に対しては、<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="abdb8-455">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="abdb8-456">米国英語の viseme に対応する 21 SAPI 音素グループと音素グループの一覧を次に示します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-456">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="abdb8-457">Viseme</span><span class="sxs-lookup"><span data-stu-id="abdb8-457">Viseme</span></span>|<span data-ttu-id="abdb8-458">音素 (s)</span><span class="sxs-lookup"><span data-stu-id="abdb8-458">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="abdb8-459">0</span><span class="sxs-lookup"><span data-stu-id="abdb8-459">0</span></span>|<span data-ttu-id="abdb8-460">無音</span><span class="sxs-lookup"><span data-stu-id="abdb8-460">silence</span></span>|  
|<span data-ttu-id="abdb8-461">1</span><span class="sxs-lookup"><span data-stu-id="abdb8-461">1</span></span>|<span data-ttu-id="abdb8-462">ae、ax、ah</span><span class="sxs-lookup"><span data-stu-id="abdb8-462">ae, ax, ah</span></span>|  
|<span data-ttu-id="abdb8-463">2</span><span class="sxs-lookup"><span data-stu-id="abdb8-463">2</span></span>|<span data-ttu-id="abdb8-464">aa</span><span class="sxs-lookup"><span data-stu-id="abdb8-464">aa</span></span>|  
|<span data-ttu-id="abdb8-465">3</span><span class="sxs-lookup"><span data-stu-id="abdb8-465">3</span></span>|<span data-ttu-id="abdb8-466">ao</span><span class="sxs-lookup"><span data-stu-id="abdb8-466">ao</span></span>|  
|<span data-ttu-id="abdb8-467">4</span><span class="sxs-lookup"><span data-stu-id="abdb8-467">4</span></span>|<span data-ttu-id="abdb8-468">いいね、eh、</span><span class="sxs-lookup"><span data-stu-id="abdb8-468">ey, eh, uh</span></span>|  
|<span data-ttu-id="abdb8-469">5</span><span class="sxs-lookup"><span data-stu-id="abdb8-469">5</span></span>|<span data-ttu-id="abdb8-470">er</span><span class="sxs-lookup"><span data-stu-id="abdb8-470">er</span></span>|  
|<span data-ttu-id="abdb8-471">6</span><span class="sxs-lookup"><span data-stu-id="abdb8-471">6</span></span>|<span data-ttu-id="abdb8-472">y、iy、ih、ix</span><span class="sxs-lookup"><span data-stu-id="abdb8-472">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="abdb8-473">7</span><span class="sxs-lookup"><span data-stu-id="abdb8-473">7</span></span>|<span data-ttu-id="abdb8-474">w、uw</span><span class="sxs-lookup"><span data-stu-id="abdb8-474">w, uw</span></span>|  
|<span data-ttu-id="abdb8-475">8</span><span class="sxs-lookup"><span data-stu-id="abdb8-475">8</span></span>|<span data-ttu-id="abdb8-476">o</span><span class="sxs-lookup"><span data-stu-id="abdb8-476">ow</span></span>|  
|<span data-ttu-id="abdb8-477">9</span><span class="sxs-lookup"><span data-stu-id="abdb8-477">9</span></span>|<span data-ttu-id="abdb8-478">aw</span><span class="sxs-lookup"><span data-stu-id="abdb8-478">aw</span></span>|  
|<span data-ttu-id="abdb8-479">10</span><span class="sxs-lookup"><span data-stu-id="abdb8-479">10</span></span>|<span data-ttu-id="abdb8-480">oy</span><span class="sxs-lookup"><span data-stu-id="abdb8-480">oy</span></span>|  
|<span data-ttu-id="abdb8-481">11</span><span class="sxs-lookup"><span data-stu-id="abdb8-481">11</span></span>|<span data-ttu-id="abdb8-482">ライブラリ</span><span class="sxs-lookup"><span data-stu-id="abdb8-482">ay</span></span>|  
|<span data-ttu-id="abdb8-483">12</span><span class="sxs-lookup"><span data-stu-id="abdb8-483">12</span></span>|<span data-ttu-id="abdb8-484">h</span><span class="sxs-lookup"><span data-stu-id="abdb8-484">h</span></span>|  
|<span data-ttu-id="abdb8-485">13</span><span class="sxs-lookup"><span data-stu-id="abdb8-485">13</span></span>|<span data-ttu-id="abdb8-486">r</span><span class="sxs-lookup"><span data-stu-id="abdb8-486">r</span></span>|  
|<span data-ttu-id="abdb8-487">14</span><span class="sxs-lookup"><span data-stu-id="abdb8-487">14</span></span>|<span data-ttu-id="abdb8-488">l</span><span class="sxs-lookup"><span data-stu-id="abdb8-488">l</span></span>|  
|<span data-ttu-id="abdb8-489">15</span><span class="sxs-lookup"><span data-stu-id="abdb8-489">15</span></span>|<span data-ttu-id="abdb8-490">s、z</span><span class="sxs-lookup"><span data-stu-id="abdb8-490">s, z</span></span>|  
|<span data-ttu-id="abdb8-491">16</span><span class="sxs-lookup"><span data-stu-id="abdb8-491">16</span></span>|<span data-ttu-id="abdb8-492">sh、ch、jh、zh-tw</span><span class="sxs-lookup"><span data-stu-id="abdb8-492">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="abdb8-493">17</span><span class="sxs-lookup"><span data-stu-id="abdb8-493">17</span></span>|<span data-ttu-id="abdb8-494">th、dh</span><span class="sxs-lookup"><span data-stu-id="abdb8-494">th, dh</span></span>|  
|<span data-ttu-id="abdb8-495">18</span><span class="sxs-lookup"><span data-stu-id="abdb8-495">18</span></span>|<span data-ttu-id="abdb8-496">f、v</span><span class="sxs-lookup"><span data-stu-id="abdb8-496">f, v</span></span>|  
|<span data-ttu-id="abdb8-497">19</span><span class="sxs-lookup"><span data-stu-id="abdb8-497">19</span></span>|<span data-ttu-id="abdb8-498">d、t、n</span><span class="sxs-lookup"><span data-stu-id="abdb8-498">d, t, n</span></span>|  
|<span data-ttu-id="abdb8-499">20</span><span class="sxs-lookup"><span data-stu-id="abdb8-499">20</span></span>|<span data-ttu-id="abdb8-500">k、g、ng</span><span class="sxs-lookup"><span data-stu-id="abdb8-500">k, g, ng</span></span>|  
|<span data-ttu-id="abdb8-501">21</span><span class="sxs-lookup"><span data-stu-id="abdb8-501">21</span></span>|<span data-ttu-id="abdb8-502">p、b、m</span><span class="sxs-lookup"><span data-stu-id="abdb8-502">p, b, m</span></span>|  
  
 <span data-ttu-id="abdb8-503">`VisemeReached` イベントに関連付けられているデータの詳細については、「<xref:System.Speech.Synthesis.VisemeReachedEventArgs>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-503">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Voice : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-504"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの現在の音声に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-504">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="abdb8-505"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの現在の音声に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-505">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-506">新しい <xref:System.Speech.Synthesis.SpeechSynthesizer>を初期化すると、既定のシステム音声が使用されます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-506">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="abdb8-507">インストールされている音声合成の音声のいずれかを使用するように <xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトを構成するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> または <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-507">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="abdb8-508">インストールされている音声に関する情報を取得するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> メソッドと <xref:System.Speech.Synthesis.VoiceInfo> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-508">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdb8-509">次の例では、<xref:System.Speech.Synthesis.SpeechSynthesizer> のインスタンスを初期化し、現在の音声に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-509">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberSignature Language="F#" Value="member this.VoiceChange : EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " Usage="member this.VoiceChange : System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-510"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> の音声が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-510">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdb8-511">イベントに関連付けられているデータの例と情報については、「<xref:System.Speech.Synthesis.VoiceChangeEventArgs>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abdb8-511">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="abdb8-512"><xref:System.Speech.Synthesis.SpeechSynthesizer> が使用する音声は、<xref:System.Speech.Synthesis.PromptBuilder>の <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> メソッド、または <xref:System.Speech.Synthesis.SpeechSynthesizer>の <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> メソッドまたは <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> メソッドで変更できます。</span><span class="sxs-lookup"><span data-stu-id="abdb8-512">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abdb8-513"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの出力ボリュームを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-513">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="abdb8-514"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> の音量を 0 から 100 までの値で返します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-514">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abdb8-515">次の例では、合成音声と WAV ファイルの <xref:System.Speech.Synthesis.SpeechSynthesizer>のオーディオ出力のボリュームを設定します。</span><span class="sxs-lookup"><span data-stu-id="abdb8-515">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
