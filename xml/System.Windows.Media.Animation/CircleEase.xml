<Type Name="CircleEase" FullName="System.Windows.Media.Animation.CircleEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5af47caa20639303998c96fa703eb3cb57e7890d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82296237" /></Metadata><TypeSignature Language="C#" Value="public class CircleEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CircleEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.CircleEase" />
  <TypeSignature Language="VB.NET" Value="Public Class CircleEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CircleEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type CircleEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8b348-101">円関数を使って加速と減速のアニメーションを作成するイージング関数を表します。</span><span class="sxs-lookup"><span data-stu-id="8b348-101">Represents an easing function that creates an animation that accelerates and/or decelerates using a circular function.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b348-102"><xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>を指定することにより、アニメーションの高速化、減速、またはその両方を制御できます。</span><span class="sxs-lookup"><span data-stu-id="8b348-102">You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span> <span data-ttu-id="8b348-103">次のグラフは <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>のさまざまな値を示しています。 *f*(*t*) はアニメーションの進行状況を表し、 *t*は時刻を表します。</span><span class="sxs-lookup"><span data-stu-id="8b348-103">The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.</span></span>  
  
 <span data-ttu-id="8b348-104">![CircleEase System.windows.media.animation.easingmode> グラフ。](~/add/media/circleease-graph.png "CircleEase EasingMode のグラフ")</span><span class="sxs-lookup"><span data-stu-id="8b348-104">![CircleEase EasingMode graphs.](~/add/media/circleease-graph.png "CircleEase EasingMode graphs.")</span></span>  
  
 <span data-ttu-id="8b348-105">この関数に使用される式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="8b348-105">The formula used for this function is the following.</span></span>  
  
 <span data-ttu-id="8b348-106">![CircleEase の数式](~/add/media/circleease-formula.png "CircleEase の数式")</span><span class="sxs-lookup"><span data-stu-id="8b348-106">![Mathematical formula for CircleEase](~/add/media/circleease-formula.png "Mathematical formula for CircleEase")</span></span>  
  
 <span data-ttu-id="8b348-107">*T*の有効な値は、-1 < = *t* < = 1 です。</span><span class="sxs-lookup"><span data-stu-id="8b348-107">The valid values for *t* are -1 <= *t* <= 1.</span></span> <span data-ttu-id="8b348-108">1より大きい値は1と評価され、-1 未満の値は-1 として評価されます。</span><span class="sxs-lookup"><span data-stu-id="8b348-108">Values greater than 1 are evaluated as 1, and values less than -1 are evaluated as -1.</span></span> <span data-ttu-id="8b348-109">つまり、この間隔の範囲外の値の場合、アニメーションは続行されますが、イージング関数は無効なドメインに入ったときに一時停止し、無効なドメインから出た後に再開されます。</span><span class="sxs-lookup"><span data-stu-id="8b348-109">This means that for values outside this interval, the animation continues, but the easing function pauses when it enters the invalid domain, and it resumes after it leaves the invalid domain.</span></span>  
  
 <span data-ttu-id="8b348-110"><xref:System.Windows.Media.Animation.CircleEase>以外にも、いくつかのイージング関数があります。</span><span class="sxs-lookup"><span data-stu-id="8b348-110">There are several other easing functions besides <xref:System.Windows.Media.Animation.CircleEase>.</span></span>
<span data-ttu-id="8b348-111">ランタイムに含まれるイージング関数を使用するだけでなく、<xref:System.Windows.Media.Animation.EasingFunctionBase>から継承することによって、独自のイージング関数を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="8b348-111">In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.</span></span>  
  
## <a name="xaml-object-element-usage"></a><span data-ttu-id="8b348-112">XAML オブジェクト要素の使用</span><span class="sxs-lookup"><span data-stu-id="8b348-112">XAML Object Element Usage</span></span>  
  
```xaml
<CircleEase .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="8b348-113">次の例では、<xref:System.Windows.Media.Animation.CircleEase> イージング関数を <xref:System.Windows.Media.Animation.DoubleAnimation> に適用して、減速アニメーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="8b348-113">The following example applies a <xref:System.Windows.Media.Animation.CircleEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.</span></span>  
  
 [!code-xaml[CircleEase#CircleEase](~/samples/snippets/csharp/VS_Snippets_Wpf/circleease/CS/window1.xaml#circleease)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CircleEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CircleEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CircleEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b348-114"><see cref="T:System.Windows.Media.Animation.CircleEase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8b348-114">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CircleEase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CircleEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="circleEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b348-115"><see cref="T:System.Windows.Freezable" /> 派生クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="8b348-115">Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span></span> <span data-ttu-id="8b348-116">派生クラスを作成するときには、このメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b348-116">When creating a derived class, you must override this method.</span></span></summary>
        <returns><span data-ttu-id="8b348-117">新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="8b348-117">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b348-118">アニメーションクラスは、<xref:System.Windows.Freezable>から間接的に継承します。</span><span class="sxs-lookup"><span data-stu-id="8b348-118">Animation classes inherit indirectly from <xref:System.Windows.Freezable>.</span></span> <span data-ttu-id="8b348-119">このため、カスタムアニメーションオブジェクトを構築するには、<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b348-119">Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b348-120">次の例は、<xref:System.Windows.Freezable.CreateInstanceCore%2A>の一般的な実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="8b348-120">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="circleEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime"><span data-ttu-id="8b348-121">アニメーションの正規化された時間 (進行状況)。</span><span class="sxs-lookup"><span data-stu-id="8b348-121">Normalized time (progress) of the animation.</span></span></param>
        <summary><span data-ttu-id="8b348-122">カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできるイージング関数のロジック部分を提供します。</span><span class="sxs-lookup"><span data-stu-id="8b348-122">Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</span></span></summary>
        <returns><span data-ttu-id="8b348-123">変換された進行状況を表す double 値。</span><span class="sxs-lookup"><span data-stu-id="8b348-123">A double that represents the transformed progress.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b348-124">このメソッドは、正規化された時間を変換して、<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>の <xref:System.Windows.Media.Animation.EasingMode.EaseIn> の場合のアニメーションのペースを制御します。</span><span class="sxs-lookup"><span data-stu-id="8b348-124">This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span>  
  
 <span data-ttu-id="8b348-125"><xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> メソッドの実装によって <xref:System.Windows.Media.Animation.EasingMode.EaseOut> および <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> ケースの `normalizedTime` が変換されるため、<xref:System.Windows.Media.Animation.EasingMode.EaseIn> の場合にのみイージング関数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b348-125">You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
