<Type Name="HandoffBehavior" FullName="System.Windows.Media.Animation.HandoffBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0db29a0e64ea27bfe7a8431d3d5fb896c007222" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83921579" /></Metadata><TypeSignature Language="C#" Value="public enum HandoffBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HandoffBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.HandoffBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum HandoffBehavior" />
  <TypeSignature Language="C++ CLI" Value="public enum class HandoffBehavior" />
  <TypeSignature Language="F#" Value="type HandoffBehavior = " />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>プロパティに既に適用されている既存のアニメーションと新しいアニメーションが相互作用する方法を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構成を使用して <xref:System.Windows.Media.Animation.Storyboard>、<xref:System.Windows.Media.Animation.AnimationTimeline>、または <xref:System.Windows.Media.Animation.AnimationClock> をプロパティに適用すると、以前にそのプロパティに関連付けられていたすべての <xref:System.Windows.Media.Animation.Clock> オブジェクトが引き続きシステムリソースを消費します。タイミングシステムでは、クロックは自動的に削除されません。  
  
 構成を使用して多数のクロックを適用するときのパフォーマンスの問題を回避するには、完了後にアニメーション化されたプロパティから作成クロックを削除する必要があります。 クロックを削除するには、いくつかの方法があります。  
  
-   プロパティからすべてのクロックを削除するには、アニメーション化されたオブジェクトの <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> または <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> メソッドを使用します。 最初のパラメーターとしてアニメーション化するプロパティを指定し、2番目のパラメーターとして `null` します。 これにより、すべてのアニメーション クロックがプロパティから削除されます。  
  
-   特定の <xref:System.Windows.Media.Animation.AnimationClock> をクロックの一覧から削除するには、<xref:System.Windows.Media.Animation.AnimationClock> の <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティを使用して <xref:System.Windows.Media.Animation.ClockController>を取得し、次に <xref:System.Windows.Media.Animation.ClockController.Remove%2A> の <xref:System.Windows.Media.Animation.ClockController>メソッドを呼び出します。 これは通常、クロックの <xref:System.Windows.Media.Animation.Clock.Completed> イベントハンドラーで実行されます。 <xref:System.Windows.Media.Animation.ClockController>によって制御できるのはルートクロックのみであることに注意してください。子クロックの <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティは `null`を返します。 また、クロックの有効期間が無期限の場合は、<xref:System.Windows.Media.Animation.Clock.Completed> イベントが発生しないことにも注意してください。  その場合、ユーザーは <xref:System.Windows.Media.Animation.ClockController.Remove%2A>を呼び出すタイミングを決定する必要があります。  
  
 これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。  オブジェクトがガベージ コレクションされる場合は、そのクロックも切断されて、ガベージ コレクションされます。  
  
 クロックオブジェクトの詳細については、「[アニメーションとタイミングシステムの概要](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)」を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compose">
      <MemberSignature Language="C#" Value="Compose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.Animation.HandoffBehavior Compose = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />
      <MemberSignature Language="VB.NET" Value="Compose" />
      <MemberSignature Language="C++ CLI" Value="Compose" />
      <MemberSignature Language="F#" Value="Compose = 1" Usage="System.Windows.Media.Animation.HandoffBehavior.Compose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.HandoffBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>新しいアニメーションは、複合チェーンの末尾に新しいアニメーションを追加することにより、既存のアニメーションに組み合わされます。</summary>
      </Docs>
    </Member>
    <Member MemberName="SnapshotAndReplace">
      <MemberSignature Language="C#" Value="SnapshotAndReplace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.Animation.HandoffBehavior SnapshotAndReplace = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />
      <MemberSignature Language="VB.NET" Value="SnapshotAndReplace" />
      <MemberSignature Language="C++ CLI" Value="SnapshotAndReplace" />
      <MemberSignature Language="F#" Value="SnapshotAndReplace = 0" Usage="System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.HandoffBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>新しいアニメーションは、プロパティに適用された既存のアニメーションを置き換えます。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
