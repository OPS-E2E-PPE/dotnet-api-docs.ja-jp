<Type Name="Timeline" FullName="System.Windows.Media.Animation.Timeline">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05abea22b2e43ede5d2074e3a516a41ae2612980" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83902530" /></Metadata><TypeSignature Language="C#" Value="public abstract class Timeline : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Timeline extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Timeline&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeline abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Timeline = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5e1e6-101">時間のセグメントを定義します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-101">Defines a segment of time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-102">タイムラインは、時間のセグメントを表します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-102">A timeline represents a segment of time.</span></span>  <span data-ttu-id="5e1e6-103">用意されているプロパティを使用して、そのセグメントの長さ、開始時間、繰り返し回数、時間の進行の速度などを指定できます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-103">It provides properties that enable you to specify the length of that segment, when it should start, how many times it will repeat, how fast time progresses in that segment, and more.</span></span>  
  
 <span data-ttu-id="5e1e6-104">Timeline クラスを継承するクラスには、アニメーションやメディアの再生などの追加機能が用意されています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-104">Classes that inherit from the timeline class provide additional functionality, such as animation and media playback.</span></span> <span data-ttu-id="5e1e6-105">次に、さまざまな種類の特殊なタイムラインの使用例を示します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-105">The following are examples of some of the different types of specialized timelines available.</span></span>  
  
-   <span data-ttu-id="5e1e6-106">**アニメーション**: <xref:System.Windows.Media.Animation.AnimationTimeline> は、出力値を生成するタイムラインの一種です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-106">**Animations**: An <xref:System.Windows.Media.Animation.AnimationTimeline> is a type of timeline that produces output values.</span></span> <span data-ttu-id="5e1e6-107">アニメーションをプロパティに関連付けると、アニメーションは再生時にプロパティの値を更新し、それによって "アニメーション化" されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-107">When you associate an animation with a property, the animation updates the property's value as it plays, thereby "animating" it.</span></span> <span data-ttu-id="5e1e6-108">アニメーションの概要については、「[アニメーションの概要](/dotnet/framework/wpf/graphics-multimedia/animation-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-108">For an introduction to animations, see [Animation Overview](/dotnet/framework/wpf/graphics-multimedia/animation-overview).</span></span> <span data-ttu-id="5e1e6-109">アニメーションを適用するさまざまな方法の詳細については、「[プロパティアニメーションの手法の概要](/dotnet/framework/wpf/graphics-multimedia/property-animation-techniques-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-109">For information about the different ways to apply animations, see the [Property Animation Techniques Overview](/dotnet/framework/wpf/graphics-multimedia/property-animation-techniques-overview).</span></span>  
  
-   <span data-ttu-id="5e1e6-110">**Medimライン**: <xref:System.Windows.Media.MediaTimeline> は、メディアファイルの再生を制御するタイムラインの一種です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-110">**MediaTimelines**: A <xref:System.Windows.Media.MediaTimeline> is a type of timeline that controls the playback of a media file.</span></span>  
  
-   <span data-ttu-id="5e1e6-111">**Paralleltimelines**: <xref:System.Windows.Media.Animation.ParallelTimeline> は、他のタイムラインをグループ化するタイムラインの一種です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-111">**ParallelTimelines**: A <xref:System.Windows.Media.Animation.ParallelTimeline> is a type of timeline that groups other timelines.</span></span>  
  
-   <span data-ttu-id="5e1e6-112">**ストーリーボード**: <xref:System.Windows.Media.Animation.Storyboard> は特殊な種類の <xref:System.Windows.Media.Animation.ParallelTimeline> であり、それに含まれるタイムラインのオブジェクトとプロパティのターゲット設定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-112">**Storyboards**: A <xref:System.Windows.Media.Animation.Storyboard> is a special type of <xref:System.Windows.Media.Animation.ParallelTimeline> that provides object and property targeting information for the timelines it contains.</span></span> <span data-ttu-id="5e1e6-113"><xref:System.Windows.Media.Animation.Storyboard> オブジェクトの詳細については、「[ストーリーボードの概要](/dotnet/framework/wpf/graphics-multimedia/storyboards-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-113">For more information about <xref:System.Windows.Media.Animation.Storyboard> objects, see the [Storyboards Overview](/dotnet/framework/wpf/graphics-multimedia/storyboards-overview).</span></span>  
  
 <span data-ttu-id="5e1e6-114">タイムラインの使用方法の詳細については、「[アニメーションの概要](/dotnet/framework/wpf/graphics-multimedia/animation-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-114">For more information about using timelines, see the [Animation Overview](/dotnet/framework/wpf/graphics-multimedia/animation-overview).</span></span> <span data-ttu-id="5e1e6-115">タイムラインのタイミング機能の概要については、「[タイミング動作の概要](/dotnet/framework/wpf/graphics-multimedia/timing-behaviors-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-115">For an introduction to the timing features of timelines, see the [Timing Behaviors Overview](/dotnet/framework/wpf/graphics-multimedia/timing-behaviors-overview).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="5e1e6-116">データバインディングとアニメーション化のタイムライン</span><span class="sxs-lookup"><span data-stu-id="5e1e6-116">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="5e1e6-117">ほとんどのタイムラインプロパティは、データのバインドまたはアニメーション化が可能です。ただし、タイミングシステムの動作により、データバインドまたはアニメーション化されたタイムラインは、他のデータバインドオブジェクトやアニメーションオブジェクトと同様に動作しません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-117">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="5e1e6-118">その動作を理解するために、タイムラインをアクティブ化する意味を理解することができます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-118">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="5e1e6-119">タイムラインが適用されると、タイムラインとその子タイムラインからコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-119">When a timeline is applied, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="5e1e6-120">これらのコピーは固定され (読み取り専用になり)、<xref:System.Windows.Media.Animation.Clock> オブジェクトがそれらから作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-120">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="5e1e6-121">これは、ターゲットプロパティをアニメーション化する実際の作業を行うクロックです。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-121">It's these clocks that do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="5e1e6-122">タイムラインがデータバインドまたはアニメーション化されている場合、そのクロックの作成時に現在の値のスナップショットが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-122">If a timeline was data bound or animated, a snapshot of its current values was made when its clock was created.</span></span> <span data-ttu-id="5e1e6-123">元のタイムラインは引き続き変更される可能性がありますが、クロックは変わりません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-123">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="5e1e6-124">タイムラインでデータバインディングまたはアニメーションの変更を反映するには、そのクロックを再生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-124">For a timeline to reflect data binding or animation changes, its clock must be regenerated.</span></span> <span data-ttu-id="5e1e6-125">クロックは、自動的には再生成されません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-125">Clocks are not regenerated for you automatically.</span></span> <span data-ttu-id="5e1e6-126">タイムラインの変更を適用するいくつかの方法を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-126">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="5e1e6-127">タイムラインがまたは <xref:System.Windows.Media.Animation.Storyboard>に属している場合は、<xref:System.Windows.Media.Animation.BeginStoryboard> または <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを使用してストーリーボードを再適用することで、変更を反映させることができます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-127">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="5e1e6-128">これには、アニメーションが再起動されるという副作用があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-128">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="5e1e6-129">コードでは、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A> メソッドを使用して、ストーリーボードを前の位置に進めることができます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-129">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="5e1e6-130"><xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> メソッドを使用してプロパティにアニメーションを直接適用した場合は、もう一度 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> メソッドを呼び出し、変更されたアニメーションを渡します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-130">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that's been modified.</span></span>  
  
-   <span data-ttu-id="5e1e6-131">クロック レベルで直接操作している場合は、新しいクロック セットを作成して適用し、それらを使って、生成されたクロックの以前のセットを置換します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-131">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of generated clocks.</span></span>  
  
 <span data-ttu-id="5e1e6-132">データバインドされたアニメーションの例については、「[キースプラインアニメーションのサンプル](https://go.microsoft.com/fwlink/?LinkID=160011)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-132">For an example of a data bound animation, see the [Key Spline Animation Sample](https://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="5e1e6-133">タイムラインをタイマーとして使用する</span><span class="sxs-lookup"><span data-stu-id="5e1e6-133">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="5e1e6-134">タイムラインのクロックは、関連付けられているイベントハンドラーがある場合、または (<xref:System.Windows.Media.Animation.AnimationClock> オブジェクトの場合) プロパティに関連付けられている場合にのみ実行されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-134">A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="5e1e6-135">そのため、<xref:System.Windows.Media.Animation.Timeline> をタイマーとして使用することはお勧めしません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-135">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159970"><span data-ttu-id="5e1e6-136">アニメーションのタイミング動作のサンプル</span><span class="sxs-lookup"><span data-stu-id="5e1e6-136">Animation Timing Behavior Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e1e6-137"><see cref="T:System.Windows.Media.Animation.Timeline" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-137">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e1e6-138"><see cref="T:System.Windows.Media.Animation.Timeline" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-138">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (TimeSpan? beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime"><span data-ttu-id="5e1e6-139">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-139">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span></span> <span data-ttu-id="5e1e6-140">詳細については、 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-140">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span></span></param>
        <summary><span data-ttu-id="5e1e6-141">指定された <see cref="T:System.Windows.Media.Animation.Timeline" /> を使用して <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-141">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (TimeSpan? beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan), duration As Duration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime"><span data-ttu-id="5e1e6-142">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-142">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span></span> <span data-ttu-id="5e1e6-143">詳細については、 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-143">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span></span></param>
        <param name="duration"><span data-ttu-id="5e1e6-144">繰り返しをカウントせずに、このタイムラインの再生に要する時間。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-144">The length of time for which this timeline plays, not counting repetitions.</span></span> <span data-ttu-id="5e1e6-145">詳細については、 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-145">See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</span></span></param>
        <summary><span data-ttu-id="5e1e6-146">指定された <see cref="T:System.Windows.Media.Animation.Timeline" /> と <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-146">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> and <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (TimeSpan? beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan), duration As Duration, repeatBehavior As RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime"><span data-ttu-id="5e1e6-147">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-147">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span></span> <span data-ttu-id="5e1e6-148">詳細については、 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-148">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span></span></param>
        <param name="duration"><span data-ttu-id="5e1e6-149">繰り返しをカウントせずに、このタイムラインの再生に要する時間。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-149">The length of time for which this timeline plays, not counting repetitions.</span></span> <span data-ttu-id="5e1e6-150">詳細については、 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-150">See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</span></span></param>
        <param name="repeatBehavior"><span data-ttu-id="5e1e6-151">このライムラインの繰り返し動作。回数を示す <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> または期間を示す <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" /> として指定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-151">The repeating behavior of this timeline, either as an iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> or a repeat <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />.</span></span> <span data-ttu-id="5e1e6-152">詳細については、 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> プロパティに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-152">See the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property for more information.</span></span></param>
        <summary><span data-ttu-id="5e1e6-153">指定した <see cref="T:System.Windows.Media.Animation.Timeline" />、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />、および <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-153">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, and <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatio">
      <MemberSignature Language="C#" Value="public double AccelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property AccelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AccelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AccelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-154">時間の経過を 0 から最大速度に加速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-154">Gets or sets a value specifying the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent accelerating the passage of time from zero to its maximum rate.</span></span></summary>
        <value><span data-ttu-id="5e1e6-155">時間の経過を 0 から最大速度に加速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する 0 から 1 の値。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-155">A value between 0 and 1, inclusive, that specifies the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent accelerating the passage of time from zero to its maximum rate.</span></span> <span data-ttu-id="5e1e6-156">タイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> プロパティも設定されている場合、 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計は 1 以下である必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-156">If the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> property is also set, the sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> must be less than or equal to 1.</span></span> <span data-ttu-id="5e1e6-157">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-157">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-158"><xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> プロパティを使用して、時間の経過に伴って開始されるアニメーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-158">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> property to create animations that start slowly and then speed up as time progresses.</span></span> <span data-ttu-id="5e1e6-159"><xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> プロパティは、簡単に効果を作成したり、移動したりする場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-159">The <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> property is useful for creating ease-in effects or making movement seem more natural.</span></span> <span data-ttu-id="5e1e6-160"><xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> と <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> のプロパティを一緒に使用して、時間のかかるアニメーションを作成し、処理を高速化して、完了する前にもう一度速度を低下させることができます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-160">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> and <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> properties together to create animations that start slowly, speed up, and then slow down again before finishing.</span></span>  
  
<a name="dependencyPropertyInfo_AccelerationRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e1e6-161">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="5e1e6-161">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e1e6-162">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5e1e6-162">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  
|<span data-ttu-id="5e1e6-163">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="5e1e6-163">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e1e6-164">なし</span><span class="sxs-lookup"><span data-stu-id="5e1e6-164">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e1e6-165"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> が 0 より小さいか、または 1 を超えています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-165"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> is less than 0 or greater than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5e1e6-166"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計が 1 を超えています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-166">The sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> exceeds 1.</span></span></exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AccelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AccelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-167"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-167">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.AllocateClock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function AllocateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Animation::Clock ^ AllocateClock();" />
      <MemberSignature Language="F#" Value="abstract member AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock&#xA;override this.AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.AllocateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e1e6-168">この <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-168">Creates a <see cref="T:System.Windows.Media.Animation.Clock" /> for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-169">この <see cref="T:System.Windows.Media.Animation.Timeline" /> のクロック。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-169">A clock for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-170">このメソッドは <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> メソッドによって呼び出されるため、コードから直接呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-170">This method is called by the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method and should not be called directly by your code.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e1e6-171"><see cref="T:System.Windows.Media.Animation.Timeline" /> の実装は、クラスで使用する必要がある対応するカスタムクロックがある場合に、このメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-171">Implementers of <see cref="T:System.Windows.Media.Animation.Timeline" /> should override this method when it has a corresponding custom clock that should be used with the class.</span></span> <span data-ttu-id="5e1e6-172">オーバーライドされたメソッドは、<see cref="T:System.Windows.Media.Animation.Clock" />から継承するクラスの新しいインスタンスを作成して返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-172">The overridden method should create and return a new instance of class that inherits from <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AutoReverse">
      <MemberSignature Language="C#" Value="public bool AutoReverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReverse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReverse : bool with get, set" Usage="System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-173">順方向の反復の完了後に、タイムラインを逆方向に再生するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-173">Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.</span></span></summary>
        <value><span data-ttu-id="5e1e6-174">各反復の終了時点で、タイムラインを逆方向に再生する場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-174"><see langword="true" /> if the timeline plays in reverse at the end of each iteration; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e1e6-175">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-175">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-176"><xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> プロパティが `true`に設定されている場合、タイムラインは <xref:System.Windows.Media.Animation.Timeline.Duration%2A> プロパティによって指定された時間の長さの2倍になります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-176">If the <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true`, the timeline plays for twice the length of time specified by its <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property.</span></span>  
  
### <a name="autoreverse-and-repetitions"></a><span data-ttu-id="5e1e6-177">オート定型文と繰り返し</span><span class="sxs-lookup"><span data-stu-id="5e1e6-177">AutoReverse and Repetitions</span></span>  
 <span data-ttu-id="5e1e6-178">タイムラインの <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> プロパティが `true` に設定されていて、その <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> プロパティによって反復処理が行われる場合、各前方反復には後続のイテレーションが続きます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-178">When a timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true` and its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> property causes it to repeat, each forward iteration is followed by a backward iteration.</span></span> <span data-ttu-id="5e1e6-179">これにより、1回の繰り返しが行われます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-179">This makes one repetition.</span></span> <span data-ttu-id="5e1e6-180">たとえば、イテレーション <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> が2の `true` の <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 値を持つタイムラインは、一度だけ再生された後、後方に戻ってから、再度転送されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-180">For example, a timeline with an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> value of `true` with an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> of 2 would play forward once, then backwards, then forwards again, and then backwards again.</span></span>  
  
<a name="dependencyPropertyInfo_AutoReverse"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e1e6-181">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="5e1e6-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e1e6-182">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5e1e6-182">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  
|<span data-ttu-id="5e1e6-183">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="5e1e6-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e1e6-184">なし</span><span class="sxs-lookup"><span data-stu-id="5e1e6-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="AutoReverseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoReverseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoReverseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoReverseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoReverseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoReverseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-185"><see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-185">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTime">
      <MemberSignature Language="C#" Value="public TimeSpan? BeginTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BeginTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; BeginTime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BeginTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-186">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-186">Gets or sets the time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span></span></summary>
        <value><span data-ttu-id="5e1e6-187">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間 (親の <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />に対する相対的な時間)。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-187">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin, relative to its parent's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</span></span> <span data-ttu-id="5e1e6-188">このタイムラインがルート タイムラインの場合は、対話による開始時間 (タイムラインがトリガーされた時間) に対する相対的な時間になります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-188">If this timeline is a root timeline, the time is relative to its interactive begin time (the moment at which the timeline was triggered).</span></span> <span data-ttu-id="5e1e6-189">この値には、正の値、負の値、または <see langword="null" />を指定できます。値が <see langword="null" /> の場合、そのタイムラインは再生されません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-189">This value may be positive, negative, or <see langword="null" />; a <see langword="null" /> value means the timeline never plays.</span></span> <span data-ttu-id="5e1e6-190">既定値はゼロです。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-190">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-191"><xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティは、シーケンス内で再生されるタイムラインを作成する場合に便利です。同じ親を共有する連続するタイムラインの <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> を増やすことで、再生時間をずらすことができます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-191">The <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property is useful for creating timelines that play in a sequence: by increasing the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of successive timelines that share the same parent, you can stagger their play times.</span></span>  
  
## <a name="negative-values"></a><span data-ttu-id="5e1e6-192">負の値</span><span class="sxs-lookup"><span data-stu-id="5e1e6-192">Negative Values</span></span>  
 <span data-ttu-id="5e1e6-193">負の <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 値を指定すると、<xref:System.Windows.Media.Animation.Timeline> は過去のある時点で開始されたかのように動作します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-193">A negative <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> value causes a <xref:System.Windows.Media.Animation.Timeline> to behave as though it started at some time in the past.</span></span> <span data-ttu-id="5e1e6-194">たとえば、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> が負の2.5 秒で、<xref:System.Windows.Media.Animation.Timeline.Duration%2A> が5秒の <xref:System.Windows.Media.Animation.Timeline> は、開始時に半方向に完了しているように見えます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-194">For example, a <xref:System.Windows.Media.Animation.Timeline> with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of negative 2.5 seconds and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds will appear to be half-way finished when it starts.</span></span>  
  
## <a name="begintime-and-speedratio"></a><span data-ttu-id="5e1e6-195">BeginTime と System.windows.media.animation.timeline.speedratio</span><span class="sxs-lookup"><span data-stu-id="5e1e6-195">BeginTime and SpeedRatio</span></span>  
 <span data-ttu-id="5e1e6-196"><xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティによって示される時間は、タイムラインの parent's で測定されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-196">The time described by the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property is measured in the timeline's parent's time.</span></span> <span data-ttu-id="5e1e6-197">たとえば、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> が5のタイムラインは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が2である場合、実際には2.5 秒後に開始されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-197">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of 5 whose parent has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2 actually starts after 2.5 seconds.</span></span>  
  
 <span data-ttu-id="5e1e6-198">タイムラインの独自の <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 設定は、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>には影響しません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-198">A timeline's own <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not affect its <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.</span></span> <span data-ttu-id="5e1e6-199">たとえば、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> が5秒、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が2で、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1の親タイムラインが2.5 ではなく5秒後に始まります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-199">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of 5 seconds, a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2, and a parent timeline with a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 starts after 5 seconds, not 2.5.</span></span>  
  
<a name="dependencyPropertyInfo_BeginTime"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e1e6-200">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="5e1e6-200">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e1e6-201">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5e1e6-201">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  
|<span data-ttu-id="5e1e6-202">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="5e1e6-202">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e1e6-203">なし</span><span class="sxs-lookup"><span data-stu-id="5e1e6-203">None</span></span>|  
  
<a name="xamlAttributeUsage_BeginTime"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5e1e6-204">XAML 属性の使用</span><span class="sxs-lookup"><span data-stu-id="5e1e6-204">XAML Attribute Usage</span></span>  
 <span data-ttu-id="5e1e6-205">\<*オブジェクト*<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "[-] [*days*.]*時間*:*分*:*秒*[。*fractionalSeconds*] "/></span><span class="sxs-lookup"><span data-stu-id="5e1e6-205">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-][*days*.]*hours*:*minutes*:*seconds*[.*fractionalSeconds*]"/></span></span>  
  
<span data-ttu-id="5e1e6-206">または</span><span class="sxs-lookup"><span data-stu-id="5e1e6-206">-or-</span></span>
  
 <span data-ttu-id="5e1e6-207">\<*オブジェクト*<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "[-] [*days*.]*時間*:*分*"/></span><span class="sxs-lookup"><span data-stu-id="5e1e6-207">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-][*days*.]*hours*:*minutes*"/></span></span>  
  
<span data-ttu-id="5e1e6-208">または</span><span class="sxs-lookup"><span data-stu-id="5e1e6-208">-or-</span></span>
  
 <span data-ttu-id="5e1e6-209">\<*オブジェクト*<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "[-]*days*"/></span><span class="sxs-lookup"><span data-stu-id="5e1e6-209">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-]*days*"/></span></span>  
  
<span data-ttu-id="5e1e6-210">または</span><span class="sxs-lookup"><span data-stu-id="5e1e6-210">-or-</span></span>
  
 <span data-ttu-id="5e1e6-211">\<*オブジェクト*<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "{[x:Null Markup Extension](/dotnet/framework/xaml-services/x-null-markup-extension)}"/></span><span class="sxs-lookup"><span data-stu-id="5e1e6-211">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="{[x:Null Markup Extension](/dotnet/framework/xaml-services/x-null-markup-extension)}"/></span></span>  
  
<a name="xamlValues_BeginTime"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5e1e6-212">XAML の値</span><span class="sxs-lookup"><span data-stu-id="5e1e6-212">XAML Values</span></span>  
 <span data-ttu-id="5e1e6-213">角かっこ内の項目 (`[` および `]`) は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-213">Items in square brackets (`[` and `]`) are optional.</span></span>  
  
 <span data-ttu-id="5e1e6-214">*days*</span><span class="sxs-lookup"><span data-stu-id="5e1e6-214">*days*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="5e1e6-215">この開始時刻にまたがる日数を示す0以上の値です (0 以上)。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-215">A value greater than or equal to 0 that describes the number of days spanned by this begin time.</span></span>  
  
 <span data-ttu-id="5e1e6-216">*hours*</span><span class="sxs-lookup"><span data-stu-id="5e1e6-216">*hours*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="5e1e6-217">この開始時刻にまたがる時間数を表す 0 ~ 23 の値。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-217">A value between 0 and 23 that represents the number of hours spanned by this begin time.</span></span>  
  
 <span data-ttu-id="5e1e6-218">*分*</span><span class="sxs-lookup"><span data-stu-id="5e1e6-218">*minutes*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="5e1e6-219">この開始時間の間隔を分単位で表した 0 ~ 59 の値。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-219">A value between 0 and 59 that represents the number of minutes spanned by this begin time.</span></span>  
  
 <span data-ttu-id="5e1e6-220">*seconds*</span><span class="sxs-lookup"><span data-stu-id="5e1e6-220">*seconds*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="5e1e6-221">この開始時刻にまたがる秒数を表す 0 ~ 59 の値。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-221">A value between 0 and 59 that represents the number of seconds spanned by this begin time.</span></span>  
  
 <span data-ttu-id="5e1e6-222">*fractionalSeconds*</span><span class="sxs-lookup"><span data-stu-id="5e1e6-222">*fractionalSeconds*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="5e1e6-223">秒の小数部を表す 1 ~ 7 桁の数字で構成される値。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-223">A value consisting of 1 to 7 digits that represents fractional seconds.</span></span>  
  
 <span data-ttu-id="5e1e6-224"><xref:System.TimeSpan> の完全な構文については、<xref:System.TimeSpan.Parse%2A> ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-224">For the complete <xref:System.TimeSpan> syntax, see the Remarks section of the <xref:System.TimeSpan.Parse%2A> page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e1e6-225">タイムラインの <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティによって、タイムラインのアクティブな期間の開始が決まります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-225">A timeline's <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines the beginning of a timeline's active period.</span></span> <span data-ttu-id="5e1e6-226">タイムラインに親タイムラインがある場合、その親が開始された後にタイムラインが開始されるまでの時間は、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-226">If the timeline has a parent timeline, the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines how long it takes the timeline to start after its parent starts.</span></span> <span data-ttu-id="5e1e6-227">タイムラインがルートタイムライン (たとえば <xref:System.Windows.Media.Animation.Storyboard>) の場合、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティは、タイムラインがトリガーされた後に再生を開始する時間を決定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-227">If the timeline is a root timeline (a <xref:System.Windows.Media.Animation.Storyboard>, for example), the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines how long the timeline takes to start playing after it is triggered.</span></span>  
  
 <span data-ttu-id="5e1e6-228">次の例では、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 設定が異なる複数のタイムラインを示します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-228">The following example shows several different timelines with different <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> settings.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="BeginTimeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BeginTimeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BeginTimeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeginTimeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BeginTimeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeginTimeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-229"><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-229">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e1e6-230">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-230">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Timeline" />, making deep copies of this object's values.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-231">現在のオブジェクトの変更可能な複製。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-231">A modifiable clone of the current object.</span></span> <span data-ttu-id="5e1e6-232">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-232">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-233">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-233">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="5e1e6-234">便宜上、このメソッドは、厳密に型指定された実装を使用して、継承されたバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-234">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="5e1e6-235">詳細については、<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-235">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5e1e6-236">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-236">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e1e6-237">この <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-237">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Timeline" /> object, making deep copies of this object's current values.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-238">現在のオブジェクトの変更可能な複製。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-238">A modifiable clone of the current object.</span></span> <span data-ttu-id="5e1e6-239">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="false" /> の場合でも、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-239">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-240">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-240">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="5e1e6-241">便宜上、このメソッドは、厳密に型指定された実装を使用して、継承されたバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-241">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="5e1e6-242">詳細については、<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-242">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5e1e6-243">リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-243">Resource references, data bindings, and animations are not copied, but their current values are.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-244">このタイムラインの再生が完全に終了したときに発生します。このタイムラインは、もうアクティブ期間に入りません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-244">Occurs when this timeline has completely finished playing: it will no longer enter its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-245">このタイムラインがタイムラインツリーのルートタイムラインの場合は、アクティブな期間の最後 (繰り返しを含む) に到達し、すべての子がアクティブな期間の終わりに達した後に再生が完了しています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-245">If this timeline is the root timeline of a timeline tree, it has completed playing after it reaches the end of its active period (which includes repeats) and all its children have reached the end of their active periods.</span></span> <span data-ttu-id="5e1e6-246">このタイムラインが子タイムラインの場合は、所属するタイムラインツリーのルートタイムラインがアクティブな期間の終わりに達し、すべての子タイムラインが再生を終了したときに、完全に再生が完了したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-246">If this timeline is a child timeline, it is considered to have completely finished playing when the root timeline of the timeline tree to which it belongs reaches the end of its active period and all its child timelines have finished playing.</span></span>  
  
 <span data-ttu-id="5e1e6-247">タイムラインを停止しても完了イベントはトリガーされませんが、塗りつぶし期間にスキップされます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-247">Stopping a timeline does not trigger its completed event, but skipping it to its fill period does.</span></span>  
  
 <span data-ttu-id="5e1e6-248"><xref:System.EventHandler> イベントハンドラーの <xref:System.Object> パラメーターは、タイムラインの <xref:System.Windows.Media.Animation.Clock>です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-248">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="5e1e6-249">このイベントハンドラーはタイムラインに関連付けられているように見えますが、実際には、このタイムライン用に作成された <xref:System.Windows.Media.Animation.Clock> に登録されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-249">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="5e1e6-250">詳細については、「[タイミングイベントの概要](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-250">For more information, see the [Timing Events Overview](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e1e6-251">次の例では、2つの <xref:System.Windows.Media.Animation.Storyboard> オブジェクトを使用して、<xref:System.Windows.Media.ImageSource> オブジェクトを使用して格納され、<xref:System.Windows.Controls.Image> コントロールを使用して表示される2つのイメージ間のアニメーション遷移を作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-251">In the following example, two <xref:System.Windows.Media.Animation.Storyboard> objects are used to create an animation transition between two images, stored using <xref:System.Windows.Media.ImageSource> objects and displayed using an <xref:System.Windows.Controls.Image> control.</span></span> <span data-ttu-id="5e1e6-252">1つのストーリーボードでは、イメージコントロールが消えるまで縮小されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-252">One storyboard shrinks the image control until it disappears.</span></span> <span data-ttu-id="5e1e6-253">完了した後、古い <xref:System.Windows.Media.ImageSource> は他の <xref:System.Windows.Media.ImageSource>とスワップされ、2つ目のストーリーボードがイメージコントロールを拡大するようになります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-253">After it completes, the old <xref:System.Windows.Media.ImageSource> is swapped with the other <xref:System.Windows.Media.ImageSource>, and a second storyboard that expands the image control until it is full-sized again.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e1e6-254">この <see cref="T:System.Windows.Media.Animation.Clock" /> から <see cref="T:System.Windows.Media.Animation.Timeline" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-254">Creates a <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock();" />
      <MemberSignature Language="F#" Value="member this.CreateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e1e6-255">この <see cref="T:System.Windows.Media.Animation.Clock" /> から新しい制御可能な <see cref="T:System.Windows.Media.Animation.Timeline" />を作成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-255">Creates a new, controllable <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="5e1e6-256">この <see cref="T:System.Windows.Media.Animation.Timeline" /> に子がある場合は、この <see cref="T:System.Windows.Media.Animation.Timeline" /> をルートにしてクロックのツリーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-256">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> has children, a tree of clocks is created with this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-257">この <see cref="T:System.Windows.Media.Animation.Clock" /> から構築された、制御可能な新しい <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-257">A new, controllable <see cref="T:System.Windows.Media.Animation.Clock" /> constructed from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="5e1e6-258">この <see cref="T:System.Windows.Media.Animation.Timeline" /> が子タイムラインを含む <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> である場合、この <see cref="T:System.Windows.Media.Animation.Clock" /> から作成された制御可能な <see cref="T:System.Windows.Media.Animation.Clock" /> をルートにして <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトのツリーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-258">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> is a <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> that contains child timelines, a tree of <see cref="T:System.Windows.Media.Animation.Clock" /> objects is created with a controllable <see cref="T:System.Windows.Media.Animation.Clock" /> created from this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-259">この <xref:System.Windows.Media.Animation.Timeline> は1つ以上の <xref:System.Windows.Media.Animation.TimelineGroup> オブジェクトの子である場合がありますが、この情報は無視されます。このメソッドは、現在の <xref:System.Windows.Media.Animation.Timeline> をルート <xref:System.Windows.Media.Animation.Timeline>として扱います。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-259">Although this <xref:System.Windows.Media.Animation.Timeline> may be the child of one or more <xref:System.Windows.Media.Animation.TimelineGroup> objects, this information is ignored: this method treats the current <xref:System.Windows.Media.Animation.Timeline> as a root <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock(bool hasControllableRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock (hasControllableRoot As Boolean) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock(bool hasControllableRoot);" />
      <MemberSignature Language="F#" Value="member this.CreateClock : bool -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock hasControllableRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasControllableRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasControllableRoot"><span data-ttu-id="5e1e6-260">返されるルート <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.ClockController" /> プロパティから <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> を返して <see cref="T:System.Windows.Media.Animation.Clock" /> ツリーを対話的に制御できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-260"><see langword="true" /> if the root <see cref="T:System.Windows.Media.Animation.Clock" /> returned should return a <see cref="T:System.Windows.Media.Animation.ClockController" /> from its <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> property so that the <see cref="T:System.Windows.Media.Animation.Clock" /> tree can be interactively controlled; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5e1e6-261">この <see cref="T:System.Windows.Media.Animation.Clock" /> から新しい <see cref="T:System.Windows.Media.Animation.Timeline" /> を作成し、その新しい <see cref="T:System.Windows.Media.Animation.Clock" /> が制御可能かどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-261">Creates a new <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" /> and specifies whether the new <see cref="T:System.Windows.Media.Animation.Clock" /> is controllable.</span></span> <span data-ttu-id="5e1e6-262">この <see cref="T:System.Windows.Media.Animation.Timeline" /> に子がある場合は、この <see cref="T:System.Windows.Media.Animation.Timeline" /> をルートにしてクロックのツリーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-262">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> has children, a tree of clocks is created with this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-263">この <see cref="T:System.Windows.Media.Animation.Clock" /> から作成された新しい <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-263">A new <see cref="T:System.Windows.Media.Animation.Clock" /> constructed from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="5e1e6-264">この <see cref="T:System.Windows.Media.Animation.Timeline" /> が子タイムラインを含む <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> である場合、この <see cref="T:System.Windows.Media.Animation.Clock" /> から作成された制御可能な <see cref="T:System.Windows.Media.Animation.Clock" /> をルートにして <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトのツリーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-264">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> is a <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> that contains child timelines, a tree of <see cref="T:System.Windows.Media.Animation.Clock" /> objects is created with a controllable <see cref="T:System.Windows.Media.Animation.Clock" /> created from this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-265">この <xref:System.Windows.Media.Animation.Timeline> は1つ以上の <xref:System.Windows.Media.Animation.TimelineGroup> オブジェクトの子である場合がありますが、この情報は無視されます。このメソッドは、現在の <xref:System.Windows.Media.Animation.Timeline> をルート <xref:System.Windows.Media.Animation.Timeline>として扱います。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-265">Although this <xref:System.Windows.Media.Animation.Timeline> may be the child of one or more <xref:System.Windows.Media.Animation.TimelineGroup> objects, this information is ignored: this method treats the current <xref:System.Windows.Media.Animation.Timeline> as a root <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeedInvalidated : EventHandler " Usage="member this.CurrentGlobalSpeedInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-266">タイムラインのクロックの時間の進行の速度が変化すると発生します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-266">Occurs when the rate at which time progresses for the timeline's clock changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-267">次の状況では、タイムラインのクロックの現在のグローバル速度が変化します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-267">The current global speed of a timeline's clock changes in the following circumstances:</span></span>  
  
-   <span data-ttu-id="5e1e6-268">時計は、そのタイムラインの <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 設定のために方向を変更します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-268">The clock changes direction because of its timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting.</span></span>  
  
-   <span data-ttu-id="5e1e6-269">タイムラインの <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> または <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> プロパティの設定が原因で、クロックが加速または減速します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-269">The clock accelerates or decelerates because of its timeline's <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> or <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property settings.</span></span>  
  
-   <span data-ttu-id="5e1e6-270">クロックが一時停止または再開されています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-270">The clock is paused or resumed.</span></span>  
  
-   <span data-ttu-id="5e1e6-271">クロックが非アクティブになるか、または再アクティブ化されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-271">The clock becomes inactive or reactivates.</span></span>  
  
-   <span data-ttu-id="5e1e6-272">クロックの親が変更された <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-272">The <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> of one of the clock's parent changes.</span></span>  
  
 <span data-ttu-id="5e1e6-273"><xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントは、タイムラインのクロックが一時停止状態になったときに追跡する場合に役立ちます。イベントハンドラーで、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A> メソッドを使用するか、クロックの <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> プロパティをチェックして、クロックが一時停止されているかどうかを確認します。これを以前にキャッシュした値と比較して、変更されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-273">The <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event is useful for tracking when a timeline's clock becomes paused; in your event handler, use your storyboard's <xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A> method or check the clock's <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property to determine whether its clock is paused; compare this against a previously cached value to determine whether it changed.</span></span>  
  
 <span data-ttu-id="5e1e6-274"><xref:System.EventHandler> イベントハンドラーの <xref:System.Object> パラメーターは、タイムラインの <xref:System.Windows.Media.Animation.Clock>です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-274">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="5e1e6-275">このイベントハンドラーはタイムラインに関連付けられているように見えますが、実際には、このタイムライン用に作成された <xref:System.Windows.Media.Animation.Clock> に登録されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-275">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="5e1e6-276">詳細については、「[タイミングイベントの概要](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-276">For more information, see the [Timing Events Overview](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e1e6-277">次の例は、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントに登録する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-277">The following example shows how to register for the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateInvalidated : EventHandler " Usage="member this.CurrentStateInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-278">タイムラインの <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> プロパティが更新されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-278">Occurs when the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property of the timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> is updated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-279">タイムラインの <xref:System.Windows.Media.Animation.Clock> の開始、停止、または塗りつぶしが行われたときに通知を受け取る場合は、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-279">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified  when a timeline's <xref:System.Windows.Media.Animation.Clock> starts, stops, or fills.</span></span>  
  
 <span data-ttu-id="5e1e6-280"><xref:System.Windows.Media.Animation.Clock> を一時停止しても、<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-280">Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span></span> <span data-ttu-id="5e1e6-281">クロックが一時停止状態になったときに通知を受け取るには、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-281">To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 <span data-ttu-id="5e1e6-282">このイベントは <xref:System.Windows.Media.Animation.ClockState> が無効になったときに発生しますが、<xref:System.Windows.Media.Animation.ClockState> 変更されたことを意味するわけではありません。 <xref:System.Windows.Media.Animation.ClockState.Active> から <xref:System.Windows.Media.Animation.ClockState.Filling> に切り替え、同じティックで <xref:System.Windows.Media.Animation.ClockState.Active> に戻る <xref:System.Windows.Media.Animation.Clock> は、このイベントが発生しますが、その <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> プロパティは実際には変更されません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-282">Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState.Active> to <xref:System.Windows.Media.Animation.ClockState.Filling> and then back to <xref:System.Windows.Media.Animation.ClockState.Active> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.</span></span>  
  
 <span data-ttu-id="5e1e6-283"><xref:System.EventHandler> イベントハンドラーの <xref:System.Object> パラメーターは、このタイムラインに対して作成された <xref:System.Windows.Media.Animation.Clock> です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-283">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the  <xref:System.Windows.Media.Animation.Clock> that was created for this timeline.</span></span>  
  
 <span data-ttu-id="5e1e6-284">このイベントハンドラーはタイムラインに関連付けられているように見えますが、実際には、このタイムライン用に作成された <xref:System.Windows.Media.Animation.Clock> に登録されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-284">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="5e1e6-285">詳細については、「[タイミングイベントの概要](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-285">For more information, see the [Timing Events Overview](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeInvalidated : EventHandler " Usage="member this.CurrentTimeInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-286">タイムラインの <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> プロパティが更新されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-286">Occurs when the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> property of the timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> is updated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-287">タイムラインの <xref:System.Windows.Media.Animation.Clock> の <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> が更新されたときに通知されるようにするには、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-287">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified when the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> of a timeline's <xref:System.Windows.Media.Animation.Clock> is updated.</span></span>  
  
 <span data-ttu-id="5e1e6-288"><xref:System.EventHandler> イベントハンドラーの <xref:System.Object> パラメーターは、タイムラインの <xref:System.Windows.Media.Animation.Clock>です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-288">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="5e1e6-289">このイベントハンドラーはタイムラインに関連付けられているように見えますが、実際には、このタイムライン用に作成された <xref:System.Windows.Media.Animation.Clock> に登録されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-289">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="5e1e6-290">詳細については、「[タイミングイベントの概要](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-290">For more information, see the [Timing Events Overview](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e1e6-291">次の例は、<xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated> イベントに登録する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-291">The following example shows how to register for the <xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated> event.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatio">
      <MemberSignature Language="C#" Value="public double DecelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DecelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property DecelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DecelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.DecelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-292">時間の経過を最大速度から 0 に減速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-292">Gets or sets a value specifying the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent decelerating the passage of time from its maximum rate to zero.</span></span></summary>
        <value><span data-ttu-id="5e1e6-293">時間の経過を最大速度から 0 に減速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する 0 ～ 1 (両端を含む) の値。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-293">A value between 0 and 1, inclusive, that specifies the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent decelerating the passage of time from its maximum rate to zero.</span></span> <span data-ttu-id="5e1e6-294">タイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> プロパティも設定されている場合、 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> の合計は 1 以下である必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-294">If the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> property is also set, the sum of <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> must be less than or equal to 1.</span></span> <span data-ttu-id="5e1e6-295">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-295">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-296">停止する前に遅くなるアニメーションを作成するには、<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-296">Use the <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property to create animations that slow down before stopping.</span></span> <span data-ttu-id="5e1e6-297"><xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> プロパティは、簡単に効果を作成したり、移動したりする場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-297">The <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property is useful for creating ease-in effects or making movement seem more natural.</span></span> <span data-ttu-id="5e1e6-298"><xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> と <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> のプロパティを一緒に使用して、時間のかかるアニメーションを作成し、処理を高速化して、完了する前にもう一度速度を低下させることができます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-298">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> and <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> properties together to create animations that start slowly, speed up, and then slow down again before finishing.</span></span>  
  
<a name="dependencyPropertyInfo_DecelerationRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e1e6-299">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="5e1e6-299">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e1e6-300">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5e1e6-300">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  
|<span data-ttu-id="5e1e6-301">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="5e1e6-301">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e1e6-302">なし</span><span class="sxs-lookup"><span data-stu-id="5e1e6-302">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e1e6-303"><see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> が 0 より小さいか、または 1 を超えています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-303"><see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> is less than 0 or greater than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5e1e6-304"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計が 1 を超えています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-304">The sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> exceeds 1.</span></span></exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DecelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DecelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DecelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-305"><see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-305">Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRate">
      <MemberSignature Language="C#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="ILAsm" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      <MemberSignature Language="VB.NET" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="F#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" Usage="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e1e6-306">このタイムラインとその子タイムラインの目的のフレーム レートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-306">Gets or sets the desired frame rate for this timeline and its child timelines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="5e1e6-307">このプロパティを使用して、アニメーションを実行する特定のフレームレートを定義します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-307">Use this property to define a specific frame rate at which animations should run.</span></span><span data-ttu-id="5e1e6-308">これはガイドラインであり、保証された値ではありません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-308">  This is a guideline only, and is not a guaranteed value.</span></span> <span data-ttu-id="5e1e6-309">このプロパティには、主に次の2つの用途があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-309">This property has two primary uses:</span></span>

- <span data-ttu-id="5e1e6-310">処理リソースの量を制限します。これは、高度な忠実度を必要としない、低速で動き、背景の種類のアニメーションに使用します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-310">Limiting the amount of processing resources for slow-moving, background type animations that do not require a high degree of fidelity.</span></span> <span data-ttu-id="5e1e6-311">これを実現するには、タイムラインでフレームレートを小さい値を設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-311">This can be achieved by setting a small frame rate value on the timeline.</span></span>

- <span data-ttu-id="5e1e6-312">高速移動する水平アニメーションに対する分裂の視覚的な影響を軽減します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-312">Reducing the visual impact of tearing on fast-moving horizontal animations.</span></span> <span data-ttu-id="5e1e6-313">これを実現するには、タイムラインでフレームレートの値を高く設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-313">This can be achieved by setting a high frame rate value on the timeline.</span></span>

<span data-ttu-id="5e1e6-314">このプロパティは、ルートタイムラインでのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-314">This property may only be set on a root timeline.</span></span>

## Examples  
<span data-ttu-id="5e1e6-315">次の例では、DesiredFrameRate プロパティを使用して、複数のアニメーションを1秒あたり10フレームに制限しています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-315">The following example uses the DesiredFrameRate property to limit several animations to 10 frames per second.</span></span>

[!code-xaml[timingbehaviors_snip#GraphicsMMDesiredFrameRateExample](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/DesiredFrameRateExample.xaml#GraphicsMMDesiredFrameRateExample)]

]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/wpf/graphics-multimedia/animation-overview"><span data-ttu-id="5e1e6-316">アニメーションの概要</span><span class="sxs-lookup"><span data-stu-id="5e1e6-316">Animation Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DesiredFrameRateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesiredFrameRateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DesiredFrameRateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesiredFrameRateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-317"><see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> アタッチされるプロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-317">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration Duration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration Duration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : System.Windows.Duration with get, set" Usage="System.Windows.Media.Animation.Timeline.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-318">繰り返しをカウントせずに、このタイムラインの再生に要する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-318">Gets or sets the length of time for which this timeline plays, not counting repetitions.</span></span></summary>
        <value><span data-ttu-id="5e1e6-319">タイムラインの単純継続時間 (このタイムラインが順方向の反復を 1 回完了するのに要する時間)。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-319">The timeline's simple duration: the amount of time this timeline takes to complete a single forward iteration.</span></span> <span data-ttu-id="5e1e6-320">既定値は <see cref="P:System.Windows.Duration.Automatic" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-320">The default value is <see cref="P:System.Windows.Duration.Automatic" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-321">タイムラインの単純な期間は、1回の前方反復と、繰り返しを含む再生時間の合計の時間を構成します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-321">A timeline's simple duration constitutes the time for a single forward iteration versus the total play time, which includes repetitions.</span></span>  
  
## <a name="default-duration-behavior"></a><span data-ttu-id="5e1e6-322">既定の期間の動作</span><span class="sxs-lookup"><span data-stu-id="5e1e6-322">Default Duration Behavior</span></span>  
 <span data-ttu-id="5e1e6-323"><xref:System.Windows.Duration.Automatic%2A> の値を持つ <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 構造体の動作は、タイムラインの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-323">The behavior of a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> structure with a value of <xref:System.Windows.Duration.Automatic%2A> depends on the type of timeline:</span></span>  
  
|<span data-ttu-id="5e1e6-324">**時系列**</span><span class="sxs-lookup"><span data-stu-id="5e1e6-324">**Timeline**</span></span>|<span data-ttu-id="5e1e6-325">**動作**</span><span class="sxs-lookup"><span data-stu-id="5e1e6-325">**Behavior**</span></span>|  
|-|-|  
|<xref:System.Windows.Media.Animation.Timeline>|<span data-ttu-id="5e1e6-326">未確定 (<xref:System.Windows.Media.Animation.Timeline> は抽象)</span><span class="sxs-lookup"><span data-stu-id="5e1e6-326">Undetermined (<xref:System.Windows.Media.Animation.Timeline> is abstract)</span></span>|  
|<span data-ttu-id="5e1e6-327"><xref:System.Windows.Media.Animation.ParallelTimeline>,</span><span class="sxs-lookup"><span data-stu-id="5e1e6-327"><xref:System.Windows.Media.Animation.ParallelTimeline>,</span></span><br /><br /> <span data-ttu-id="5e1e6-328"><xref:System.Windows.Media.Animation.Storyboard>,</span><span class="sxs-lookup"><span data-stu-id="5e1e6-328"><xref:System.Windows.Media.Animation.Storyboard>,</span></span><br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|<span data-ttu-id="5e1e6-329">子タイムラインに合わせる</span><span class="sxs-lookup"><span data-stu-id="5e1e6-329">Expands to fit child timelines</span></span>|  
|<span data-ttu-id="5e1e6-330">\<*型*> アニメーション ("From/To/By" または "basic" アニメーションと呼ばれます)</span><span class="sxs-lookup"><span data-stu-id="5e1e6-330">\<*Type*>Animation (Known as a "From/To/By" or "basic" animations)</span></span>|<span data-ttu-id="5e1e6-331">1 秒</span><span class="sxs-lookup"><span data-stu-id="5e1e6-331">1 second</span></span>|  
|<span data-ttu-id="5e1e6-332">キーフレームのアニメーションとして知られている \<の*種類*> アニメーション</span><span class="sxs-lookup"><span data-stu-id="5e1e6-332">\<*Type*>AnimationUsingKeyFrames (Known as key frame animations)</span></span>|<span data-ttu-id="5e1e6-333">すべてのキーフレーム <xref:System.Windows.Media.Animation.KeyTime> 値の合計</span><span class="sxs-lookup"><span data-stu-id="5e1e6-333">Sum of all key frame <xref:System.Windows.Media.Animation.KeyTime> values</span></span>|  
  
<a name="dependencyPropertyInfo_Duration"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e1e6-334">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="5e1e6-334">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e1e6-335">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5e1e6-335">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  
|<span data-ttu-id="5e1e6-336">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="5e1e6-336">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e1e6-337">なし</span><span class="sxs-lookup"><span data-stu-id="5e1e6-337">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e1e6-338"><xref:System.Windows.Media.Animation.ParallelTimeline> と <xref:System.Windows.Media.Animation.Storyboard> は <xref:System.Windows.Media.Animation.TimelineGroup> オブジェクトの種類です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-338"><xref:System.Windows.Media.Animation.ParallelTimeline> and <xref:System.Windows.Media.Animation.Storyboard> are types of <xref:System.Windows.Media.Animation.TimelineGroup> objects.</span></span> <span data-ttu-id="5e1e6-339"><xref:System.Windows.Media.Animation.TimelineGroup> の期間は、その子タイムラインの期間によって決まります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-339">The duration of a <xref:System.Windows.Media.Animation.TimelineGroup> is determined by the duration of its child timelines.</span></span> <span data-ttu-id="5e1e6-340">たとえば、次の <xref:System.Windows.Media.Animation.Storyboard> は6秒間実行されます。これは、その最後の子タイムライン (<xref:System.Windows.Media.Animation.DoubleAnimation>) が終了したときです。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-340">For example, the <xref:System.Windows.Media.Animation.Storyboard> below will run for six seconds (duration of 6 seconds) because that is when its last child Timeline (<xref:System.Windows.Media.Animation.DoubleAnimation>) ends.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e1e6-341">注: 次の例では、コードが省略されています。これは、説明用の遂行のためだけに用意されています。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-341">Note: code has been omitted from the following examples, which are provided for illustrative purposed only.</span></span>  
  
 <span data-ttu-id="5e1e6-342">[xaml]</span><span class="sxs-lookup"><span data-stu-id="5e1e6-342">[xaml]</span></span>  
  
```  
...  
  <Storyboard>  
    <DoubleAnimation Duration="0:0:2" …/>  
    <DoubleAnimation Duration="0:0:4" BeginTime="0:0:2" …/>  
  </Storyboard>   
...  
```  
  
 <span data-ttu-id="5e1e6-343">\<の*種類*> アニメーションには、<xref:System.Windows.Media.Animation.DoubleAnimation>、<xref:System.Windows.Media.Animation.PointAnimation>、<xref:System.Windows.Media.Animation.ColorAnimation>などが含まれます。これらの種類のアニメーションに <xref:System.Windows.Media.Animation.Timeline.Duration%2A> が指定されていない場合は、1秒間実行されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-343">Examples of \<*Type*>Animations include <xref:System.Windows.Media.Animation.DoubleAnimation>, <xref:System.Windows.Media.Animation.PointAnimation>, <xref:System.Windows.Media.Animation.ColorAnimation>, etc. If no <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is specified for these types of animations, they will run for one second.</span></span>  
  
 <span data-ttu-id="5e1e6-344">[xaml]</span><span class="sxs-lookup"><span data-stu-id="5e1e6-344">[xaml]</span></span>  
  
```  
...  
  <!-- With no Duration specified, this animation will run for   
       one second -->  
  <DoubleAnimation .../>  
...  
```  
  
 <span data-ttu-id="5e1e6-345">キーフレームを > \<*型*の例には、<xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>、<xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>などが含まれます。これらの種類のアニメーションに対して <xref:System.Windows.Media.Animation.Timeline.Duration%2A> が指定されていない場合は、すべてのキーフレームが終了するまで実行されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-345">Examples of \<*Type*>AnimationUsingKeyFrames include <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, etc. If no <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is specified for these types of animations they will run until all key frames are finished.</span></span>  
  
 <span data-ttu-id="5e1e6-346">[xaml]</span><span class="sxs-lookup"><span data-stu-id="5e1e6-346">[xaml]</span></span>  
  
```  
...  
  <Storyboard>  
  
    <!-- This key frame animation will end at 4.5 seconds  
         Because that is when its last KeyFrame KeyTime ends. -->  
    <DoubleAnimationUsingKeyFrames ...>  
      <LinearDoubleKeyFrame ... KeyTime="0:0:3" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:3.5" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4.5" />  
    </DoubleAnimationUsingKeyFrames>  
  </Storyboard>   
...  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="DurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DurationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DurationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-347"><see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-347">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.FillBehavior FillBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property FillBehavior As FillBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::FillBehavior FillBehavior { System::Windows::Media::Animation::FillBehavior get(); void set(System::Windows::Media::Animation::FillBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillBehavior : System.Windows.Media.Animation.FillBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.FillBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-348">アクティブ期間の終わりに達した後の <see cref="T:System.Windows.Media.Animation.Timeline" /> の動作を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-348">Gets or sets a value that specifies how the <see cref="T:System.Windows.Media.Animation.Timeline" /> behaves after it reaches the end of its active period.</span></span></summary>
        <value><span data-ttu-id="5e1e6-349">アクティブ期間の終わりに達した後 (ただし親はアクティブ期間内または保留期間内にある) のタイムラインの動作を指定する値。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-349">A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period.</span></span> <span data-ttu-id="5e1e6-350">既定値は <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-350">The default value is <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-351">アクティブ期間の終わりに達した後にアニメーションの値を保持する場合は、アニメーション <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> プロパティを <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> に設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-351">Set an animations <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> when you want the animation to hold its value after it reaches the end of its active period.</span></span> <span data-ttu-id="5e1e6-352"><xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 設定が <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> であるアクティブ期間の終わりに達したアニメーションは、その塗りつぶし期間に含まれていると言います。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-352">An animation that has reached the end of its active period that has a <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting of <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> is said to be in its fill period.</span></span> <span data-ttu-id="5e1e6-353">アクティブな期間の終わりに達した後にアニメーションがその値を保持しないようにするには、その値を設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-353">When you don't want an animation to hold its value after it reaches the end of its active period, set its</span></span>  
  
 <span data-ttu-id="5e1e6-354">プロパティを <xref:System.Windows.Media.Animation.FillBehavior.Stop>に <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-354"><xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property to <xref:System.Windows.Media.Animation.FillBehavior.Stop>.</span></span>  
  
 <span data-ttu-id="5e1e6-355">塗りつぶし期間のアニメーションは引き続きターゲットプロパティの値をオーバーライドするので、他の方法でターゲットプロパティの値を設定しようとすると、効果がないように見えることがあります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-355">Because an animation in its fill period continues to override its target property's value, attempting to set the target property's value through other means might appear to have no effect.</span></span> <span data-ttu-id="5e1e6-356">アニメーション化した後にプロパティ値を設定する方法を示す例については、「[方法: ストーリーボードを使用してアニメーション化した後にプロパティを設定](/dotnet/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-356">For an example showing how to set a property value after it has been animated, see [How to: Set a Property After Animating It with a Storyboard](/dotnet/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard).</span></span>  
  
 <span data-ttu-id="5e1e6-357">子タイムラインは、親タイムラインが停止したときに再生と塗りつぶしを停止します。子タイムラインを塗りつぶす場合は、その親タイムラインに <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>の <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> があることを確認します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-357">A child timeline stops playing and filling when its parent timeline stops; if you want a child timeline to fill, make sure its parent timeline has a <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> of <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>.</span></span>  
  
<a name="dependencyPropertyInfo_FillBehavior"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e1e6-358">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="5e1e6-358">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e1e6-359">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5e1e6-359">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  
|<span data-ttu-id="5e1e6-360">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="5e1e6-360">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e1e6-361">なし</span><span class="sxs-lookup"><span data-stu-id="5e1e6-361">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FillBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FillBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FillBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-362"><see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-362">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="timeline.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="5e1e6-363">このインスタンスが固定可能かどうかを確認するには、<see langword="true" /> 。このインスタンスを固定するには <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-363"><see langword="true" /> to check if this instance can be frozen; <see langword="false" /> to freeze this instance.</span></span></param>
        <summary><span data-ttu-id="5e1e6-364">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を変更不可能な状態にするか、変更不可能な状態にできるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-364">Makes this <see cref="T:System.Windows.Media.Animation.Timeline" /> unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-365"><paramref name="isChecking" /> が true の場合、このインスタンスを読み取り専用にできるなら、このメソッドは <see langword="true" /> を返します。読み取り専用にできないなら <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-365">If <paramref name="isChecking" /> is true, this method returns <see langword="true" /> if this instance can be made read-only, or <see langword="false" /> if it cannot be made read-only.</span></span>  
  
<span data-ttu-id="5e1e6-366"><paramref name="isChecking" /> が false の場合、このインスタンスが現在読み取り専用であるなら、このメソッドは <see langword="true" /> を返します。このオブジェクトの固定された状態を変更し始めたことの副作用によって、これを読み取り専用にできない場合は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-366">If <paramref name="isChecking" /> is false, this method returns <see langword="true" /> if this instance is now read-only, or <see langword="false" /> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-367">このメソッドを直接呼び出さないでください (実装で base を呼び出す場合を除きます)。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-367">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="5e1e6-368">このメソッドは、<xref:System.Windows.Freezable.Freeze%2A>によって内部的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-368">This method is called internally by <xref:System.Windows.Freezable.Freeze%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e1e6-369">クラスに依存関係プロパティを使用して格納されていないデータが含まれている場合、
            <see cref="T:System.Windows.Media.Animation.Timeline" /> の実装者はこのメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-369">
            <see cref="T:System.Windows.Media.Animation.Timeline" /> implementers must override this method when the class contains data that is not stored using dependency properties.</span></span>  
  
<span data-ttu-id="5e1e6-370">一般的な実装では、base を呼び出した後、クラスに含まれる <see cref="T:System.Windows.Freezable" /> すべての型指定されたプロパティに対して静的な <see cref="M:System.Windows.Freezable.Freeze" /> メソッドを呼び出します。 <paramref name="isChecking" />に <see langword="false" /> 値を渡す場合は、すべてのプロパティが固定されている (または固定されている可能性があります) 場合にのみ <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-370">A typical implementation would call base, then call the static <see cref="M:System.Windows.Freezable.Freeze" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of passing through a <see langword="false" /> value for <paramref name="isChecking" />).</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="5e1e6-371">複製する <see cref="T:System.Windows.Media.Animation.Timeline" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-371">The <see cref="T:System.Windows.Media.Animation.Timeline" /> instance to clone.</span></span></param>
        <summary><span data-ttu-id="5e1e6-372">このインスタンスを、指定された <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトの複製にします。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-372">Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-373">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-373">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span> <span data-ttu-id="5e1e6-374">これらのプロパティにリソース参照またはデータバインドが含まれている場合は、オブジェクトを固定しようとすると <xref:System.Windows.Freezable.GetAsFrozen%2A> が失敗し、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-374">Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="5e1e6-375">このメソッドは <xref:System.Windows.Freezable.GetAsFrozen%2A> メソッドによって呼び出され、このメソッドをオーバーライドするときに基本実装を呼び出す場合を除き、コードから直接呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-375">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="5e1e6-376">現在のオブジェクトの固定コピーを作成するには、このメソッドを直接呼び出すのではなく、<xref:System.Windows.Freezable.GetAsFrozen%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-376">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="5e1e6-377">詳細については、<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-377">For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="5e1e6-378">コピーし、固定する <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-378">The <see cref="T:System.Windows.Media.Animation.Timeline" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="5e1e6-379">このインスタンスを、指定された <see cref="T:System.Windows.Media.Animation.Timeline" />の凍結された複製にします。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-379">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="5e1e6-380">リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-380">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-381">このメソッドは <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> メソッドによって呼び出され、このメソッドをオーバーライドするときに基本実装を呼び出す場合を除き、コードから直接呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-381">This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="5e1e6-382">現在のオブジェクトの固定コピーを作成するには、このメソッドを直接呼び出すのではなく、<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-382">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="5e1e6-383">詳細については、「<xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-383">For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static int? GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesiredFrameRate (timeline As Timeline) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; GetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberSignature Language="F#" Value="static member GetDesiredFrameRate : System.Windows.Media.Animation.Timeline -&gt; Nullable&lt;int&gt;" Usage="System.Windows.Media.Animation.Timeline.GetDesiredFrameRate timeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline"><span data-ttu-id="5e1e6-384">目的のフレーム レートを取得するタイムライン。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-384">The timeline from which to retrieve the desired frame rate.</span></span></param>
        <summary><span data-ttu-id="5e1e6-385">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> の目的のフレーム レートを取得します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-385">Gets the desired frame rate of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-386">このタイムラインの目的のフレーム レート。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-386">The desired frame rate of this timeline.</span></span> <span data-ttu-id="5e1e6-387">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-387">The default value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-388">このメソッドは、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 添付プロパティへの読み取りアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-388">This method provides read access to the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> attached property.</span></span> <span data-ttu-id="5e1e6-389">詳細については、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> のページを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-389">For more information, see the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDuration">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Windows.Duration GetNaturalDuration(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetNaturalDuration (clock As Clock) As Duration" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::Duration GetNaturalDuration(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="member this.GetNaturalDuration : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDuration clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock"><span data-ttu-id="5e1e6-390">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-390">The <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></param>
        <summary><span data-ttu-id="5e1e6-391">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の 1 回の反復の長さを返します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-391">Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-392">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の 1 回の反復の長さ。自然な継続時間が不明な場合は <see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-392">The length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the natural duration is unknown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-393">このメソッドは、<xref:System.Windows.Media.Animation.Timeline.Duration%2A> プロパティが <xref:System.Windows.Duration.Automatic%2A>に設定されている場合にのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-393">This method should only be called when the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property is set to <xref:System.Windows.Duration.Automatic%2A>.</span></span> <span data-ttu-id="5e1e6-394"><xref:System.Windows.Media.Animation.Timeline.Duration%2A> が <xref:System.Windows.Duration.Automatic%2A>場合、自然な継続時間は、その特定のクラスの <xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>の実装によって決まります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-394">If <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is <xref:System.Windows.Duration.Automatic%2A>, the natural duration is determined by that particular class's implementation of <xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>.</span></span>  
  
 <span data-ttu-id="5e1e6-395"><xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> が <xref:System.Windows.Duration.Automatic%2A>を返す場合、自然な継続時間が不明であることを意味します。これは、<xref:System.Windows.Duration.Forever%2A>の自然な継続時間を意味します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-395">If <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> returns <xref:System.Windows.Duration.Automatic%2A>, it means that the natural duration is unknown, which implies a natural duration of <xref:System.Windows.Duration.Forever%2A>.</span></span> <span data-ttu-id="5e1e6-396">このような場合は、メディアをストリーミングすることになります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-396">Such is the case for streaming media.</span></span>  
  
 <span data-ttu-id="5e1e6-397">このメソッドをこのタイムライン用に作成されたクロック以外のクロックに渡すことは可能ですが、信頼性の低い結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-397">Note that passing this method a clock other than the one that was created for this timeline is possible, but will provide unreliable results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.Duration" />
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetNaturalDurationCore (clock As Clock) As Duration" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration&#xA;override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock"><span data-ttu-id="5e1e6-398">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-398">The <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></param>
        <summary><span data-ttu-id="5e1e6-399">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の 1 回の反復の長さを返します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-399">Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="5e1e6-400">このメソッドは、<see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" /> の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-400">This method provides the implementation for <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />.</span></span></summary>
        <returns><span data-ttu-id="5e1e6-401">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の 1 回の反復の長さ。自然な継続時間が不明な場合は <see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-401">The length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the natural duration is unknown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-402">このメソッドは、<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> の実装を提供します。コードから直接呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-402">This method provides the implementation for <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> and should not be called directly from your code.</span></span> <span data-ttu-id="5e1e6-403">代わりに <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> を使用してください</span><span class="sxs-lookup"><span data-stu-id="5e1e6-403">Use <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e1e6-404">このメソッドは、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティが <see cref="P:System.Windows.Duration.Automatic" />に設定されている場合に、カスタムの自然 <see cref="T:System.Windows.Duration" /> を提供する必要があるタイムラインクラスによって実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-404">This method should be implemented by timeline classes that need to provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />.</span></span> <span data-ttu-id="5e1e6-405">作成者が自然な期間を決定できない場合、このメソッドは <see cref="P:System.Windows.Duration.Automatic" />を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-405">If the author cannot determine the natural duration, this method should return <see cref="P:System.Windows.Duration.Automatic" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.Timeline.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-406">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-406">Gets or sets the name of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <value><span data-ttu-id="5e1e6-407">このタイムラインの名前。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-407">The name of this timeline.</span></span> <span data-ttu-id="5e1e6-408">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-408">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-409"><see cref="P:System.Windows.Media.Animation.Timeline.Name" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-409">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberSignature Language="F#" Value="member this.RemoveRequested : EventHandler " Usage="member this.RemoveRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-410">このタイムラインのために作成されたクロックか、親タイムラインのクロックが削除された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-410">Occurs when the clock created for this timeline or one of its parent timelines is removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-411">このイベントは、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> メソッドを使用して、または (クロックを直接操作する場合) <xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType> メソッドを呼び出す場合に、ストーリーボードに <xref:System.Windows.Media.Animation.RemoveStoryboard> アクションを適用することによって発生します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-411">This event is raised by applying a <xref:System.Windows.Media.Animation.RemoveStoryboard> action to a storyboard, using a Storyboard's <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method, or (when working directly with clocks) calling the <xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5e1e6-412">このイベントハンドラーはタイムラインに関連付けられているように見えますが、実際には、このタイムライン用に作成された <xref:System.Windows.Media.Animation.Clock> に登録されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-412">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="5e1e6-413">詳細については、「[タイミングイベントの概要](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-413">For more information, see the [Timing Events Overview](/dotnet/framework/wpf/graphics-multimedia/timing-events-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.RemoveStoryboard" />
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.RepeatBehavior RepeatBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatBehavior As RepeatBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::RepeatBehavior RepeatBehavior { System::Windows::Media::Animation::RepeatBehavior get(); void set(System::Windows::Media::Animation::RepeatBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatBehavior : System.Windows.Media.Animation.RepeatBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.RepeatBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-414">このタイムラインの繰り返し動作を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-414">Gets or sets the repeating behavior of this timeline.</span></span></summary>
        <value><span data-ttu-id="5e1e6-415">タイムラインの再生回数を指定する <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> 、タイムラインのアクティブな期間の長さの合計を指定する <see cref="T:System.TimeSpan" /> 値、またはタイムラインを無限に繰り返すように指定する特殊な値 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-415">An iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> that specifies the number of times the timeline should play, a <see cref="T:System.TimeSpan" /> value that specifies the total the length of this timeline's active period, or the special value <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />, which specifies that the timeline should repeat indefinitely.</span></span> <span data-ttu-id="5e1e6-416">既定値は、<see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> が<c>1</c>の <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> です。これは、タイムラインが1回再生されることを示します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-416">The default value is a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> with a <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> of <c>1</c>, which indicates that the timeline plays once.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-417">イテレーション <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> が指定されていて、タイムラインの <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> プロパティが `true`に設定されている場合、1回の繰り返しが1つの前方反復と1つの逆方向の反復で構成されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-417">If an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> is specified and the timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true`, a single repetition consists of one forward iteration and one backward iteration.</span></span> <span data-ttu-id="5e1e6-418"><xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> プロパティが true に設定されているタイムラインでは、イテレーション <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 2 であるイテレーションが再生された後、後方に戻ってから、再度転送されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-418">A timeline with an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property set to true an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> of 2 would play forwards, then backwards, then forwards again, and then backwards again.</span></span>  
  
 <span data-ttu-id="5e1e6-419">タイムラインが再生される回数を指定する代わりに、タイムラインを再生する時間の合計を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-419">Instead of specifying the number of times a timeline plays, you can also specify the total length of time you want the timeline to play.</span></span> <span data-ttu-id="5e1e6-420">タイムラインを繰り返すには、この <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> 値はタイムラインの <xref:System.Windows.Media.Animation.Timeline.Duration%2A>よりも大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-420">For a timeline to repeat, this <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> value should be greater than the timeline's <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</span></span> <span data-ttu-id="5e1e6-421">たとえば、<xref:System.Windows.Media.Animation.Timeline.Duration%2A> が2秒、<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> が4秒のタイムラインは2回再生されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-421">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 2 seconds and a <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> of 4 seconds will play twice.</span></span> <span data-ttu-id="5e1e6-422"><xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> がタイムラインの <xref:System.Windows.Media.Animation.Timeline.Duration%2A>より小さい場合は、タイムラインのアクティブな期間が短縮されます。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-422">If the <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> is less than the timeline's <xref:System.Windows.Media.Animation.Timeline.Duration%2A>, the timeline's active period is cut short.</span></span>  
  
 <span data-ttu-id="5e1e6-423">タイムラインの繰り返しの詳細については、「[アニメーションの概要](/dotnet/framework/wpf/graphics-multimedia/animation-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-423">For more information about repeating timelines, see [Animation Overview](/dotnet/framework/wpf/graphics-multimedia/animation-overview).</span></span>  
  
<a name="dependencyPropertyInfo_RepeatBehavior"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e1e6-424">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="5e1e6-424">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e1e6-425">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5e1e6-425">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  
|<span data-ttu-id="5e1e6-426">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="5e1e6-426">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e1e6-427">なし</span><span class="sxs-lookup"><span data-stu-id="5e1e6-427">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RepeatBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RepeatBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RepeatBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RepeatBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-428"><see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-428">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, int? desiredFrameRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline, valuetype System.Nullable`1&lt;int32&gt; desiredFrameRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDesiredFrameRate (timeline As Timeline, desiredFrameRate As Nullable(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="F#" Value="static member SetDesiredFrameRate : System.Windows.Media.Animation.Timeline * Nullable&lt;int&gt; -&gt; unit" Usage="System.Windows.Media.Animation.Timeline.SetDesiredFrameRate (timeline, desiredFrameRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
        <Parameter Name="desiredFrameRate" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="timeline"><span data-ttu-id="5e1e6-429"><paramref name="desiredFrameRate" /> を割り当てる <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-429">The <see cref="T:System.Windows.Media.Animation.Timeline" /> to which <paramref name="desiredFrameRate" /> is assigned.</span></span></param>
        <param name="desiredFrameRate"><span data-ttu-id="5e1e6-430">このタイムラインで毎秒生成されるようにするフレームの最大数。フレームの数をシステムで制御する場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-430">The maximum number of frames this timeline should generate each second, or <see langword="null" /> if the system should control the number of frames.</span></span></param>
        <summary><span data-ttu-id="5e1e6-431">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> の目的のフレーム レートを設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-431">Sets the desired frame rate of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-432">このメソッドは、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 添付プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-432">This method sets the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> attached property.</span></span> <span data-ttu-id="5e1e6-433">詳細については、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> のページを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-433">For more information, see the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-434">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の時間の進行の速度 (親に対する相対的な速度) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-434">Gets or sets the rate, relative to its parent, at which time progresses for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <value><span data-ttu-id="5e1e6-435">このタイムラインの時間の進行の速度 (タイムラインの親の速度に対する相対的な速度、これがルート タイムラインの場合は既定のタイムライン速度に対する相対的な速度) を表す 0 より大きい有限値。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-435">A finite value greater than 0 that describes the rate at which time progresses for this timeline, relative to the speed of the timeline's parent or, if this is a root timeline, the default timeline speed.</span></span> <span data-ttu-id="5e1e6-436">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-436">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e1e6-437">タイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 設定は、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>には影響しません。この時間は、タイムラインの親に対する相対値です。タイムラインがルートタイムラインの場合は、タイムラインのクロックが開始された時刻です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-437">A timeline's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not have an effect on its <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; that time is relative to the timeline's parent or, if the timeline is a root timeline, the moment at which the timeline's clock was begun.</span></span>  
  
 <span data-ttu-id="5e1e6-438"><xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> または <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> が指定されている場合、この <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> は、タイムラインの自然長の平均比になります。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-438">If <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> or <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> are specified, this <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> is the average ratio over the natural length of the timeline.</span></span>  
  
<a name="dependencyPropertyInfo_SpeedRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e1e6-439">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="5e1e6-439">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e1e6-440">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5e1e6-440">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  
|<span data-ttu-id="5e1e6-441">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="5e1e6-441">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e1e6-442">なし</span><span class="sxs-lookup"><span data-stu-id="5e1e6-442">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e1e6-443">タイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> プロパティは、その親に対して相対的な進行状況を制御します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-443">A timeline's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> property controls its rate of progress, relative to its parent.</span></span> <span data-ttu-id="5e1e6-444">タイムラインがルートの場合、その <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> は既定のタイムライン速度に対して相対的です。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-444">If the timeline is a root, its <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is relative to the default timeline speed.</span></span> <span data-ttu-id="5e1e6-445">次の例では、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 設定が異なる複数のタイムラインを示します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-445">The following example shows several timelines with different <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> settings.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e1e6-446"><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0 未満であるか有限値ではありません。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-446"><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> is less than 0 or is not a finite value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpeedRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpeedRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpeedRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpeedRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpeedRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e1e6-447"><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5e1e6-447">Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
