<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fc6c21927f5006abc679177be713c4ce8cf87dc" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82296211" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="21e39-101"><see cref="T:System.Windows.Media.Animation.Clock" /> を対話的に制御します。</span><span class="sxs-lookup"><span data-stu-id="21e39-101">Interactively controls a <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-102"><xref:System.Windows.Media.Animation.Clock>を対話的に開始、一時停止、再開、シーク、スキップ、停止、削除するには、<xref:System.Windows.Media.Animation.ClockController> を使用します。</span><span class="sxs-lookup"><span data-stu-id="21e39-102">Use a <xref:System.Windows.Media.Animation.ClockController> to interactively begin, pause, resume, seek, skip, stop, and remove a <xref:System.Windows.Media.Animation.Clock>.</span></span> <span data-ttu-id="21e39-103">ルートレベルのクロックを対話的に制御することはできません。</span><span class="sxs-lookup"><span data-stu-id="21e39-103">You can only interactively control root-level clocks.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21e39-104">対象の <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> を次のタイマー刻みで開始するように設定します。</span><span class="sxs-lookup"><span data-stu-id="21e39-104">Sets the target <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> to begin at the next tick.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-105">このメソッドを実行すると、ターゲット <xref:System.Windows.Media.Animation.Clock> は、<xref:System.Windows.Media.Animation.Timeline> オブジェクトの <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> が次のティックの時刻に設定されているかのように動作します。</span><span class="sxs-lookup"><span data-stu-id="21e39-105">This method causes the target <xref:System.Windows.Media.Animation.Clock> to behave as though its <xref:System.Windows.Media.Animation.Timeline> object's <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> were set to the time of the next tick.</span></span> <span data-ttu-id="21e39-106">タイムラインの実際の <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 設定は無視されます (ただし、変更されません)。</span><span class="sxs-lookup"><span data-stu-id="21e39-106">The timeline's actual <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> setting is ignored (but not changed).</span></span>  
  
 <span data-ttu-id="21e39-107">このメソッドは、ターゲットクロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> を <xref:System.Windows.Media.Animation.ClockState.Active>に変更します。</span><span class="sxs-lookup"><span data-stu-id="21e39-107">This method changes the target clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="21e39-108"><xref:System.Windows.Media.Animation.ClockController.Begin%2A> メソッドは、一時停止しているクロックを再開しません。</span><span class="sxs-lookup"><span data-stu-id="21e39-108">The <xref:System.Windows.Media.Animation.ClockController.Begin%2A> method does not resume a paused clock.</span></span>  
  
 <span data-ttu-id="21e39-109">このメソッドは、次にティックが処理されるまで、タイミングツリーには影響しません。</span><span class="sxs-lookup"><span data-stu-id="21e39-109">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="21e39-110">副作用として、適切なイベントも生成されません。</span><span class="sxs-lookup"><span data-stu-id="21e39-110">As a side-effect, the appropriate events will also not be raised until then.</span></span> <span data-ttu-id="21e39-111">このメソッドを呼び出すと、<xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="21e39-111">Calling this method triggers the <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21e39-112">この <see cref="T:System.Windows.Media.Animation.Clock" /> によって制御される <see cref="T:System.Windows.Media.Animation.ClockController" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="21e39-112">Gets the <see cref="T:System.Windows.Media.Animation.Clock" /> controlled by this <see cref="T:System.Windows.Media.Animation.ClockController" />.</span></span></summary>
        <value><span data-ttu-id="21e39-113">この <see cref="T:System.Windows.Media.Animation.Clock" /> によって制御される <see cref="T:System.Windows.Media.Animation.ClockController" />。</span><span class="sxs-lookup"><span data-stu-id="21e39-113">The <see cref="T:System.Windows.Media.Animation.Clock" /> controlled by this <see cref="T:System.Windows.Media.Animation.ClockController" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21e39-114">ターゲットの <see cref="T:System.Windows.Media.Animation.Clock" /> の進行を停止します。</span><span class="sxs-lookup"><span data-stu-id="21e39-114">Stops the target <see cref="T:System.Windows.Media.Animation.Clock" /> from progressing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-115">現在の状態に関係なく、<xref:System.Windows.Media.Animation.Clock> を一時停止することができます。また、クロックを一時停止しても、現在の状態は変わりません。</span><span class="sxs-lookup"><span data-stu-id="21e39-115">You can pause a <xref:System.Windows.Media.Animation.Clock> regardless of its current state, and pausing a clock does not change its current state.</span></span> <span data-ttu-id="21e39-116"><xref:System.Windows.Media.Animation.ClockState.Active>、<xref:System.Windows.Media.Animation.ClockState.Stopped>、または <xref:System.Windows.Media.Animation.ClockState.Filling>中は、クロックを一時停止することができます。</span><span class="sxs-lookup"><span data-stu-id="21e39-116">A clock can be paused while <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, or <xref:System.Windows.Media.Animation.ClockState.Filling>.</span></span> <span data-ttu-id="21e39-117">クロックを解除する唯一の方法は、<xref:System.Windows.Media.Animation.ClockController.Resume%2A> メソッドを使用することです。</span><span class="sxs-lookup"><span data-stu-id="21e39-117">The only way to unpause a clock is by using the <xref:System.Windows.Media.Animation.ClockController.Resume%2A> method.</span></span> <span data-ttu-id="21e39-118">クロックを一時停止すると、その子が暗黙的に一時停止します。</span><span class="sxs-lookup"><span data-stu-id="21e39-118">Pausing a clock implicitly pauses its children.</span></span>  
  
 <span data-ttu-id="21e39-119">ターゲットクロックが既に一時停止しているときにこのメソッドを呼び出すと、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="21e39-119">Calling this method when the target clock is already paused has no effect.</span></span>  
  
 <span data-ttu-id="21e39-120">クロックを一時停止すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="21e39-120">Pausing a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21e39-121">この <see cref="T:System.Windows.Media.Animation.Clock" /> に関連付けられた <see cref="T:System.Windows.Media.Animation.ClockController" /> を、アニメーション化するプロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="21e39-121">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> associated with this <see cref="T:System.Windows.Media.Animation.ClockController" /> from the properties it animates.</span></span> <span data-ttu-id="21e39-122">クロックとその子クロックは、これらのプロパティに対して影響を及ぼさなくなります。</span><span class="sxs-lookup"><span data-stu-id="21e39-122">The clock and its child clocks will no longer affect these properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-123">このメソッドは、<xref:System.Windows.Media.Animation.Clock.RemoveRequested> イベントをトリガーします。</span><span class="sxs-lookup"><span data-stu-id="21e39-123">This method triggers the <xref:System.Windows.Media.Animation.Clock.RemoveRequested> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21e39-124">次の例では、クロックを削除する方法と、それ以外の方法で対話的に制御する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="21e39-124">The following example shows how to remove and otherwise interactively control a clock.</span></span>  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21e39-125">一時停止されている <see cref="T:System.Windows.Media.Animation.Clock" /> を有効にして、進行を再開します。</span><span class="sxs-lookup"><span data-stu-id="21e39-125">Enables a <see cref="T:System.Windows.Media.Animation.Clock" /> that was previously paused to resume progressing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-126">現在の状態に関係なく、<xref:System.Windows.Media.Animation.Clock> を一時停止または再開することができます。また、クロックを一時停止または再開しても、現在の状態は変わりません。</span><span class="sxs-lookup"><span data-stu-id="21e39-126">You can pause or resume a <xref:System.Windows.Media.Animation.Clock> regardless of its current state, and pausing or resuming a clock does not change its current state.</span></span> <span data-ttu-id="21e39-127"><xref:System.Windows.Media.Animation.ClockState.Active>、<xref:System.Windows.Media.Animation.ClockState.Stopped>、または <xref:System.Windows.Media.Animation.ClockState.Filling>中は、クロックを一時停止することができます。</span><span class="sxs-lookup"><span data-stu-id="21e39-127">A clock can be paused while <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, or <xref:System.Windows.Media.Animation.ClockState.Filling>.</span></span> <span data-ttu-id="21e39-128">一時停止したクロックを再開する唯一の方法は、<xref:System.Windows.Media.Animation.ClockController.Resume%2A> メソッドを使用することです。</span><span class="sxs-lookup"><span data-stu-id="21e39-128">The only way to resume a paused clock is by using the <xref:System.Windows.Media.Animation.ClockController.Resume%2A> method.</span></span> <span data-ttu-id="21e39-129">クロックを再開すると、その子が暗黙的に再開されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-129">Resuming a clock implicitly resumes its children.</span></span> <span data-ttu-id="21e39-130">一時停止されていないクロックでこのメソッドを呼び出すと、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="21e39-130">Calling this method on a clock that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="21e39-131">一時停止した時計を再開すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="21e39-131">Resuming a paused clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="21e39-132">シーク オフセットを、対象のクロックの時間で表した値。</span><span class="sxs-lookup"><span data-stu-id="21e39-132">The seek offset, measured in the target clock's time.</span></span> <span data-ttu-id="21e39-133">このオフセットは、クロックの <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> または <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> に対して相対的で、<paramref name="origin" /> の値に応じて決まります。</span><span class="sxs-lookup"><span data-stu-id="21e39-133">This offset is relative to the clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, depending on the value of <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="21e39-134">指定したオフセットが対象のクロックの <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> または <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> に対して相対的かどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="21e39-134">A value that indicates whether the specified offset is relative to the target clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />.</span></span></param>
        <summary><span data-ttu-id="21e39-135">次のティックが発生した時点で、ターゲット <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> を指定された量だけシークします。</span><span class="sxs-lookup"><span data-stu-id="21e39-135">Seeks the target <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> by the specified amount when the next tick occurs.</span></span> <span data-ttu-id="21e39-136">対象のクロックが停止している場合は、このシークによって再びアクティブになります。</span><span class="sxs-lookup"><span data-stu-id="21e39-136">If the target clock is stopped, seeking makes it active again.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-137">シーク操作では、このクロックのタイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定は考慮されません。時計は、タイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で、<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-137">Seek operations do not take the <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings of this clock's timeline into account: the clock is treated as though its timeline has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="21e39-138">このメソッドは、クロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> を <xref:System.Windows.Media.Animation.ClockState.Active>に変更します。</span><span class="sxs-lookup"><span data-stu-id="21e39-138">This method changes the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="21e39-139">このメソッドは、次にティックが処理されるまで、タイミングツリーには影響しません。</span><span class="sxs-lookup"><span data-stu-id="21e39-139">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="21e39-140">副作用として、適切なイベントも次のようになるまで発生しません。</span><span class="sxs-lookup"><span data-stu-id="21e39-140">As a side-effect, the appropriate events also will not be raised until then.</span></span>  
  
 <span data-ttu-id="21e39-141">ストーリーボードをシークすると、<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="21e39-141">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="21e39-142">ターゲットクロックに子がある場合は、それに応じて現在の時刻が更新されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-142">If the target clock has children, their current time is updated accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21e39-143">次の例では、<xref:System.Windows.Media.Animation.ClockController>を使用してシークする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="21e39-143">The following example shows how to seek using a <xref:System.Windows.Media.Animation.ClockController>.</span></span>  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="21e39-144">シーク オフセットを、対象のクロックの時間で表した値。</span><span class="sxs-lookup"><span data-stu-id="21e39-144">The seek offset, measured in the target clock's time.</span></span> <span data-ttu-id="21e39-145">このオフセットは、クロックの <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> または <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> に対して相対的で、<paramref name="origin" /> の値に応じて決まります。</span><span class="sxs-lookup"><span data-stu-id="21e39-145">This offset is relative to the clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, depending on the value of <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="21e39-146">指定したオフセットが対象のクロックの <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> または <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> に対して相対的かどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="21e39-146">A value that indicates whether the specified offset is relative to the target clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />.</span></span></param>
        <summary><span data-ttu-id="21e39-147">対象の <see cref="T:System.Windows.Media.Animation.Clock" /> を指定した量だけ直ちにシークします。</span><span class="sxs-lookup"><span data-stu-id="21e39-147">Seeks the target <see cref="T:System.Windows.Media.Animation.Clock" /> by the specified amount immediately.</span></span> <span data-ttu-id="21e39-148">対象のクロックが停止している場合は、このシークによって再びアクティブになります。</span><span class="sxs-lookup"><span data-stu-id="21e39-148">If the target clock is stopped, seeking makes it active again.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-149">シーク操作では、このクロックのタイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定は考慮されません。時計は、タイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で、<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-149">Seek operations do not take the <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings of this clock's timeline into account: the clock is treated as though its timeline has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="21e39-150">クロックの seeked 時刻を最後のクロックティックに合わせて <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> します。</span><span class="sxs-lookup"><span data-stu-id="21e39-150"><xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> aligns the seeked time of the clock with the last clock tick.</span></span> <span data-ttu-id="21e39-151">画面が更新されるまでこれらの変更が反映されない場合でも、<xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>による変更を反映するために値が直ちに更新されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-151">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, even though the screen will not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="21e39-152">ターゲットクロックに子がある場合は、それに応じて現在の時刻が更新されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-152">If the target clock has children, their current time is updated accordingly.</span></span>  
  
 <span data-ttu-id="21e39-153">このメソッドは、クロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> を <xref:System.Windows.Media.Animation.ClockState.Active>に変更します。</span><span class="sxs-lookup"><span data-stu-id="21e39-153">This method changes the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="21e39-154">ストーリーボードをシークすると、<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="21e39-154">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21e39-155">次の例は、<xref:System.Windows.Media.Animation.ClockController>の <xref:System.Windows.Media.Animation.ClockController.Seek%2A> と <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> の両方のメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="21e39-155">The following example demonstrates both the <xref:System.Windows.Media.Animation.ClockController.Seek%2A> and <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> methods of a <xref:System.Windows.Media.Animation.ClockController>.</span></span>  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21e39-156">ターゲット <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブ期間の最後まで進めます。</span><span class="sxs-lookup"><span data-stu-id="21e39-156">Advances the current time of the target <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-157">このメソッドは、ターゲットクロックの現在の時刻を、アクティブな期間の終わりに進めます。この時点でのクロックの動作は、その <xref:System.Windows.Media.Animation.Timeline>の <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 設定によって指定されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-157">This method advances the target clock's current time to the end of its active period; the clock's behavior at this point is specified by the <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting of its <xref:System.Windows.Media.Animation.Timeline>.</span></span> <span data-ttu-id="21e39-158">タイムラインの <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> プロパティが <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>に設定されている場合、時計は塗りつぶされます。プロパティが <xref:System.Windows.Media.Animation.FillBehavior.Stop>に設定されている場合、クロックは停止します。</span><span class="sxs-lookup"><span data-stu-id="21e39-158">If the timeline's <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the clock fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the clock stops.</span></span>  
  
 <span data-ttu-id="21e39-159">このメソッドは、対象のクロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> が <xref:System.Windows.Media.Animation.ClockState.Active>場合にのみ効果があります。</span><span class="sxs-lookup"><span data-stu-id="21e39-159">This method has an effect only if the target clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> is <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="21e39-160">このメソッドは、次にティックが処理されるまで、タイミングツリーには影響しません。</span><span class="sxs-lookup"><span data-stu-id="21e39-160">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="21e39-161">副作用として、適切なイベントも次のようになるまで発生しません。</span><span class="sxs-lookup"><span data-stu-id="21e39-161">As a side-effect, the appropriate events also will not be raised until then.</span></span>  
  
 <span data-ttu-id="21e39-162">ストーリーボードをその塗りつぶし期間に進めると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="21e39-162">Advancing a storyboard to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21e39-163">対象の <see cref="T:System.Windows.Media.Animation.Clock" /> の対話速度を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="21e39-163">Gets or sets the interactive speed of the target <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></summary>
        <value><span data-ttu-id="21e39-164">対象のクロックの対話速度を記述するゼロより大きい有限値。</span><span class="sxs-lookup"><span data-stu-id="21e39-164">A finite value greater than zero that describes the interactive speed of the target clock.</span></span> <span data-ttu-id="21e39-165">この値は、クロックの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> の値に対して乗算されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-165">This value is multiplied against the value of the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of the clock's <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="21e39-166">たとえば、タイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 で、<see cref="T:System.Windows.Media.Animation.ClockController" /> オブジェクトの <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> が 3.0 の場合、タイムラインは通常速度の 1.5 倍 (0.5 \* 3.0) で移動します。</span><span class="sxs-lookup"><span data-stu-id="21e39-166">For example, if the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> is 0.5 and the <see cref="T:System.Windows.Media.Animation.ClockController" /> object's <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> is 3.0, the timeline moves at 1.5 times normal speed (0.5 \* 3.0).</span></span> <span data-ttu-id="21e39-167">既定値は 1.0 です。</span><span class="sxs-lookup"><span data-stu-id="21e39-167">The default value is 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-168">このプロパティを設定しても、次のティックまでは効果がありません。</span><span class="sxs-lookup"><span data-stu-id="21e39-168">Setting this property has no effect until the next tick.</span></span> <span data-ttu-id="21e39-169">このプロパティを設定し、次のティックが発生する前にその値を取得すると、古い値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="21e39-169">If you set this property and then get its value before the next tick occurs, you'll get the old value.</span></span> <span data-ttu-id="21e39-170">このプロパティは、次のティックの後に新しい値を返します。</span><span class="sxs-lookup"><span data-stu-id="21e39-170">This property will return the new value after the next tick.</span></span>  
  
 <span data-ttu-id="21e39-171">このプロパティを設定しても、基になるタイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>の値は変更されません。</span><span class="sxs-lookup"><span data-stu-id="21e39-171">Setting this property does not change the value of the underlying timeline's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.</span></span>  
  
 <span data-ttu-id="21e39-172">このプロパティを設定すると、ターゲットクロックの <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="21e39-172">Setting this property triggers the target clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21e39-173">ターゲットの <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="21e39-173">Stops the target <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e39-174">このメソッドは、ターゲットクロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> を <xref:System.Windows.Media.Animation.Clock.Stopped%2A>に変更します。</span><span class="sxs-lookup"><span data-stu-id="21e39-174">This method changes the target clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</span></span>  
  
 <span data-ttu-id="21e39-175"><xref:System.Windows.Media.Animation.Clock.Stopped%2A> クロックは、<xref:System.Windows.Media.Animation.ClockController.Begin%2A>、<xref:System.Windows.Media.Animation.ClockController.Seek%2A>、または <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> メソッドを使用して再起動できます。</span><span class="sxs-lookup"><span data-stu-id="21e39-175">A <xref:System.Windows.Media.Animation.Clock.Stopped%2A> clock can be restarted by using the <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, or <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> method.</span></span>  
  
 <span data-ttu-id="21e39-176">このメソッドは、次にティックが処理されるまで、タイミングツリーには影響しません。</span><span class="sxs-lookup"><span data-stu-id="21e39-176">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="21e39-177">副作用として、適切なイベントも次のようになるまで発生しません。</span><span class="sxs-lookup"><span data-stu-id="21e39-177">As a side-effect, the appropriate events also will not be raised until then.</span></span>  
  
 <span data-ttu-id="21e39-178">クロックを停止すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> イベントがトリガーされますが、<xref:System.Windows.Media.Animation.Clock.Completed> イベントはトリガーされません。</span><span class="sxs-lookup"><span data-stu-id="21e39-178">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Clock.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
