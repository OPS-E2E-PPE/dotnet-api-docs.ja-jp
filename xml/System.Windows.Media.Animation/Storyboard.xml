<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b750a5b2d4842b26396843deb272a103f92136d" /><Meta Name="ms.sourcegitcommit" Value="c7fba4a529a39ce5480e57ff2519295822f78c1d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/15/2020" /><Meta Name="ms.locfileid" Value="83414388" /></Metadata><TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Storyboard extends System.Windows.Media.Animation.ParallelTimeline" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="79495-101">子アニメーションのオブジェクトやプロパティの対象化情報を提供するコンテナ タイムライン。</span><span class="sxs-lookup"><span data-stu-id="79495-101">A container timeline that provides object and property targeting information for its child animations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="79495-102">ストーリーボードを対話的に制御する</span><span class="sxs-lookup"><span data-stu-id="79495-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="79495-103">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-104">ストーリーボードをマークアップで制御できるようにするには、そのストーリーボードを作成する <xref:System.Windows.Media.Animation.BeginStoryboard> オブジェクトの <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> プロパティを指定します。例については、「[方法: イベントトリガーを使用してストーリーボードを開始後に制御](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span></span> <span data-ttu-id="79495-105">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-106">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-106">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="79495-107">データバインディングとアニメーション化のタイムライン</span><span class="sxs-lookup"><span data-stu-id="79495-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="79495-108">ほとんどのタイムラインプロパティは、データのバインドまたはアニメーション化が可能です。ただし、タイミングシステムの動作により、データバインドまたはアニメーション化されたタイムラインは、他のデータバインドオブジェクトやアニメーションオブジェクトと同様に動作しません。</span><span class="sxs-lookup"><span data-stu-id="79495-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="79495-109">その動作を理解するために、タイムラインをアクティブ化する意味を理解することができます。</span><span class="sxs-lookup"><span data-stu-id="79495-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="79495-110">タイムラインがアクティブになると、タイムラインとその子タイムラインからコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="79495-111">これらのコピーは固定され (読み取り専用になり)、<xref:System.Windows.Media.Animation.Clock> オブジェクトがそれらから作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="79495-112">これらのクロックは、ターゲット プロパティをアニメーション化する実際の作業を実行します。</span><span class="sxs-lookup"><span data-stu-id="79495-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="79495-113">タイムラインがデータバインドまたはアニメーション化されている場合は、クロックの作成時に現在の値のスナップショットが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="79495-114">元のタイムラインは引き続き変更される可能性がありますが、クロックは変わりません。</span><span class="sxs-lookup"><span data-stu-id="79495-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="79495-115">タイムラインにデータバインディングまたはアニメーションの変更が反映されるようにするには、そのクロックを再作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="79495-116">クロックは自動的に再作成されません。</span><span class="sxs-lookup"><span data-stu-id="79495-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="79495-117">タイムラインの変更を適用するいくつかの方法を次に示します。</span><span class="sxs-lookup"><span data-stu-id="79495-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="79495-118">タイムラインがまたは <xref:System.Windows.Media.Animation.Storyboard>に属している場合は、<xref:System.Windows.Media.Animation.BeginStoryboard> または <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを使用してストーリーボードを再適用することで、変更を反映させることができます。</span><span class="sxs-lookup"><span data-stu-id="79495-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="79495-119">これには、アニメーションが再起動されるという副作用があります。</span><span class="sxs-lookup"><span data-stu-id="79495-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="79495-120">コードでは、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A> メソッドを使用して、ストーリーボードを前の位置に進めることができます。</span><span class="sxs-lookup"><span data-stu-id="79495-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="79495-121"><xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> メソッドを使用してプロパティにアニメーションを直接適用した場合は、もう一度 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> メソッドを呼び出し、変更されたアニメーションを渡します。</span><span class="sxs-lookup"><span data-stu-id="79495-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="79495-122">クロックレベルで直接作業している場合は、クロックの新しいセットを作成して適用し、それを使用して以前に作成されたクロックのセットを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="79495-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="79495-123">データバインドされたアニメーションの例については、「[キースプラインアニメーションのサンプル](https://go.microsoft.com/fwlink/?LinkID=160011)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-123">For an example of a data bound animation, see [Key Spline Animation Sample](https://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-124"><see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="79495-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-125">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている一連のアニメーションを開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-126">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-127">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-128">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-128">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-129">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-130">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-130">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="79495-131"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <summary><span data-ttu-id="79495-132">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-133">ターゲットプロパティが既にアニメーション化されている場合は、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> ハンドオフ動作を使用して置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="79495-134">このメソッドで開始されたストーリーボードは、開始後に一時停止、再開、または対話的に制御することはできません。</span><span class="sxs-lookup"><span data-stu-id="79495-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="79495-135">ストーリーボードを制御できるようにするには、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A> または <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="79495-136">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-137">次の例では、ストーリーボードを使用して <xref:System.Windows.Media.TextEffect>をアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="79495-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="79495-138"><xref:System.Windows.Media.TextEffect> は、<xref:System.Windows.FrameworkContentElement>の名前のスコープ内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="79495-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-139">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-139">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="79495-140"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <summary><span data-ttu-id="79495-141">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-142">ターゲットプロパティが既にアニメーション化されている場合は、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> ハンドオフ動作を使用して置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="79495-143">このメソッドで開始されたストーリーボードは、開始後に一時停止、再開、または対話的に制御することはできません。</span><span class="sxs-lookup"><span data-stu-id="79495-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="79495-144">ストーリーボードを制御できるようにするには、<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> または <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="79495-145">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-146">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-146">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="79495-147"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="isControllable"><span data-ttu-id="79495-148">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="79495-148"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79495-149">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-150">ターゲットプロパティが既にアニメーション化されている場合は、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> ハンドオフ動作を使用して置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="79495-151">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話的なメソッドを呼び出すときに、同じ `containingObject` を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="79495-152">このメソッドが呼び出されると、ストーリーボードとそれに含まれるすべてのタイムラインに対して <xref:System.Windows.Media.Animation.Clock> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="79495-153">これらのクロックは `containingObject`と共に格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="79495-154">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-155">次の例では、制御可能なストーリーボードを使用して、<xref:System.Windows.Media.TextEffect>をアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="79495-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="79495-156"><xref:System.Windows.Media.TextEffect> は、<xref:System.Windows.FrameworkContentElement>の名前のスコープ内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="79495-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-157">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-157">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="79495-158"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="79495-159">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="79495-159">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="79495-160">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-161"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>を使用してプロパティに <xref:System.Windows.Media.Animation.Storyboard>、<xref:System.Windows.Media.Animation.AnimationTimeline>、または <xref:System.Windows.Media.Animation.AnimationClock> を適用すると、そのプロパティに以前関連付けられていたすべての <xref:System.Windows.Media.Animation.Clock> オブジェクトが引き続きシステムリソースを消費します。タイミングシステムでは、これらのクロックは自動的に削除されません。</span><span class="sxs-lookup"><span data-stu-id="79495-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="79495-162"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose>を使用して多数のクロックを適用したときのパフォーマンスの問題を回避するには、アニメーション化されたプロパティの完了後に、作成中のクロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="79495-163">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="79495-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="79495-164">プロパティからすべてのクロックを削除するには、アニメーション化されたオブジェクトの <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> または <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="79495-165">最初のパラメーターとしてアニメーション化するプロパティを指定し、2番目のパラメーターとして `null` します。</span><span class="sxs-lookup"><span data-stu-id="79495-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="79495-166">これにより、プロパティからすべてのアニメーションクロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="79495-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="79495-167">特定の <xref:System.Windows.Media.Animation.AnimationClock> をクロックの一覧から削除するには、<xref:System.Windows.Media.Animation.AnimationClock> の <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティを使用して <xref:System.Windows.Media.Animation.ClockController>を取得し、次に <xref:System.Windows.Media.Animation.ClockController.Remove%2A> の <xref:System.Windows.Media.Animation.ClockController>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="79495-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="79495-168">これは通常、クロックの <xref:System.Windows.Media.Animation.Clock.Completed> イベントハンドラーで実行されます。</span><span class="sxs-lookup"><span data-stu-id="79495-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="79495-169"><xref:System.Windows.Media.Animation.ClockController>によって制御できるのはルートクロックのみであることに注意してください。子クロックの <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="79495-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="79495-170">また、クロックの有効期間が無期限の場合は、<xref:System.Windows.Media.Animation.Clock.Completed> イベントが呼び出されないことにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="79495-171">その場合、ユーザーは <xref:System.Windows.Media.Animation.ClockController.Remove%2A>を呼び出すタイミングを決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="79495-172">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="79495-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="79495-173">オブジェクトがガベージコレクションされると、そのクロックも切断され、ガベージコレクトされます。</span><span class="sxs-lookup"><span data-stu-id="79495-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="79495-174">クロックオブジェクトの詳細については、「[アニメーションとタイミングシステムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-174">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-175">次の例では、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> を使用して、ユーザーが左クリックしたときにアニメーション化し、ユーザーが右クリックしたときに <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> します。</span><span class="sxs-lookup"><span data-stu-id="79495-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-176">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-176">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="79495-177"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="isControllable"><span data-ttu-id="79495-178">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="79495-178"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79495-179">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-180">ターゲットプロパティが既にアニメーション化されている場合は、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> ハンドオフ動作を使用して置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="79495-181">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話的なメソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="79495-182">このメソッドが呼び出されると、ストーリーボードとそれに含まれるすべてのタイムラインに対して <xref:System.Windows.Media.Animation.Clock> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="79495-183">これらのクロックは `containingObject`と共に格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="79495-184">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, frameworkTemplate As FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-185">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-185">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="79495-186"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="79495-187">アニメーション化するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="79495-187">The template to animate.</span></span></param>
        <summary><span data-ttu-id="79495-188">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-189">ターゲットプロパティが既にアニメーション化されている場合は、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> ハンドオフ動作を使用して置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="79495-190">このメソッドが呼び出されると、ストーリーボードとそれに含まれるすべてのタイムラインに対して <xref:System.Windows.Media.Animation.Clock> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="79495-191">これらのクロックは `containingObject`と共に格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="79495-192">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-193">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-193">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="79495-194"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="79495-195">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="79495-195">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="79495-196">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79495-197">次の例では、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> を使用して、ユーザーが左クリックしたときにアニメーション化し、ユーザーが右クリックしたときに <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> します。</span><span class="sxs-lookup"><span data-stu-id="79495-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, handoffBehavior As HandoffBehavior, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-198">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-198">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="79495-199"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="79495-200">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="79495-200">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="79495-201">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</span><span class="sxs-lookup"><span data-stu-id="79495-201">Declares whether the animation is controllable (can be paused) once started.</span></span></param>
        <summary><span data-ttu-id="79495-202">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-203">ターゲットプロパティが既にアニメーション化されている場合は、指定されたハンドオフ動作を使用して置換されます。</span><span class="sxs-lookup"><span data-stu-id="79495-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="79495-204">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話的なメソッドを呼び出すときに、同じ `containingObject` を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="79495-205">このメソッドが呼び出されると、ストーリーボードとそれに含まれるすべてのタイムラインに対して <xref:System.Windows.Media.Animation.Clock> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="79495-206">これらのクロックは `containingObject`と共に格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="79495-207">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="79495-208">作成 HandoffBehavior の使用</span><span class="sxs-lookup"><span data-stu-id="79495-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="79495-209"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>を使用してプロパティに <xref:System.Windows.Media.Animation.Storyboard>、<xref:System.Windows.Media.Animation.AnimationTimeline>、または <xref:System.Windows.Media.Animation.AnimationClock> を適用すると、そのプロパティに以前関連付けられていたすべての <xref:System.Windows.Media.Animation.Clock> オブジェクトが引き続きシステムリソースを消費します。タイミングシステムでは、これらのクロックは自動的に削除されません。</span><span class="sxs-lookup"><span data-stu-id="79495-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="79495-210"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose>を使用して多数のクロックを適用したときのパフォーマンスの問題を回避するには、アニメーション化されたプロパティの完了後に、作成中のクロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="79495-211">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="79495-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="79495-212">プロパティからすべてのクロックを削除するには、アニメーション化されたオブジェクトの <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> または <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="79495-213">最初のパラメーターとしてアニメーション化するプロパティを指定し、2番目のパラメーターとして `null` します。</span><span class="sxs-lookup"><span data-stu-id="79495-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="79495-214">これにより、プロパティからすべてのアニメーションクロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="79495-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="79495-215">特定の <xref:System.Windows.Media.Animation.AnimationClock> をクロックの一覧から削除するには、<xref:System.Windows.Media.Animation.AnimationClock> の <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティを使用して <xref:System.Windows.Media.Animation.ClockController>を取得し、次に <xref:System.Windows.Media.Animation.ClockController.Remove%2A> の <xref:System.Windows.Media.Animation.ClockController>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="79495-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="79495-216">これは通常、クロックの <xref:System.Windows.Media.Animation.Clock.Completed> イベントハンドラーで実行されます。</span><span class="sxs-lookup"><span data-stu-id="79495-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="79495-217"><xref:System.Windows.Media.Animation.ClockController>によって制御できるのはルートクロックのみであることに注意してください。子クロックの <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="79495-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="79495-218">また、クロックの有効期間が無期限の場合は、<xref:System.Windows.Media.Animation.Clock.Completed> イベントが呼び出されないことにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="79495-219">その場合、ユーザーは <xref:System.Windows.Media.Animation.ClockController.Remove%2A>を呼び出すタイミングを決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="79495-220">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="79495-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="79495-221">オブジェクトがガベージコレクションされると、そのクロックも切断され、ガベージコレクトされます。</span><span class="sxs-lookup"><span data-stu-id="79495-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="79495-222">クロックオブジェクトの詳細については、「[アニメーションとタイミングシステムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-222">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-223">次の例では、制御可能なストーリーボードを使用して、<xref:System.Windows.Media.TextEffect>をアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="79495-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="79495-224"><xref:System.Windows.Media.TextEffect> は、<xref:System.Windows.FrameworkContentElement>の名前のスコープ内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="79495-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="79495-225">次の例では、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> を使用して、ユーザーが左クリックしたときにアニメーションを行い、ユーザーが右クリックしたときに <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> します。</span><span class="sxs-lookup"><span data-stu-id="79495-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, frameworkTemplate As FrameworkTemplate, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-226">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-226">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span>  <span data-ttu-id="79495-227"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="79495-228">アニメーション化するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="79495-228">The template to animate.</span></span></param>
        <param name="isControllable"><span data-ttu-id="79495-229">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="79495-229"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79495-230">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-231">ターゲットプロパティが既にアニメーション化されている場合は、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> ハンドオフ動作を使用して置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="79495-232">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話的なメソッドを呼び出すときに、同じ `containingObject` を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="79495-233">このメソッドが呼び出されると、ストーリーボードとそれに含まれるすべてのタイムラインに対して <xref:System.Windows.Media.Animation.Clock> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="79495-234">これらのクロックは `containingObject`と共に格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="79495-235">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, frameworkTemplate As FrameworkTemplate, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-236">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-236">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="79495-237"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="79495-238">アニメーション化するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="79495-238">The template to animate.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="79495-239">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="79495-239">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="79495-240">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-241">このメソッドが呼び出されると、ストーリーボードとそれに含まれるすべてのタイムラインに対して <xref:System.Windows.Media.Animation.Clock> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="79495-242">これらのクロックは `containingObject`と共に格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="79495-243">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="79495-244">作成 HandoffBehavior の使用</span><span class="sxs-lookup"><span data-stu-id="79495-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="79495-245"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>を使用してプロパティに <xref:System.Windows.Media.Animation.Storyboard>、<xref:System.Windows.Media.Animation.AnimationTimeline>、または <xref:System.Windows.Media.Animation.AnimationClock> を適用すると、そのプロパティに以前関連付けられていたすべての <xref:System.Windows.Media.Animation.Clock> オブジェクトが引き続きシステムリソースを消費します。タイミングシステムでは、これらのクロックは自動的に削除されません。</span><span class="sxs-lookup"><span data-stu-id="79495-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="79495-246"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose>を使用して多数のクロックを適用したときのパフォーマンスの問題を回避するには、アニメーション化されたプロパティの完了後に、作成中のクロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="79495-247">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="79495-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="79495-248">プロパティからすべてのクロックを削除するには、アニメーション化されたオブジェクトの <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> または <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="79495-249">最初のパラメーターとしてアニメーション化するプロパティを指定し、2番目のパラメーターとして `null` します。</span><span class="sxs-lookup"><span data-stu-id="79495-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="79495-250">これにより、プロパティからすべてのアニメーションクロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="79495-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="79495-251">特定の <xref:System.Windows.Media.Animation.AnimationClock> をクロックの一覧から削除するには、<xref:System.Windows.Media.Animation.AnimationClock> の <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティを使用して <xref:System.Windows.Media.Animation.ClockController>を取得し、次に <xref:System.Windows.Media.Animation.ClockController.Remove%2A> の <xref:System.Windows.Media.Animation.ClockController>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="79495-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="79495-252">これは通常、クロックの <xref:System.Windows.Media.Animation.Clock.Completed> イベントハンドラーで実行されます。</span><span class="sxs-lookup"><span data-stu-id="79495-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="79495-253"><xref:System.Windows.Media.Animation.ClockController>によって制御できるのはルートクロックのみであることに注意してください。子クロックの <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="79495-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="79495-254">また、クロックの有効期間が無期限の場合は、<xref:System.Windows.Media.Animation.Clock.Completed> イベントが呼び出されないことにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="79495-255">その場合、ユーザーは <xref:System.Windows.Media.Animation.ClockController.Remove%2A>を呼び出すタイミングを決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="79495-256">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="79495-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="79495-257">オブジェクトがガベージコレクションされると、そのクロックも切断され、ガベージコレクトされます。</span><span class="sxs-lookup"><span data-stu-id="79495-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="79495-258">クロックオブジェクトの詳細については、「[アニメーションとタイミングシステムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-258">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, handoffBehavior As HandoffBehavior, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-259">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-259">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="79495-260"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="79495-261">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="79495-261">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="79495-262">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</span><span class="sxs-lookup"><span data-stu-id="79495-262">Declares whether the animation is controllable (can be paused) once started.</span></span></param>
        <summary><span data-ttu-id="79495-263">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-264">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話的なメソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="79495-265">このメソッドが呼び出されると、ストーリーボードとそれに含まれるすべてのタイムラインに対して <xref:System.Windows.Media.Animation.Clock> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="79495-266">これらのクロックは `containingObject`と共に格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="79495-267">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="79495-268">作成 HandoffBehavior の使用</span><span class="sxs-lookup"><span data-stu-id="79495-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="79495-269"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>を使用してプロパティに <xref:System.Windows.Media.Animation.Storyboard>、<xref:System.Windows.Media.Animation.AnimationTimeline>、または <xref:System.Windows.Media.Animation.AnimationClock> を適用すると、そのプロパティに以前関連付けられていたすべての <xref:System.Windows.Media.Animation.Clock> オブジェクトが引き続きシステムリソースを消費します。タイミングシステムでは、これらのクロックは自動的に削除されません。</span><span class="sxs-lookup"><span data-stu-id="79495-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="79495-270"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose>を使用して多数のクロックを適用したときのパフォーマンスの問題を回避するには、アニメーション化されたプロパティの完了後に、作成中のクロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="79495-271">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="79495-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="79495-272">プロパティからすべてのクロックを削除するには、アニメーション化されたオブジェクトの <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> または <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="79495-273">最初のパラメーターとしてアニメーション化するプロパティを指定し、2番目のパラメーターとして `null` します。</span><span class="sxs-lookup"><span data-stu-id="79495-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="79495-274">これにより、プロパティからすべてのアニメーションクロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="79495-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="79495-275">特定の <xref:System.Windows.Media.Animation.AnimationClock> をクロックの一覧から削除するには、<xref:System.Windows.Media.Animation.AnimationClock> の <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティを使用して <xref:System.Windows.Media.Animation.ClockController>を取得し、次に <xref:System.Windows.Media.Animation.ClockController.Remove%2A> の <xref:System.Windows.Media.Animation.ClockController>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="79495-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="79495-276">これは通常、クロックの <xref:System.Windows.Media.Animation.Clock.Completed> イベントハンドラーで実行されます。</span><span class="sxs-lookup"><span data-stu-id="79495-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="79495-277"><xref:System.Windows.Media.Animation.ClockController>によって制御できるのはルートクロックのみであることに注意してください。子クロックの <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="79495-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="79495-278">また、クロックの有効期間が無期限の場合は、<xref:System.Windows.Media.Animation.Clock.Completed> イベントが呼び出されないことにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="79495-279">その場合、ユーザーは <xref:System.Windows.Media.Animation.ClockController.Remove%2A>を呼び出すタイミングを決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="79495-280">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="79495-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="79495-281">オブジェクトがガベージコレクションされると、そのクロックも切断され、ガベージコレクトされます。</span><span class="sxs-lookup"><span data-stu-id="79495-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="79495-282">クロックオブジェクトの詳細については、「[アニメーションとタイミングシステムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-282">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-283">次の例では、制御可能なストーリーボードを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="79495-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="79495-284">次の例では、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> を使用して、ユーザーが左クリックしたときにアニメーションを行い、ユーザーが右クリックしたときに <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> します。</span><span class="sxs-lookup"><span data-stu-id="79495-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, frameworkTemplate As FrameworkTemplate, handoffBehavior As HandoffBehavior, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-285">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-285">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="79495-286"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="79495-287">アニメーション化するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="79495-287">The template to animate.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="79495-288">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="79495-288">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="79495-289">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="79495-289"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79495-290">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="79495-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-291">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話的なメソッドを呼び出すときに、同じ `containingObject` を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="79495-292">このメソッドが呼び出されると、ストーリーボードとそれに含まれるすべてのタイムラインに対して <xref:System.Windows.Media.Animation.Clock> オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="79495-293">これらのクロックは `containingObject`と共に格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="79495-294">ストーリーボードを開始すると、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="79495-295">作成 HandoffBehavior の使用</span><span class="sxs-lookup"><span data-stu-id="79495-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="79495-296"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>を使用してプロパティに <xref:System.Windows.Media.Animation.Storyboard>、<xref:System.Windows.Media.Animation.AnimationTimeline>、または <xref:System.Windows.Media.Animation.AnimationClock> を適用すると、そのプロパティに以前関連付けられていたすべての <xref:System.Windows.Media.Animation.Clock> オブジェクトが引き続きシステムリソースを消費します。タイミングシステムでは、これらのクロックは自動的に削除されません。</span><span class="sxs-lookup"><span data-stu-id="79495-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="79495-297"><xref:System.Windows.Media.Animation.HandoffBehavior.Compose>を使用して多数のクロックを適用したときのパフォーマンスの問題を回避するには、アニメーション化されたプロパティの完了後に、作成中のクロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="79495-298">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="79495-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="79495-299">プロパティからすべてのクロックを削除するには、アニメーション化されたオブジェクトの <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> または <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="79495-300">最初のパラメーターとしてアニメーション化するプロパティを指定し、2番目のパラメーターとして `null` します。</span><span class="sxs-lookup"><span data-stu-id="79495-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="79495-301">これにより、プロパティからすべてのアニメーションクロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="79495-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="79495-302">特定の <xref:System.Windows.Media.Animation.AnimationClock> をクロックの一覧から削除するには、<xref:System.Windows.Media.Animation.AnimationClock> の <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティを使用して <xref:System.Windows.Media.Animation.ClockController>を取得し、次に <xref:System.Windows.Media.Animation.ClockController.Remove%2A> の <xref:System.Windows.Media.Animation.ClockController>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="79495-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="79495-303">これは通常、クロックの <xref:System.Windows.Media.Animation.Clock.Completed> イベントハンドラーで実行されます。</span><span class="sxs-lookup"><span data-stu-id="79495-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="79495-304"><xref:System.Windows.Media.Animation.ClockController>によって制御できるのはルートクロックのみであることに注意してください。子クロックの <xref:System.Windows.Media.Animation.Clock.Controller%2A> プロパティは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="79495-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="79495-305">また、クロックの有効期間が無期限の場合は、<xref:System.Windows.Media.Animation.Clock.Completed> イベントが呼び出されないことにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="79495-306">その場合、ユーザーは <xref:System.Windows.Media.Animation.ClockController.Remove%2A>を呼び出すタイミングを決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="79495-307">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="79495-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="79495-308">オブジェクトがガベージコレクションされると、そのクロックも切断され、ガベージコレクトされます。</span><span class="sxs-lookup"><span data-stu-id="79495-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="79495-309">クロックオブジェクトの詳細については、「[アニメーションとタイミングシステムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-309">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-310">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="79495-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span></span> <span data-ttu-id="79495-311">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span><span class="sxs-lookup"><span data-stu-id="79495-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="79495-312">現在のオブジェクトの変更可能な複製。</span><span class="sxs-lookup"><span data-stu-id="79495-312">A modifiable clone of the current object.</span></span> <span data-ttu-id="79495-313">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</span><span class="sxs-lookup"><span data-stu-id="79495-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-314">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="79495-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="79495-315">便宜上、このメソッドは、厳密に型指定された実装を使用して、継承されたバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="79495-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="79495-316">詳細については、<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-317"><see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="79495-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span></span></summary>
        <returns><span data-ttu-id="79495-318"><see cref="T:System.Windows.Media.Animation.Storyboard" /> の新しいインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="79495-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-319">このメソッドは、さまざまな複製方法 (<xref:System.Windows.Freezable.Clone%2A> や <xref:System.Windows.Freezable.CloneCurrentValue%2A>など) の <xref:System.Windows.Media.Animation.Storyboard> クラスの新しいインスタンスを作成するときに <xref:System.Windows.Freezable.CreateInstance%2A> によって内部的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="79495-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-320">次の例は、<xref:System.Windows.Freezable.CreateInstanceCore%2A>の一般的な実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="79495-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79495-321">すべての <see cref="T:System.Windows.Media.Animation.Storyboard" /> サブクラスは、このメソッドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-321">Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method.</span></span> <span data-ttu-id="79495-322">一般的な実装では、クラスのパラメーターなしのコンストラクターを呼び出し、結果を返します。</span><span class="sxs-lookup"><span data-stu-id="79495-322">Typical implementation is to simply call the class parameterless constructor and return the result.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-323">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-323">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-324">クロックの <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 速度は、現実世界の時間と比較して、その時間が現在進行している速度です。</span><span class="sxs-lookup"><span data-stu-id="79495-324">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="79495-325">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-325">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-326">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-326">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-327">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-327">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-328">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-328">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-329">現在のグローバル速度。クロックが停止している場合は 0。</span><span class="sxs-lookup"><span data-stu-id="79495-329">The current global speed, or 0 if the clock is stopped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double? GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-330"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-330">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-331">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-331">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-332">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-332">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-333">現在のグローバル速度。クロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="79495-333">The current global speed, or <see langword="null" /> if the clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-334">クロックの <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 速度は、現実世界の時間と比較して、その時間が現在進行している速度です。</span><span class="sxs-lookup"><span data-stu-id="79495-334">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="79495-335">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-335">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-336">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-336">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-337">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-337">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double? GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-338"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-338">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-339">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-339">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-340">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-340">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-341">現在のグローバル速度。クロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="79495-341">The current global speed, or <see langword="null" /> if the clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-342">クロックの <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 速度は、現実世界の時間と比較して、その時間が現在進行している速度です。</span><span class="sxs-lookup"><span data-stu-id="79495-342">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="79495-343">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-343">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-344">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-344">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-345">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-345">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-346">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-347">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-347">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-348">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="79495-348">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-349">クロックの最初の反復処理の値は1です。</span><span class="sxs-lookup"><span data-stu-id="79495-349">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="79495-350">このストーリーボードに `true`の <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 設定が含まれている場合、完全なイテレーションは、これらのセグメントのいずれかではなく、前方逆のペアで構成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-350">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="79495-351">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-351">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-352">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-352">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-353">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-353">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int? GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-354"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-354">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-355">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-355">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-356">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-356">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-357">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="79495-357">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-358">クロックの最初の反復処理の値は1です。</span><span class="sxs-lookup"><span data-stu-id="79495-358">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="79495-359">このストーリーボードに `true`の <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 設定が含まれている場合、完全なイテレーションは、これらのセグメントのいずれかではなく、前方逆のペアで構成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-359">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="79495-360">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-360">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-361">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-361">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-362">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-362">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int? GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-363"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-363">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-364">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-364">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-365">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-365">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-366">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="79495-366">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-367">クロックの最初の反復処理の値は1です。</span><span class="sxs-lookup"><span data-stu-id="79495-367">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="79495-368">このクロックのタイムラインに `true`の <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 設定が含まれている場合、完全なイテレーションは、これらのセグメントのいずれかではなく、前方逆のペアで構成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-368">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="79495-369">現在のイテレーションに関係なく、クロックをシークすると現在のイテレーションが1に戻ります。</span><span class="sxs-lookup"><span data-stu-id="79495-369">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="79495-370">クロックを再起動すると、現在のイテレーションも1に戻ります。</span><span class="sxs-lookup"><span data-stu-id="79495-370">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="79495-371">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-371">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-372">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-372">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-373">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-373">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-374">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-375">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-375">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-376">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span><span class="sxs-lookup"><span data-stu-id="79495-376"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="79495-377">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span><span class="sxs-lookup"><span data-stu-id="79495-377">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-378">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-378">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-379">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-379">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-380">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-380">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double? GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-381"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-381">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-382">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-382">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-383">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-383">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-384">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span><span class="sxs-lookup"><span data-stu-id="79495-384"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="79495-385">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span><span class="sxs-lookup"><span data-stu-id="79495-385">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-386">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-386">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-387">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-387">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-388">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-388">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double? GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-389"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-389">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-390">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-390">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-391">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-391">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-392">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span><span class="sxs-lookup"><span data-stu-id="79495-392"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="79495-393">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span><span class="sxs-lookup"><span data-stu-id="79495-393">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-394">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-394">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-395">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-395">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-396">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-396">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-397">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-398">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-398">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-399">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span><span class="sxs-lookup"><span data-stu-id="79495-399">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-400">このメソッドでは、ストーリーボードが一時停止されているかどうかはわかりません。</span><span class="sxs-lookup"><span data-stu-id="79495-400">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="79495-401">ストーリーボードが一時停止されているかどうかを確認するには、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-401">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="79495-402">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-402">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-403">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-403">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-404">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-404">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-405"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-405">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-406">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-406">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-407">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-407">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-408">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span><span class="sxs-lookup"><span data-stu-id="79495-408">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-409">このメソッドでは、ストーリーボードが一時停止されているかどうかはわかりません。</span><span class="sxs-lookup"><span data-stu-id="79495-409">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="79495-410">ストーリーボードが一時停止されているかどうかを確認するには、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-410">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="79495-411">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-411">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-412">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-412">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-413">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-413">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-414"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-414">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-415">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-415">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-416">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-416">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-417">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span><span class="sxs-lookup"><span data-stu-id="79495-417">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-418">このメソッドでは、ストーリーボードが一時停止されているかどうかはわかりません。</span><span class="sxs-lookup"><span data-stu-id="79495-418">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="79495-419">ストーリーボードが一時停止されているかどうかを確認するには、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-419">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="79495-420">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-420">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-421">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-421">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-422">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-422">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-423">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-424">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-424">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-425">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span><span class="sxs-lookup"><span data-stu-id="79495-425"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-426">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-426">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-427">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-427">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-428">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-428">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan? GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-429"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-429">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-430">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-430">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-431">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-431">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-432">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span><span class="sxs-lookup"><span data-stu-id="79495-432"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-433">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-433">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-434">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-434">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-435">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-435">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan? GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-436"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-436">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-437">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-437">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-438">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-438">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="79495-439">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span><span class="sxs-lookup"><span data-stu-id="79495-439"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-440">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-440">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-441">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-441">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-442">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-442">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-443">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-444">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-444">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="79495-445">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="79495-445"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-446">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-446">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-447">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-447">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-448">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-448">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-449"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-449">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-450">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-450">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-451">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-451">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="79495-452">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="79495-452"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-453">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-453">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-454">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-454">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-455">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-455">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-456"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-456">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-457">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-457">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-458">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-458">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="79495-459">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="79495-459"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-460">このメソッドを使用してストーリーボードのクロックに関する情報を取得するには、ストーリーボードを制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-460">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="79495-461">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-461">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-462">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-462">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="79495-463"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の取得元となるタイムライン。</span><span class="sxs-lookup"><span data-stu-id="79495-463">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span></span></param>
        <summary><span data-ttu-id="79495-464">指定した <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-464">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="79495-465"><paramref name="element" /> の対象となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-465">The dependency object targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-466">アニメーションタイムラインで <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 添付プロパティを使用して、対象のオブジェクトを示します。</span><span class="sxs-lookup"><span data-stu-id="79495-466">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="79495-467">ストーリーボードのターゲット設定のしくみの詳細については、「<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-467">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="79495-468">添付プロパティの動作の詳細については、「[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-468">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="79495-469"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の取得元となるタイムライン。</span><span class="sxs-lookup"><span data-stu-id="79495-469">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span></span></param>
        <summary><span data-ttu-id="79495-470">指定した <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-470">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="79495-471"><paramref name="element" /> の対象となる依存関係オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="79495-471">The name of the dependency object targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-472">このメソッドは、指定されたオブジェクトの <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 添付プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-472">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="79495-473">ストーリーボードのターゲット設定のしくみの詳細については、「<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-473">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="79495-474">添付プロパティの動作の詳細については、「[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-474">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="79495-475"><see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> の取得元となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-475">The dependency object from which to get the <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span></span></param>
        <summary><span data-ttu-id="79495-476">指定した <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-476">Retrieves the <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="79495-477"><paramref name="element" /> の対象となるプロパティ。</span><span class="sxs-lookup"><span data-stu-id="79495-477">The property targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-478">このメソッドは、指定されたオブジェクトの <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 添付プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="79495-478">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="79495-479">ストーリーボードのターゲット設定のしくみの詳細については、「<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 添付プロパティ」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-479">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property.</span></span> <span data-ttu-id="79495-480">添付プロパティの動作の詳細については、「[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-480">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="79495-481"><xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> がマークアップで設定されている場合、このメソッドは空の <xref:System.Windows.PropertyPath> を返します。これは、プロパティ参照が解析されるときに内部的に解決され、格納されるためです。</span><span class="sxs-lookup"><span data-stu-id="79495-481">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-482">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" />を一時停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-483">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" />を一時停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-483">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-484">このメソッドはストーリーボードを一時停止しますが、アクティブでないか、現在一時停止している場合は、認識できません。</span><span class="sxs-lookup"><span data-stu-id="79495-484">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="79495-485">副作用として、関連付けられているすべての子も一時停止されます。</span><span class="sxs-lookup"><span data-stu-id="79495-485">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="79495-486">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-486">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-487">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-487">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-488">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-488">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="79495-489">一時停止したストーリーボードの開始</span><span class="sxs-lookup"><span data-stu-id="79495-489">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="79495-490">一時停止されたストーリーボードを <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> すると、再開して再起動するように見えます。</span><span class="sxs-lookup"><span data-stu-id="79495-490">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="79495-491">ただし、これは実際には行われません。</span><span class="sxs-lookup"><span data-stu-id="79495-491">However, that is not what actually happens.</span></span> <span data-ttu-id="79495-492"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドは、一時停止した <xref:System.Windows.Media.Animation.Storyboard> を新しい一時停止バージョンに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="79495-492">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="79495-493"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドが呼び出されるたびに、ストーリーボードのクロックオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-493">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="79495-494">これらのクロックは、アニメーション化するプロパティに配布されます。</span><span class="sxs-lookup"><span data-stu-id="79495-494">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="79495-495">そのため、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドが再度呼び出されても、クロックは再起動されません。新しいクロックで置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-495">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-496"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-496">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-497">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-497">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-498">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている、指定された <see cref="T:System.Windows.FrameworkContentElement" /> の <see cref="T:System.Windows.Media.Animation.Clock" /> を一時停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-498">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-499">このメソッドはストーリーボードを一時停止しますが、アクティブでないか、現在一時停止している場合は、認識できません。</span><span class="sxs-lookup"><span data-stu-id="79495-499">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="79495-500">副作用として、関連付けられているすべての子も一時停止されます。</span><span class="sxs-lookup"><span data-stu-id="79495-500">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="79495-501">一時停止したストーリーボードをシークしても、再開されません。</span><span class="sxs-lookup"><span data-stu-id="79495-501">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="79495-502">一時停止したストーリーボードを再開する唯一の方法は、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A> メソッドを使用することです。</span><span class="sxs-lookup"><span data-stu-id="79495-502">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="79495-503"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを再度呼び出すと、一時停止したストーリーボードが新しいものに置き換えられ、再開のような外観になります。</span><span class="sxs-lookup"><span data-stu-id="79495-503">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="79495-504">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-504">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-505">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-505">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-506">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-506">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-507">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-507">Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-508">ストーリーボードのクロックを一時停止すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-508">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="79495-509">一時停止したストーリーボードの開始</span><span class="sxs-lookup"><span data-stu-id="79495-509">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="79495-510">一時停止されたストーリーボードを <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> すると、再開して再起動するように見えます。</span><span class="sxs-lookup"><span data-stu-id="79495-510">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="79495-511">ただし、これは実際には行われません。</span><span class="sxs-lookup"><span data-stu-id="79495-511">However, that is not what actually happens.</span></span> <span data-ttu-id="79495-512"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドは、実際にそれ自体を一時停止バージョンに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="79495-512">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="79495-513"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドが呼び出されるたびに、ストーリーボードのクロックオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-513">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="79495-514">これらのクロックは、アニメーション化するプロパティに配布されます。</span><span class="sxs-lookup"><span data-stu-id="79495-514">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="79495-515">そのため、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドが再度呼び出されても、クロックは再起動されません。新しいクロックで置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-515">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-516">次の例では、制御可能なストーリーボードを使用して、<xref:System.Windows.Media.TextEffect>をアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="79495-516">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="79495-517"><xref:System.Windows.Media.TextEffect> は、<xref:System.Windows.FrameworkContentElement>の名前のスコープ内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="79495-517">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-518"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-518">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-519">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-519">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-520">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている、指定された <see cref="T:System.Windows.FrameworkElement" /> の <see cref="T:System.Windows.Media.Animation.Clock" /> を一時停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-520">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-521">このメソッドはストーリーボードを一時停止しますが、アクティブでないか、現在一時停止している場合は、認識できません。</span><span class="sxs-lookup"><span data-stu-id="79495-521">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="79495-522">副作用として、関連付けられているすべての子も一時停止されます。</span><span class="sxs-lookup"><span data-stu-id="79495-522">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="79495-523">一時停止したストーリーボードをシークしても、再開されません。</span><span class="sxs-lookup"><span data-stu-id="79495-523">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="79495-524">一時停止したストーリーボードを再開する唯一の方法は、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A> メソッドを使用することです。</span><span class="sxs-lookup"><span data-stu-id="79495-524">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="79495-525"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを再度呼び出すと、一時停止したストーリーボードが新しいものに置き換えられ、再開のような外観になります。</span><span class="sxs-lookup"><span data-stu-id="79495-525">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="79495-526">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-526">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-527">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-527">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-528">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-528">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-529">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-529">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-530">ストーリーボードのクロックを一時停止すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-530">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="79495-531">一時停止したストーリーボードの開始</span><span class="sxs-lookup"><span data-stu-id="79495-531">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="79495-532">一時停止されたストーリーボードを <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> すると、再開して再起動するように見えます。</span><span class="sxs-lookup"><span data-stu-id="79495-532">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="79495-533">ただし、これは実際には行われません。</span><span class="sxs-lookup"><span data-stu-id="79495-533">However, that is not what actually happens.</span></span> <span data-ttu-id="79495-534"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドは、実際にそれ自体を一時停止バージョンに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="79495-534">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="79495-535"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドが呼び出されるたびに、ストーリーボードのクロックオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="79495-535">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="79495-536">これらのクロックは、アニメーション化するプロパティに配布されます。</span><span class="sxs-lookup"><span data-stu-id="79495-536">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="79495-537">そのため、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドが再度呼び出されても、クロックは再起動されません。新しいクロックで置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="79495-537">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-538">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="79495-538">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="79495-539">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</span><span class="sxs-lookup"><span data-stu-id="79495-539">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-540">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="79495-540">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="79495-541">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</span><span class="sxs-lookup"><span data-stu-id="79495-541">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-542">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-542">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-543">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-543">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-544">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-544">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-545"><xref:System.Windows.Media.Animation.Storyboard><xref:System.Windows.Media.Animation.Clock>に対して実行されるすべての対話型アクションは、次のレンダリングの直後に発生するタイミングエンジンの次の目盛りで実行されます。</span><span class="sxs-lookup"><span data-stu-id="79495-545">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="79495-546">これは、<xref:System.Windows.Media.Animation.Storyboard.Remove%2A> メソッドは、この時間までアニメーション化されたプロパティに引き続き影響を与えることを意味します。</span><span class="sxs-lookup"><span data-stu-id="79495-546">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="79495-547">つまり、次にフレームが表示されるときに、ストーリーボードが削除されます。</span><span class="sxs-lookup"><span data-stu-id="79495-547">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="79495-548">この時間の前にプロパティからアニメーションの関連付けを解除する必要がある場合は、`null`の `animation` パラメーター値を指定して <xref:System.Windows.UIElement.BeginAnimation%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="79495-548">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-549"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-549">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-550">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-550">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-551">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="79495-551">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="79495-552">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</span><span class="sxs-lookup"><span data-stu-id="79495-552">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-553">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-553">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-554">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-554">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-555">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-555">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-556">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-556">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-557">ストーリーボードのクロックを削除すると、<xref:System.Windows.Media.Animation.Timeline.RemoveRequested> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-557">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-558"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-558">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-559">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-559">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-560">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="79495-560">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="79495-561">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</span><span class="sxs-lookup"><span data-stu-id="79495-561">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-562">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-562">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-563">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-563">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-564">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-564">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-565">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-565">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-566">ストーリーボードのクロックを削除すると、<xref:System.Windows.Media.Animation.Timeline.RemoveRequested> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-566">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-567">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</span><span class="sxs-lookup"><span data-stu-id="79495-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-568">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</span><span class="sxs-lookup"><span data-stu-id="79495-568">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-569">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-569">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-570">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-570">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-571">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-571">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-572"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-572">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-573">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-573">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-574">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</span><span class="sxs-lookup"><span data-stu-id="79495-574">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-575">一時停止されていないストーリーボードを再開しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="79495-575">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="79495-576">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-576">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-577">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-577">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-578">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-578">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-579">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-579">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-580">一時停止したストーリーボードをシークしても、再開されません。</span><span class="sxs-lookup"><span data-stu-id="79495-580">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="79495-581">一時停止したストーリーボードを再開する唯一の方法は、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A> メソッドを使用することです。</span><span class="sxs-lookup"><span data-stu-id="79495-581">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="79495-582">ストーリーボードを開始した後に <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを呼び出すと、古いストーリーボードが置き換えられます。これにより、再開のような外観になります。</span><span class="sxs-lookup"><span data-stu-id="79495-582">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="79495-583">一時停止したストーリーボードのクロックを再開すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-583">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-584">次の例では、制御可能なストーリーボードを使用して、<xref:System.Windows.Media.TextEffect>をアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="79495-584">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="79495-585"><xref:System.Windows.Media.TextEffect> は、<xref:System.Windows.FrameworkContentElement>の名前のスコープ内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="79495-585">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-586"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-586">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-587">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-587">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-588">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</span><span class="sxs-lookup"><span data-stu-id="79495-588">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-589">一時停止されていないストーリーボードを再開しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="79495-589">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="79495-590">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-590">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-591">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-591">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-592">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-592">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-593">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-593">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-594">一時停止したストーリーボードをシークしても、再開されません。</span><span class="sxs-lookup"><span data-stu-id="79495-594">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="79495-595">一時停止したストーリーボードを再開する唯一の方法は、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A> メソッドを使用することです。</span><span class="sxs-lookup"><span data-stu-id="79495-595">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="79495-596">ストーリーボードを開始した後に <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを呼び出すと、古いストーリーボードが置き換えられます。これにより、再開のような外観になります。</span><span class="sxs-lookup"><span data-stu-id="79495-596">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="79495-597">一時停止したストーリーボードのクロックを再開すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-597">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-598">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、新しい位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-598">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="79495-599">タイムラインが前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="79495-599">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span></span></param>
        <summary><span data-ttu-id="79495-600">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-600">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="79495-601"><see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span><span class="sxs-lookup"><span data-stu-id="79495-601">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-602">シーク操作では、ストーリーボードの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定が考慮されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-602">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="79495-603">ストーリーボードは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="79495-603">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="79495-604">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-604">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-605">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-605">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-606">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-606">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-607">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-607">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="79495-608">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="79495-608">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="79495-609"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="79495-609">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="79495-610">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-610">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="79495-611"><see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span><span class="sxs-lookup"><span data-stu-id="79495-611">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-612">シーク操作では、ストーリーボードの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定が考慮されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-612">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="79495-613">ストーリーボードは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="79495-613">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="79495-614">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-614">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-615">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-615">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-616">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-616">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-617">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-617">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-618"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-618">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-619">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-619">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="79495-620">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="79495-620">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="79495-621"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="79495-621">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="79495-622">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-622">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="79495-623"><see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span><span class="sxs-lookup"><span data-stu-id="79495-623">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-624">シーク操作では、ストーリーボードの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定が考慮されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-624">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="79495-625">ストーリーボードは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="79495-625">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="79495-626">このメソッドは、ストーリーボードのクロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> を <xref:System.Windows.Media.Animation.ClockState.Active>に変更します。</span><span class="sxs-lookup"><span data-stu-id="79495-626">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="79495-627">このメソッドは、次にティックが処理されるまで、タイミングツリーには影響しません。</span><span class="sxs-lookup"><span data-stu-id="79495-627">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="79495-628">副作用として、適切なイベントも次のようになるまで発生しません。</span><span class="sxs-lookup"><span data-stu-id="79495-628">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="79495-629">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-629">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-630">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-630">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-631">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-631">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-632">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-632">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-633">ストーリーボードをシークすると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-633">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-634">次の例は、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A> と <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> の両方のメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="79495-634">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-635"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-635">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-636">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-636">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="79495-637">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="79495-637">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="79495-638"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="79495-638">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="79495-639">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-639">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="79495-640"><see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span><span class="sxs-lookup"><span data-stu-id="79495-640">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-641">シーク操作では、ストーリーボードの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定が考慮されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-641">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="79495-642">ストーリーボードは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="79495-642">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="79495-643">このメソッドは、ストーリーボードのクロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> を <xref:System.Windows.Media.Animation.ClockState.Active>に変更します。</span><span class="sxs-lookup"><span data-stu-id="79495-643">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="79495-644">このメソッドは、次にティックが処理されるまで、タイミングツリーには影響しません。</span><span class="sxs-lookup"><span data-stu-id="79495-644">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="79495-645">副作用として、適切なイベントも次のようになるまで発生しません。</span><span class="sxs-lookup"><span data-stu-id="79495-645">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="79495-646">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-646">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-647">制御可能なストーリーボードは、制御可能になった場合、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-647">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="79495-648">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-648">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-649">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-649">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-650">ストーリーボードをシークすると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-650">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-651">次の例では、ストーリーボードの開始後に1秒にシーク (スキップ) する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="79495-651">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="79495-652">次の例は、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A> と <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> の両方のメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="79495-652">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-653">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-653">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="79495-654">タイムラインが前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="79495-654">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span></span></param>
        <summary><span data-ttu-id="79495-655">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-655">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> は、<xref:System.Windows.Media.Animation.Storyboard> の seeked 時刻を最後のクロック目盛りに揃えます。</span><span class="sxs-lookup"><span data-stu-id="79495-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="79495-657">画面が更新されるまでこれらの変更が反映されていなくても、<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>による変更を反映するために値は直ちに更新されます。</span><span class="sxs-lookup"><span data-stu-id="79495-657">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="79495-658">シーク操作では、ストーリーボードの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定が考慮されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-658">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="79495-659">ストーリーボードは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="79495-659">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="79495-660">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-660">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-661">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-661">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="79495-662">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="79495-662">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="79495-663"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="79495-663">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="79495-664">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-664">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> は、<xref:System.Windows.Media.Animation.Storyboard> の seeked 時刻を最後のクロック目盛りに揃えます。</span><span class="sxs-lookup"><span data-stu-id="79495-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="79495-666">画面が更新されるまでこれらの変更が反映されていなくても、<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>による変更を反映するために値は直ちに更新されます。</span><span class="sxs-lookup"><span data-stu-id="79495-666">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="79495-667">シーク操作では、ストーリーボードの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定が考慮されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-667">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="79495-668">ストーリーボードは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="79495-668">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="79495-669">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-669">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-670">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-670">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-671"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-671">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-672">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-672">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="79495-673">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="79495-673">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="79495-674"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="79495-674">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="79495-675">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-675">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> は、<xref:System.Windows.Media.Animation.Storyboard> の seeked 時刻を最後のクロック目盛りに揃えます。</span><span class="sxs-lookup"><span data-stu-id="79495-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="79495-677">画面が更新されるまでこれらの変更が反映されていなくても、<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>による変更を反映するために値は直ちに更新されます。</span><span class="sxs-lookup"><span data-stu-id="79495-677">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="79495-678">シーク操作では、ストーリーボードの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定が考慮されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-678">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="79495-679">ストーリーボードは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="79495-679">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="79495-680">このメソッドは、ストーリーボードのクロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> をに変更します。</span><span class="sxs-lookup"><span data-stu-id="79495-680">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="79495-681">[https://login.microsoftonline.com/consumers/](<xref:System.Windows.Media.Animation.ClockState.Active>)</span><span class="sxs-lookup"><span data-stu-id="79495-681"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="79495-682">ストーリーボードをシークすると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-682">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="79495-683">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-683">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-684">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-684">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-685">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-685">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-686">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-686">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-687">次の例は、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A> と <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> の両方のメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="79495-687">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-688"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-688">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-689">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-689">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="79495-690">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="79495-690">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="79495-691"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="79495-691">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="79495-692">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="79495-692">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> は、<xref:System.Windows.Media.Animation.Storyboard> の seeked 時刻を最後のクロック目盛りに揃えます。</span><span class="sxs-lookup"><span data-stu-id="79495-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="79495-694">画面が更新されるまでこれらの変更が反映されていなくても、<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>による変更を反映するために値は直ちに更新されます。</span><span class="sxs-lookup"><span data-stu-id="79495-694">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="79495-695">シーク操作では、ストーリーボードの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> または <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 設定が考慮されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-695">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="79495-696">ストーリーボードは、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> が1で <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>がない場合と同様に処理されます。</span><span class="sxs-lookup"><span data-stu-id="79495-696">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="79495-697">このメソッドは、ストーリーボードのクロックの <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> をに変更します。</span><span class="sxs-lookup"><span data-stu-id="79495-697">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="79495-698">[https://login.microsoftonline.com/consumers/](<xref:System.Windows.Media.Animation.ClockState.Active>)</span><span class="sxs-lookup"><span data-stu-id="79495-698"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="79495-699">ストーリーボードをシークすると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-699">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="79495-700">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-700">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-701">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-701">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-702">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-702">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-703">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-703">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-704">次の例は、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A> と <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> の両方のメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="79495-704">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-705">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-705">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio"><span data-ttu-id="79495-706">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span><span class="sxs-lookup"><span data-stu-id="79495-706">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="79495-707">この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。</span><span class="sxs-lookup"><span data-stu-id="79495-707">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="79495-708">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。</span><span class="sxs-lookup"><span data-stu-id="79495-708">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="79495-709">たとえば、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</span><span class="sxs-lookup"><span data-stu-id="79495-709">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="79495-710">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-710">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-711">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-711">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-712">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-712">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-713">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-713">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-714"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-714">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-715">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-715">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="speedRatio"><span data-ttu-id="79495-716">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span><span class="sxs-lookup"><span data-stu-id="79495-716">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="79495-717">この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。</span><span class="sxs-lookup"><span data-stu-id="79495-717">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="79495-718">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。</span><span class="sxs-lookup"><span data-stu-id="79495-718">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="79495-719">たとえば、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</span><span class="sxs-lookup"><span data-stu-id="79495-719">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="79495-720">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の対話型速度比を設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-720">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-721">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-721">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-722">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-722">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-723">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-723">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-724">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-724">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-725">このメソッドを呼び出すと、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-725">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-726">次の例では、制御可能なストーリーボードを使用して、<xref:System.Windows.Media.TextEffect>をアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="79495-726">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="79495-727"><xref:System.Windows.Media.TextEffect> は、<xref:System.Windows.FrameworkContentElement>の名前のスコープ内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="79495-727">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-728"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-728">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-729">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-729">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="speedRatio"><span data-ttu-id="79495-730">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span><span class="sxs-lookup"><span data-stu-id="79495-730">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="79495-731">この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。</span><span class="sxs-lookup"><span data-stu-id="79495-731">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="79495-732">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。</span><span class="sxs-lookup"><span data-stu-id="79495-732">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="79495-733">たとえば、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</span><span class="sxs-lookup"><span data-stu-id="79495-733">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="79495-734">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の対話型速度比を設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-734">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-735">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-735">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-736">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-736">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-737">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-737">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-738">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-738">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="79495-739">このメソッドを呼び出すと、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-739">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="79495-740">指定した依存関係オブジェクトを対象とする <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="79495-740">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span></span></param>
        <param name="value"><span data-ttu-id="79495-741">対象となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-741">The dependency object to target.</span></span></param>
        <summary><span data-ttu-id="79495-742">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、依存関係オブジェクトを対象にするように指定します。</span><span class="sxs-lookup"><span data-stu-id="79495-742">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-743">このメソッドは、指定されたオブジェクトの <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 添付プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-743">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="79495-744">ストーリーボードのターゲット設定のしくみの詳細については、「<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-744">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="79495-745">添付プロパティの動作の詳細については、「[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-745">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79495-746"><xref:System.Windows.Media.Animation.Storyboard.Target%2A> プロパティは、任意の <xref:System.Windows.DependencyObject>に設定できるため、シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="79495-746">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="79495-747">このオブジェクトが XAML から正しく参照されることは保証されていません。</span><span class="sxs-lookup"><span data-stu-id="79495-747">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="79495-748">指定した依存関係オブジェクトを対象とする <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="79495-748">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span></span></param>
        <param name="name"><span data-ttu-id="79495-749">対象とする依存関係オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="79495-749">The name of the dependency object to target.</span></span></param>
        <summary><span data-ttu-id="79495-750">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が指定した名前の依存関係オブジェクトを対象とするように指定します。</span><span class="sxs-lookup"><span data-stu-id="79495-750">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-751">このメソッドは、指定されたオブジェクトの <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 添付プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-751">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="79495-752">ストーリーボードのターゲット設定のしくみの詳細については、「<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-752">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="79495-753">添付プロパティの動作の詳細については、「[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-753">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="79495-754">指定した依存関係プロパティを関連付ける <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="79495-754">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span></span></param>
        <param name="path"><span data-ttu-id="79495-755">アニメーション化する依存関係プロパティを示すパス。</span><span class="sxs-lookup"><span data-stu-id="79495-755">A path that describe the dependency property to be animated.</span></span></param>
        <summary><span data-ttu-id="79495-756">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、指定した依存関係プロパティを対象にするようにします。</span><span class="sxs-lookup"><span data-stu-id="79495-756">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-757">このメソッドは、指定されたオブジェクトの <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 添付プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-757">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="79495-758">ストーリーボードのターゲット設定のしくみの詳細については、「<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-758">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>.</span></span> <span data-ttu-id="79495-759">添付プロパティの動作の詳細については、「[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-759">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-760">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</span><span class="sxs-lookup"><span data-stu-id="79495-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-761">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</span><span class="sxs-lookup"><span data-stu-id="79495-761">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-762">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-762">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-763">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-763">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-764">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-764">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-765"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-765">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-766">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-766">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-767">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</span><span class="sxs-lookup"><span data-stu-id="79495-767">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-768">このメソッドは、ストーリーボードの現在の時刻をアクティブ期間の終わりに進めます。この時点でのストーリーボードの動作は、<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 設定によって指定されます。</span><span class="sxs-lookup"><span data-stu-id="79495-768">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="79495-769"><xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> が <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>に設定されている場合は、ストーリーボードがいっぱいになります。プロパティが <xref:System.Windows.Media.Animation.FillBehavior.Stop>に設定されている場合、ストーリーボードは停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-769">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="79495-770">無限の期間のストーリーボードでこのメソッドを呼び出すと、無限の繰り返し回数は影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="79495-770">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="79495-771">非アクティブなストーリーボードに対してこのメソッドを呼び出すと、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="79495-771">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="79495-772">クロックをその塗りつぶし期間に進めると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-772">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="79495-773">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-773">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-774">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-774">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-775">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-775">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-776">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-776">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-777">次の例では、制御可能なストーリーボードを使用して、<xref:System.Windows.Media.TextEffect>をアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="79495-777">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="79495-778"><xref:System.Windows.Media.TextEffect> は、<xref:System.Windows.FrameworkContentElement>の名前のスコープ内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="79495-778">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-779"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-779">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-780">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-780">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-781">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</span><span class="sxs-lookup"><span data-stu-id="79495-781">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-782">このメソッドは、ストーリーボードの現在の時刻をアクティブ期間の終わりに進めます。この時点でのストーリーボードの動作は、<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 設定によって指定されます。</span><span class="sxs-lookup"><span data-stu-id="79495-782">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="79495-783"><xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> が <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>に設定されている場合は、ストーリーボードがいっぱいになります。プロパティが <xref:System.Windows.Media.Animation.FillBehavior.Stop>に設定されている場合、ストーリーボードは停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-783">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="79495-784">無限の期間のストーリーボードでこのメソッドを呼び出すと、無限の繰り返し回数は影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="79495-784">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="79495-785">非アクティブなストーリーボードに対してこのメソッドを呼び出すと、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="79495-785">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="79495-786">クロックをその塗りつぶし期間に進めると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="79495-786">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="79495-787">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-787">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-788">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-788">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-789">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-789">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-790">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-790">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-791">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79495-792">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-792">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-793">ストーリーボードを停止しても、<xref:System.Windows.Media.Animation.Timeline.Completed> イベントは発生しないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="79495-793">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-794"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-794">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-795">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-795">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-796">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-796">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-797"><xref:System.Windows.Media.Animation.ClockState.Stopped> のストーリーボードは対象のプロパティに影響しなくなります。アニメーション化されたプロパティは、前の値に戻ります。</span><span class="sxs-lookup"><span data-stu-id="79495-797">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="79495-798">クロックを停止すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントがトリガーされますが、<xref:System.Windows.Media.Animation.Timeline.Completed> イベントはトリガーされません。</span><span class="sxs-lookup"><span data-stu-id="79495-798">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="79495-799">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-799">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-800">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-800">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-801">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-801">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-802">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-802">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79495-803">次の例では、制御可能なストーリーボードを使用して、<xref:System.Windows.Media.TextEffect>をアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="79495-803">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="79495-804"><xref:System.Windows.Media.TextEffect> は、<xref:System.Windows.FrameworkContentElement>の名前のスコープ内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="79495-804">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="79495-805"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79495-805">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="79495-806">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="79495-806">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="79495-807">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="79495-807">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-808"><xref:System.Windows.Media.Animation.ClockState.Stopped> のストーリーボードは対象のプロパティに影響しなくなります。アニメーション化されたプロパティは、前の値に戻ります。</span><span class="sxs-lookup"><span data-stu-id="79495-808">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="79495-809">クロックを停止すると、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントと <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> イベントがトリガーされますが、<xref:System.Windows.Media.Animation.Timeline.Completed> イベントはトリガーされません。</span><span class="sxs-lookup"><span data-stu-id="79495-809">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="79495-810">このストーリーボードを対話的に制御するには、ストーリーボードを開始するために使用した対話型メソッドを呼び出すときに、同じ `containingObject` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-810">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="79495-811">制御可能なストーリーボードは、一時停止、再開、シーク、停止、および削除できます。</span><span class="sxs-lookup"><span data-stu-id="79495-811">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="79495-812">ストーリーボードをコードで制御できるようにするには、ストーリーボードの <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドの適切なオーバーロードを使用し、`true` を指定して制御可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-812">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="79495-813">例については、「[方法: ストーリーボードを開始後に制御する](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79495-813">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-814">アニメーション化するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-814">Gets or sets the object that should be animated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-815">ターゲットオブジェクトは、依存関係オブジェクトである必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-815">The target object must be a dependency object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79495-816"><xref:System.Windows.Media.Animation.Storyboard.Target%2A> プロパティは、任意の <xref:System.Windows.DependencyObject>に設定できるため、シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="79495-816">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="79495-817">このオブジェクトが XAML で正しく参照されることは保証されていません。</span><span class="sxs-lookup"><span data-stu-id="79495-817">There is no guaranteed that this object can be correctly referenced in XAML.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79495-818">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="79495-818">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79495-819">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="79495-819">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetProperty>|  
|<span data-ttu-id="79495-820">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="79495-820">Metadata properties set to `true`</span></span>|<span data-ttu-id="79495-821">なし</span><span class="sxs-lookup"><span data-stu-id="79495-821">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79495-822">アニメーション化するオブジェクトの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-822">Gets or sets the name of the object to animate.</span></span> <span data-ttu-id="79495-823">オブジェクトは <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" />、または <see cref="T:System.Windows.Freezable" /> である必要があります。</span><span class="sxs-lookup"><span data-stu-id="79495-823">The object must be a <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" />, or <see cref="T:System.Windows.Freezable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79495-824">このプロパティの設定は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="79495-824">Setting this property is optional.</span></span> <span data-ttu-id="79495-825"><xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> が指定されていない場合、ストーリーボードのアニメーションは次のいずれかに適用されます。</span><span class="sxs-lookup"><span data-stu-id="79495-825">If the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> is not specified, a storyboard's animations are applied to one of the following:</span></span>  
  
-   <span data-ttu-id="79495-826">アニメーションが属するストーリーボードが <xref:System.Windows.Media.Animation.BeginStoryboard>を使用して開始された場合、ストーリーボードをトリガーする <xref:System.Windows.Media.Animation.BeginStoryboard> アクションを所有する要素が対象となります。</span><span class="sxs-lookup"><span data-stu-id="79495-826">If the storyboard to which the animation belongs was started using a <xref:System.Windows.Media.Animation.BeginStoryboard>, the element that owns the <xref:System.Windows.Media.Animation.BeginStoryboard> action that triggers the storyboard is targeted.</span></span>  
  
-   <span data-ttu-id="79495-827">ストーリーボードが <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを使用して開始された場合、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A> メソッドを使用してストーリーボードを開始したときに指定された <xref:System.Windows.FrameworkElement> または <xref:System.Windows.FrameworkContentElement> が対象になります。</span><span class="sxs-lookup"><span data-stu-id="79495-827">If the storyboard was started using the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method, the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> specified when the storyboard was started with the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is targeted.</span></span>  
  
 <span data-ttu-id="79495-828">このプロパティが子を持つタイムラインに設定されている場合、その子タイムラインは、自身を指定しない限り、親の <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> を "継承" します。</span><span class="sxs-lookup"><span data-stu-id="79495-828">When this property is set on a timeline with children, those child timelines "inherit" the parent's <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> unless they specify their own.</span></span>  
  
## <a name="making-an-object-targetable"></a><span data-ttu-id="79495-829">オブジェクトの Targetable を作成する</span><span class="sxs-lookup"><span data-stu-id="79495-829">Making an Object Targetable</span></span>  
 <span data-ttu-id="79495-830">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]を使用する場合は、次の2つの操作のいずれかを実行して、オブジェクトの不要をストーリーボードで作成します。</span><span class="sxs-lookup"><span data-stu-id="79495-830">When using [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you perform one of the following two actions to make an object targetable by a storyboard:</span></span>  
  
-   <span data-ttu-id="79495-831">オブジェクトが <xref:System.Windows.FrameworkElement> または <xref:System.Windows.FrameworkContentElement>の場合は、その <xref:System.Windows.FrameworkElement.Name%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="79495-831">If the object is a <xref:System.Windows.FrameworkElement> or a <xref:System.Windows.FrameworkContentElement>, set its <xref:System.Windows.FrameworkElement.Name%2A> property.</span></span>  
  
-   <span data-ttu-id="79495-832">オブジェクトが <xref:System.Windows.Freezable> またはカスタム <xref:System.Windows.FrameworkContentElement> または <xref:System.Windows.FrameworkContentElement>の場合は、 [X:Name ディレクティブ](~/docs/framework/xaml-services/x-name-directive.md)マークアップ拡張機能を使用して名前を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="79495-832">If the object is a <xref:System.Windows.Freezable> or a custom <xref:System.Windows.FrameworkContentElement> or <xref:System.Windows.FrameworkContentElement>, assign it a name using the [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) markup extension.</span></span>  
  
 <span data-ttu-id="79495-833">コードを使用する場合は、<xref:System.Windows.NameScope.RegisterName%2A> メソッドを使用してオブジェクトに名前を割り当てることによって、オブジェクトの不要を作成します。</span><span class="sxs-lookup"><span data-stu-id="79495-833">When using code, you make an object targetable by using the <xref:System.Windows.NameScope.RegisterName%2A> method to assign the object a name.</span></span>  
  
<a name="dependencyPropertyInfo_TargetName"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79495-834">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="79495-834">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79495-835">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="79495-835">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetNameProperty>|  
|<span data-ttu-id="79495-836">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="79495-836">Metadata properties set to `true`</span></span>|<span data-ttu-id="79495-837">なし</span><span class="sxs-lookup"><span data-stu-id="79495-837">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79495-838"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="79495-838">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79495-839"><see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="79495-839">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79495-840"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="79495-840">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>
