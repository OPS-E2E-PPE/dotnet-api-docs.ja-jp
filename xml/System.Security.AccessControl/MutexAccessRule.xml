<Type Name="MutexAccessRule" FullName="System.Security.AccessControl.MutexAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25e1e35570826371cc81a21d529172c5b63e4f19" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75081558" /></Metadata><TypeSignature Language="C#" Value="public sealed class MutexAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type MutexAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="21acd-101">ユーザーまたはグループに許可されたアクセス権セットまたは拒否されたアクセス権セットを表します。</span><span class="sxs-lookup"><span data-stu-id="21acd-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="21acd-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="21acd-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21acd-103"><xref:System.Security.AccessControl.MutexAccessRule> クラスは、名前付きシステムミューテックスで Windows アクセス制御セキュリティを管理するために .NET Framework が提供するクラスのセットの1つです。</span><span class="sxs-lookup"><span data-stu-id="21acd-103">The <xref:System.Security.AccessControl.MutexAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes.</span></span> <span data-ttu-id="21acd-104">これらのクラスの概要と、基になる Windows アクセス制御構造との関係については、「<xref:System.Security.AccessControl.MutexSecurity>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21acd-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21acd-105">Windows アクセス制御セキュリティは、名前付きシステムミューテックスに対してのみ意味があります。</span><span class="sxs-lookup"><span data-stu-id="21acd-105">Windows access control security is meaningful only for named system mutexes.</span></span> <span data-ttu-id="21acd-106"><xref:System.Threading.Mutex> オブジェクトがローカルミューテックスを表している場合、アクセス制御は無関係です。</span><span class="sxs-lookup"><span data-stu-id="21acd-106">If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="21acd-107">名前付きミューテックスに現在適用されている規則の一覧を取得するには、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> メソッドを使用して <xref:System.Security.AccessControl.MutexSecurity> オブジェクトを取得し、その <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> メソッドを使用して <xref:System.Security.AccessControl.MutexAccessRule> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="21acd-107">To get a list of the rules currently applied to a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.MutexSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span>  
  
 <span data-ttu-id="21acd-108"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトは、基になる随意アクセス制御リスト (DACL) のアクセス制御エントリと一対一でマップされません。</span><span class="sxs-lookup"><span data-stu-id="21acd-108"><xref:System.Security.AccessControl.MutexAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="21acd-109">ミューテックスのすべてのアクセス規則のセットを取得すると、そのセットには、すべてのアクセス制御エントリを表すために現在必要な規則の最小数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="21acd-109">When you get the set of all access rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21acd-110">ルールを適用および削除すると、基になるアクセス制御エントリが変わります。</span><span class="sxs-lookup"><span data-stu-id="21acd-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="21acd-111">可能であれば、ルール内の情報を結合して、アクセス制御エントリの最小数を維持します。</span><span class="sxs-lookup"><span data-stu-id="21acd-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="21acd-112">したがって、現在のルールの一覧を読むと、追加したすべてのルールの一覧とまったく同じように表示されない場合があります。</span><span class="sxs-lookup"><span data-stu-id="21acd-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="21acd-113"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトを使用して、ユーザーまたはグループに対して許可または拒否するアクセス権を指定します。</span><span class="sxs-lookup"><span data-stu-id="21acd-113">Use <xref:System.Security.AccessControl.MutexAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="21acd-114"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトは、常に許可されたアクセス権または拒否されたアクセスのいずれかを表します。</span><span class="sxs-lookup"><span data-stu-id="21acd-114">A <xref:System.Security.AccessControl.MutexAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="21acd-115">名前付きシステムミューテックスに規則を適用するには、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> メソッドを使用して、<xref:System.Security.AccessControl.MutexSecurity> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="21acd-115">To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="21acd-116">規則を追加するメソッドを使用して <xref:System.Security.AccessControl.MutexSecurity> オブジェクトを変更した後、<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> メソッドを使用してセキュリティオブジェクトを再アタッチします。</span><span class="sxs-lookup"><span data-stu-id="21acd-116">Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="21acd-117"><xref:System.Security.AccessControl.MutexSecurity> オブジェクトに加えた変更は、<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> メソッドを呼び出して、変更されたセキュリティオブジェクトを名前付きミューテックスに割り当てるまで、名前付きミューテックスのアクセスレベルには影響しません。</span><span class="sxs-lookup"><span data-stu-id="21acd-117">Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named mutex.</span></span>  
  
 <span data-ttu-id="21acd-118"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="21acd-118"><xref:System.Security.AccessControl.MutexAccessRule> objects are immutable.</span></span> <span data-ttu-id="21acd-119">ミューテックスのセキュリティは <xref:System.Security.AccessControl.MutexSecurity> クラスのメソッドを使用して変更され、ルールを追加または削除します。これを行うと、基になるアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="21acd-119">Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21acd-120">同期オブジェクトのセキュリティは、Windows 98 または Windows Millennium Edition ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="21acd-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21acd-121"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトの作成と使用のコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="21acd-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span> <span data-ttu-id="21acd-122">この例では、<xref:System.Security.AccessControl.MutexSecurity> オブジェクトを作成し、現在のユーザーに対してさまざまな権限を許可および拒否する規則を追加し、結果として得られる規則のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="21acd-122">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="21acd-123">この例では、現在のユーザーに対して新しい権限を許可し、その結果を表示して、新しい権限が既存の <xref:System.Security.AccessControl.AccessControlType.Allow> ルールとマージされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="21acd-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21acd-124">この例では、<xref:System.Threading.Mutex> オブジェクトにセキュリティオブジェクトをアタッチしません。</span><span class="sxs-lookup"><span data-stu-id="21acd-124">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="21acd-125">セキュリティオブジェクトをアタッチする例については、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> と <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21acd-125">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.MutexSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21acd-126"><see cref="T:System.Security.AccessControl.MutexAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="21acd-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="21acd-127">規則の適用対象となるユーザーまたはグループ。</span><span class="sxs-lookup"><span data-stu-id="21acd-127">The user or group the rule applies to.</span></span> <span data-ttu-id="21acd-128"><see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="21acd-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="21acd-129">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.MutexRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="21acd-129">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="21acd-130">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="21acd-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="21acd-131">規則を適用するユーザーまたはグループ、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.MutexAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="21acd-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21acd-132"><xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>、または <xref:System.Threading.WaitHandle.WaitAll%2A> メソッドを呼び出すことによって <xref:System.Threading.Mutex> を待機するには、ユーザーは <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> アクセス権を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="21acd-132">To wait on a <xref:System.Threading.Mutex> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="21acd-133"><xref:System.Threading.Mutex.ReleaseMutex%2A> メソッドを呼び出すことにより、ミューテックスを解放するには、ユーザーが <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> アクセス権を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="21acd-133">To release the mutex, by calling the <xref:System.Threading.Mutex.ReleaseMutex%2A> method, the user must have <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21acd-134"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="21acd-134"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="21acd-135">または</span><span class="sxs-lookup"><span data-stu-id="21acd-135">-or-</span></span> 
 <span data-ttu-id="21acd-136"><paramref name="type" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="21acd-136"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21acd-137"><paramref name="identity" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="21acd-137"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="21acd-138">または</span><span class="sxs-lookup"><span data-stu-id="21acd-138">-or-</span></span> 
 <span data-ttu-id="21acd-139"><paramref name="eventRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="21acd-139"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21acd-140"><paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span><span class="sxs-lookup"><span data-stu-id="21acd-140"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (string identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::String ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : string * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="21acd-141">規則の適用対象となるユーザー名またはグループ名。</span><span class="sxs-lookup"><span data-stu-id="21acd-141">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="21acd-142">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.MutexRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="21acd-142">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="21acd-143">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="21acd-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="21acd-144">規則を適用するユーザーまたはグループの名前、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.MutexAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="21acd-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21acd-145"><xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>、または <xref:System.Threading.WaitHandle.WaitAll%2A> メソッドを呼び出すことによって <xref:System.Threading.Mutex> を待機するには、ユーザーは <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> アクセス権を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="21acd-145">To wait on a <xref:System.Threading.Mutex> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="21acd-146">ミューテックスを解放するには、<xref:System.Threading.Mutex.ReleaseMutex%2A> メソッドを呼び出すことによって、ユーザーは <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> アクセス権を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="21acd-146">To release the mutex, by calling the <xref:System.Threading.Mutex.ReleaseMutex%2A> methods, the user must have <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 <span data-ttu-id="21acd-147">このコンストラクターは、`identity` を <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> コンストラクターに渡し、新しく作成された <xref:System.Security.Principal.NTAccount> オブジェクトを <xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29> コンストラクターに渡すことによって <xref:System.Security.Principal.NTAccount> オブジェクトを作成することと同じです。</span><span class="sxs-lookup"><span data-stu-id="21acd-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21acd-148">次のコード例は、このコンストラクターを使用して <xref:System.Security.AccessControl.MutexAccessRule> オブジェクトを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="21acd-148">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span> <span data-ttu-id="21acd-149">この例では、<xref:System.Security.AccessControl.MutexSecurity> オブジェクトを作成し、現在のユーザーに対してさまざまな権限を許可および拒否する規則を追加し、結果として得られる規則のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="21acd-149">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="21acd-150">この例では、現在のユーザーに対して新しい権限を許可し、その結果を表示して、新しい権限が既存の <xref:System.Security.AccessControl.AccessControlType.Allow> ルールとマージされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="21acd-150">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21acd-151">この例では、<xref:System.Threading.Mutex> オブジェクトにセキュリティオブジェクトをアタッチしません。</span><span class="sxs-lookup"><span data-stu-id="21acd-151">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="21acd-152">セキュリティオブジェクトをアタッチする例については、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> と <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21acd-152">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21acd-153"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="21acd-153"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="21acd-154">または</span><span class="sxs-lookup"><span data-stu-id="21acd-154">-or-</span></span> 
 <span data-ttu-id="21acd-155"><paramref name="type" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="21acd-155"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21acd-156"><paramref name="eventRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="21acd-156"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21acd-157"><paramref name="identity" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="21acd-157"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="21acd-158">または</span><span class="sxs-lookup"><span data-stu-id="21acd-158">-or-</span></span> 
 <span data-ttu-id="21acd-159"><paramref name="identity" /> は長さゼロの文字列です。</span><span class="sxs-lookup"><span data-stu-id="21acd-159"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="21acd-160">または</span><span class="sxs-lookup"><span data-stu-id="21acd-160">-or-</span></span> 
 <span data-ttu-id="21acd-161"><paramref name="identity" /> が 512 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="21acd-161"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21acd-162">アクセス規則で許可されたアクセス権または拒否されたアクセス権を取得します。</span><span class="sxs-lookup"><span data-stu-id="21acd-162">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="21acd-163">アクセス規則で許可されたアクセス権または拒否されたアクセス権を表す <see cref="T:System.Security.AccessControl.MutexRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="21acd-163">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21acd-164"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="21acd-164"><xref:System.Security.AccessControl.MutexAccessRule> objects are immutable.</span></span> <span data-ttu-id="21acd-165">別のユーザー、別の権限、または別の <xref:System.Security.AccessControl.AccessControlType>を表す新しいアクセスルールを作成することはできますが、既存のアクセスルールを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="21acd-165">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21acd-166">次のコード例では、<xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A> プロパティを使用して、<xref:System.Security.AccessControl.MutexSecurity> オブジェクトに含まれる一連の規則の権限を表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="21acd-166">The following code example demonstrates the use of the <xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A> property to display the rights in the set of rules contained in a <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="21acd-167">この例では、<xref:System.Security.AccessControl.MutexSecurity> オブジェクトを作成し、現在のユーザーに対してさまざまな権限を許可および拒否する規則を追加し、結果として得られる規則のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="21acd-167">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="21acd-168">この例では、現在のユーザーに対して新しい権限を許可し、その結果を表示して、新しい権限が既存の <xref:System.Security.AccessControl.AccessControlType.Allow> ルールとマージされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="21acd-168">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21acd-169">この例では、<xref:System.Threading.Mutex> オブジェクトにセキュリティオブジェクトをアタッチしません。</span><span class="sxs-lookup"><span data-stu-id="21acd-169">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="21acd-170">セキュリティオブジェクトをアタッチする例については、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> と <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21acd-170">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
