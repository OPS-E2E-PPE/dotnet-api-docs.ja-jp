<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba5ae72cd5fcf2254d1d0dfbf10213e58c57827f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75164134" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dadab-101">ユーザーまたはグループについて監査するアクセス権セットを表します。</span><span class="sxs-lookup"><span data-stu-id="dadab-101">Represents a set of access rights to be audited for a user or group.</span></span> <span data-ttu-id="dadab-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="dadab-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadab-103"><xref:System.Security.AccessControl.RegistryAuditRule> クラスは、レジストリキーの Windows アクセス制御セキュリティを管理するために .NET Framework が提供するクラスのセットの1つです。</span><span class="sxs-lookup"><span data-stu-id="dadab-103">The <xref:System.Security.AccessControl.RegistryAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="dadab-104">これらのクラスの概要と、基になる Windows アクセス制御構造との関係については、「<xref:System.Security.AccessControl.RegistrySecurity>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="dadab-104">For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dadab-105">Windows アクセス制御セキュリティは、レジストリキーにのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="dadab-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="dadab-106">キーに格納されている個々のキーと値のペアには適用できません。</span><span class="sxs-lookup"><span data-stu-id="dadab-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="dadab-107">現在レジストリキーに適用されている監査規則の一覧を取得するには、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> メソッドを使用して <xref:System.Security.AccessControl.RegistrySecurity> オブジェクトを取得し、その <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> メソッドを使用して <xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="dadab-107">To get a list of the audit rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAuditRule> objects.</span></span>  
  
 <span data-ttu-id="dadab-108"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは、基になる随意アクセス制御リスト (DACL) のアクセス制御エントリと一対一でマップされません。</span><span class="sxs-lookup"><span data-stu-id="dadab-108"><xref:System.Security.AccessControl.RegistryAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="dadab-109">レジストリキーのすべての監査規則のセットを取得すると、そのセットには、すべてのアクセス制御エントリを表すために現在必要な規則の最小数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="dadab-109">When you get the set of all audit rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dadab-110">ルールを適用および削除すると、基になるアクセス制御エントリが変わります。</span><span class="sxs-lookup"><span data-stu-id="dadab-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="dadab-111">可能であれば、ルール内の情報を結合して、アクセス制御エントリの最小数を維持します。</span><span class="sxs-lookup"><span data-stu-id="dadab-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="dadab-112">したがって、現在のルールの一覧を読むと、追加したすべてのルールの一覧とまったく同じように表示されない場合があります。</span><span class="sxs-lookup"><span data-stu-id="dadab-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="dadab-113"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトを使用して、ユーザーまたはグループに対して監査するアクセス権を指定します。</span><span class="sxs-lookup"><span data-stu-id="dadab-113">Use <xref:System.Security.AccessControl.RegistryAuditRule> objects to specify access rights to be audited for a user or group.</span></span> <span data-ttu-id="dadab-114">レジストリキーに規則を適用するには、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> メソッドを使用して、<xref:System.Security.AccessControl.RegistrySecurity> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="dadab-114">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="dadab-115">規則を追加するメソッドを使用して <xref:System.Security.AccessControl.RegistrySecurity> オブジェクトを変更した後、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> メソッドを使用してセキュリティオブジェクトを再アタッチします。</span><span class="sxs-lookup"><span data-stu-id="dadab-115">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dadab-116"><xref:System.Security.AccessControl.RegistrySecurity> オブジェクトに加えた変更は、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> メソッドを呼び出して変更されたセキュリティオブジェクトをレジストリキーに割り当てるまで、レジストリキーのアクセスレベルには影響しません。</span><span class="sxs-lookup"><span data-stu-id="dadab-116">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="dadab-117"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="dadab-117"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="dadab-118">レジストリキーのセキュリティは、<xref:System.Security.AccessControl.RegistrySecurity> クラスのメソッドを使用して規則を追加または削除することによって変更されます。これを行うと、基になるアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="dadab-118">Security for a registry key is modified by using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dadab-119"><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dadab-119">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="dadab-120">規則の適用対象となるユーザーまたはグループ。</span><span class="sxs-lookup"><span data-stu-id="dadab-120">The user or group the rule applies to.</span></span> <span data-ttu-id="dadab-121"><see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="dadab-121">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="dadab-122">監査するアクセスの種類を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-122">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="dadab-123">監査規則を現在のキーのサブキーに適用するかどうかを指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-123">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying whether the audit rule applies to subkeys of the current key.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="dadab-124">継承された監査規則を現在のキーのサブ キーに反映させる方法に影響する <see cref="T:System.Security.AccessControl.PropagationFlags" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-124">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that affect the way an inherited audit rule is propagated to subkeys of the current key.</span></span></param>
        <param name="flags"><span data-ttu-id="dadab-125">成功、失敗、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-125">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span></span></param>
        <summary><span data-ttu-id="dadab-126">監査するユーザーまたはグループ、監査する権限、継承を考慮するかどうか、成功、失敗、またはその両方のいずれを監査するかを指定して、<see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dadab-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadab-127">すべてのレジストリキーはコンテナーであるため、レジストリキーにとって意味のある唯一の継承フラグは <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> フラグです。</span><span class="sxs-lookup"><span data-stu-id="dadab-127">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dadab-128">このフラグが指定されていない場合、伝達フラグは無視され、直接のキーのみが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="dadab-128">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="dadab-129">フラグが指定されている場合、ルールは次の表に示すように反映されます。</span><span class="sxs-lookup"><span data-stu-id="dadab-129">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="dadab-130">この表では、子サブキー CS と孫サブキー GS を持つサブキーがあることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="dadab-130">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="dadab-131">つまり、孫サブキーへのパスは、</span><span class="sxs-lookup"><span data-stu-id="dadab-131">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="dadab-132">伝達フラグ</span><span class="sxs-lookup"><span data-stu-id="dadab-132">Propagation flags</span></span>|<span data-ttu-id="dadab-133">S</span><span class="sxs-lookup"><span data-stu-id="dadab-133">S</span></span>|<span data-ttu-id="dadab-134">CS</span><span class="sxs-lookup"><span data-stu-id="dadab-134">CS</span></span>|<span data-ttu-id="dadab-135">GS</span><span class="sxs-lookup"><span data-stu-id="dadab-135">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="dadab-136">X</span><span class="sxs-lookup"><span data-stu-id="dadab-136">X</span></span>|<span data-ttu-id="dadab-137">X</span><span class="sxs-lookup"><span data-stu-id="dadab-137">X</span></span>|<span data-ttu-id="dadab-138">X</span><span class="sxs-lookup"><span data-stu-id="dadab-138">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="dadab-139">X</span><span class="sxs-lookup"><span data-stu-id="dadab-139">X</span></span>|<span data-ttu-id="dadab-140">X</span><span class="sxs-lookup"><span data-stu-id="dadab-140">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="dadab-141">X</span><span class="sxs-lookup"><span data-stu-id="dadab-141">X</span></span>|<span data-ttu-id="dadab-142">X</span><span class="sxs-lookup"><span data-stu-id="dadab-142">X</span></span>|  
|<span data-ttu-id="dadab-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>、 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="dadab-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="dadab-144">X</span><span class="sxs-lookup"><span data-stu-id="dadab-144">X</span></span>||  
  
 <span data-ttu-id="dadab-145">孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。</span><span class="sxs-lookup"><span data-stu-id="dadab-145">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="dadab-146">たとえば、`inheritanceFlags` に対して <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> フラグが指定されていて、`propagationFlags`に <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 伝達フラグが指定されている場合、この規則は直接のサブキーには適用されませんが、すべての直接の子サブキーと、そこに含まれるすべてのサブキーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="dadab-146">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dadab-147">`inheritanceFlags`に <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> フラグを指定することもできますが、そのような点はありません。</span><span class="sxs-lookup"><span data-stu-id="dadab-147">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="dadab-148">アクセス制御のために、サブキーの名前と値のペアは個別のオブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="dadab-148">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="dadab-149">名前と値のペアへのアクセス権は、サブキーの権限によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="dadab-149">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="dadab-150">さらに、すべてのサブキーはコンテナーであるため (つまり、他のサブキーを含めることができます)、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> フラグの影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="dadab-150">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="dadab-151">最後に、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> フラグを指定すると、互換性のある規則の通常の組み合わせに干渉するため、規則のメンテナンスが不必要に複雑になります。</span><span class="sxs-lookup"><span data-stu-id="dadab-151">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dadab-152"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="dadab-152"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="dadab-153">または</span><span class="sxs-lookup"><span data-stu-id="dadab-153">-or-</span></span> 
 <span data-ttu-id="dadab-154"><paramref name="flags" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="dadab-154"><paramref name="flags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="dadab-155">または</span><span class="sxs-lookup"><span data-stu-id="dadab-155">-or-</span></span> 
 <span data-ttu-id="dadab-156"><paramref name="inheritanceFlags" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="dadab-156"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="dadab-157">または</span><span class="sxs-lookup"><span data-stu-id="dadab-157">-or-</span></span> 
 <span data-ttu-id="dadab-158"><paramref name="propagationFlags" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="dadab-158"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dadab-159"><paramref name="identity" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="dadab-159"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dadab-160">または</span><span class="sxs-lookup"><span data-stu-id="dadab-160">-or-</span></span> 
 <span data-ttu-id="dadab-161"><paramref name="registryRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="dadab-161"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dadab-162"><paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span><span class="sxs-lookup"><span data-stu-id="dadab-162"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="dadab-163">規則の適用対象となるユーザー名またはグループ名。</span><span class="sxs-lookup"><span data-stu-id="dadab-163">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="dadab-164">監査するアクセスの種類を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-164">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="dadab-165">監査規則を現在のキーのサブキーに適用するかどうかを指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-165">A combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags that specifies whether the audit rule applies to subkeys of the current key.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="dadab-166">継承された監査規則を現在のキーのサブ キーに反映させる方法に影響する <see cref="T:System.Security.AccessControl.PropagationFlags" /> フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-166">A combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags that affect the way an inherited audit rule is propagated to subkeys of the current key.</span></span></param>
        <param name="flags"><span data-ttu-id="dadab-167">成功、失敗、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-167">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span></span></param>
        <summary><span data-ttu-id="dadab-168">監査するユーザーまたはグループの名前、監査する権限、継承を考慮するかどうか、成功、失敗、またはその両方のいずれを監査するかを指定して、<see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dadab-168">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the name of the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadab-169">すべてのレジストリキーはコンテナーであるため、レジストリキーにとって意味のある唯一の継承フラグは <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> フラグです。</span><span class="sxs-lookup"><span data-stu-id="dadab-169">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dadab-170">このフラグが指定されていない場合、伝達フラグは無視され、直接のキーのみが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="dadab-170">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="dadab-171">フラグが指定されている場合、ルールは次の表に示すように反映されます。</span><span class="sxs-lookup"><span data-stu-id="dadab-171">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="dadab-172">この表では、子サブキー CS と孫サブキー GS を持つサブキーがあることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="dadab-172">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="dadab-173">つまり、孫サブキーへのパスは、</span><span class="sxs-lookup"><span data-stu-id="dadab-173">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="dadab-174">伝達フラグ</span><span class="sxs-lookup"><span data-stu-id="dadab-174">Propagation flags</span></span>|<span data-ttu-id="dadab-175">S</span><span class="sxs-lookup"><span data-stu-id="dadab-175">S</span></span>|<span data-ttu-id="dadab-176">CS</span><span class="sxs-lookup"><span data-stu-id="dadab-176">CS</span></span>|<span data-ttu-id="dadab-177">GS</span><span class="sxs-lookup"><span data-stu-id="dadab-177">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="dadab-178">X</span><span class="sxs-lookup"><span data-stu-id="dadab-178">X</span></span>|<span data-ttu-id="dadab-179">X</span><span class="sxs-lookup"><span data-stu-id="dadab-179">X</span></span>|<span data-ttu-id="dadab-180">X</span><span class="sxs-lookup"><span data-stu-id="dadab-180">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="dadab-181">X</span><span class="sxs-lookup"><span data-stu-id="dadab-181">X</span></span>|<span data-ttu-id="dadab-182">X</span><span class="sxs-lookup"><span data-stu-id="dadab-182">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="dadab-183">X</span><span class="sxs-lookup"><span data-stu-id="dadab-183">X</span></span>|<span data-ttu-id="dadab-184">X</span><span class="sxs-lookup"><span data-stu-id="dadab-184">X</span></span>|  
|<span data-ttu-id="dadab-185"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>、 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="dadab-185"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="dadab-186">X</span><span class="sxs-lookup"><span data-stu-id="dadab-186">X</span></span>||  
  
 <span data-ttu-id="dadab-187">孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。</span><span class="sxs-lookup"><span data-stu-id="dadab-187">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="dadab-188">たとえば、`inheritanceFlags` に対して <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> フラグが指定されていて、`propagationFlags`に <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 伝達フラグが指定されている場合、この規則は直接のサブキーには適用されませんが、すべての直接の子サブキーと、そこに含まれるすべてのサブキーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="dadab-188">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dadab-189">`inheritanceFlags`に <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> フラグを指定することもできますが、そのような点はありません。</span><span class="sxs-lookup"><span data-stu-id="dadab-189">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="dadab-190">アクセス制御のために、サブキーの名前と値のペアは個別のオブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="dadab-190">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="dadab-191">名前と値のペアへのアクセス権は、サブキーの権限によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="dadab-191">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="dadab-192">さらに、すべてのサブキーはコンテナーであるため (つまり、他のサブキーを含めることができます)、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> フラグの影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="dadab-192">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="dadab-193">最後に、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> フラグを指定すると、互換性のある規則の通常の組み合わせに干渉するため、規則のメンテナンスが不必要に複雑になります。</span><span class="sxs-lookup"><span data-stu-id="dadab-193">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 <span data-ttu-id="dadab-194">このコンストラクターは、`identity` を <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> コンストラクターに渡し、新しく作成された <xref:System.Security.Principal.NTAccount> オブジェクトを <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> コンストラクターに渡すことによって <xref:System.Security.Principal.NTAccount> オブジェクトを作成することと同じです。</span><span class="sxs-lookup"><span data-stu-id="dadab-194">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dadab-195"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="dadab-195"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="dadab-196">または</span><span class="sxs-lookup"><span data-stu-id="dadab-196">-or-</span></span> 
 <span data-ttu-id="dadab-197"><paramref name="flags" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="dadab-197"><paramref name="flags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="dadab-198">または</span><span class="sxs-lookup"><span data-stu-id="dadab-198">-or-</span></span> 
 <span data-ttu-id="dadab-199"><paramref name="inheritanceFlags" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="dadab-199"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="dadab-200">または</span><span class="sxs-lookup"><span data-stu-id="dadab-200">-or-</span></span> 
 <span data-ttu-id="dadab-201"><paramref name="propagationFlags" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="dadab-201"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dadab-202"><paramref name="registryRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="dadab-202"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dadab-203"><paramref name="identity" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="dadab-203"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dadab-204">または</span><span class="sxs-lookup"><span data-stu-id="dadab-204">-or-</span></span> 
 <span data-ttu-id="dadab-205"><paramref name="identity" /> は長さゼロの文字列です。</span><span class="sxs-lookup"><span data-stu-id="dadab-205"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="dadab-206">または</span><span class="sxs-lookup"><span data-stu-id="dadab-206">-or-</span></span> 
 <span data-ttu-id="dadab-207"><paramref name="identity" /> が 512 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="dadab-207"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dadab-208">監査規則の影響を受けるアクセス権を取得します。</span><span class="sxs-lookup"><span data-stu-id="dadab-208">Gets the access rights affected by the audit rule.</span></span></summary>
        <value><span data-ttu-id="dadab-209">監査規則の影響を受ける権限を示す <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="dadab-209">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values that indicates the rights affected by the audit rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadab-210"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="dadab-210"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="dadab-211">別のユーザー、別の権限、または <xref:System.Security.AccessControl.AuditFlags> フラグの異なる組み合わせを表す新しい監査規則を作成できますが、既存の監査規則を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="dadab-211">You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
