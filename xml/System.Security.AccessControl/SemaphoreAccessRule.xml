<Type Name="SemaphoreAccessRule" FullName="System.Security.AccessControl.SemaphoreAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea425a4db0adb3a919c76f24689bf51f0d192999" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82500207" /></Metadata><TypeSignature Language="C#" Value="public sealed class SemaphoreAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type SemaphoreAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7b6d4-101">ユーザーまたはグループに許可されたアクセス権セットまたは拒否されたアクセス権セットを表します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="7b6d4-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b6d4-103"><xref:System.Security.AccessControl.SemaphoreAccessRule> クラスは、名前付きシステムセマフォで Windows アクセス制御セキュリティを管理するために .NET Framework が提供するクラスのセットの1つです。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-103">The <xref:System.Security.AccessControl.SemaphoreAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system semaphores.</span></span> <span data-ttu-id="7b6d4-104">これらのクラスの概要と、基になる Windows アクセス制御構造との関係については、「<xref:System.Security.AccessControl.SemaphoreSecurity>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.SemaphoreSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b6d4-105">Windows アクセス制御セキュリティは、名前付きシステムセマフォに対してのみ意味があります。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-105">Windows access control security is meaningful only for named system semaphores.</span></span> <span data-ttu-id="7b6d4-106"><xref:System.Threading.Semaphore> オブジェクトがローカルセマフォを表している場合、アクセス制御は無関係です。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-106">If a <xref:System.Threading.Semaphore> object represents a local semaphore, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="7b6d4-107">名前付きセマフォに現在適用されている規則の一覧を取得するには、<xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> メソッドを使用して <xref:System.Security.AccessControl.SemaphoreSecurity> オブジェクトを取得し、その <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> メソッドを使用して <xref:System.Security.AccessControl.SemaphoreAccessRule> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-107">To get a list of the rules currently applied to a named semaphore, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.SemaphoreSecurity> object, then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.SemaphoreAccessRule> objects.</span></span>  
  
 <span data-ttu-id="7b6d4-108"><xref:System.Security.AccessControl.SemaphoreAccessRule> オブジェクトは、基になる随意アクセス制御リスト (DACL) のアクセス制御エントリと一対一でマップされません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-108"><xref:System.Security.AccessControl.SemaphoreAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="7b6d4-109">セマフォのすべてのアクセスルールのセットを取得すると、そのセットには、すべてのアクセス制御エントリを表すために現在必要なルールの最小数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-109">When you get the set of all access rules for a semaphore, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b6d4-110">ルールを適用および削除すると、基になるアクセス制御エントリが変わります。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="7b6d4-111">可能であれば、ルール内の情報を結合して、アクセス制御エントリの最小数を維持します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="7b6d4-112">したがって、現在のルールの一覧を読むと、追加したすべてのルールの一覧とまったく同じように表示されない場合があります。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="7b6d4-113"><xref:System.Security.AccessControl.SemaphoreAccessRule> オブジェクトを使用して、ユーザーまたはグループに対して許可または拒否するアクセス権を指定します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-113">Use <xref:System.Security.AccessControl.SemaphoreAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="7b6d4-114"><xref:System.Security.AccessControl.SemaphoreAccessRule> オブジェクトは、常に許可されたアクセス権または拒否されたアクセスのいずれかを表します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-114">A <xref:System.Security.AccessControl.SemaphoreAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="7b6d4-115">名前付きシステムセマフォに規則を適用するには、<xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> メソッドを使用して、<xref:System.Security.AccessControl.SemaphoreSecurity> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-115">To apply a rule to a named system semaphore, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="7b6d4-116">規則を追加するメソッドを使用して <xref:System.Security.AccessControl.SemaphoreSecurity> オブジェクトを変更した後、<xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> メソッドを使用してセキュリティオブジェクトを再アタッチします。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-116">Modify the <xref:System.Security.AccessControl.SemaphoreSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7b6d4-117"><xref:System.Security.AccessControl.SemaphoreSecurity> オブジェクトに加えた変更は、<xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> メソッドを呼び出して、変更されたセキュリティオブジェクトを名前付きセマフォに割り当てるまで、名前付きセマフォのアクセスレベルには影響しません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-117">Changes you make to a <xref:System.Security.AccessControl.SemaphoreSecurity> object do not affect the access levels of the named semaphore until you call the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named semaphore.</span></span>  
  
 <span data-ttu-id="7b6d4-118"><xref:System.Security.AccessControl.SemaphoreAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-118"><xref:System.Security.AccessControl.SemaphoreAccessRule> objects are immutable.</span></span> <span data-ttu-id="7b6d4-119">セマフォのセキュリティは、<xref:System.Security.AccessControl.SemaphoreSecurity> クラスのメソッドを使用して、ルールを追加または削除することによって変更されます。これを行うと、基になるアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-119">Security for a semaphore is modified using the methods of the <xref:System.Security.AccessControl.SemaphoreSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b6d4-120">同期オブジェクトのセキュリティは、Windows 98 または Windows Millennium Edition ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b6d4-121">次のコード例は、<xref:System.Security.AccessControl.AccessControlType.Allow> ルールと <xref:System.Security.AccessControl.AccessControlType.Deny> ルールの分離を示し、互換性のあるルールでの権限の組み合わせを示しています。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-121">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="7b6d4-122">この例では、<xref:System.Security.AccessControl.SemaphoreSecurity> オブジェクトを作成し、現在のユーザーに対してさまざまな権限を許可および拒否する規則を追加し、結果として得られる規則のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-122">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="7b6d4-123">この例では、現在のユーザーに対して新しい権限を許可し、その結果を表示して、新しい権限が既存の <xref:System.Security.AccessControl.AccessControlType.Allow> ルールとマージされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b6d4-124">この例では、<xref:System.Threading.Semaphore> オブジェクトにセキュリティオブジェクトをアタッチしません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-124">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="7b6d4-125">セキュリティオブジェクトをアタッチする例については、<xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> と <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-125">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.SemaphoreSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b6d4-126"><see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.SemaphoreRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As SemaphoreRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::SemaphoreRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.SemaphoreAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.SemaphoreRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.SemaphoreAccessRule" Usage="new System.Security.AccessControl.SemaphoreAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="7b6d4-127">規則の適用対象となるユーザーまたはグループ。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-127">The user or group the rule applies to.</span></span> <span data-ttu-id="7b6d4-128"><see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="7b6d4-129">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-129">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="7b6d4-130">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="7b6d4-131">規則を適用するユーザーまたはグループ、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b6d4-132"><xref:System.Threading.WaitHandle.WaitOne%2A> メソッドを呼び出すなどして <xref:System.Threading.Semaphore>を入力するには、ユーザーに <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> アクセス権が必要です。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-132">To enter a <xref:System.Threading.Semaphore>, for example by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, a user must have <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="7b6d4-133"><xref:System.Threading.Semaphore.Release%2A> メソッドを呼び出してセマフォを終了するには、ユーザーは <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> アクセス権を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-133">To exit the semaphore, by calling the <xref:System.Threading.Semaphore.Release%2A> method, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b6d4-134"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-134"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="7b6d4-135">- または -</span><span class="sxs-lookup"><span data-stu-id="7b6d4-135">-or-</span></span> 
 <span data-ttu-id="7b6d4-136"><paramref name="type" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-136"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b6d4-137"><paramref name="identity" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-137"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7b6d4-138">- または -</span><span class="sxs-lookup"><span data-stu-id="7b6d4-138">-or-</span></span> 
 <span data-ttu-id="7b6d4-139"><paramref name="eventRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-139"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b6d4-140"><paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-140"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreAccessRule (string identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.SemaphoreRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As SemaphoreRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreAccessRule(System::String ^ identity, System::Security::AccessControl::SemaphoreRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.SemaphoreAccessRule : string * System.Security.AccessControl.SemaphoreRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.SemaphoreAccessRule" Usage="new System.Security.AccessControl.SemaphoreAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="7b6d4-141">規則の適用対象となるユーザー名またはグループ名。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-141">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="7b6d4-142">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-142">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="7b6d4-143">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="7b6d4-144">規則を適用するユーザーまたはグループの名前、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b6d4-145"><xref:System.Threading.WaitHandle.WaitOne%2A> メソッドを呼び出すなどして <xref:System.Threading.Semaphore>を入力するには、ユーザーに <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> アクセス権が必要です。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-145">To enter a <xref:System.Threading.Semaphore>, for example by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, a user must have <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="7b6d4-146"><xref:System.Threading.Semaphore.Release%2A> メソッドを呼び出してセマフォを終了するには、ユーザーは <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> アクセス権を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-146">To exit the semaphore, by calling the <xref:System.Threading.Semaphore.Release%2A> method, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 <span data-ttu-id="7b6d4-147">このコンストラクターは、`identity` を <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> コンストラクターに渡し、新しく作成された <xref:System.Security.Principal.NTAccount> オブジェクトを <xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29> コンストラクターに渡すことによって <xref:System.Security.Principal.NTAccount> オブジェクトを作成することと同じです。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b6d4-148">次のコード例は、このコンストラクターを使用して <xref:System.Security.AccessControl.SemaphoreAccessRule> オブジェクトを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-148">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.SemaphoreAccessRule> objects.</span></span> <span data-ttu-id="7b6d4-149">この例では、<xref:System.Security.AccessControl.SemaphoreSecurity> オブジェクトを作成し、現在のユーザーに対してさまざまな権限を許可および拒否する規則を追加し、結果として得られる規則のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-149">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="7b6d4-150">この例では、現在のユーザーに対して新しい権限を許可し、その結果を表示して、新しい権限が既存の <xref:System.Security.AccessControl.AccessControlType.Allow> ルールとマージされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-150">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b6d4-151">この例では、<xref:System.Threading.Semaphore> オブジェクトにセキュリティオブジェクトをアタッチしません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-151">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="7b6d4-152">セキュリティオブジェクトをアタッチする例については、<xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> と <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-152">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b6d4-153"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-153"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="7b6d4-154">- または -</span><span class="sxs-lookup"><span data-stu-id="7b6d4-154">-or-</span></span> 
 <span data-ttu-id="7b6d4-155"><paramref name="type" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-155"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b6d4-156"><paramref name="eventRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-156"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b6d4-157"><paramref name="identity" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-157"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7b6d4-158">- または -</span><span class="sxs-lookup"><span data-stu-id="7b6d4-158">-or-</span></span> 
 <span data-ttu-id="7b6d4-159"><paramref name="identity" /> は長さゼロの文字列です。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-159"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="7b6d4-160">- または -</span><span class="sxs-lookup"><span data-stu-id="7b6d4-160">-or-</span></span> 
 <span data-ttu-id="7b6d4-161"><paramref name="identity" /> が 512 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-161"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SemaphoreRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.SemaphoreRights SemaphoreRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemaphoreRights As SemaphoreRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::SemaphoreRights SemaphoreRights { System::Security::AccessControl::SemaphoreRights get(); };" />
      <MemberSignature Language="F#" Value="member this.SemaphoreRights : System.Security.AccessControl.SemaphoreRights" Usage="System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b6d4-162">アクセス規則で許可されたアクセス権または拒否されたアクセス権を取得します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-162">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="7b6d4-163">アクセス規則で許可されたアクセス権または拒否されたアクセス権を表す <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-163">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b6d4-164"><xref:System.Security.AccessControl.SemaphoreAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-164"><xref:System.Security.AccessControl.SemaphoreAccessRule> objects are immutable.</span></span> <span data-ttu-id="7b6d4-165">別のユーザー、別の権限、または別の <xref:System.Security.AccessControl.AccessControlType>を表す新しいアクセスルールを作成することはできますが、既存のアクセスルールを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-165">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b6d4-166">次のコード例では、<xref:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights%2A> プロパティを使用して、<xref:System.Security.AccessControl.SemaphoreSecurity> オブジェクトに含まれる一連の規則の権限を表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-166">The following code example demonstrates the use of the <xref:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights%2A> property to display the rights in the set of rules contained in a <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="7b6d4-167">この例では、<xref:System.Security.AccessControl.SemaphoreSecurity> オブジェクトを作成し、現在のユーザーに対してさまざまな権限を許可および拒否する規則を追加し、結果として得られる規則のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-167">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="7b6d4-168">この例では、現在のユーザーに対して新しい権限を許可し、その結果を表示して、新しい権限が既存の <xref:System.Security.AccessControl.AccessControlType.Allow> ルールとマージされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-168">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b6d4-169">この例では、<xref:System.Threading.Semaphore> オブジェクトにセキュリティオブジェクトをアタッチしません。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-169">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="7b6d4-170">セキュリティオブジェクトをアタッチする例については、<xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> と <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7b6d4-170">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
