<Type Name="LowerCaseStringConverter" FullName="System.Web.Configuration.LowerCaseStringConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eed0bfbb4492ed09c37917643c01500d47a309e1" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78777801" /></Metadata><TypeSignature Language="C#" Value="public sealed class LowerCaseStringConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LowerCaseStringConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.LowerCaseStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LowerCaseStringConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LowerCaseStringConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type LowerCaseStringConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>オブジェクトを小文字の文字列に変換する機能をサポートします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.LowerCaseStringConverter> クラスを使用すると、オブジェクトを小文字の文字列に変換できます。 このクラスは、変換が行われる前に、オブジェクトの型を小文字の文字列に変換できるかどうかの確認もサポートします。  
  
 <xref:System.Web.Configuration.LowerCaseStringConverter> のメソッドは、<xref:System.ComponentModel.ITypeDescriptorContext> インターフェイスを実装するオブジェクトをパラメーターとして受け取ります。 このインターフェイスは、コンポーネントに関するコンテキスト情報を提供します。 通常、このインターフェイスはデザイン時にデザイン時コンテナーに関する情報を提供するために使用されます。 <xref:System.ComponentModel.ITypeDescriptorContext> は、通常、型変換で使用されます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LowerCaseStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LowerCaseStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Configuration.LowerCaseStringConverter" /> クラスのインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Web.Configuration.LowerCaseStringConverter.%23ctor%2A> コンストラクターの使用方法を次のコード例に示します。  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#2)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (ctx As ITypeDescriptorContext, type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="lowerCaseStringConverter.CanConvertFrom (ctx, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> インターフェイスを実装するオブジェクトです。</param>
        <param name="type">変換対象のオブジェクトの型。</param>
        <summary>指定したパラメーターに基づいて、オブジェクトを小文字の文字列に変換できるかどうかを確認します。</summary>
        <returns>オブジェクトを小文字の文字列オブジェクトに変換できることをパラメーターが示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、`ctx` パラメーターとして <xref:System.ComponentModel.ITypeDescriptorContext> インターフェイスを実装するオブジェクトを使用します。 このインターフェイスは、コンポーネントに関するコンテキスト情報を提供します。 通常、このインターフェイスはデザイン時にデザイン時コンテナーに関する情報を提供するために使用されます。 <xref:System.ComponentModel.ITypeDescriptorContext> は、通常、型変換で使用されます。 カスタム動作が必要な場合は、派生クラスでこのメソッドをオーバーライドします。  
  
   
  
## Examples  
 このメソッドの使用方法を次の例に示します。  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#3)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (ctx As ITypeDescriptorContext, type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="lowerCaseStringConverter.CanConvertTo (ctx, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> インターフェイスを実装するオブジェクトです。</param>
        <param name="type">変換対象のオブジェクトの型。</param>
        <summary>指定したパラメーターに基づいて、オブジェクトを小文字の文字列に変換できるかどうかを確認します。</summary>
        <returns>オブジェクトを小文字の文字列オブジェクトに変換できることをパラメーターが示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、`ctx` パラメーターとして <xref:System.ComponentModel.ITypeDescriptorContext> インターフェイスを実装するオブジェクトを使用します。 このインターフェイスは、コンポーネントに関するコンテキスト情報を提供します。 通常、このインターフェイスはデザイン時にデザイン時コンテナーに関する情報を提供するために使用されます。 <xref:System.ComponentModel.ITypeDescriptorContext> は、通常、型変換で使用されます。 カスタム動作が必要な場合は、派生クラスでこのメソッドをオーバーライドします。  
  
   
  
## Examples  
 このメソッドの使用方法を次の例に示します。  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#4)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (ctx As ITypeDescriptorContext, ci As CultureInfo, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="lowerCaseStringConverter.ConvertFrom (ctx, ci, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> インターフェイスを実装するオブジェクトです。</param>
        <param name="ci"><see cref="T:System.Globalization.CultureInfo" /> クラスを実装するオブジェクト。</param>
        <param name="data">変換するオブジェクト。</param>
        <summary>指定したパラメーターに基づいて、オブジェクトを元の値から小文字の文字列に変換します。</summary>
        <returns>小文字の文字列オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、`ctx` パラメーターとして <xref:System.ComponentModel.ITypeDescriptorContext> インターフェイスを実装するオブジェクトを使用します。 このインターフェイスは、コンポーネントに関するコンテキスト情報を提供します。 通常、このインターフェイスはデザイン時にデザイン時コンテナーに関する情報を提供するために使用されます。 <xref:System.ComponentModel.ITypeDescriptorContext> は、通常、型変換で使用されます。 `ci` parameter オブジェクトは、カルチャに関連する情報を提供します。 `data` parameter オブジェクトは、変換するオブジェクトと、メソッドが完了した後の結果のオブジェクトの両方として機能します。 カスタム動作が必要な場合は、派生クラスでこのメソッドをオーバーライドします。  
  
   
  
## Examples  
 このメソッドの使用方法を次の例に示します。  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#5)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (ctx As ITypeDescriptorContext, ci As CultureInfo, value As Object, type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="lowerCaseStringConverter.ConvertTo (ctx, ci, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> インターフェイスを実装するオブジェクトです。</param>
        <param name="ci"><see cref="T:System.Globalization.CultureInfo" /> クラスを実装するオブジェクト。</param>
        <param name="value">変換するオブジェクト。</param>
        <param name="type">変換対象のオブジェクトの型。</param>
        <summary>指定したパラメーターに基づいて、オブジェクトを小文字の文字列に変換します。</summary>
        <returns>小文字の文字列オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、`ctx` パラメーターとして <xref:System.ComponentModel.ITypeDescriptorContext> インターフェイスを実装するオブジェクトを使用します。 このインターフェイスは、コンポーネントに関するコンテキスト情報を提供します。 通常、このインターフェイスはデザイン時にデザイン時コンテナーに関する情報を提供するために使用されます。 <xref:System.ComponentModel.ITypeDescriptorContext> は、通常、型変換で使用されます。 `ci` parameter オブジェクトは、カルチャに関連する情報を提供します。 `value` オブジェクトは、変換するオブジェクトと、メソッドが完了した後の結果のオブジェクトの両方として機能します。 カスタム動作が必要な場合は、派生クラスでこのメソッドをオーバーライドします。  
  
   
  
## Examples  
 このメソッドの使用方法を次の例に示します。  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#6)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
