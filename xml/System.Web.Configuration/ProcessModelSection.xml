<Type Name="ProcessModelSection" FullName="System.Web.Configuration.ProcessModelSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e62cbb9364925fe2a0bd28cddd0bb81b0f59cb22" /><Meta Name="ms.sourcegitcommit" Value="1403e40e1f487577d6846a42664d2e74b78a08b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/29/2020" /><Meta Name="ms.locfileid" Value="76823104" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProcessModelSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ProcessModelSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ProcessModelSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessModelSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessModelSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type ProcessModelSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="365dd-101">インターネット インフォメーション サービス (IIS: Internet Information Services) Web サーバー上の ASP.NET プロセス モデル設定を構成します。</span><span class="sxs-lookup"><span data-stu-id="365dd-101">Configures the ASP.NET process model settings on an Internet Information Services (IIS) Web server.</span></span> <span data-ttu-id="365dd-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="365dd-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-103"><xref:System.Web.Configuration.ProcessModelSection> クラスを使用すると、構成ファイルの `processModel` セクションにプログラムからアクセスして変更できます。</span><span class="sxs-lookup"><span data-stu-id="365dd-103">The <xref:System.Web.Configuration.ProcessModelSection> class provides a way to programmatically access and modify the `processModel` section of a configuration file.</span></span>  
  
 <span data-ttu-id="365dd-104"><xref:System.Web.Configuration.ProcessModelSection> クラスは、有効期間、一度に作成されるインスタンスの数、実行されるセキュリティ id、および要求を処理する CLR スレッドプールのサイズなど、ASP.NET ワーカープロセスのさまざまな側面を制御します。</span><span class="sxs-lookup"><span data-stu-id="365dd-104">The <xref:System.Web.Configuration.ProcessModelSection> class controls various aspects of the ASP.NET worker process, including its lifetime, the number of instances created at a time, what security identity it runs under, and the size of the CLR thread pool to service requests.</span></span>  
  
 <span data-ttu-id="365dd-105">ASP.NET が IIS 6 でネイティブモードで実行されている場合、ASP.NET は IIS 6 プロセスモデルを使用し、このセクションのほとんどの設定を無視します。</span><span class="sxs-lookup"><span data-stu-id="365dd-105">When ASP.NET is running under IIS 6 in native mode, ASP.NET uses the IIS 6 process model and ignores most settings in this section.</span></span> <span data-ttu-id="365dd-106">これらのプロパティを構成するには、IIS 管理ユーザーインターフェイス (UI) を使用します。</span><span class="sxs-lookup"><span data-stu-id="365dd-106">Use the IIS administration user interface (UI) to configure those properties.</span></span> <span data-ttu-id="365dd-107">ASP.NET では、構成ファイル (<xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>、<xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>、<xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>、<xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>、<xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>、<xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>) を使用して構成できる次のプロパティが引き続き使用されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-107">ASP.NET still uses the following properties, which can be configured through the configuration file: <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>, <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>, and <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>.</span></span>  
  
 <span data-ttu-id="365dd-108">`processModel` セクションは、ASP.NET ISAPI 拡張機能によって使用されるため、保護された構成機能またはツールを使用して暗号化することはできません。</span><span class="sxs-lookup"><span data-stu-id="365dd-108">The `processModel` section cannot be encrypted using the protected-configuration feature or tools because it is consumed by the ASP.NET ISAPI extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-109">この例では、`processModel` セクションのいくつかの属性に対して宣言的に値を指定する方法を示します。これには、<xref:System.Web.Configuration.ProcessModelSection> クラスのメンバーとしてアクセスすることもできます。</span><span class="sxs-lookup"><span data-stu-id="365dd-109">This example demonstrates how to specify values declaratively for several attributes of the `processModel` section, which can also be accessed as members of the <xref:System.Web.Configuration.ProcessModelSection> class.</span></span>  
  
 <span data-ttu-id="365dd-110">次の構成ファイルの例では、`processModel` セクションの値を宣言によって指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-110">The following configuration file example shows how to specify values declaratively for the `processModel` section.</span></span>  
  
```  
<processModel   
  enable="True" timeout="Infinite"   
  idleTimeout="Infinite"   
  shutdownTimeout="00:00:05" requestLimit="Infinite"  
  requestQueueLimit="5000" restartQueueLimit="10"   
  memoryLimit="60" webGarden="False" cpuMask="0xffffffff"   
  userName="machine" password="AutoGenerate" logLevel="Errors"  
  clientConnectedCheck="00:00:05"   
  comAuthenticationLevel="Connect" comImpersonationLevel="Impersonate"  
  responseDeadlockInterval="00:03:00"   
  responseRestartDeadlockInterval="00:03:00" autoConfig="True"  
  maxWorkerThreads="20" maxIoThreads="20" minWorkerThreads="1"  
  minIoThreads="1" serverErrorMessageFile="" pingFrequency="Infinite"  
  pingTimeout="Infinite" asyncOption="20" maxAppDomains="2000"   
/>  
```  
  
 <span data-ttu-id="365dd-111"><xref:System.Web.Configuration.ProcessModelSection> クラスの使用方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-111">The following code example demonstrates how to use the <xref:System.Web.Configuration.ProcessModelSection> class.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#1)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ProcessModelSection" />
    <altmember cref="T:System.Web.Configuration.ProcessModelLogLevel" />
    <altmember cref="T:System.Web.Configuration.ProcessModelComAuthenticationLevel" />
    <altmember cref="T:System.Web.Configuration.ProcessModelComImpersonationLevel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessModelSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.ProcessModelSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessModelSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="365dd-112">既定の設定を使用して <see cref="T:System.Web.Configuration.ProcessModelSection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="365dd-112">Initializes a new instance of the <see cref="T:System.Web.Configuration.ProcessModelSection" /> class using default settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-113"><xref:System.Web.Configuration.ProcessModelSection.%23ctor%2A> コンストラクターは、コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="365dd-113">The <xref:System.Web.Configuration.ProcessModelSection.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="365dd-114">これは、ASP.NET 構成システムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-114">It is called by the ASP.NET configuration system.</span></span> <span data-ttu-id="365dd-115"><xref:System.Web.Configuration.ProcessModelSection> クラスのインスタンスを取得するには、<xref:System.Configuration.Configuration.GetSection%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="365dd-115">You obtain an instance of the <xref:System.Web.Configuration.ProcessModelSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationAllowDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AutoConfig">
      <MemberSignature Language="C#" Value="public bool AutoConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoConfig" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.AutoConfig" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoConfig As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoConfig { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoConfig : bool with get, set" Usage="System.Web.Configuration.ProcessModelSection.AutoConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("autoConfig", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-116">ASP.NET パフォーマンス設定が ASP.NET アプリケーション用に自動構成されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-116">Gets or sets a value indicating whether ASP.NET performance settings are automatically configured for ASP.NET applications.</span></span></summary>
        <value><span data-ttu-id="365dd-117">パフォーマンス設定が ASP.NET アプリケーション用に自動構成される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="365dd-117"><see langword="true" /> if performance settings are automatically configured for ASP.NET applications; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="365dd-118">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="365dd-118">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-119"><xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> 値が `false`に設定されている場合は、ASP.NET アプリケーションのパフォーマンス構成を決定するために明示的な web.config 値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-119">If the <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> value is set to `false`, explicit Web.config values are used to determine performance configuration for the ASP.NET application.</span></span> <span data-ttu-id="365dd-120"><xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> 値が `true`に設定されている場合、ASP.NET アプリケーションに対してパフォーマンス設定が自動的に構成されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-120">If the <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> value is set to `true`, the performance settings are automatically configured for the ASP.NET application.</span></span>  
  
 <span data-ttu-id="365dd-121"><xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> 値は、machine.config ファイルで `true` に明示的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-121">The <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> value is explicitly set to `true` in the Machine.config file.</span></span> <span data-ttu-id="365dd-122">既定のコード値は `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-122">The default code value is set to `false`.</span></span>  <span data-ttu-id="365dd-123"><xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> 値が machine.config から削除された場合、自動構成設定の代わりに明示的な設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-123">If the <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> value is removed from Machine.config, the explicit settings are used instead of the auto-configured settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads" />
        <altmember cref="P:System.Web.Configuration.ProcessModelSection.MaxIOThreads" />
        <altmember cref="P:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
        <altmember cref="P:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
      </Docs>
    </Member>
    <Member MemberName="ClientConnectedCheck">
      <MemberSignature Language="C#" Value="public TimeSpan ClientConnectedCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClientConnectedCheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ClientConnectedCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientConnectedCheck As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClientConnectedCheck { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectedCheck : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.ClientConnectedCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("clientConnectedCheck", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-124">要求がキューに置かれている期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-124">Gets or sets a value indicating how long a request is left in the queue.</span></span></summary>
        <value><span data-ttu-id="365dd-125">キューに置かれる時間を示す <see cref="T:System.TimeSpan" /> 値。</span><span class="sxs-lookup"><span data-stu-id="365dd-125">A <see cref="T:System.TimeSpan" /> value indicating the queuing time.</span></span> <span data-ttu-id="365dd-126">既定値は 5 秒です。</span><span class="sxs-lookup"><span data-stu-id="365dd-126">The default value is 5 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-127">このプロパティは、ASP.NET がクライアント接続チェックを実行する前に、要求がキューに格納される期間を指定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-127">This property specifies how long a request is queued before ASP.NET performs a client connected check.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="365dd-128">要求がキューに登録されている間に期間が経過すると、クライアントに接続されたチェックが実行された後、処理のために ASP.NET worker プロセスに要求が渡されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-128">If the interval expires while the request is still queued, a client connected check is done before passing the request over to the ASP.NET worker process for handling.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-129">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.ClientConnectedCheck%2A> プロパティにアクセスして変更する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="365dd-129">The following code example shows how to access and modify the <xref:System.Web.Configuration.ProcessModelSection.ClientConnectedCheck%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#18)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComAuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ComAuthenticationLevel As ProcessModelComAuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::ProcessModelComAuthenticationLevel ComAuthenticationLevel { System::Web::Configuration::ProcessModelComAuthenticationLevel get(); void set(System::Web::Configuration::ProcessModelComAuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ComAuthenticationLevel : System.Web.Configuration.ProcessModelComAuthenticationLevel with get, set" Usage="System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("comAuthenticationLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelComAuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-130">DCOM セキュリティの認証レベルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-130">Gets or sets a value indicating the level of authentication for DCOM security.</span></span></summary>
        <value><span data-ttu-id="365dd-131"><see cref="T:System.Web.Configuration.ProcessModelComAuthenticationLevel" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="365dd-131">One of the <see cref="T:System.Web.Configuration.ProcessModelComAuthenticationLevel" /> values.</span></span> <span data-ttu-id="365dd-132">既定値は <see cref="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect" /> です。</span><span class="sxs-lookup"><span data-stu-id="365dd-132">The default value is <see cref="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-133">このプロパティ値が <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel.Default>に設定されている場合、DCOM は通常のセキュリティネゴシエーションアルゴリズムを使用して認証レベルを決定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-133">When this property value is set to <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel.Default>, DCOM determines the authentication level using its normal security-negotiation algorithm.</span></span> <span data-ttu-id="365dd-134">Machine.config ファイルで指定されているように、このプロパティに割り当てられた既定値は <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect>です。</span><span class="sxs-lookup"><span data-stu-id="365dd-134">The default value assigned to this property, as specified in the Machine.config file, is <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect>.</span></span> <span data-ttu-id="365dd-135">この場合、DCOM は、クライアントがサーバーとの関係を確立するときにのみ、クライアントの資格情報を認証します。</span><span class="sxs-lookup"><span data-stu-id="365dd-135">In this case, DCOM authenticates the credentials of the client only when the client establishes a relationship with the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-136"><xref:System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-136">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#21)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ComImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ComImpersonationLevel As ProcessModelComImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::ProcessModelComImpersonationLevel ComImpersonationLevel { System::Web::Configuration::ProcessModelComImpersonationLevel get(); void set(System::Web::Configuration::ProcessModelComImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ComImpersonationLevel : System.Web.Configuration.ProcessModelComImpersonationLevel with get, set" Usage="System.Web.Configuration.ProcessModelSection.ComImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("comImpersonationLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelComImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-137">COM セキュリティの認証レベルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-137">Gets or sets a value indicating the level of authentication for COM security.</span></span></summary>
        <value><span data-ttu-id="365dd-138"><see cref="T:System.Web.Configuration.ProcessModelComImpersonationLevel" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="365dd-138">One of the <see cref="T:System.Web.Configuration.ProcessModelComImpersonationLevel" /> values.</span></span> <span data-ttu-id="365dd-139">既定値は <see cref="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate" /> です。</span><span class="sxs-lookup"><span data-stu-id="365dd-139">The default value is <see cref="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-140">このプロパティ値が <xref:System.Web.Configuration.ProcessModelComImpersonationLevel.Default>に設定されている場合、DCOM は通常のセキュリティネゴシエーションアルゴリズムを使用して偽装レベルを決定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-140">When this property value is set to <xref:System.Web.Configuration.ProcessModelComImpersonationLevel.Default>, DCOM determines the impersonation level using its normal security-negotiation algorithm.</span></span> <span data-ttu-id="365dd-141">Machine.config ファイルで指定されているように、このプロパティに割り当てられた既定値は <xref:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate>です。</span><span class="sxs-lookup"><span data-stu-id="365dd-141">The default value assigned to this property, as specified in the Machine.config file, is <xref:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate>.</span></span> <span data-ttu-id="365dd-142">この場合、サーバープロセスはクライアントのセキュリティコンテキストを偽装しながら、クライアントの代わりに機能させることができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-142">In this case, the server process can impersonate the client's security context while acting on behalf of the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-143"><xref:System.Web.Configuration.ProcessModelSection.ComImpersonationLevel%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-143">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.ComImpersonationLevel%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#22)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CpuMask">
      <MemberSignature Language="C#" Value="public int CpuMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CpuMask" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.CpuMask" />
      <MemberSignature Language="VB.NET" Value="Public Property CpuMask As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CpuMask { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CpuMask : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.CpuMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cpuMask", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-144">マルチプロセッサ サーバーのどのプロセッサが ASP.NET プロセスの実行に適しているかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-144">Gets or sets a value indicating which processors on a multiprocessor server are eligible to run ASP.NET processes.</span></span></summary>
        <value><span data-ttu-id="365dd-145">適用するビット パターンを表す数値。</span><span class="sxs-lookup"><span data-stu-id="365dd-145">The number representing the bit pattern to apply.</span></span> <span data-ttu-id="365dd-146">既定値は 0xFFFFFFFF です。</span><span class="sxs-lookup"><span data-stu-id="365dd-146">The default value is 0xFFFFFFFF.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-147"><xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> 値は、ASP.NET スレッドを実行するのに適した Cpu を示すビットパターンを指定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-147">The <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> value specifies a bit pattern that indicates the CPUs eligible to run ASP.NET threads.</span></span> <span data-ttu-id="365dd-148"><xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> プロパティが `true`に設定されている場合、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> はワーカープロセスを対象となる Cpu の数に制限します。</span><span class="sxs-lookup"><span data-stu-id="365dd-148">If the <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property is set to `true`, the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> limits worker processes to the number of eligible CPUs.</span></span> <span data-ttu-id="365dd-149">ワーカープロセスの最大許容数は、Cpu の数と同じです。</span><span class="sxs-lookup"><span data-stu-id="365dd-149">The maximum allowed number of worker processes is equal to the number of CPUs.</span></span> <span data-ttu-id="365dd-150">既定では、すべての Cpu が有効になり、ASP.NET によって CPU ごとに1つのプロセスが起動されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-150">By default, all CPUs are enabled and ASP.NET launches one process for each CPU.</span></span> <span data-ttu-id="365dd-151"><xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> プロパティが `false`に設定されている場合、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> 属性は無視され、1つのワーカープロセスのみが実行されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-151">If the <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property is set to `false`, the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> attribute is ignored and only one worker process will run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-152"><xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-152">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#25](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#25)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Web.Configuration.ProcessModelSection.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public bool Enable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.Enable" />
      <MemberSignature Language="VB.NET" Value="Public Property Enable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enable : bool with get, set" Usage="System.Web.Configuration.ProcessModelSection.Enable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-153">プロセス モデルが有効かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-153">Gets or sets a value indicating whether the process model is enabled.</span></span></summary>
        <value><span data-ttu-id="365dd-154">プロセス モデルが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="365dd-154"><see langword="true" /> if the process model is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="365dd-155">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="365dd-155">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-156"><xref:System.Web.Configuration.ProcessModelSection.Enable%2A> プロパティは、ASP.NET が外部ワーカープロセスでホストされているかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-156">The <xref:System.Web.Configuration.ProcessModelSection.Enable%2A> property specifies whether ASP.NET is hosted in an external worker process.</span></span> <span data-ttu-id="365dd-157"><xref:System.Web.Configuration.ProcessModelSection.Enable%2A> が `true`場合、ASP.NET は外部ワーカープロセスでホストされます。それ以外の場合は、Inetinfo.exe で直接実行されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-157">If <xref:System.Web.Configuration.ProcessModelSection.Enable%2A> is `true`, ASP.NET is hosted in an external worker process; otherwise, it runs directly in Inetinfo.exe.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="365dd-158">ローカルシステムのセキュリティコンテキストでアプリケーションを実行する必要があるため、Inetinfo.exe で ASP.NET を実行することは推奨されません。</span><span class="sxs-lookup"><span data-stu-id="365dd-158">Running ASP.NET in Inetinfo.exe is not recommended, because this involves running the application in the Local System security context.</span></span> <span data-ttu-id="365dd-159">ASP.NET がインターネットインフォメーションサービス (IIS) 6 ネイティブモードで実行されている場合、この設定は無視されるため、通常は `false`に設定する理由はありません。</span><span class="sxs-lookup"><span data-stu-id="365dd-159">When ASP.NET runs in Internet Information Services (IIS) 6 native mode, this setting is ignored, so there is usually no reason to set it to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-160"><xref:System.Web.Configuration.ProcessModelSection.Enable%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-160">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.Enable%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#2)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan IdleTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan IdleTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.IdleTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property IdleTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan IdleTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.IdleTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.IdleTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("idleTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-161">ASP.NET がワーカー プロセスを自動終了する前の非アクティブ期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-161">Gets or sets a value indicating the period of inactivity after which ASP.NET automatically ends the worker process.</span></span></summary>
        <value><span data-ttu-id="365dd-162">アイドル時間を示す <see cref="T:System.TimeSpan" />値。</span><span class="sxs-lookup"><span data-stu-id="365dd-162">A <see cref="T:System.TimeSpan" /> value indicating the idle time.</span></span> <span data-ttu-id="365dd-163">既定値は Infinite で、<see cref="F:System.TimeSpan.MaxValue" /> に対応します。</span><span class="sxs-lookup"><span data-stu-id="365dd-163">The default value is Infinite, which corresponds to <see cref="F:System.TimeSpan.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-164"><xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> プロパティ値に達すると、ワーカープロセスが再起動 (バウンス) されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-164">The worker process is restarted (bounced) when the <xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> property value is reached.</span></span> <span data-ttu-id="365dd-165">既定では、プロセスがバウンスするのは2つの条件のみです。プロセスが許容されるメモリ制限を超えているか、プロセスがキューに格納できる要求の許容数を超えています。</span><span class="sxs-lookup"><span data-stu-id="365dd-165">By default, only two conditions cause the process to bounce: the process exceeds the allowed memory limit, or the process exceeds the allowed number of requests that can be queued.</span></span> <span data-ttu-id="365dd-166">既定の条件に他の条件を追加することができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-166">You can add other conditions to the default ones.</span></span> <span data-ttu-id="365dd-167">たとえば、<xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> プロパティを使用して、ワーカープロセスがアイドル状態になる時間を制限することができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-167">For example, you can use the <xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> property to limit the time the worker process is idle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-168"><xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-168">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#16)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLevel">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ProcessModelLogLevel LogLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.ProcessModelLogLevel LogLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.LogLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property LogLevel As ProcessModelLogLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::ProcessModelLogLevel LogLevel { System::Web::Configuration::ProcessModelLogLevel get(); void set(System::Web::Configuration::ProcessModelLogLevel value); };" />
      <MemberSignature Language="F#" Value="member this.LogLevel : System.Web.Configuration.ProcessModelLogLevel with get, set" Usage="System.Web.Configuration.ProcessModelSection.LogLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelLogLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-169">イベント ログに記録するイベントの種類を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-169">Gets or sets a value indicating the event types to be logged to the event log.</span></span></summary>
        <value><span data-ttu-id="365dd-170"><see cref="T:System.Web.Configuration.ProcessModelLogLevel" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="365dd-170">One of the <see cref="T:System.Web.Configuration.ProcessModelLogLevel" /> values.</span></span> <span data-ttu-id="365dd-171">既定値は <see cref="F:System.Web.Configuration.ProcessModelLogLevel.Errors" /> です。</span><span class="sxs-lookup"><span data-stu-id="365dd-171">The default value is <see cref="F:System.Web.Configuration.ProcessModelLogLevel.Errors" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-172">このプロパティを正しく使用すると、システムがログに記録できるエラーをフィルター処理できます。</span><span class="sxs-lookup"><span data-stu-id="365dd-172">By using this property correctly, you can filter the errors the system can log.</span></span> <span data-ttu-id="365dd-173">アプリケーションの誤動作やボトルネックを把握したら、目的のエラーの範囲を絞り込む戦略を立てることができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-173">After you have an idea of the application's malfunctions or bottlenecks, you might want to devise a strategy that narrows the range of errors you are interested in.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-174"><xref:System.Web.Configuration.ProcessModelSection.LogLevel%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-174">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.LogLevel%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#23)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.ProcessModelLogLevel" />
      </Docs>
    </Member>
    <Member MemberName="MaxAppDomains">
      <MemberSignature Language="C#" Value="public int MaxAppDomains { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAppDomains" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MaxAppDomains" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAppDomains As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAppDomains { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAppDomains : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MaxAppDomains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxAppDomains", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-175">1 つのプロセスに許容されるアプリケーション ドメイン数の上限を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-175">Gets or sets the maximum allowed number of application domains in one process.</span></span></summary>
        <value><span data-ttu-id="365dd-176">1 つのプロセスに許容されるアプリケーション ドメイン数の上限。</span><span class="sxs-lookup"><span data-stu-id="365dd-176">The maximum allowed number of application domains in one process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-177"><xref:System.Web.Configuration.ProcessModelSection.MaxAppDomains%2A> しきい値を超えた場合、新しいアプリケーションドメインを開始する必要がある場合は、最も使用されていないアプリケーションドメインがシャットダウンされます。</span><span class="sxs-lookup"><span data-stu-id="365dd-177">If the <xref:System.Web.Configuration.ProcessModelSection.MaxAppDomains%2A> threshold is exceeded, the least-used application domain is shut down if a new application domain must start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-178"><xref:System.Web.Configuration.ProcessModelSection.MaxAppDomains%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-178">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MaxAppDomains%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#27](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#27)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#27](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIOThreads">
      <MemberSignature Language="C#" Value="public int MaxIOThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIOThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MaxIOThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIOThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIOThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxIOThreads : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MaxIOThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxIoThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-179">CLR スレッド プールにおける CPU あたりの I/O スレッド数の上限を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-179">Gets or sets a value indicating the maximum number of I/O threads per CPU in the CLR thread pool.</span></span></summary>
        <value><span data-ttu-id="365dd-180">スレッド数の上限。</span><span class="sxs-lookup"><span data-stu-id="365dd-180">The maximum number of threads.</span></span> <span data-ttu-id="365dd-181">既定値は 20 です。</span><span class="sxs-lookup"><span data-stu-id="365dd-181">The default is 20.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-182"><xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> の値は、`httpRuntime` 構成セクションの <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> 設定以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="365dd-182">The value of <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> must be equal to or greater than the <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> setting in the `httpRuntime` configuration section.</span></span>  
  
 <span data-ttu-id="365dd-183">CPU 使用率を制御するには、<xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> プロパティと <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> プロパティをそれぞれ使用して、ワーカースレッドと i/o スレッドの数を設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-183">You can have some control over the CPU utilization by setting the number of worker threads and I/O threads, using the <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> property and the <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> property respectively.</span></span>  
  
 <span data-ttu-id="365dd-184">2種類のスレッドの違いは、後者がストリームやパイプなどの i/o オブジェクトにバインドされており、前者が従来の無制限のスレッドであることです。</span><span class="sxs-lookup"><span data-stu-id="365dd-184">The difference between the two types of threads is that the latter are bound to I/O objects, such as a stream or a pipe, and the former are traditional unrestricted threads.</span></span> <span data-ttu-id="365dd-185">インターネットインフォメーションサービス (IIS) バージョン6.0 以降では、ASP.NET はワーカースレッドで要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="365dd-185">For Internet Information Services (IIS) version 6.0 and later, ASP.NET processes requests on worker threads.</span></span> <span data-ttu-id="365dd-186">これは、ASP.NET が IIS 内で統合されているためです。</span><span class="sxs-lookup"><span data-stu-id="365dd-186">This is because ASP.NET is integrated within IIS.</span></span>  
  
 <span data-ttu-id="365dd-187">これらのスレッドは、アプリケーションに属するプロセス全体の CLR スレッドプールから取得されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-187">These threads are obtained from the process-wide CLR thread pool belonging to an application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="365dd-188">通常、使用可能なスレッドの既定値では、CPU 使用率を高く保つことができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-188">Usually the default values for the allowed threads are sufficient to keep the CPU utilization high.</span></span> <span data-ttu-id="365dd-189">アプリケーションの実行速度が遅い場合 (外部リソースを待機している場合など)、スレッド数を100未満の値に増やすことができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-189">If for some reason your application is slow, perhaps waiting for external resources, you could try to increase the number of threads to a value less than 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-190"><xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-190">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#5)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
      </Docs>
    </Member>
    <Member MemberName="MaxWorkerThreads">
      <MemberSignature Language="C#" Value="public int MaxWorkerThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWorkerThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWorkerThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWorkerThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWorkerThreads : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MaxWorkerThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxWorkerThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-191">CLR スレッド プールにおける CPU あたりのワーカー スレッド数の上限を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-191">Gets or sets a value indicating the maximum amount of worker threads per CPU in the CLR thread pool.</span></span></summary>
        <value><span data-ttu-id="365dd-192">スレッド数の上限。</span><span class="sxs-lookup"><span data-stu-id="365dd-192">The maximum number of threads.</span></span> <span data-ttu-id="365dd-193">既定値は 20 です。</span><span class="sxs-lookup"><span data-stu-id="365dd-193">The default is 20.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-194"><xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> の値は、`httpRuntime` 構成セクションの <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> 設定以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="365dd-194">The value of <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> must be equal to or greater than the <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> setting in the `httpRuntime` configuration section.</span></span>  
  
 <span data-ttu-id="365dd-195">CPU 使用率を制御するには、<xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> プロパティと <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> プロパティをそれぞれ使用して、ワーカースレッドと i/o スレッドの数を設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-195">You can have some control over the CPU utilization by setting the number of worker threads and I/O threads, using the <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> property and, the <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> property, respectively.</span></span>  
  
 <span data-ttu-id="365dd-196">2種類のスレッドの違いは、後者がストリームやパイプなどの i/o オブジェクトにバインドされており、前者が従来の無制限のスレッドであることです。</span><span class="sxs-lookup"><span data-stu-id="365dd-196">The difference between the two types of threads is that the latter are bound to I/O objects, such as a stream or a pipe, and the former are traditional unrestricted threads.</span></span> <span data-ttu-id="365dd-197">インターネットインフォメーションサービス (IIS) バージョン6.0 以降では、ASP.NET はワーカースレッドで要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="365dd-197">For Internet Information Services (IIS) version 6.0 and higher, ASP.NET processes requests on worker threads.</span></span> <span data-ttu-id="365dd-198">これは、ASP.NET が IIS 内で統合されているためです。</span><span class="sxs-lookup"><span data-stu-id="365dd-198">This is because ASP.NET is integrated within IIS.</span></span>  
  
 <span data-ttu-id="365dd-199">これらのスレッドは、アプリケーションに属するプロセス全体の CLR スレッドプールから取得されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-199">These threads are obtained from the process-wide CLR thread pool belonging to an application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="365dd-200">通常、使用可能なスレッドの既定値では、CPU 使用率を高く保つことができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-200">Usually the default values for the allowed threads are sufficient to keep the CPU utilization high.</span></span> <span data-ttu-id="365dd-201">アプリケーションの実行速度が遅い場合 (外部リソースを待機している場合など)、スレッド数を100未満の値に増やすことができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-201">If for some reason your application is slow, perhaps waiting for external resources, you could try to increase the number of threads to a value less than 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-202"><xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-202">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#7)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
      </Docs>
    </Member>
    <Member MemberName="MemoryLimit">
      <MemberSignature Language="C#" Value="public int MemoryLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property MemoryLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MemoryLimit : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("memoryLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-203">許容メモリ サイズの上限を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-203">Gets or sets a value indicating the maximum allowed memory size.</span></span></summary>
        <value><span data-ttu-id="365dd-204">システム メモリ全体に対するパーセント。</span><span class="sxs-lookup"><span data-stu-id="365dd-204">The percentage of the total system memory.</span></span> <span data-ttu-id="365dd-205">既定は 60% です。</span><span class="sxs-lookup"><span data-stu-id="365dd-205">The default is 60 percent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-206">メモリサイズは、システムメモリの合計に対する割合で表されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-206">The memory size is expressed as a percentage of the total system memory.</span></span> <span data-ttu-id="365dd-207">これは、ASP.NET が再起動 (バウンス) される前にワーカープロセスが使用できるメモリの量です。</span><span class="sxs-lookup"><span data-stu-id="365dd-207">This is the amount of memory a worker process can consume before ASP.NET restarts (bounces) it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-208"><xref:System.Web.Configuration.ProcessModelSection.MemoryLimit%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-208">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MemoryLimit%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#3)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinIOThreads">
      <MemberSignature Language="C#" Value="public int MinIOThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinIOThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MinIOThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinIOThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinIOThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinIOThreads : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MinIOThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minIoThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-209">CLR スレッド プールにおける CPU あたりの I/O スレッド数の下限を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-209">Gets or sets the minimum number of I/O threads per CPU in the CLR thread pool.</span></span></summary>
        <value><span data-ttu-id="365dd-210">CLR スレッド プールにおける CPU あたりの I/O スレッド数の下限。</span><span class="sxs-lookup"><span data-stu-id="365dd-210">The minimum number of I/O threads per CPU in the CLR thread pool.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="365dd-211"><xref:System.Web.Configuration.ProcessModelSection.MinIOThreads%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-211">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MinIOThreads%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#4)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWorkerThreads">
      <MemberSignature Language="C#" Value="public int MinWorkerThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinWorkerThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MinWorkerThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWorkerThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinWorkerThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinWorkerThreads : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MinWorkerThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minWorkerThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-212">CLR スレッド プールにおける CPU あたりのワーカー スレッド数の下限を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-212">Gets or sets the minimum number of worker threads per CPU in the CLR thread pool.</span></span></summary>
        <value><span data-ttu-id="365dd-213">CLR スレッド プールにおける CPU あたりのワーカー スレッド数の下限。</span><span class="sxs-lookup"><span data-stu-id="365dd-213">The minimum number of worker threads per CPU in the CLR thread pool</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="365dd-214"><xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-214">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#6)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.Web.Configuration.ProcessModelSection.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("password", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-215">Windows ID に使用するパスワードを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-215">Gets or sets a value indicating the password to use for the Windows identity.</span></span></summary>
        <value><span data-ttu-id="365dd-216">使用するパスワード。</span><span class="sxs-lookup"><span data-stu-id="365dd-216">The password to use.</span></span> <span data-ttu-id="365dd-217">既定値は AutoGenerate です。</span><span class="sxs-lookup"><span data-stu-id="365dd-217">The default value is AutoGenerate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-218"><xref:System.Web.Configuration.ProcessModelSection.Password%2A> プロパティは、<xref:System.Web.Configuration.ProcessModelSection.UserName%2A> プロパティと共に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="365dd-218">The <xref:System.Web.Configuration.ProcessModelSection.Password%2A> property must be used with the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> property.</span></span>  
  
 <span data-ttu-id="365dd-219">このプロパティ値が存在する場合、構成された Windows id でワーカープロセスが実行されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-219">When present, these property values cause the worker process to run with the configured Windows identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-220"><xref:System.Web.Configuration.ProcessModelSection.Password%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-220">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.Password%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#20)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/53tyfkaw(v=vs.100)"><span data-ttu-id="365dd-221">保護された構成を使用した構成情報の暗号化</span><span class="sxs-lookup"><span data-stu-id="365dd-221">Encrypting Configuration Information using Protected Configuration</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PingFrequency">
      <MemberSignature Language="C#" Value="public TimeSpan PingFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PingFrequency" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.PingFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property PingFrequency As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PingFrequency { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PingFrequency : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.PingFrequency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("pingFrequency", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-222">ISAPI 拡張機能がワーカー プロセスに ping を実行してワーカー プロセスが実行中かどうかを確認する間隔を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-222">Gets or sets a value indicating the time interval at which the ISAPI extension pings the worker process to determine whether it is running.</span></span></summary>
        <value><span data-ttu-id="365dd-223">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="365dd-223">The <see cref="T:System.TimeSpan" /> defining the time interval.</span></span> <span data-ttu-id="365dd-224">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="365dd-224">The default is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-225"><xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> の間隔が経過した後に実行されていない場合、ワーカープロセスは再起動 (バウンス) されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-225">The worker process is restarted (bounced) if it is not running after the <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> interval has expired.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-226"><xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-226">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#13)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PingTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan PingTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PingTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.PingTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property PingTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PingTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PingTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.PingTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("pingTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-227">応答のないワーカー プロセスを再起動するまでの期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-227">Gets or sets a value indicating the time interval after which a non-responsive worker process is restarted.</span></span></summary>
        <value><span data-ttu-id="365dd-228">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="365dd-228">The <see cref="T:System.TimeSpan" /> defining the time interval.</span></span> <span data-ttu-id="365dd-229">既定値は 5 秒です。</span><span class="sxs-lookup"><span data-stu-id="365dd-229">The default is 5 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-230">ISAPI 拡張は、<xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> の間隔でワーカープロセスに ping を実行します。</span><span class="sxs-lookup"><span data-stu-id="365dd-230">The ISAPI extensions ping the worker process at the <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> interval.</span></span> <span data-ttu-id="365dd-231">ワーカープロセスが <xref:System.Web.Configuration.ProcessModelSection.PingTimeout%2A> 間隔内に応答しない場合、プロセスは再起動されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-231">If the worker process does not respond within the <xref:System.Web.Configuration.ProcessModelSection.PingTimeout%2A> interval, the process is restarted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-232"><xref:System.Web.Configuration.ProcessModelSection.PingTimeout%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-232">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.PingTimeout%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#14)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.ProcessModelSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLimit">
      <MemberSignature Language="C#" Value="public int RequestLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.RequestLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RequestLimit : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.RequestLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteIntConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-233">ワーカー プロセスがリサイクルされるまでの許容要求数を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-233">Gets or sets a value indicating the number of requests allowed before a worker process is recycled.</span></span></summary>
        <value><span data-ttu-id="365dd-234">許容要求数。</span><span class="sxs-lookup"><span data-stu-id="365dd-234">The number of allowed requests.</span></span> <span data-ttu-id="365dd-235">既定値は Infinite です。</span><span class="sxs-lookup"><span data-stu-id="365dd-235">The default is Infinite.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-236">要求の数を超えた場合、ASP.NET は新しいワーカープロセスを自動的に起動して、現在のプロセスの代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="365dd-236">If the number of requests is exceeded, ASP.NET automatically launches a new worker process to take the place of the current one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-237">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.RequestLimit%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="365dd-237">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.RequestLimit%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#8)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestQueueLimit">
      <MemberSignature Language="C#" Value="public int RequestQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestQueueLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.RequestQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestQueueLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestQueueLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RequestQueueLimit : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.RequestQueueLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteIntConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-238">キューに置くことができる要求数を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-238">Gets or sets a value indicating the number of requests allowed in the queue.</span></span></summary>
        <value><span data-ttu-id="365dd-239">キューに置くことができる要求数。</span><span class="sxs-lookup"><span data-stu-id="365dd-239">The number of requests allowed to be queued.</span></span> <span data-ttu-id="365dd-240">既定値は 5000 です。</span><span class="sxs-lookup"><span data-stu-id="365dd-240">The default is 5000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-241">キューで許可されている要求の数を超えた場合、ASP.NET は "503-サーバーがビジーです" というエラーを新しい要求に返すことを開始します。</span><span class="sxs-lookup"><span data-stu-id="365dd-241">If the number of requests allowed in the queue is exceeded, ASP.NET begins returning "503 - Server Too Busy" errors to new requests.</span></span> <span data-ttu-id="365dd-242">この制限に達すると、システムは異常な状態で動作しています。</span><span class="sxs-lookup"><span data-stu-id="365dd-242">When this limit is reached, the system is operating in abnormal conditions.</span></span> <span data-ttu-id="365dd-243">これは、誤動作が発生した場合や、高負荷の場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="365dd-243">This might be a symptom of a malfunction or, maybe, just high load.</span></span> <span data-ttu-id="365dd-244">ワーカープロセスの再起動 (バウンス) が、それ以上の問題を防ぐ唯一の方法になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="365dd-244">Restarting (bouncing) the worker process might become the only way to prevent further problems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-245">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="365dd-245">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#10)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseDeadlockInterval">
      <MemberSignature Language="C#" Value="public TimeSpan ResponseDeadlockInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ResponseDeadlockInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseDeadlockInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ResponseDeadlockInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseDeadlockInterval : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("responseDeadlockInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-246">ワーカー プロセスが応答するまでの期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-246">Gets or sets a value indicating the time interval for the worker process to respond.</span></span></summary>
        <value><span data-ttu-id="365dd-247">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="365dd-247">The <see cref="T:System.TimeSpan" /> defining the interval.</span></span> <span data-ttu-id="365dd-248">既定値は 3 分です。</span><span class="sxs-lookup"><span data-stu-id="365dd-248">The default is 3 minutes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-249">キューに置かれた要求がある場合、および <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>によって定義された時間間隔中に応答がなかった場合は、プロセスが再開されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-249">The process is restarted if there are queued requests and if there has not been a response during the time interval that is defined by <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-250">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="365dd-250">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#17)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseRestartDeadlockInterval">
      <MemberSignature Language="C#" Value="public TimeSpan ResponseRestartDeadlockInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ResponseRestartDeadlockInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseRestartDeadlockInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ResponseRestartDeadlockInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseRestartDeadlockInterval : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("responseRestartDeadlockInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-251">使用されなくなりました。</span><span class="sxs-lookup"><span data-stu-id="365dd-251">No longer used.</span></span></summary>
        <value><span data-ttu-id="365dd-252">該当しない。</span><span class="sxs-lookup"><span data-stu-id="365dd-252">Not applicable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-253">このプロパティは ASP.NET によって使用されなくなり、旧バージョンとの互換性のためだけに用意されています。</span><span class="sxs-lookup"><span data-stu-id="365dd-253">This property is no longer used by ASP.NET and is provided for backward compatibility only.</span></span> <span data-ttu-id="365dd-254">構成ファイルに既に存在している場合、構成エラーは発生しません。</span><span class="sxs-lookup"><span data-stu-id="365dd-254">It will not cause a configuration error if it is already present in a configuration file.</span></span> <span data-ttu-id="365dd-255">デッドロック状態が発生した場合のすべてのリサイクルは、<xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> プロパティによって制御されるようになりました。</span><span class="sxs-lookup"><span data-stu-id="365dd-255">All recycling in the event of a deadlock condition is now controlled by the <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-256"><xref:System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-256">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#11)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestartQueueLimit">
      <MemberSignature Language="C#" Value="public int RestartQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RestartQueueLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.RestartQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RestartQueueLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RestartQueueLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RestartQueueLimit : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.RestartQueueLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteIntConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("restartQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-257">新しいワーカー プロセスによる要求処理の開始を待機している間に ISAPI によってキューに置かれる要求数の上限を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-257">Gets or sets a value indicating the maximum number of requests queued by the ISAPI while waiting for a new worker process to start handling the requests.</span></span></summary>
        <value><span data-ttu-id="365dd-258">キューに置かれる要求数。</span><span class="sxs-lookup"><span data-stu-id="365dd-258">The number of requests queued.</span></span> <span data-ttu-id="365dd-259">既定値は 10 です。</span><span class="sxs-lookup"><span data-stu-id="365dd-259">The default is 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-260">この制限を超えると、クライアント要求は、ワーカープロセスの準備が整うまで503エラーを受信します。</span><span class="sxs-lookup"><span data-stu-id="365dd-260">When this limit is exceeded, a client request will receive a 503 error until the worker process is ready.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-261"><xref:System.Web.Configuration.ProcessModelSection.RestartQueueLimit%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-261">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.RestartQueueLimit%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#9)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerErrorMessageFile">
      <MemberSignature Language="C#" Value="public string ServerErrorMessageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerErrorMessageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerErrorMessageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServerErrorMessageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerErrorMessageFile : string with get, set" Usage="System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("serverErrorMessageFile", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-262">致命的なエラーの発生時に使用する必要がある内容が格納されているファイルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-262">Gets or sets a value indicating the file whose content must be used when a fatal error occurs.</span></span></summary>
        <value><span data-ttu-id="365dd-263">致命的なエラーの発生時に使用するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="365dd-263">The path of the file used when a fatal error occurs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-264">既定のサーバー利用不可メッセージの代わりにコンテンツが使用されるファイル。</span><span class="sxs-lookup"><span data-stu-id="365dd-264">The file whose content is used instead of the default Server Unavailable message.</span></span>  
  
 <span data-ttu-id="365dd-265">ファイルの場所は、相対パスまたは絶対ファイルパスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="365dd-265">The file location can be a relative or an absolute file path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-266">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="365dd-266">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#28](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#28)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ShutdownTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ShutdownTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ShutdownTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ShutdownTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.ShutdownTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("shutdownTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-267">ワーカー プロセスをシャットダウンするために与えられている時間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-267">Gets or sets a value indicating the time allowed for the worker process to shut down.</span></span></summary>
        <value><span data-ttu-id="365dd-268">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="365dd-268">The <see cref="T:System.TimeSpan" /> defining the interval.</span></span> <span data-ttu-id="365dd-269">既定値は 5 秒です。</span><span class="sxs-lookup"><span data-stu-id="365dd-269">The default is 5 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-270">このプロパティは、ワーカープロセスが正常にシャットダウンするまでに許容される時間 (分単位) を指定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-270">This property specifies the number of minutes allowed for the worker process to shut itself down gracefully.</span></span> <span data-ttu-id="365dd-271">タイムアウトが経過すると、ASP.NET はワーカープロセスを強制的にシャットダウンします。</span><span class="sxs-lookup"><span data-stu-id="365dd-271">When the timeout expires, ASP.NET shuts down the worker process forcibly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-272">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.ShutdownTimeout%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="365dd-272">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.ShutdownTimeout%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#15)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-273">ASP.NET が新しいワーカー プロセスを起動するまでの時間を分単位で示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-273">Gets or sets a value indicating the number of minutes until ASP.NET launches a new worker process.</span></span></summary>
        <value><span data-ttu-id="365dd-274">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="365dd-274">The <see cref="T:System.TimeSpan" /> defining the interval.</span></span> <span data-ttu-id="365dd-275">既定値は Infinite です。</span><span class="sxs-lookup"><span data-stu-id="365dd-275">The default is Infinite.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-276">ASP.NET は、現在のワーカープロセスの代わりに新しいワーカープロセスを起動します。</span><span class="sxs-lookup"><span data-stu-id="365dd-276">ASP.NET launches a new worker process to take the place of the current one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-277">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.Timeout%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="365dd-277">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.Timeout%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#10)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Web.Configuration.ProcessModelSection.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("userName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-278">Windows ID に使用するユーザー名を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-278">Gets or sets a value indicating the user name for a Windows identity.</span></span></summary>
        <value><span data-ttu-id="365dd-279">ユーザー名。</span><span class="sxs-lookup"><span data-stu-id="365dd-279">The user name.</span></span> <span data-ttu-id="365dd-280">既定値は Machine です。</span><span class="sxs-lookup"><span data-stu-id="365dd-280">The default value is Machine.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-281">存在する場合、<xref:System.Web.Configuration.ProcessModelSection.UserName%2A> は既定のプロセスとは異なる Windows id を定義します。</span><span class="sxs-lookup"><span data-stu-id="365dd-281">If present, the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> defines a Windows identity different from that of the default process.</span></span> <span data-ttu-id="365dd-282">この id は、ASP.NET ワーカープロセスを実行するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-282">This identity is used to run the ASP.NET worker process.</span></span>  
  
 <span data-ttu-id="365dd-283">既定では <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> が特別な値のマシンに設定され、ASP.NET のインストール時に自動的に作成される ASPNET という名前のユーザーアカウントでプロセスが実行されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-283">By default, <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> is set to the special value Machine, and the process runs under a user account named ASPNET that is created automatically when ASP.NET is installed.</span></span>  
  
 <span data-ttu-id="365dd-284"><xref:System.Web.Configuration.ProcessModelSection.Password%2A> プロパティは、<xref:System.Web.Configuration.ProcessModelSection.UserName%2A> プロパティと共に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="365dd-284">The <xref:System.Web.Configuration.ProcessModelSection.Password%2A> property must be used with the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> property.</span></span>  
  
 <span data-ttu-id="365dd-285">このプロパティ値が存在する場合、構成された Windows id でワーカープロセスが実行されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-285">When present, these property values cause the worker process to run with the configured Windows identity.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="365dd-286"><xref:System.Web.Configuration.ProcessModelSection.UserName%2A> プロパティが [システム] に設定されていて、パスワード自動生成を使用している場合は、プロセスを管理アカウントとして実行し、プロセスで実行されているすべての ASP.NET ユーザーコードが完全な管理者特権を持つことを許可するエンティティを定義します。</span><span class="sxs-lookup"><span data-stu-id="365dd-286">If the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> property is set to System, with the password AutoGenerate, it defines an entity that runs the process as an administrative account and allows all ASP.NET user code running under the process to have full administrative privileges.</span></span> <span data-ttu-id="365dd-287">そのため、許可されているアクセス許可については、このケースに細心の注意を払ってください。</span><span class="sxs-lookup"><span data-stu-id="365dd-287">So, pay close attention to this case, for the permissions allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-288"><xref:System.Web.Configuration.ProcessModelSection.UserName%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-288">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#19)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebGarden">
      <MemberSignature Language="C#" Value="public bool WebGarden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebGarden" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.WebGarden" />
      <MemberSignature Language="VB.NET" Value="Public Property WebGarden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebGarden { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WebGarden : bool with get, set" Usage="System.Web.Configuration.ProcessModelSection.WebGarden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("webGarden", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="365dd-289">ワーカー プロセスの実行に使用できる CPU を有効にする値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="365dd-289">Gets or sets a value enabling the available CPUs to run the worker processes.</span></span></summary>
        <value><span data-ttu-id="365dd-290"><see langword="true" /> を使用してワーカー プロセスを有効な CPU の番号にマップする場合は <see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" />。<see langword="false" /> を無視する場合は <see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" />。</span><span class="sxs-lookup"><span data-stu-id="365dd-290"><see langword="true" />, if <see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" /> is used to map the worker processes to the number of eligible CPUs; <see langword="false" /> if <see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" /> is ignored.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="365dd-291"><xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> プロパティは、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> プロパティと共に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="365dd-291">The <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property must be used with the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> property.</span></span>  
  
 <span data-ttu-id="365dd-292"><xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> プロパティが `false`に設定されている場合、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> 属性は無視され、1つのワーカープロセスのみが実行されます。</span><span class="sxs-lookup"><span data-stu-id="365dd-292">If the <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property is set to `false`, the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> attribute is ignored and only one worker process runs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="365dd-293">マルチプロセッサ Web サーバーは、Web ガーデンと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="365dd-293">A multiprocessor Web server is called a Web garden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="365dd-294"><xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="365dd-294">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#24](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#24)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
