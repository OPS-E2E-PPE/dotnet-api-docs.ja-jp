<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a9157c318bfa9b441dea93fa6dbe20966d83155" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76945742" /></Metadata><TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4088-101">指定した*イベント クエリ*に基づいて、一時的なイベント通知をサブスクライブします。</span><span class="sxs-lookup"><span data-stu-id="c4088-101">Subscribes to temporary event notifications based on a specified *event query*.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4088-102">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-103">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-103">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-104">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-105">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4088-106"><see cref="T:System.Management.ManagementEventWatcher" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4088-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4088-107"><see cref="T:System.Management.ManagementEventWatcher" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4088-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span> <span data-ttu-id="c4088-108">より詳細な初期化を行うためには、オブジェクトのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c4088-108">For further initialization, set the properties on the object.</span></span> <span data-ttu-id="c4088-109">これはパラメーターなしのコンストラクターです。</span><span class="sxs-lookup"><span data-stu-id="c4088-109">This is the parameterless constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-110">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-110">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-111">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-112">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-113">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-114">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-115">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-115">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-116">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-117">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="c4088-118">ウォッチャーが待機するイベントを決定する WMI イベント クエリを表す <see cref="T:System.Management.EventQuery" />。</span><span class="sxs-lookup"><span data-stu-id="c4088-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="c4088-119">WMI (Windows Management Instrumentation) <see cref="T:System.Management.ManagementEventWatcher" />イベント クエリ*が指定されたときに、* クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4088-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4088-120">ウォッチャーがイベントをリッスンする名前空間は、現在設定されている既定の名前空間です。</span><span class="sxs-lookup"><span data-stu-id="c4088-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-121">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-121">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-122">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-123">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-124">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-125">このコード例では、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されると、クライアントは通知を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="c4088-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-126">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-126">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-127">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-128">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="c4088-129">ウォッチャーが待機するイベントを定義する WMI イベント クエリ。</span><span class="sxs-lookup"><span data-stu-id="c4088-129">A WMI event query, which defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="c4088-130">文字列形式で WMI <see cref="T:System.Management.ManagementEventWatcher" />イベント クエリ*が指定された場合、* クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4088-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4088-131">ウォッチャーがイベントをリッスンする名前空間は、現在設定されている既定の名前空間です。</span><span class="sxs-lookup"><span data-stu-id="c4088-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-132">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-132">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-133">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-134">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-135">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-136">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-137">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-137">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-138">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-139">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="c4088-140">ウォッチャーがイベントを待機するスコープ (名前空間) を表す <see cref="T:System.Management.ManagementScope" />。</span><span class="sxs-lookup"><span data-stu-id="c4088-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="c4088-141">ウォッチャーが待機するイベントを決定する WMI イベント クエリを表す <see cref="T:System.Management.EventQuery" />。</span><span class="sxs-lookup"><span data-stu-id="c4088-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="c4088-142">指定した WMI <see cref="T:System.Management.ManagementEventWatcher" />イベント クエリ*に一致するイベントを待機する*  クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4088-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-143">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-143">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-144">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-145">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-146">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-147">このコード例では、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されると、クライアントは通知を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="c4088-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-148">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-148">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-149">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-150">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="c4088-151">ウォッチャーがイベントを待機する管理スコープ (名前空間)。</span><span class="sxs-lookup"><span data-stu-id="c4088-151">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="c4088-152">ウォッチャーが待機するイベントを定義するクエリ。</span><span class="sxs-lookup"><span data-stu-id="c4088-152">The query that defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="c4088-153">指定した WMI <see cref="T:System.Management.ManagementEventWatcher" />イベント クエリ*に一致するイベントを待機する*  クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4088-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span> <span data-ttu-id="c4088-154">このバリアントでは、クエリとスコープは文字列として指定します。</span><span class="sxs-lookup"><span data-stu-id="c4088-154">For this variant, the query and the scope are specified as strings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-155">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-155">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-156">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-157">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-158">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-159">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-160">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-160">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-161">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-162">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="c4088-163">ウォッチャーがイベントを待機するスコープ (名前空間) を表す <see cref="T:System.Management.ManagementScope" />。</span><span class="sxs-lookup"><span data-stu-id="c4088-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="c4088-164">ウォッチャーが待機するイベントを決定する WMI イベント クエリを表す <see cref="T:System.Management.EventQuery" />。</span><span class="sxs-lookup"><span data-stu-id="c4088-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="c4088-165">イベントをウォッチするために使用する追加オプションを表す <see cref="T:System.Management.EventWatcherOptions" />。</span><span class="sxs-lookup"><span data-stu-id="c4088-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="c4088-166">指定したオプションに従って、指定した WMI イベント クエリに一致するイベントを待機する <see cref="T:System.Management.ManagementEventWatcher" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4088-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span></span> <span data-ttu-id="c4088-167">このバリアントでは、クエリとスコープは指定したオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c4088-167">For this variant, the query and the scope are specified objects.</span></span> <span data-ttu-id="c4088-168">オプション オブジェクトは、タイムアウトやコンテキスト情報などのオプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c4088-168">The options object can specify options such as time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-169">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-169">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-170">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-171">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-172">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-173">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-174">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-174">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-175">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-176">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="c4088-177">ウォッチャーがイベントを待機する管理スコープ (名前空間)。</span><span class="sxs-lookup"><span data-stu-id="c4088-177">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="c4088-178">ウォッチャーが待機するイベントを定義するクエリ。</span><span class="sxs-lookup"><span data-stu-id="c4088-178">The query that defines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="c4088-179">イベントをウォッチするために使用する追加オプションを表す <see cref="T:System.Management.EventWatcherOptions" />。</span><span class="sxs-lookup"><span data-stu-id="c4088-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="c4088-180">指定したオプションに従って、指定した WMI <see cref="T:System.Management.ManagementEventWatcher" />イベント クエリ*に一致するイベントを待機する*  クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4088-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span></span> <span data-ttu-id="c4088-181">このバリアントでは、クエリとスコープは文字列として指定します。</span><span class="sxs-lookup"><span data-stu-id="c4088-181">For this variant, the query and the scope are specified as strings.</span></span> <span data-ttu-id="c4088-182">オプション オブジェクトは、タイムアウトやコンテキスト情報などのオプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c4088-182">The options object can specify options such as a time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-183">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-183">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-184">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-185">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-186">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-187">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-188">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-188">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-189">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-190">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventArrived As EventArrivedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4088-191">新しいイベントが到達したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c4088-191">Occurs when a new event arrives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="c4088-192">イベント データ</span><span class="sxs-lookup"><span data-stu-id="c4088-192">Event Data</span></span>  
 <span data-ttu-id="c4088-193">イベント ハンドラーは、このイベントに関連するデータを含む <xref:System.Management.EventArrivedEventArgs> 型の引数を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="c4088-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="c4088-194">次の <xref:System.Management.EventArrivedEventArgs> プロパティは、このイベントに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="c4088-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="c4088-195">プロパティ</span><span class="sxs-lookup"><span data-stu-id="c4088-195">Property</span></span>|<span data-ttu-id="c4088-196">説明</span><span class="sxs-lookup"><span data-stu-id="c4088-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="c4088-197"><xref:System.Management.ManagementEventArgs.Context%2A> (<xref:System.Management.ManagementEventArgs>から継承)</span><span class="sxs-lookup"><span data-stu-id="c4088-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="c4088-198">イベントを発生させた操作からエコー バックされた操作コンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="c4088-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="c4088-199">配信された WMI (Windows Management Instrumentation) イベントを取得します。</span><span class="sxs-lookup"><span data-stu-id="c4088-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-200">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-200">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-201">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-202">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-203">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4088-204">未解決の呼び出しを確実にクリアします。</span><span class="sxs-lookup"><span data-stu-id="c4088-204">Ensures that outstanding calls are cleared.</span></span> <span data-ttu-id="c4088-205">これはオブジェクトのデストラクターです。</span><span class="sxs-lookup"><span data-stu-id="c4088-205">This is the destructor for the object.</span></span> <span data-ttu-id="c4088-206">C# では、ファイナライザーはデストラクター構文を使用して表します。</span><span class="sxs-lookup"><span data-stu-id="c4088-206">In C#, finalizers are expressed using destructor syntax.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-207">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-207">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-208">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-209">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-210">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4088-211">イベントをウォッチするために使用するオプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4088-211">Gets or sets the options used to watch for events.</span></span></summary>
        <value><span data-ttu-id="c4088-212">イベントを監視するために使用するイベントオプション。</span><span class="sxs-lookup"><span data-stu-id="c4088-212">The event options used to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="c4088-213">プロパティの値</span><span class="sxs-lookup"><span data-stu-id="c4088-213">Property Value</span></span>  
 <span data-ttu-id="c4088-214">イベントを監視するために使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="c4088-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-215">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-215">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-216">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-217">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-218">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-219">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-220">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-220">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-221">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-222">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4088-223">イベントに適用する基準を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4088-223">Gets or sets the criteria to apply to events.</span></span></summary>
        <value><span data-ttu-id="c4088-224">イベントに適用するクエリ。</span><span class="sxs-lookup"><span data-stu-id="c4088-224">The query to apply to events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="c4088-225">プロパティの値</span><span class="sxs-lookup"><span data-stu-id="c4088-225">Property Value</span></span>  
 <span data-ttu-id="c4088-226">イベントに適用する条件。*イベントクエリ*と同じです。</span><span class="sxs-lookup"><span data-stu-id="c4088-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-227">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-227">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-228">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-229">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-230">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-231">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-232">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-232">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-233">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-234">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4088-235">イベントをウォッチするスコープ (名前空間またはスコープ) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4088-235">Gets or sets the scope in which to watch for events (namespace or scope).</span></span></summary>
        <value><span data-ttu-id="c4088-236">イベントを監視するスコープ。</span><span class="sxs-lookup"><span data-stu-id="c4088-236">The scope in which to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="c4088-237">プロパティの値</span><span class="sxs-lookup"><span data-stu-id="c4088-237">Property Value</span></span>  
 <span data-ttu-id="c4088-238">イベント (名前空間またはスコープ) を監視するスコープ。</span><span class="sxs-lookup"><span data-stu-id="c4088-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-239">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-239">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-240">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-241">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-242">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-243">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-244">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-244">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-245">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-246">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4088-247">指定したクエリでイベントをサブスクライブし、<see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> イベントを通じて、非同期的に配信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-248">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-248">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-249">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-250">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-251">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4088-252">同期的か、非同期的かにかかわらず、サブスクリプションをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="c4088-252">Cancels the subscription whether it is synchronous or asynchronous.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-253">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-253">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-254">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-255">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-256">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-257">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-258">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-258">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-259">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-260">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Stopped As StoppedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4088-261">サブスクリプションがキャンセルされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c4088-261">Occurs when a subscription is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="c4088-262">イベント データ</span><span class="sxs-lookup"><span data-stu-id="c4088-262">Event Data</span></span>  
 <span data-ttu-id="c4088-263">イベント ハンドラーは、このイベントに関連するデータを含む <xref:System.Management.StoppedEventArgs> 型の引数を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="c4088-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="c4088-264">次の <xref:System.Management.StoppedEventArgs> プロパティは、このイベントに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="c4088-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="c4088-265">プロパティ</span><span class="sxs-lookup"><span data-stu-id="c4088-265">Property</span></span>|<span data-ttu-id="c4088-266">説明</span><span class="sxs-lookup"><span data-stu-id="c4088-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="c4088-267"><xref:System.Management.ManagementEventArgs.Context%2A> (<xref:System.Management.ManagementEventArgs>から継承)</span><span class="sxs-lookup"><span data-stu-id="c4088-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="c4088-268">イベントを発生させた操作からエコー バックされた操作コンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="c4088-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="c4088-269">操作の完了ステータスを取得します。</span><span class="sxs-lookup"><span data-stu-id="c4088-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-270">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-270">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-271">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-272">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-273">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4088-274">指定したクエリに一致する次のイベントが到達するのを待機してから、そのイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="c4088-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span></span></summary>
        <returns><span data-ttu-id="c4088-275">新しく到達したイベントを表す <see cref="T:System.Management.ManagementBaseObject" />。</span><span class="sxs-lookup"><span data-stu-id="c4088-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4088-276">イベント監視オブジェクトに指定されたタイムアウトのオプションが含まれている場合、API は、指定された時間だけ次のイベントを待機します。それ以外の場合、次のイベントが発生するまで API はブロックされます。</span><span class="sxs-lookup"><span data-stu-id="c4088-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c4088-277">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="c4088-277">.NET Framework Security</span></span>  
 <span data-ttu-id="c4088-278">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="c4088-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="c4088-279">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c4088-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c4088-280">詳細については、「[部分信頼コードからのライブラリの使用](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4088-281">次の例は、イベントクラスが **__InstanceCreationEvent**ために**Win32_Process**のインスタンスが作成されたときにクライアントが通知を受信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4088-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c4088-282">詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4088-282">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="c4088-283">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="c4088-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c4088-284">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="c4088-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
