<Type Name="QualifierDataCollection" FullName="System.Management.QualifierDataCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c75d36f8c9b5b5107f61dc253e129dd149752472" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83953905" /></Metadata><TypeSignature Language="C#" Value="public class QualifierDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QualifierDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.QualifierDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class QualifierDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class QualifierDataCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type QualifierDataCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="95d2e-101"><see cref="T:System.Management.QualifierData" /> オブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-101">Represents a collection of <see cref="T:System.Management.QualifierData" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95d2e-102">次の例では、<xref:System.Management.QualifierData> クラスを使用して、 **Win32_Service**クラスに関する修飾子情報を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-102">The following example lists qualifier information about the **Win32_Service** class using the <xref:System.Management.QualifierData> class.</span></span> <span data-ttu-id="95d2e-103">**Win32_Service**の詳細については、 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-103">For more information about **Win32_Service**, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span>  
  
 [!code-csharp[wminet_QualifierDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_QualifierDataCollection/cs/QualifierDataCollection.cs#1)]
 [!code-vb[wminet_QualifierDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_QualifierDataCollection/vb/QualifierDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95d2e-104"><see cref="T:System.Management.QualifierData" /> に <see cref="T:System.Management.QualifierDataCollection" /> オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-104">Adds a <see cref="T:System.Management.QualifierData" /> object to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string qualifierName, object qualifierValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string qualifierName, object qualifierValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (qualifierName As String, qualifierValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ qualifierName, System::Object ^ qualifierValue);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="qualifierDataCollection.Add (qualifierName, qualifierValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
        <Parameter Name="qualifierValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="95d2e-105"><see cref="T:System.Management.QualifierData" /> に追加する <see cref="T:System.Management.QualifierDataCollection" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="95d2e-105">The name of the <see cref="T:System.Management.QualifierData" /> to be added to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="qualifierValue"><span data-ttu-id="95d2e-106">新しい修飾子の値。</span><span class="sxs-lookup"><span data-stu-id="95d2e-106">The value for the new qualifier.</span></span></param>
        <summary><span data-ttu-id="95d2e-107"><see cref="T:System.Management.QualifierData" /> を <see cref="T:System.Management.QualifierDataCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-107">Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="95d2e-108">このオーバーロードは、修飾子の名前と値を指定します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-108">This overload specifies the qualifier name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-109">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-109">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-110">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-110">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-111">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-111">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-112">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-112">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string qualifierName, object qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string qualifierName, object qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (qualifierName As String, qualifierValue As Object, isAmended As Boolean, propagatesToInstance As Boolean, propagatesToSubclass As Boolean, isOverridable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ qualifierName, System::Object ^ qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * bool * bool * bool * bool -&gt; unit&#xA;override this.Add : string * obj * bool * bool * bool * bool -&gt; unit" Usage="qualifierDataCollection.Add (qualifierName, qualifierValue, isAmended, propagatesToInstance, propagatesToSubclass, isOverridable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
        <Parameter Name="qualifierValue" Type="System.Object" />
        <Parameter Name="isAmended" Type="System.Boolean" />
        <Parameter Name="propagatesToInstance" Type="System.Boolean" />
        <Parameter Name="propagatesToSubclass" Type="System.Boolean" />
        <Parameter Name="isOverridable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="95d2e-113">修飾子名。</span><span class="sxs-lookup"><span data-stu-id="95d2e-113">The qualifier name.</span></span></param>
        <param name="qualifierValue"><span data-ttu-id="95d2e-114">修飾子の値。</span><span class="sxs-lookup"><span data-stu-id="95d2e-114">The qualifier value.</span></span></param>
        <param name="isAmended"><span data-ttu-id="95d2e-115">この修飾子が修正済み (<c>flavor</c>) であることを指定するには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="95d2e-115"><see langword="true" /> to specify that this qualifier is amended (<c>flavor</c>); otherwise, <see langword="false" />.</span></span></param>
        <param name="propagatesToInstance"><span data-ttu-id="95d2e-116">修飾子をインスタンスに反映させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="95d2e-116"><see langword="true" /> to propagate this qualifier to instances; otherwise, <see langword="false" />.</span></span></param>
        <param name="propagatesToSubclass"><span data-ttu-id="95d2e-117">修飾子をサブクラスに反映させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="95d2e-117"><see langword="true" /> to propagate this qualifier to subclasses; otherwise, <see langword="false" />.</span></span></param>
        <param name="isOverridable"><span data-ttu-id="95d2e-118">修飾子の値をサブクラスのインスタンスでオーバーライドできることを指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="95d2e-118"><see langword="true" /> to specify that this qualifier's value is overridable in instances of subclasses; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="95d2e-119"><see cref="T:System.Management.QualifierData" /> を <see cref="T:System.Management.QualifierDataCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-119">Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="95d2e-120">このオーバーロードは、<see cref="T:System.Management.QualifierData" /> のすべてのプロパティ値を指定します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-120">This overload specifies all property values for a <see cref="T:System.Management.QualifierData" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-121">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-121">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-122">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-123">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-124">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-124">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95d2e-125"><see cref="T:System.Management.QualifierDataCollection" /> オブジェクトを配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="95d2e-125">Copies the <see cref="T:System.Management.QualifierDataCollection" /> object into an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="qualifierDataCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="95d2e-126"><see cref="T:System.Management.QualifierDataCollection" /> のコピー先の配列。</span><span class="sxs-lookup"><span data-stu-id="95d2e-126">The array to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="95d2e-127">コピーの開始位置を示すインデックス。</span><span class="sxs-lookup"><span data-stu-id="95d2e-127">The index from which to start copying.</span></span></param>
        <summary><span data-ttu-id="95d2e-128"><see cref="T:System.Management.QualifierDataCollection" /> を配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="95d2e-128">Copies the <see cref="T:System.Management.QualifierDataCollection" /> into an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-129">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-129">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-130">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-130">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-131">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-131">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-132">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-132">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.QualifierData[] qualifierArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.QualifierData[] qualifierArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (qualifierArray As QualifierData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::QualifierData ^&gt; ^ qualifierArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.QualifierData[] * int -&gt; unit" Usage="qualifierDataCollection.CopyTo (qualifierArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierArray" Type="System.Management.QualifierData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="qualifierArray"><span data-ttu-id="95d2e-133"><see cref="T:System.Management.QualifierData" /> のコピー先の <see cref="T:System.Management.QualifierDataCollection" /> オブジェクトの特別な配列。</span><span class="sxs-lookup"><span data-stu-id="95d2e-133">The specialized array of <see cref="T:System.Management.QualifierData" /> objects to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="95d2e-134">コピーの開始位置を示すインデックス。</span><span class="sxs-lookup"><span data-stu-id="95d2e-134">The index from which to start copying.</span></span></param>
        <summary><span data-ttu-id="95d2e-135"><see cref="T:System.Management.QualifierDataCollection" /> を特別な <see cref="T:System.Management.QualifierData" /> 配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="95d2e-135">Copies the <see cref="T:System.Management.QualifierDataCollection" /> into a specialized              <see cref="T:System.Management.QualifierData" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-136">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-136">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-137">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-137">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-138">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-138">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-139">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-139">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.QualifierDataCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95d2e-140"><see cref="T:System.Management.QualifierData" /> に含まれる <see cref="T:System.Management.QualifierDataCollection" /> オブジェクトの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-140">Gets the number of <see cref="T:System.Management.QualifierData" /> objects in the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="95d2e-141">コレクション内のオブジェクトの数。</span><span class="sxs-lookup"><span data-stu-id="95d2e-141">The number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="95d2e-142">プロパティの値</span><span class="sxs-lookup"><span data-stu-id="95d2e-142">Property Value</span></span>  
 <span data-ttu-id="95d2e-143">コレクション内のオブジェクトの数。</span><span class="sxs-lookup"><span data-stu-id="95d2e-143">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-144">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-144">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-145">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-146">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-147">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-147">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.QualifierDataCollection.QualifierDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.QualifierDataCollection/QualifierDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As QualifierDataCollection.QualifierDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::QualifierDataCollection::QualifierDataEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.QualifierDataCollection.QualifierDataEnumerator" Usage="qualifierDataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.QualifierDataCollection+QualifierDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95d2e-148"><see cref="T:System.Management.QualifierDataCollection" /> の列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-148">Returns an enumerator for the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="95d2e-149">このメソッドは厳密に型指定されます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-149">This method is strongly typed.</span></span></summary>
        <returns><span data-ttu-id="95d2e-150">コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="95d2e-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d2e-151">(Visual Basic .NET `For Each` ステートメントまたはC# `For` ステートメントの場合と同様に、順方向専用列挙子を使用して反復処理できるのは1回だけです。</span><span class="sxs-lookup"><span data-stu-id="95d2e-151">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="95d2e-152">インスタンスを含むメモリは WMI によって解放されるので、列挙子を巻き戻すことはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-152">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="95d2e-153">したがって、列挙子を巻き戻す必要があるため、<xref:System.Management.QualifierDataCollection.Count%2A> メソッドを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-153">Therefore, the <xref:System.Management.QualifierDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="95d2e-154">前方参照専用の列挙子は、一般に、従来の列挙子よりもはるかに高速で使用されるメモリが少なくなりますが、<xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A>を呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-154">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to  <xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="95d2e-155">列挙子が巻き戻し可能の場合、コレクション内のオブジェクトは複数の列挙体で使用できます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-155">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-156">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-156">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-157">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-157">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-158">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-158">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-159">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-159">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.QualifierDataCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95d2e-160">オブジェクトが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-160">Gets a value indicating whether the object is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="95d2e-161">オブジェクトが同期されているかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-161"><see langword="true" /> if the object is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="95d2e-162">プロパティの値</span><span class="sxs-lookup"><span data-stu-id="95d2e-162">Property Value</span></span>  
 <span data-ttu-id="95d2e-163">オブジェクトが同期されているかどうかを `true` します。それ以外の場合は、`false`ます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-163">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-164">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-164">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-165">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-165">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-166">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-166">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-167">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-167">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.QualifierData this[string qualifierName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.QualifierData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(qualifierName As String) As QualifierData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::QualifierData ^ default[System::String ^] { System::Management::QualifierData ^ get(System::String ^ qualifierName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Management.QualifierData" Usage="System.Management.QualifierDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.QualifierData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="95d2e-168"><see cref="T:System.Management.QualifierData" /> にアクセスするための <see cref="T:System.Management.QualifierDataCollection" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="95d2e-168">The name of the <see cref="T:System.Management.QualifierData" /> to access in the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <summary><span data-ttu-id="95d2e-169"><see cref="T:System.Management.QualifierData" /> から指定した <see cref="T:System.Management.QualifierDataCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-169">Gets the specified <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="95d2e-170">コレクション内の指定した修飾子のデータ。</span><span class="sxs-lookup"><span data-stu-id="95d2e-170">The data for a specified qualifier in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="95d2e-171">プロパティの値</span><span class="sxs-lookup"><span data-stu-id="95d2e-171">Property Value</span></span>  
 <span data-ttu-id="95d2e-172">指定した名前に基づく <xref:System.Management.QualifierData>。</span><span class="sxs-lookup"><span data-stu-id="95d2e-172">A <xref:System.Management.QualifierData>, based on the name specified.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-173">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-173">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-174">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-174">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-175">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-175">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-176">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-176">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string qualifierName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string qualifierName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (qualifierName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ qualifierName);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="qualifierDataCollection.Remove qualifierName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="95d2e-177">削除する <see cref="T:System.Management.QualifierData" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="95d2e-177">The name of the <see cref="T:System.Management.QualifierData" /> to remove.</span></span></param>
        <summary><span data-ttu-id="95d2e-178">名前を指定して、<see cref="T:System.Management.QualifierData" /> を <see cref="T:System.Management.QualifierDataCollection" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-178">Removes a <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" /> by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-179">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-179">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-180">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-180">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-181">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-181">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-182">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-182">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.QualifierDataCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95d2e-183">同期に使用するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-183">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="95d2e-184">同期に使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="95d2e-184">The object to be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="95d2e-185">プロパティの値</span><span class="sxs-lookup"><span data-stu-id="95d2e-185">Property Value</span></span>  
 <span data-ttu-id="95d2e-186">同期に使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="95d2e-186">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="95d2e-187">.NET Framework のセキュリティ</span><span class="sxs-lookup"><span data-stu-id="95d2e-187">.NET Framework Security</span></span>  
 <span data-ttu-id="95d2e-188">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="95d2e-188">Full trust for the immediate caller.</span></span> <span data-ttu-id="95d2e-189">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-189">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="95d2e-190">詳細については、「[部分信頼コードからのライブラリの使用](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="95d2e-190">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="qualifierDataCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95d2e-191"><see cref="T:System.Management.QualifierDataCollection" /> を反復処理する <see cref="T:System.Collections.IEnumerator" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-191">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="95d2e-192"><see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Management.QualifierDataCollection" /> です。</span><span class="sxs-lookup"><span data-stu-id="95d2e-192">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d2e-193">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="95d2e-193">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="95d2e-194">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-194">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="95d2e-195">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="95d2e-195">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="95d2e-196">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-196">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="95d2e-197">最初、列挙子はコレクションの先頭の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-197">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="95d2e-198"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-198"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="95d2e-199">この位置で <xref:System.Collections.IEnumerator.Current%2A> を呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-199">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="95d2e-200">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="95d2e-200">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="95d2e-201"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-201"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="95d2e-202"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-202"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="95d2e-203"><xref:System.Collections.IEnumerator.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.Collections.IEnumerator.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-203">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="95d2e-204">列挙子がこの位置にある場合、後続の <xref:System.Collections.IEnumerator.MoveNext%2A> 呼び出しも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-204">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="95d2e-205">前回 <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出して `false` が返された場合に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-205">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="95d2e-206"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-206">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="95d2e-207">列挙子は、コレクションが変更されない限り有効です。</span><span class="sxs-lookup"><span data-stu-id="95d2e-207">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="95d2e-208">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子はなりに無効になり、次に <xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> を呼び出すと <xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-208">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="95d2e-209"><xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出してから <xref:System.Collections.IEnumerator.Current%2A> を呼び出すまでの間にコレクションが変更された場合、列挙子が既に無効になっていても、<xref:System.Collections.IEnumerator.Current%2A> は、設定されている要素を返します。</span><span class="sxs-lookup"><span data-stu-id="95d2e-209">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="95d2e-210">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="95d2e-210">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="95d2e-211">コレクションが同期されていても、他のスレッドがコレクションを変更する場合があり、このときは列挙子から例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="95d2e-211">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="95d2e-212">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="95d2e-212">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="95d2e-213">このメソッドは、O(1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="95d2e-213">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
