<Type Name="ClaimsPrincipalPermission" FullName="System.IdentityModel.Services.ClaimsPrincipalPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4460faddc7895df1ede2cd7373bfe845ede8eaf" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83951298" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClaimsPrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ClaimsPrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClaimsPrincipalPermission&#xA;Implements IPermission, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipalPermission sealed : System::Security::IPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipalPermission = class&#xA;    interface IPermission&#xA;    interface ISecurityEncodable&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="879fc-101">リソースへのアクセスがアクティブなプリンシパルに許可されているかどうかを判断する <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> の実装を使用する権限を表します。</span><span class="sxs-lookup"><span data-stu-id="879fc-101">Represents a permission that uses a <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> implementation to determine if access to a resource should be granted to the active principal.</span></span> <span data-ttu-id="879fc-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="879fc-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-103"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission> クラスは、アプリケーション用に構成された <xref:System.Security.Claims.ClaimsAuthorizationManager> を使用して、強制的なアクセスチェックを実行する機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="879fc-103">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class provides the capability to perform imperative access checks by using the <xref:System.Security.Claims.ClaimsAuthorizationManager> that is configured for an application.</span></span> <span data-ttu-id="879fc-104"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> メソッドまたは静的な <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> メソッドを呼び出すことにより、要求認証マネージャーに定義されている承認ポリシーに従って、コードの実行パス内からリソースを保護することができます。</span><span class="sxs-lookup"><span data-stu-id="879fc-104">By invoking the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method or the static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, you can provide protection to resources from within the execution path of your code according to the authorization policy defined for your claims authentication manager.</span></span> <span data-ttu-id="879fc-105">宣言型アクセスのチェックは、<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> クラスを使用して実行できます。</span><span class="sxs-lookup"><span data-stu-id="879fc-105">Declarative access checks can be performed by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="879fc-106"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission> クラスは、<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> プロパティの下に設定されている <xref:System.IdentityModel.Configuration.IdentityConfiguration> によって構成された要求承認マネージャーを使用します。</span><span class="sxs-lookup"><span data-stu-id="879fc-106">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class uses the claims authorization manager configured by the <xref:System.IdentityModel.Configuration.IdentityConfiguration> that is set under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="879fc-107">これは、WS-FEDERATION が使用されていない場合でも、すべての場合に当てはまります。たとえば、アクティブな (WCF) Web アプリケーションやコンソールアプリケーションなどです。</span><span class="sxs-lookup"><span data-stu-id="879fc-107">This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications.</span></span> <span data-ttu-id="879fc-108">要求承認マネージャーは、構成またはプログラムによって指定できます。</span><span class="sxs-lookup"><span data-stu-id="879fc-108">You can specify the claims authorization manager either in configuration or programmatically.</span></span> <span data-ttu-id="879fc-109">要求承認マネージャーを構成ファイルで指定するには、 [&lt;ユーザー構成&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration)要素の下に[&lt;claimsAuthorizationManager&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager)要素を設定し、この id 構成がランタイムによって読み込まれる[&lt;federationConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration)要素 (たとえば、`identityConfigurationName` 属性を設定するなど) によって参照されていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="879fc-109">To specify the claims authorization manager in a configuration file, set the [&lt;claimsAuthorizationManager&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager) element under an [&lt;identityConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration) element and ensure that this identity configuration is referenced by the [&lt;federationConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration) element that is loaded by the runtime (for example, by setting the `identityConfigurationName` attribute).</span></span> <span data-ttu-id="879fc-110">要求承認マネージャーをプログラムによって設定するには、<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> イベントのハンドラーを指定します。</span><span class="sxs-lookup"><span data-stu-id="879fc-110">To set the claims authorization manager programmatically, provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="879fc-111">1つのレベルでは、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission> によって提供される機能は、<xref:System.Security.Permissions.PrincipalPermission> クラスによって提供されるロールベースのアクセスチェック (RBAC) に似ています。ただし、<xref:System.Security.Claims.ClaimsAuthorizationManager> クラスは、アクティブなプリンシパルによって提示された要求に基づいてチェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="879fc-111">On one level, the functionality provided by <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> is similar to the role-based access checks (RBAC) provided through the <xref:System.Security.Permissions.PrincipalPermission> class; however, the <xref:System.Security.Claims.ClaimsAuthorizationManager> class performs checks based on the claims presented by the active principal.</span></span> <span data-ttu-id="879fc-112">これにより、純粋な RBAC を通じて使用できるよりもはるかに粒度が高くなります。多くのアクセス許可は通常1つのロールで収集されます。</span><span class="sxs-lookup"><span data-stu-id="879fc-112">This enables far more granularity than is available through pure RBAC, where many permissions are typically collected under a single role.</span></span> <span data-ttu-id="879fc-113">多くの場合、要求ベースの承認では、ビジネスロジックと承認ポリシーを分離することができます。これは、コード内のリソースに対する特定のアクションに対してアクセス許可を要求でき、バックエンドポリシーを使用して、提示エンティティが要求を満たすためにどの要求を保持する必要があるかを構成することができるためです。</span><span class="sxs-lookup"><span data-stu-id="879fc-113">Perhaps, more importantly, claims-based authorization enables better separation of business logic and authorization policy because permission can be demanded for a specific action on a resource in code and back-end policy can be used to configure which claims the presenting entity must possess in order to satisfy the demand.</span></span> <span data-ttu-id="879fc-114">RBAC と同様、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission> はユーザーベースのアクセスチェックを実行します。つまり、<xref:System.Security.CodeAccessPermission> クラスから派生したクラスによって実装されるコードアクセスセキュリティとは異なり、スタックウォークを使用して、コードのすべての呼び出し元にアクセス <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 許可が付与されていることを確認するために、現在のプリンシパルでのみチェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="879fc-114">Like RBAC, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> performs a user-based access check, that is, unlike code access security implemented by classes that derive from the <xref:System.Security.CodeAccessPermission> class and use a stack walk to ensure that all callers of the code have been granted a permission, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> performs its check only on the current principal.</span></span>  
  
 <span data-ttu-id="879fc-115">静的 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> メソッドは、指定されたリソースに対する指定されたアクションのアクセスを確認します。</span><span class="sxs-lookup"><span data-stu-id="879fc-115">The static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method checks access for a specified action on a specified resource.</span></span> <span data-ttu-id="879fc-116">リソースとアクションは両方とも文字列であり、通常は Uri です。</span><span class="sxs-lookup"><span data-stu-id="879fc-116">The resource and action are both strings and are typically URIs.</span></span> <span data-ttu-id="879fc-117">また、アクションとリソースを使用して <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> のインスタンスを初期化し、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> メソッドを呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="879fc-117">You can also initialize an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> with an action and a resource and call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method.</span></span> <span data-ttu-id="879fc-118">コンストラクターは1つのリソースとアクションのみを使用しますが、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission> オブジェクトは、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> メソッドと <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> メソッドを使用して組み合わせることができます。</span><span class="sxs-lookup"><span data-stu-id="879fc-118">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="879fc-119">これらのメソッドを使用して作成されたアクセス許可には、複数のリソースアクションのペアを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="879fc-119">A permission created by using these methods may contain multiple resource-action pairs.</span></span>  
  
 <span data-ttu-id="879fc-120">どちらの方法でも、構成された要求承認マネージャーの <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> メソッドを、アクティブなプリンシパル (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>)、リソース、およびアクションから構成される <xref:System.Security.Claims.AuthorizationContext> で呼び出すことによって、アクセスを決定します。</span><span class="sxs-lookup"><span data-stu-id="879fc-120">Both methods determine access by invoking the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>), the resource, and the action.</span></span> <span data-ttu-id="879fc-121">現在のプリンシパルがリソースに対するアクションの実行を承認されていない場合は、<xref:System.Security.SecurityException> をスローします。それ以外の場合は、実行が続行します。</span><span class="sxs-lookup"><span data-stu-id="879fc-121">They throw a <xref:System.Security.SecurityException> if the current principal is not authorized to perform the action on the resource; otherwise, execution proceeds.</span></span>  
  
 <span data-ttu-id="879fc-122">複数のリソースアクションのペアを含む <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> の場合、アクセス許可に含まれているリソースとアクションの各ペアに対して <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="879fc-122">In the case of a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> that contains multiple resource-action pairs, the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method is invoked for each of the resource-action pairs contained in the permission.</span></span>  <span data-ttu-id="879fc-123"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> の呼び出しを成功させるには、アクセス許可に含まれるすべてのリソースアクションのペアに対してアクティブなプリンシパルが承認されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="879fc-123">For the call to <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed, the active principal must be authorized for all of the resource-action pairs contained in the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="879fc-124">次の例は、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> メソッド、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> メソッド、または <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> 宣言を使用して、リソースを保護する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="879fc-124">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, or a <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration.</span></span> <span data-ttu-id="879fc-125">どちらの場合も、構成された <xref:System.Security.Claims.ClaimsAuthorizationManager> は、指定されたリソースとアクションに対して現在のプリンシパルを評価するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="879fc-125">In each case, the configured <xref:System.Security.Claims.ClaimsAuthorizationManager> is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="879fc-126">現在のプリンシパルが、指定されたリソースに対する指定されたアクションに対して承認されていない場合、<xref:System.Security.SecurityException> がスローされます。それ以外の場合は、実行が続行します。</span><span class="sxs-lookup"><span data-stu-id="879fc-126">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#1)]  
  
 <span data-ttu-id="879fc-127">次の XML は、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission> クラスでカスタムクレーム承認マネージャーを使用するために必要な最小構成を示しています。</span><span class="sxs-lookup"><span data-stu-id="879fc-127">The following XML shows the minimum configuration required to use a custom claims authorization manager with the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class.</span></span> <span data-ttu-id="879fc-128">少なくとも、`<configSection>` 要素の `system.identityModel` と `system.identityModel.services` の両方のセクションを宣言し、次に、既定の id 構成の下にある[&lt;の claimsAuthorizationManager&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager)要素で承認マネージャーを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="879fc-128">You must, at a minimum, declare both the `system.identityModel` and the `system.identityModel.services` sections in the `<configSection>` element and then specify your authorization manager in a [&lt;claimsAuthorizationManager&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager) element under the default identity configuration.</span></span> <span data-ttu-id="879fc-129">これにより、承認マネージャーが既定のフェデレーション構成から参照されるようになります。</span><span class="sxs-lookup"><span data-stu-id="879fc-129">This will ensure that your authorization manager is referenced from the default federation configuration.</span></span> <span data-ttu-id="879fc-130">また、 [&lt;federationConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration)要素の `identityConfigurationName` 属性で、承認マネージャーが指定されている id 構成の名前を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="879fc-130">Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the `identityConfigurationName` attribute of the [&lt;federationConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration) element.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
  <configSections>  
    <!-- WIF configuration sections -->  
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
  </configSections>  
  
  <startup>  
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
  </startup>  
  
  <system.identityModel>  
    <identityConfiguration>  
      <claimsAuthorizationManager type ="MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager"/>  
    </identityConfiguration>  
  </system.identityModel>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
    <altmember cref="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration"><span data-ttu-id="879fc-131">&lt;federationConfiguration&gt;</span><span class="sxs-lookup"><span data-stu-id="879fc-131">&lt;federationConfiguration&gt;</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipalPermission (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipalPermission(System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.ClaimsPrincipalPermission : string * string -&gt; System.IdentityModel.Services.ClaimsPrincipalPermission" Usage="new System.IdentityModel.Services.ClaimsPrincipalPermission (resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="879fc-132">プリンシパルを承認する対象のリソース。</span><span class="sxs-lookup"><span data-stu-id="879fc-132">The resource on which the principal should be authorized.</span></span></param>
        <param name="action"><span data-ttu-id="879fc-133">プリンシパルを承認する対象のアクション。</span><span class="sxs-lookup"><span data-stu-id="879fc-133">The action for which the principal should be authorized.</span></span></param>
        <summary><span data-ttu-id="879fc-134"><see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="879fc-134">Creates a new instance of the <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-135"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission> オブジェクトは、指定されたリソースとアクションのペアで初期化されます。</span><span class="sxs-lookup"><span data-stu-id="879fc-135">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is initialized with the specified resource-action pair.</span></span> <span data-ttu-id="879fc-136"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> メソッドを呼び出して、アクセスチェックを実行できます。</span><span class="sxs-lookup"><span data-stu-id="879fc-136">You can call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method to perform an access check.</span></span>  
  
 <span data-ttu-id="879fc-137">コンストラクターは1つのリソースとアクションのみを使用しますが、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission> オブジェクトは、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> メソッドと <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> メソッドを使用して組み合わせることができます。</span><span class="sxs-lookup"><span data-stu-id="879fc-137">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="879fc-138">これらのメソッドを使用して作成されるアクセス許可には、複数のリソースアクションのペアを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="879fc-138">The permission created through these methods may contain multiple resource-action pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="879fc-139"><paramref name="resource" /> は <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="879fc-139"><paramref name="resource" /> is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="879fc-140"><paramref name="action" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="879fc-140"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public static void CheckAccess (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckAccess(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckAccess (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckAccess(System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="static member CheckAccess : string * string -&gt; unit" Usage="System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess (resource, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="879fc-141">プリンシパルを承認する対象のリソース。</span><span class="sxs-lookup"><span data-stu-id="879fc-141">The resource on which the principal should be authorized.</span></span></param>
        <param name="action"><span data-ttu-id="879fc-142">プリンシパルを承認する対象のアクション。</span><span class="sxs-lookup"><span data-stu-id="879fc-142">The action for which the principal should be authorized.</span></span></param>
        <summary><span data-ttu-id="879fc-143">指定したリソースの指定したアクションを実行する権限が現在のプリンシパルにあるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="879fc-143">Checks if the current principal is authorized to perform the specified action on the specified resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-144">指定されたリソースに対する指定されたアクションに対してプリンシパルが承認されているか、<xref:System.Security.SecurityException> 例外がスローされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="879fc-144">The principal must be authorized for the specified action on the specified resource or the <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="879fc-145">構成された要求承認マネージャーの <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> メソッドは、アクティブなプリンシパル (<xref:System.Threading.Thread.CurrentPrincipal%2A>)、リソース、およびアクションで構成される <xref:System.Security.Claims.AuthorizationContext> で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="879fc-145">The <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager is invoked with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="879fc-146">次の例は、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> メソッドを使用してリソースを保護する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="879fc-146">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method.</span></span> <span data-ttu-id="879fc-147">構成された要求承認マネージャーは、指定されたリソースとアクションに対して現在のプリンシパルを評価するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="879fc-147">The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="879fc-148">現在のプリンシパルが、指定されたリソースに対する指定されたアクションに対して承認されていない場合、<xref:System.Security.SecurityException> がスローされます。それ以外の場合は、実行が続行します。</span><span class="sxs-lookup"><span data-stu-id="879fc-148">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="879fc-149">現在のプリンシパルは <see cref="T:System.Security.Claims.ClaimsPrincipal" /> から割り当てることはできません。</span><span class="sxs-lookup"><span data-stu-id="879fc-149">The current principal is not assignable from <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span>  
  
<span data-ttu-id="879fc-150">または</span><span class="sxs-lookup"><span data-stu-id="879fc-150">-or-</span></span> 
<span data-ttu-id="879fc-151"><see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> が構成されていません。</span><span class="sxs-lookup"><span data-stu-id="879fc-151">There is no <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> configured.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="879fc-152">失敗した承認チェック。</span><span class="sxs-lookup"><span data-stu-id="879fc-152">The authorization check failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="879fc-153">現在の <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> インスタンスのコピーを返します。</span><span class="sxs-lookup"><span data-stu-id="879fc-153">Returns a copy of the current <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> instance.</span></span></summary>
        <returns><span data-ttu-id="879fc-154">現在のインスタンスからコピーされた <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />。</span><span class="sxs-lookup"><span data-stu-id="879fc-154">A <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> copied from the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="claimsPrincipalPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="879fc-155">現在のインスタンスに関連付けられているリソースとアクションのペアに対して現在のプリンシパルが承認されるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="879fc-155">Checks if the current principal is authorized for the resource-action pairs associated with the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-156">現在のプリンシパルは、このインスタンスに関連付けられているすべてのリソースアクションのペアに対して承認されている必要があります。または、<xref:System.Security.SecurityException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="879fc-156">The current principal must be authorized for all of the resource-action pairs associated with this instance or the <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="879fc-157">コンストラクターは1つのリソースとアクションのみを使用しますが、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission> オブジェクトは、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> メソッドと <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> メソッドを使用して組み合わせることができます。</span><span class="sxs-lookup"><span data-stu-id="879fc-157">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="879fc-158">これらのメソッドを使用して作成されるアクセス許可には、複数のリソースアクションのペアを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="879fc-158">The permission created through these methods may contain multiple resource-action pairs.</span></span>  
  
 <span data-ttu-id="879fc-159"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> メソッドは、構成された要求承認マネージャーの <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> メソッドを、アクティブなプリンシパル (<xref:System.Threading.Thread.CurrentPrincipal%2A>)、リソース、およびアクセス許可に含まれる各リソースとアクションのペアのアクションで構成される <xref:System.Security.Claims.AuthorizationContext> と共に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="879fc-159">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action for each of the resource-action pairs contained in the permission.</span></span> <span data-ttu-id="879fc-160"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> を成功させるには、アクセス許可に含まれているすべてのリソースとアクションのペアに対してアクティブなプリンシパルを承認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="879fc-160">For the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="879fc-161">次の例は、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> メソッドを使用してリソースを保護する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="879fc-161">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method.</span></span> <span data-ttu-id="879fc-162">構成された要求承認マネージャーは、指定されたリソースとアクションに対して現在のプリンシパルを評価するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="879fc-162">The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="879fc-163">現在のプリンシパルが、指定されたリソースに対する指定されたアクションに対して承認されていない場合、<xref:System.Security.SecurityException> がスローされます。それ以外の場合は、実行が続行します。</span><span class="sxs-lookup"><span data-stu-id="879fc-163">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="879fc-164">現在のプリンシパルは <see cref="T:System.Security.Claims.ClaimsPrincipal" /> から割り当てることはできません。</span><span class="sxs-lookup"><span data-stu-id="879fc-164">The current principal is not assignable from <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span>  
  
<span data-ttu-id="879fc-165">または</span><span class="sxs-lookup"><span data-stu-id="879fc-165">-or-</span></span> 
<span data-ttu-id="879fc-166"><see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> が構成されていません。</span><span class="sxs-lookup"><span data-stu-id="879fc-166">There is no <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> configured.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="879fc-167">失敗した承認チェック。</span><span class="sxs-lookup"><span data-stu-id="879fc-167">The authorization check failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (element As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="claimsPrincipalPermission.FromXml element" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="879fc-168">アクセス許可の再構築に使用する XML エンコード。</span><span class="sxs-lookup"><span data-stu-id="879fc-168">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="879fc-169">指定された XML エンコーディングから現在のアクセス許可と状態を再構築します。</span><span class="sxs-lookup"><span data-stu-id="879fc-169">Reconstructs the current permission and its state from the specified XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-170"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> メソッドの呼び出しによって作成された XML エンコーディングからアクセス許可を再構築します。</span><span class="sxs-lookup"><span data-stu-id="879fc-170">Reconstructs a permission from the XML encoding created by a call to the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="879fc-171"><paramref name="element" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="879fc-171"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="879fc-172">エンコーディングに、認識されない要素または属性、あるいは不適切な形式の XML が含まれています。</span><span class="sxs-lookup"><span data-stu-id="879fc-172">The encoding contains unrecognized elements or attributes or improperly formed XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="879fc-173">現在のアクセス許可との積集合を持つアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="879fc-173">The permission to intersect with the current permission.</span></span> <span data-ttu-id="879fc-174"><see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> のインスタンスである必要があります。</span><span class="sxs-lookup"><span data-stu-id="879fc-174">It must be an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="879fc-175">現在のアクセス許可と指定したアクセス許可を統合 (論理積) して 1 つの新しいアクセス許可を返します。</span><span class="sxs-lookup"><span data-stu-id="879fc-175">Returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="879fc-176">現在のアクセス許可と指定したアクセス許可の積集合を表す新しい <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />。または、<paramref name="target" /> が <paramref name="null" /> であるか、<see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> のインスタンスではない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="879fc-176">A new <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> that represents the intersection of the current permission and the specified permission; or <see langword="null" /> if <paramref name="target" /> is <paramref name="null" /> or is not an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-177">返されるアクセス許可には、現在のアクセス許可と指定したアクセス許可の両方に存在していたリソースとアクションのペアだけが含まれます。</span><span class="sxs-lookup"><span data-stu-id="879fc-177">The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission.</span></span> <span data-ttu-id="879fc-178">1つまたは複数のアクセス許可に存在するリソースアクションのペアは含まれません。</span><span class="sxs-lookup"><span data-stu-id="879fc-178">Resource-action pairs that existed in only one or the other of the permissions are not included.</span></span> <span data-ttu-id="879fc-179">新しいアクセス許可で <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> を成功させるには、現在のプリンシパルが、現在のアクセス許可と指定したアクセス許可に共通のリソースとアクションのペアに対してのみ承認されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="879fc-179">For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="claimsPrincipalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="879fc-180">サブセットの関係を調べる対象のアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="879fc-180">The permission to be tested for the subset relationship.</span></span> <span data-ttu-id="879fc-181"><see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> のインスタンスである必要があります。</span><span class="sxs-lookup"><span data-stu-id="879fc-181">It must be an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="879fc-182">現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="879fc-182">Returns a value that indicates whether current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="879fc-183">現在のアクセス許可が、指定したアクセス許可のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="879fc-183"><see langword="true" /> if current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-184">現在のアクセス許可に含まれるすべてのリソースアクションのペアが、指定されたアクセス許可にも存在する場合、現在のアクセス許可は、指定されたアクセス許可のサブセットになります。</span><span class="sxs-lookup"><span data-stu-id="879fc-184">The current permission is a subset of the specified permission if all of the resource-action pairs contained in the current permission are also present in the specified permission.</span></span> <span data-ttu-id="879fc-185">`target` が `null` 場合、または <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>のインスタンスでない場合、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="879fc-185">If `target` is `null` or is not an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="claimsPrincipalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="879fc-186">アクセス許可が無制限かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="879fc-186">Returns a value that indicates whether the permission is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="879fc-187">アクセス許可が無制限である場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="879fc-187"><see langword="true" /> if the permission is unrestricted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="879fc-188">アクセス許可が制限されていることを示す <see langword="true" /> を常に返します。</span><span class="sxs-lookup"><span data-stu-id="879fc-188">Always returns <see langword="true" /> indicating that permission is unrestricted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="claimsPrincipalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="879fc-189">現在のアクセス許可とその状態の XML にエンコードされたフォームを返します。</span><span class="sxs-lookup"><span data-stu-id="879fc-189">Returns the XML encoded form of the current permission and its state.</span></span></summary>
        <returns><span data-ttu-id="879fc-190">現在のアクセス許可とその状態の XML にエンコードされたフォーム。</span><span class="sxs-lookup"><span data-stu-id="879fc-190">The XML encoded form of the current permission and its state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-191">このプリンシパルは、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> メソッドを呼び出すことによって、XML でエンコードされた形式から再構築できます。</span><span class="sxs-lookup"><span data-stu-id="879fc-191">The principal can be reconstructed from its XML encoded form by calling the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Union target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="879fc-192">現在のアクセス許可と和集合を持つアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="879fc-192">The permission to combine with current permission.</span></span> <span data-ttu-id="879fc-193"><see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />型でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="879fc-193">It must be of type <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="879fc-194">現在のアクセス許可と指定したアクセス許可を統合 (和集合) して 1 つの新しいアクセス許可を返します。</span><span class="sxs-lookup"><span data-stu-id="879fc-194">Returns a new permission that is the union of the current permission and the specified permission.</span></span> <span data-ttu-id="879fc-195">現在のインスタンスとターゲット インスタンスにあるリソース操作のペアすべてがある <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="879fc-195"><see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> object that has all of the resource-action pairs that are present in the current instance and the target instance.</span></span></summary>
        <returns><span data-ttu-id="879fc-196">現在のアクセス許可と指定したアクセス許可の和集合を表す新しい <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />。または、<paramref name="target" /> が <paramref name="null" /> であるか、<see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> のインスタンスではない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="879fc-196">A new <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> that represents the union of the current permission and the specified permission; or <see langword="null" /> if <paramref name="target" /> is <paramref name="null" /> or is not an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="879fc-197">返されるアクセス許可には、現在のアクセス許可に存在するすべてのリソースとアクションのペアと、指定したアクセス許可を持つすべてのリソースとアクションのペアが含まれます。</span><span class="sxs-lookup"><span data-stu-id="879fc-197">The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission.</span></span> <span data-ttu-id="879fc-198">新しいアクセス許可で <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> を成功させるには、現在のプリンシパルが、現在のアクセス許可に存在していたすべてのリソースとアクションのペアと、指定したアクセス許可に存在するすべてのリソースとアクションのペアに対して承認されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="879fc-198">For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
