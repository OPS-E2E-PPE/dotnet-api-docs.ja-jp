<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="82215e2920ce6951a05abe1dee1b65ee05d2b764" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83954012" /></Metadata><TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandler abstract" />
  <TypeSignature Language="F#" Value="type CookieHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTTP クライアントでセッション クッキーを読み取り、書き込み、および削除するための抽象基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) は、<xref:System.IdentityModel.Services.CookieHandler> クラスのインスタンスを使用して、HTTP クライアント上の <xref:System.IdentityModel.Tokens.SessionSecurityToken> を格納する cookie または cookie の読み取り、書き込み、および削除を行います。 セッショントークンを含む cookie (または、セッショントークンが複数の cookie に分割されている場合は cookie) は、セッション cookie と呼ばれます。  
  
 Windows Identity Foundation (WIF) には、<xref:System.IdentityModel.Services.ChunkedCookieHandler> クラスによって実装されるチャンク cookie ハンドラーと呼ばれる cookie ハンドラーが付属しています。 チャンク cookie ハンドラーは、指定されたチャンクサイズに従って、1つ以上の cookie にセッショントークンを分割します。 これは、多くのブラウザーで設定された個々の cookie のサイズ制限を満たすためのものです。  
  
 <xref:System.IdentityModel.Services.CookieHandler> から派生させて、独自の cookie ハンドラーを作成できます。 その場合は、<xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>、<xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>、および <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> メソッドをオーバーライドして、セッション cookie の削除、読み取り、および書き込みの実際の作業を実行する必要があります。 これらのメソッドは通常、<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> コレクションから cookie を読み取り、<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> コレクションを使用して cookie を書き込んだり削除したりします。 要求と応答にアクセスするために使用する <xref:System.Web.HttpContext> オブジェクトは、これらの各メソッドのパラメーターとして提供されます。 必要なメソッドに加えて、必要に応じて、<xref:System.IdentityModel.Services.CookieHandler> クラスによって公開されている他の仮想メソッドプロパティをオーバーライドして、ハンドラーの動作をカスタマイズすることもできます。  
  
 いくつかのプロパティは、セッション cookie の既定の動作とプロパティを指定する <xref:System.IdentityModel.Services.CookieHandler> クラスによって公開されます。 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>、および <xref:System.IdentityModel.Services.CookieHandler.Path%2A> の各プロパティでは、cookie の基本名、有効になっているドメイン、およびクライアントに格納されているパスを指定します。 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> プロパティでは、クライアント側スクリプトから cookie にアクセスできるかどうかを指定します。 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> プロパティは、セキュリティで保護された (HTTPS) 接続経由でのみクッキーを送信するかどうかを指定します。 設定した場合、<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> プロパティを使用して、永続的なセッションの有効期限を設定します。これは、ブラウザーが閉じられた後でも有効なセッションです。 これらのプロパティには、通常、基になる <xref:System.Web.HttpCookie> オブジェクト (またはオブジェクト) でハンドラーの "core" メソッドによって設定される同等のプロパティがあります。 詳細については、各プロパティのドキュメントを参照してください。  
  
 SAM によって使用されるクッキーハンドラーは、 [&lt;cookiehandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)要素を介して構成で指定できます。 この要素によって設定されたクッキーハンドラーは、<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> イベントのイベントデリゲートで変更できます。また、<xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> プロパティを使用して直接設定またはアクセスすることもできます。  
  
   
  
## Examples  
 次の例では、`MyNamespace.MyCustomCookieHandler`型のカスタム cookie ハンドラーを使用するように SAM を構成します。  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookieHandler&gt;</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IdentityModel.Services.CookieHandler" /> クラスを初期化するために、派生クラスのコンストラクターから呼び出されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>クッキーを削除します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="cookieHandler.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定の名前、ドメインおよびパスを持つ現在の要求に関連付けられたクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名前、ドメイン、およびパスは、<xref:System.IdentityModel.Services.CookieHandler.Name%2A>、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>、および <xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティによって指定されます。 要求は、によって指定され <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Delete : string -&gt; unit" Usage="cookieHandler.Delete name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前。</param>
        <summary>指定した名前と既定のドメインおよびパスを持つ現在の要求に関連付けられたクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ドメインとパスは、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A> と <xref:System.IdentityModel.Services.CookieHandler.Path%2A> の各プロパティによって指定されます。 要求は、によって指定され <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>既定の名前、ドメインおよびパスを持つ現在の要求に関連付けられたクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名前、ドメイン、およびパスは、<xref:System.IdentityModel.Services.CookieHandler.Name%2A>、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>、および <xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティによって指定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前。</param>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>指定した名前と既定のドメインおよびパスを持つ指定した要求に関連付けられたクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ドメインとパスは、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A> と <xref:System.IdentityModel.Services.CookieHandler.Path%2A> の各プロパティによって指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前。</param>
        <param name="path">クッキーのパス。</param>
        <param name="domain">クッキーのドメイン</param>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" /></param>
        <summary>指定した名前、パス、およびドメインを持つ指定した要求に関連付けられたクッキーを削除します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DeleteCore : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.DeleteCore (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前</param>
        <param name="path">クッキーのパス</param>
        <param name="domain">クッキーのドメイン</param>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>派生クラスでオーバーライドされると、指定された名前、ドメイン、およびパスを含む指定された要求に関連付けられているクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オーバーロードされた <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> メソッドから、cookie の実際の削除操作を実行するために呼び出されます。 <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> メソッドは、名前とパスが空でない文字列であることを確認します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>このメソッドはオーバーライドする必要があります。 実装は、開発者に任されています。 通常、の実装では、<see cref="P:System.Web.HttpResponse.Cookies" /> コレクション内の指定された cookie を、<see langword="null" /> データを持つ cookie と、現在の時刻より前に設定された有効期限の時刻に置き換えます。ただし、これは要件ではありません。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クッキーで使用するドメインを取得または設定します。</summary>
        <value>クッキーが使用するドメイン。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> プロパティに対応します。  
  
 プロパティを初期化するには、構成の[&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)要素の `domain` 属性を指定します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookieHandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HideFromClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HideFromClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromClientScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クッキーをクライアント スクリプトから隠す必要があるかどうかを示す値を取得または設定します。</summary>
        <value>クッキーをクライアント スクリプトで非表示にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ハンドラーによって記述されたクッキーの Set Cookie ヘッダーに "HttpOnly" フラグを出力するかどうかを制御します。 一部の web ブラウザーでは、クライアント側のスクリプトが cookie 値にアクセスしないようにすることで、このフラグが適用されます。  
  
 このプロパティは、<xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> プロパティに対応しています。  
  
 プロパティを初期化するには、構成の[&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)要素の `hideFromScript` 属性を指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchCookiePath (baseUri As Uri, targetUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MatchCookiePath(Uri ^ baseUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="abstract member MatchCookiePath : Uri * Uri -&gt; string&#xA;override this.MatchCookiePath : Uri * Uri -&gt; string" Usage="cookieHandler.MatchCookiePath (baseUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri">要求のベース URL。</param>
        <param name="targetUri">照合する対象の URL。</param>
        <summary>ターゲット ドメインがクッキー ドメイン内にあり、ターゲット パスがクッキー パス内にある場合は、クッキー パス部分の大文字と小文字の区別を一致させます。</summary>
        <returns><see cref="T:System.String" /> が返されます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ハンドラーが書き込むクッキーの基本名を取得または設定します。</summary>
        <value>クッキーで使用する基本名。 既定値は "FedAuth" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> プロパティに対応しています。  
  
 プロパティを初期化するには、構成の[&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)要素の `name` 属性を指定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see langword="null" /> または空の値を設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ハンドラーが書き込むクッキーの仮想パスを取得または設定します。</summary>
        <value>仮想パス。 既定値は ASP.NET アプリケーションのルートです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> プロパティに対応しています。  
  
 プロパティを初期化するには、構成の[&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)要素の `path` 属性を指定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see langword="null" /> または空の値を設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan? PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PersistentSessionLifetime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>永続的なセッションの有効期間。 ゼロの場合は、一時的なセッションが常に使用されます。</summary>
        <value>セッションの有効期間。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 永続的なセッションのチケットはファイルベースの cookie に格納されます。つまり、web ブラウザーを閉じて再度開くと、サインインセッションが続行される可能性があります。  
  
 このプロパティは、<xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> プロパティを設定するために使用されます。  
  
 プロパティを初期化するには、構成の[&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)要素の `persistentSessionLifetime` 属性を指定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">0 未満の値が指定されました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>クッキーを読み取ります。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read();" />
      <MemberSignature Language="F#" Value="member this.Read : unit -&gt; byte[]" Usage="cookieHandler.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定の名前が含まれる現在の要求に関連付けられているクッキーを読み込みます。</summary>
        <returns>クッキー値。クッキーが見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cookie の名前は、<xref:System.IdentityModel.Services.CookieHandler.Name%2A> プロパティによって指定されます。 要求は <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>によって指定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Read : string -&gt; byte[]" Usage="cookieHandler.Read name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">読み取るクッキーの名前。</param>
        <summary>指定された名前を含む現在の要求に関連付けられているクッキーを読み込みます。</summary>
        <returns>クッキー値。クッキーが見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求は、によって指定され <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>既定の名前、ドメインおよびパスが含まれる現在の要求に関連付けられているクッキーを読み込みます。</summary>
        <returns>クッキー値。クッキーが見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cookie の名前は、<xref:System.IdentityModel.Services.CookieHandler.Name%2A> プロパティによって指定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">読み取るクッキーの名前。</param>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>指定された名前、ドメインおよびパスを含む指定された要求に関連付けられているクッキーを読み込みます。</summary>
        <returns>クッキー値。クッキーが見つからない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ReadCore : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.ReadCore (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前</param>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>派生クラスでオーバーライドされると、指定された名前を持ち、指定された要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>クッキー値。クッキーが見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オーバーロードされた <xref:System.IdentityModel.Services.CookieHandler.Read%2A> メソッドから、cookie の実際の読み取り操作を実行するために呼び出されます。 <xref:System.IdentityModel.Services.CookieHandler.Read%2A> メソッドは、`name` が空でない文字列であることを保証します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>このメソッドはオーバーライドする必要があります。 実装は、開発者に任されています。 一般的なケースでは、実装は <see cref="P:System.Web.HttpRequest.Cookies" /> コレクションから cookie データを読み取りますが、これは必須ではありません。</para></block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クッキーは SSL でのみ使用する必要があるかどうかを指定する値を取得または設定します。</summary>
        <value>クッキーを SSL 接続でのみ使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 書き込まれたクッキーに対して、Set Cookie ヘッダーの "Secure" フラグを出力するかどうかを制御します。 この値が `true`場合、セッション cookie は HTTPS 経由でのみ使用できます。  
  
 このプロパティは、<xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> プロパティに対応しています。  
  
 プロパティを初期化するには、構成の[&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)要素の `requireSSL` 属性を指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>クッキーを書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), isPersistent As Boolean, tokenExpirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * bool * DateTime -&gt; unit" Usage="cookieHandler.Write (value, isPersistent, tokenExpirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="isPersistent">クッキーが永続的である場合は <see langword="true" />。クッキーがセッションのみの場合、つまりクライアント上のブラウザーが閉じるまで有効である場合は <see langword="false" />。</param>
        <param name="tokenExpirationTime">基になるトークンの有効期限。</param>
        <summary>指定された値、永続化、および有効期限を含む現在の要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `isPersistent` パラメーターが `false`の場合、cookie の有効期限は <xref:System.DateTime.MinValue?displayProperty=nameWithType>に設定されます。 `isPersistent` パラメーターが `true`の場合、cookie の有効期限は <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> プロパティの値に設定されます。これが `null` でない場合、または <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> プロパティが `null`の場合、有効期限は `tokenExpirationTime` パラメーターの値に設定されます。  
  
 Cookie 名、ドメイン、およびパスは、<xref:System.IdentityModel.Services.CookieHandler.Name%2A>、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>、および <xref:System.IdentityModel.Services.CookieHandler.Path%2A> の各プロパティによって指定されます。 要求は <xref:System.Web.HttpContext.Current%2A>によって指定されます。 Cookie を SSL 経由でのみ送信するかどうかは、<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> プロパティによって指定されます。また、クライアント側スクリプトから cookie を非表示にするかどうかは、<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> プロパティによって指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">クッキーの名前。</param>
        <param name="expirationTime">クッキーの有効期限、またはセッション (セッションのみの) クッキーの <see cref="F:System.DateTime.MinValue" />。</param>
        <summary>指定された名前、値、および有効期限を含む現在の要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cookie のドメインとパスは、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A> と <xref:System.IdentityModel.Services.CookieHandler.Path%2A> の各プロパティによって指定されます。 要求は <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>によって指定されます。  要求は <xref:System.Web.HttpContext.Current%2A>によって指定されます。 Cookie を SSL 経由でのみ送信するかどうかは、<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> プロパティによって指定されます。また、クライアント側スクリプトから cookie を非表示にするかどうかは、<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> プロパティによって指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">クッキーの名前。</param>
        <param name="expirationTime">クッキーの有効期限、またはセッション (セッションのみの) クッキーの <see cref="F:System.DateTime.MinValue" />。</param>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>指定された名前、値、および有効期限を含む指定された要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cookie のドメインとパスは、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A> と <xref:System.IdentityModel.Services.CookieHandler.Path%2A> の各プロパティによって指定されます。 要求は <xref:System.Web.HttpContext.Current%2A>によって指定されます。 Cookie を SSL 経由でのみ送信するかどうかは、<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> プロパティによって指定されます。また、クライアント側スクリプトから cookie を非表示にするかどうかは、<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> プロパティによって指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, requiresSsl As Boolean, hideFromClientScript As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, path, domain, expirationTime, requiresSsl, hideFromClientScript, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">クッキーの名前。</param>
        <param name="path">クッキーのパス</param>
        <param name="domain">クッキーのドメイン</param>
        <param name="expirationTime">クッキーの有効期限、またはセッション (セッションのみの) クッキーの <see cref="F:System.DateTime.MinValue" />。</param>
        <param name="requiresSsl">クッキーを SSL 接続でのみ使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="hideFromClientScript">クッキーをクライアント スクリプトで非表示にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>指定された名前、値、ドメイン、パス、有効期限、および可視性を含む指定された要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member WriteCore : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.WriteCore (value, name, path, domain, expirationTime, secure, httpOnly, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">クッキーの名前。</param>
        <param name="path">クッキーのパス</param>
        <param name="domain">クッキーのドメイン</param>
        <param name="expirationTime">クッキーの有効期限、またはセッション (セッションのみの) クッキーの <see cref="F:System.DateTime.MinValue" />。</param>
        <param name="secure">クッキーを SSL 接続でのみ使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="httpOnly">クッキーをクライアント スクリプトで非表示にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="context">要求の <see cref="T:System.Web.HttpContext" />。</param>
        <summary>派生クラスでオーバーライドされると、指定された名前、値、ドメイン、パス、有効期限、永続性、および可視性を含む指定された要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オーバーロードされた <xref:System.IdentityModel.Services.CookieHandler.Write%2A> メソッドから、cookie の実際の書き込み処理を実行するために呼び出されます。 <xref:System.IdentityModel.Services.CookieHandler.Write%2A> メソッドは、`value` が空でないバイト配列で、`name` と `path` が空でない文字列であることを保証します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>このメソッドはオーバーライドする必要があります。 実装は、開発者に任されています。 一般的なケースでは、実装によって <see cref="P:System.Web.HttpResponse.Cookies" /> コレクションに cookie データが書き込まれますが、これは必須ではありません。 通常、メソッドのほとんどのパラメーターは、1つまたは複数の <see cref="T:System.Web.HttpCookie" /> オブジェクトに対して同等のプロパティを設定するために使用されます。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
