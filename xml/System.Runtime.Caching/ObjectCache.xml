<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27d0070600b195c6064090463ec62c19d8ea4796" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77240145" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ObjectCache = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="82381-101">オブジェクト キャッシュを表し、オブジェクト キャッシュにアクセスするための基本メソッドおよびプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="82381-101">Represents an object cache and provides the base methods and properties for accessing the object cache.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-102"><xref:System.Runtime.Caching.ObjectCache> 型は、メモリ内オブジェクトキャッシュのプライマリ型です。</span><span class="sxs-lookup"><span data-stu-id="82381-102">The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache.</span></span> <span data-ttu-id="82381-103">カスタムキャッシュ実装を開発するには、<xref:System.Runtime.Caching.ObjectCache> クラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="82381-103">To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82381-104"><xref:System.Runtime.Caching.ObjectCache> クラスは、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]の新しいものです。</span><span class="sxs-lookup"><span data-stu-id="82381-104">The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 <span data-ttu-id="82381-105">組み込みの <xref:System.Runtime.Caching.MemoryCache> クラスは、<xref:System.Runtime.Caching.ObjectCache> クラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="82381-105">The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span> <span data-ttu-id="82381-106"><xref:System.Runtime.Caching.MemoryCache> クラスは、<xref:System.Runtime.Caching.ObjectCache> クラスから派生する [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] で唯一の具象オブジェクトキャッシュ実装です。</span><span class="sxs-lookup"><span data-stu-id="82381-106">The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="82381-107">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="82381-107">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="82381-108"><see cref="T:System.Runtime.Caching.ObjectCache" /> 型は共通のキャッシュ関数のみを表すため、<see cref="T:System.Runtime.Caching.ObjectCache" /> インスタンスをインスタンス化して取得する必要があるかどうかの要件はありません。</span><span class="sxs-lookup"><span data-stu-id="82381-108">Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained.</span></span> <span data-ttu-id="82381-109">また、<see cref="T:System.Runtime.Caching.ObjectCache" /> クラスの具象実装をシングルトンする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="82381-109">In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.</span></span>  
  
 <block subset="none" type="note"><para><span data-ttu-id="82381-110"><see cref="T:System.Runtime.Caching.MemoryCache" /> はシングルトンではありませんが、少なくとも1つの <see cref="T:System.Runtime.Caching.MemoryCache" /> インスタンスだけを作成し、それらのインスタンスをキャッシュする項目をキャッシュするコードを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82381-110"><see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="82381-111"><see cref="T:System.Runtime.Caching.ObjectCache" /> クラスから継承する場合は、そのメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="82381-111">When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82381-112"><see cref="T:System.Runtime.Caching.ObjectCache" /> クラスを初期化するために、派生クラスのコンストラクターから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="82381-112">Called from constructors in derived classes in order to initialize the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82381-113">派生クラスでオーバーライドされると、一致するキーを持つ既存のキャッシュ エントリを返すことを要求せずに、キャッシュ エントリをキャッシュに挿入します。</span><span class="sxs-lookup"><span data-stu-id="82381-113">When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-114"><xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバーロードは、同じキーを持つ既存のキャッシュエントリを上書きしたり、削除したりせずに、キャッシュエントリをキャッシュに挿入しようとします。</span><span class="sxs-lookup"><span data-stu-id="82381-114">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</span></span> <span data-ttu-id="82381-115">キャッシュエントリには、型指定された <xref:System.Runtime.Caching.CacheItem> オブジェクトまたはジェネリックオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="82381-115">The cache entry can be a typed <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="82381-116"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバーロードと <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバーロードには、大きな違いが1つあります。</span><span class="sxs-lookup"><span data-stu-id="82381-116">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads have one significant difference.</span></span> <span data-ttu-id="82381-117">これらのメソッドがキャッシュエントリを挿入するときに、一致するエントリがキャッシュ内に見つかった場合、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバーロードは既存のキャッシュエントリを返しますが、<xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバーロードは返しません。</span><span class="sxs-lookup"><span data-stu-id="82381-117">When these methods insert a cache entry, if a matching entry is found in the cache, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads return the existing cache entry, but the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads do not.</span></span> <span data-ttu-id="82381-118">これらの異なるメソッドオーバーロードを使用すると、呼び出し元は既存のキャッシュエントリが必要かどうかに基づいてコードを最適化できます。</span><span class="sxs-lookup"><span data-stu-id="82381-118">Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</span></span> <span data-ttu-id="82381-119">分散キャッシュでは、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドを使用して既存の値を返す方が、<xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドを使用してブール値を返すよりもコストが高くなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="82381-119">In distributed caches, returning an existing value by using the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method might be more expensive than returning a Boolean value by using <xref:System.Runtime.Caching.ObjectCache.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool&#xA;override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="objectCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="82381-120">追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-120">The object to add.</span></span></param>
        <param name="policy"><span data-ttu-id="82381-121">キャッシュ エントリの削除の詳細を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-121">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="82381-122">このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="82381-122">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="82381-123">派生クラスでオーバーライドされると、キャッシュ エントリを <see cref="T:System.Runtime.Caching.CacheItem" /> インスタンスとしてキャッシュに挿入しようと試み、エントリの削除方法の詳細を追加します。</span><span class="sxs-lookup"><span data-stu-id="82381-123">When overridden in a derived class, tries to insert a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span></span></summary>
        <returns><span data-ttu-id="82381-124">挿入が成功した場合は <see langword="true" />。<see langword="false" /> と同じキーを持つエントリがキャッシュに既に存在する場合は <paramref name="item" />。</span><span class="sxs-lookup"><span data-stu-id="82381-124"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="item" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-125"><xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバーロードは、<xref:System.Runtime.Caching.ObjectCache> クラスの仮想 (abstract ではありません) です。これは、<xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドが内部で <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>を呼び出しているためです。</span><span class="sxs-lookup"><span data-stu-id="82381-125">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="82381-126">これにより、キャッシュの実装者が提供する必要があるメソッドオーバーロードの数が減ります。</span><span class="sxs-lookup"><span data-stu-id="82381-126">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="82381-127">キャッシュ実装が <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドに特別な動作を必要としない場合は、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバーロードを実装するだけで済みます。</span><span class="sxs-lookup"><span data-stu-id="82381-127">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * DateTimeOffset * string -&gt; bool&#xA;override this.Add : string * obj * DateTimeOffset * string -&gt; bool" Usage="objectCache.Add (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-128">キャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-128">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="82381-129">挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="82381-129">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="82381-130">キャッシュ エントリの有効期限が切れる固定日時。</span><span class="sxs-lookup"><span data-stu-id="82381-130">The fixed date and time at which the cache entry will expire.</span></span> <span data-ttu-id="82381-131">このパラメーターは、<see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> メソッドが呼び出されるときに必要です。</span><span class="sxs-lookup"><span data-stu-id="82381-131">This parameter is required when the <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> method is called.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-132">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-132">Optional.</span></span> <span data-ttu-id="82381-133">領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-133">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="82381-134">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] に領域が実装されていないため、既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-134">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-135">派生クラスでオーバーライドされると、既存のキャッシュ エントリを上書きせずに、キャッシュ エントリをキャッシュに挿入します。</span><span class="sxs-lookup"><span data-stu-id="82381-135">When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</span></span></summary>
        <returns><span data-ttu-id="82381-136">挿入が成功した場合は <see langword="true" />。<see langword="false" /> と同じキーを持つエントリがキャッシュに既に存在する場合は <paramref name="key" />。</span><span class="sxs-lookup"><span data-stu-id="82381-136"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-137"><xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバーロードは、<xref:System.Runtime.Caching.ObjectCache> クラスの仮想 (abstract ではありません) です。これは、<xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドが内部で <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>を呼び出しているためです。</span><span class="sxs-lookup"><span data-stu-id="82381-137">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="82381-138">これにより、キャッシュの実装者が提供する必要があるメソッドオーバーロードの数が減ります。</span><span class="sxs-lookup"><span data-stu-id="82381-138">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="82381-139">キャッシュ実装が <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドに特別な動作を必要としない場合は、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバーロードを実装するだけで済みます。</span><span class="sxs-lookup"><span data-stu-id="82381-139">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool&#xA;override this.Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool" Usage="objectCache.Add (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-140">キャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-140">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="82381-141">挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="82381-141">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="82381-142">キャッシュ エントリの削除の詳細を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-142">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="82381-143">このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="82381-143">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-144">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-144">Optional.</span></span> <span data-ttu-id="82381-145">領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-145">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="82381-146">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-146">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-147">派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入し、エントリの削除方法に関する情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="82381-147">When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="82381-148">挿入の試行が成功した場合は <see langword="true" />。<see langword="false" /> と同じキーを持つエントリがキャッシュに既に存在する場合は <paramref name="key" />。</span><span class="sxs-lookup"><span data-stu-id="82381-148"><see langword="true" /> if the insertion try succeeds, or <see langword="false" /> if there is an already an entry in the cache with the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-149"><xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバーロードは、<xref:System.Runtime.Caching.ObjectCache> クラスの仮想 (abstract ではありません) です。これは、<xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドが内部で <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>を呼び出しているためです。</span><span class="sxs-lookup"><span data-stu-id="82381-149">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="82381-150">これにより、キャッシュの実装者が提供する必要があるメソッドオーバーロードの数が減ります。</span><span class="sxs-lookup"><span data-stu-id="82381-150">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="82381-151">キャッシュ実装が <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドに特別な動作を必要としない場合は、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバーロードを実装するだけで済みます。</span><span class="sxs-lookup"><span data-stu-id="82381-151">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82381-152">派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入しようと試み、一致するキーを持つ既存のキャッシュ エントリを返します。</span><span class="sxs-lookup"><span data-stu-id="82381-152">When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-153"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバーロードは、エントリをキャッシュに挿入します。</span><span class="sxs-lookup"><span data-stu-id="82381-153">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads insert an entry into the cache.</span></span> <span data-ttu-id="82381-154">一致するキーを持つキャッシュエントリが既に存在する場合は、既存のエントリが返されます。</span><span class="sxs-lookup"><span data-stu-id="82381-154">If a cache entry with a matching key already exists, they return the existing entry.</span></span> <span data-ttu-id="82381-155">キャッシュエントリには、<xref:System.Runtime.Caching.CacheItem> オブジェクトまたは汎用オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="82381-155">The cache entry can be a <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="82381-156"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> オーバーロードと <xref:System.Runtime.Caching.ObjectCache.Add%2A> オーバーロードには1つの違いがあります。</span><span class="sxs-lookup"><span data-stu-id="82381-156">There is one difference between the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads.</span></span> <span data-ttu-id="82381-157">これらのオーバーロードされたメソッドがキャッシュエントリを挿入しようとすると、既存の挿入されたキャッシュエントリと一致するキーを持つ既存のエントリが見つかった場合、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> のオーバーロードは既存のキャッシュエントリを返します。</span><span class="sxs-lookup"><span data-stu-id="82381-157">When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads return the existing cache entry.</span></span> <span data-ttu-id="82381-158"><xref:System.Runtime.Caching.ObjectCache.Add%2A> のオーバーロードにはありません。</span><span class="sxs-lookup"><span data-stu-id="82381-158">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads do not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.AddOrGetExisting (value, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="82381-159">挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="82381-159">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="82381-160">キャッシュ エントリの削除の詳細を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-160">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="82381-161">このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="82381-161">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="82381-162">派生クラスでオーバーライドされると、指定された <see cref="T:System.Runtime.Caching.CacheItem" /> オブジェクトをキャッシュに挿入し、エントリの削除方法に関する情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="82381-162">When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem" /> object into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="82381-163">同じキーを持つキャッシュ エントリが存在する場合は指定したキャッシュ エントリ。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82381-163">If a cache entry with the same key exists, the specified cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-164">キャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-164">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="82381-165">挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="82381-165">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="82381-166">キャッシュ エントリの有効期限が切れる固定日時。</span><span class="sxs-lookup"><span data-stu-id="82381-166">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-167">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-167">Optional.</span></span> <span data-ttu-id="82381-168">領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-168">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="82381-169">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-169">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-170">派生クラスでオーバーライドされると、キー、キャッシュ エントリのオブジェクト、絶対有効期限の値、およびオプションでキャッシュを追加する領域を使用して、キャッシュ エントリをキャッシュに挿入します。</span><span class="sxs-lookup"><span data-stu-id="82381-170">When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</span></span></summary>
        <returns><span data-ttu-id="82381-171">同じキーを持つキャッシュ エントリが存在する場合は指定したキャッシュ エントリの値。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82381-171">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-172">この <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> メソッドオーバーロードは、<xref:System.Runtime.Caching.CacheItem> オブジェクトではなく、オブジェクト値を返します。</span><span class="sxs-lookup"><span data-stu-id="82381-172">This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-173">キャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-173">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="82381-174">挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="82381-174">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="82381-175">キャッシュ エントリの削除の詳細を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-175">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="82381-176">このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="82381-176">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-177">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-177">Optional.</span></span> <span data-ttu-id="82381-178">領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-178">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="82381-179">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-179">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-180">派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入し、キャッシュ エントリのキーと値、およびエントリの削除方法の情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="82381-180">When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="82381-181">同じキーを持つキャッシュ エントリが存在する場合は指定したキャッシュ エントリの値。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82381-181">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-182"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> メソッドは、<xref:System.Runtime.Caching.CacheItem> オブジェクトではなく、オブジェクトの値を返します。</span><span class="sxs-lookup"><span data-stu-id="82381-182">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string * string -&gt; bool" Usage="objectCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-183">キャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-183">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-184">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-184">Optional.</span></span> <span data-ttu-id="82381-185">領域が実装されている場合は、キャッシュ エントリが見つかる可能性があるキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-185">A named region in the cache where the cache can be found, if regions are implemented.</span></span> <span data-ttu-id="82381-186">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-186">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-187">派生クラスでオーバーライドされると、キャッシュ内にキャッシュ エントリが既に存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="82381-187">When overridden in a derived class, checks whether the cache entry already exists in the cache.</span></span></summary>
        <returns><span data-ttu-id="82381-188"><see langword="true" /> と同じキー値を持つキャッシュ エントリがキャッシュに存在する場合は <paramref name="key" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="82381-188"><see langword="true" /> if the cache contains a cache entry with the same key value as <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="abstract member CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="objectCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="82381-189">監視するキャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-189">The unique identifiers for cache entries to monitor.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-190">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-190">Optional.</span></span> <span data-ttu-id="82381-191">領域が実装されている場合は、<paramref name="keys" /> パラメーターのキャッシュ キーが存在するキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-191">A named region in the cache where the cache keys in the <paramref name="keys" /> parameter exist, if regions are implemented.</span></span> <span data-ttu-id="82381-192">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-192">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-193">派生クラスでオーバーライドされると、指定したキャッシュ エントリへの変更に応答してイベントをトリガーできる <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="82381-193">When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span></span></summary>
        <returns><span data-ttu-id="82381-194">キャッシュ内のキャッシュ エントリを監視する変更監視機能。</span><span class="sxs-lookup"><span data-stu-id="82381-194">A change monitor that monitors cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-195">派生 <xref:System.Runtime.Caching.ObjectCache> クラスが基本 <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> メソッドをオーバーライドする場合、キャッシュの実装では <xref:System.Runtime.Caching.CacheEntryChangeMonitor> オブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82381-195">When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object.</span></span> <span data-ttu-id="82381-196">この特別な変更モニターは、`keys` パラメーターに指定されているキャッシュエントリが変更されたときに、呼び出し元に通知します。</span><span class="sxs-lookup"><span data-stu-id="82381-196">This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter.</span></span> <span data-ttu-id="82381-197">たとえば、`keys` パラメーター内の監視対象のアイテムがキャッシュから更新または削除された場合、このメソッドによって作成された変更モニターによってイベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="82381-197">For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</span></span>  
  
 <span data-ttu-id="82381-198">キャッシュ実装で名前付きキャッシュ領域がサポートされている場合は、`regionName` パラメーターとして文字列値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="82381-198">If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter.</span></span> <span data-ttu-id="82381-199">それ以外の場合、パラメーターの既定値は `null`です。</span><span class="sxs-lookup"><span data-stu-id="82381-199">Otherwise, the parameter defaults to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82381-200">キャッシュエントリの変更モニターがサポートされていないキャッシュ実装があります。</span><span class="sxs-lookup"><span data-stu-id="82381-200">Not all cache implementations support cache-entry change monitors.</span></span> <span data-ttu-id="82381-201">キャッシュ実装で <xref:System.Runtime.Caching.CacheEntryChangeMonitor> オブジェクトがサポートされているかどうかを確認するには、特定のキャッシュ実装に関するドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="82381-201">To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82381-202">派生クラスでオーバーライドされると、キャッシュ実装で提供される機能の説明を取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-202">When overridden in a derived class, gets a description of the features that a cache implementation provides.</span></span></summary>
        <value><span data-ttu-id="82381-203">キャッシュ実装の既定の機能を示すフラグのビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="82381-203">A bitwise combination of flags that indicate the default capabilities of a cache implementation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; obj" Usage="objectCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-204">取得するキャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-204">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-205">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-205">Optional.</span></span> <span data-ttu-id="82381-206">領域が実装されている場合は、キャッシュ エントリが追加されたキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-206">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="82381-207">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-207">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-208">派生クラスでオーバーライドされると、指定したキャッシュ エントリをキャッシュからオブジェクトとして取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-208">When overridden in a derived class, gets the specified cache entry from the cache as an object.</span></span></summary>
        <returns><span data-ttu-id="82381-209"><paramref name="key" /> で識別されるキャッシュ エントリ。</span><span class="sxs-lookup"><span data-stu-id="82381-209">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="abstract member GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-210">取得するキャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-210">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-211">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-211">Optional.</span></span> <span data-ttu-id="82381-212">領域が実装されている場合は、キャッシュが追加されたキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-212">A named region in the cache to which the cache was added, if regions are implemented.</span></span> <span data-ttu-id="82381-213">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] では領域が実装されていないため、既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-213">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-214">派生クラスでオーバーライドされると、指定したキャッシュ エントリをキャッシュから <see cref="T:System.Runtime.Caching.CacheItem" /> インスタンスとして取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-214">When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span></span></summary>
        <returns><span data-ttu-id="82381-215"><paramref name="key" /> で識別されるキャッシュ エントリ。</span><span class="sxs-lookup"><span data-stu-id="82381-215">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-216">一部のキャッシュの実装では <xref:System.Runtime.Caching.CacheItem> クラスが拡張される可能性があるため、このメソッドのオーバーロードが存在します。</span><span class="sxs-lookup"><span data-stu-id="82381-216">This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class.</span></span> <span data-ttu-id="82381-217">この場合、<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> メソッドのオーバーロードは、必ずしもキャッシュされたデータに関するすべての情報を返すとは限りません。</span><span class="sxs-lookup"><span data-stu-id="82381-217">In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data.</span></span> <span data-ttu-id="82381-218">ただし、<xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> メソッドのオーバーロードを使用すると、キャッシュ値だけを超えるカスタムキャッシュを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="82381-218">However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.</span></span>  
  
 <span data-ttu-id="82381-219"><xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> メソッドは、<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> メソッドに似ていますが、<xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> メソッドが戻り、キャッシュエントリが <xref:System.Runtime.Caching.CacheItem> インスタンスとして返される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="82381-219">The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="abstract member GetCount : string -&gt; int64" Usage="objectCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="82381-220">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-220">Optional.</span></span> <span data-ttu-id="82381-221">領域が実装されている場合は、キャッシュ エントリ数の計算対象となるキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-221">A named region in the cache for which the cache entry count should be computed, if regions are implemented.</span></span> <span data-ttu-id="82381-222">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-222">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-223">派生クラスでオーバーライドされると、キャッシュ内のキャッシュ エントリの合計数を取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-223">When overridden in a derived class, gets the total number of cache entries in the cache.</span></span></summary>
        <returns><span data-ttu-id="82381-224">キャッシュ内のキャッシュ エントリの数。</span><span class="sxs-lookup"><span data-stu-id="82381-224">The number of cache entries in the cache.</span></span> <span data-ttu-id="82381-225"><paramref name="regionName" /> が <see langword="null" /> でない場合、指定したキャッシュ領域内のエントリの数を示します。</span><span class="sxs-lookup"><span data-stu-id="82381-225">If <paramref name="regionName" /> is not <see langword="null" />, the count indicates the number of entries that are in the specified cache region.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="objectCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82381-226">派生クラスでオーバーライドされると、キャッシュ エントリのコレクションを反復処理するために使用できる列挙子を作成します。</span><span class="sxs-lookup"><span data-stu-id="82381-226">When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</span></span></summary>
        <returns><span data-ttu-id="82381-227">キャッシュ内のキャッシュ エントリへのアクセスを提供する列挙子オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-227">The enumerator object that provides access to the cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-228">キャッシュの実装者は、このメソッドをオーバーライドおよび拡張して、キャッシュエントリのコレクションを反復処理するためのカスタム手段を提供できます。</span><span class="sxs-lookup"><span data-stu-id="82381-228">Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82381-229">通常、列挙子を返す操作は、キャッシュエントリ全体を返すよりもコストが高くなります。</span><span class="sxs-lookup"><span data-stu-id="82381-229">Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</span></span>  
  
 <span data-ttu-id="82381-230">このメソッドは、<xref:System.Runtime.Caching.ObjectCache> クラスが <xref:System.Collections.IEnumerable.GetEnumerator%2A> メソッドと <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドに対して持つ明示的なインターフェイスの実装によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="82381-230">This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82381-231">キャッシュ エントリのセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-231">Gets a set of cache entries.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="82381-232">取得するキャッシュ エントリの一意の識別子のコレクション。</span><span class="sxs-lookup"><span data-stu-id="82381-232">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-233">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-233">Optional.</span></span> <span data-ttu-id="82381-234">領域が実装されている場合は、キャッシュ エントリまたはエントリが追加されたキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-234">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="82381-235">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-235">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-236">派生クラスでオーバーライドされると、指定したキーに対応するキャッシュ エントリのセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-236">When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="82381-237">キャッシュ エントリを表すキーと値のペアのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="82381-237">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-238"><xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> メソッドのオーバーロードは、1つのネットワーク呼び出し中のキャッシュからの複数のキャッシュエントリのフェッチをサポートする分散キャッシュのパフォーマンスの最適化です。</span><span class="sxs-lookup"><span data-stu-id="82381-238">The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</span></span>  
  
 <span data-ttu-id="82381-239">呼び出し元はメソッドに1つ以上のキーを渡すことができますが、キャッシュ内のすべてのキーがエントリを表すという保証はありません。</span><span class="sxs-lookup"><span data-stu-id="82381-239">Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</span></span> <span data-ttu-id="82381-240">そのため、返されたディクショナリに含まれる項目の数が、メソッドに渡されたキーの数よりも少なくなる場合があります。</span><span class="sxs-lookup"><span data-stu-id="82381-240">Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (regionName, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="82381-241">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-241">Optional.</span></span> <span data-ttu-id="82381-242">領域が実装されている場合は、キャッシュ エントリまたはエントリが追加されたキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-242">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="82381-243">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] では領域が実装されていないため、既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-243">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <param name="keys"><span data-ttu-id="82381-244">取得するキャッシュ エントリの一意の識別子のコレクション。</span><span class="sxs-lookup"><span data-stu-id="82381-244">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <summary><span data-ttu-id="82381-245">指定したキーに対応するキャッシュ エントリのセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-245">Gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="82381-246">キャッシュ エントリを表すキーと値のペアのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="82381-246">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-247"><xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> メソッドのオーバーロードは、<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> メソッドオーバーロードに似ていますが、などC#のマネージ言語でサポートされている省略可能なパラメーター構文を使用して、名前付き領域を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="82381-247">The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</span></span>  
  
 <span data-ttu-id="82381-248"><xref:System.Runtime.Caching.ObjectCache> クラスは、`params` 配列を <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> メソッドのオーバーロードに渡す既定の実装を提供するため、このメソッドは仮想メソッドです。</span><span class="sxs-lookup"><span data-stu-id="82381-248">This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : IServiceProvider with get, set" Usage="System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82381-249"><see cref="T:System.Runtime.Caching.ObjectCache" /> の実装が使用でき、ホスト固有のサービスを <see cref="T:System.Runtime.Caching.ObjectCache" /> の実装に提供できる、管理されたホスティング環境への参照を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="82381-249">Gets or sets a reference to a managed hosting environment that is available to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations and that can provide host-specific services to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations.</span></span></summary>
        <value><span data-ttu-id="82381-250">キャッシュを認識する管理対象のホスト環境への参照。</span><span class="sxs-lookup"><span data-stu-id="82381-250">A reference to a cache-aware managed hosting environment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-251"><xref:System.Runtime.Caching.ObjectCache.Host%2A> プロパティは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] ホスト環境と、.NET Framework ホスト環境に依存する動作を実装するキャッシュ実装によって使用されることを想定しています。</span><span class="sxs-lookup"><span data-stu-id="82381-251">The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</span></span>  
  
 <span data-ttu-id="82381-252">次の表に、管理されたホスティング環境から使用可能で、<xref:System.Runtime.Caching.ObjectCache.Host%2A> プロパティを通じて <xref:System.Runtime.Caching.ObjectCache> の実装で使用できるホスト環境サービスのセットを示します。</span><span class="sxs-lookup"><span data-stu-id="82381-252">The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:</span></span>  
  
|<span data-ttu-id="82381-253">Service</span><span class="sxs-lookup"><span data-stu-id="82381-253">Service</span></span>|<span data-ttu-id="82381-254">説明</span><span class="sxs-lookup"><span data-stu-id="82381-254">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|<span data-ttu-id="82381-255">ホスト環境では、パフォーマンスカウンターの特定などの機能のためにキャッシュの実装で必要になる可能性があるアプリケーションドメインの識別子を提供できます。</span><span class="sxs-lookup"><span data-stu-id="82381-255">Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|<span data-ttu-id="82381-256">ホスト環境では、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]に用意されているものを使用する代わりに、カスタムのファイル変更通知システムを提供できます。</span><span class="sxs-lookup"><span data-stu-id="82381-256">Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|<span data-ttu-id="82381-257">キャッシュの実装がホスト環境にキャッシュメモリの消費を報告できるようにします。</span><span class="sxs-lookup"><span data-stu-id="82381-257">Lets cache implementations report cache memory consumption to the host environment.</span></span> <span data-ttu-id="82381-258">これにより、ホスト環境は複数のキャッシュ実装間でメモリ使用量を一元的に管理できます。</span><span class="sxs-lookup"><span data-stu-id="82381-258">This enables host environments to centrally manage memory consumption across multiple cache implementations.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="82381-259">このプロパティ値の呼び出し元には、無制限のコードアクセスセキュリティのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="82381-259">Callers of this property value require unrestricted code access security permissions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82381-260">プロパティに割り当てられている値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-260">The value being assigned to the property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="82381-261">プロパティ値を複数回設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="82381-261">An attempt was made to set the property value more than one time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteAbsoluteExpiration : DateTimeOffset" Usage="System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82381-262">キャッシュ エントリに絶対有効期限が設定されていないことを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-262">Gets a value that indicates that a cache entry has no absolute expiration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-263">有効期限の値として設定された <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> フィールド値を持つキャッシュに挿入されるキャッシュエントリは、絶対時点に基づいて期限切れになることはありません。</span><span class="sxs-lookup"><span data-stu-id="82381-263">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time.</span></span> <span data-ttu-id="82381-264">ただし、この設定のキャッシュエントリは、メモリ不足によって発生する変更監視イベントの削除など、特定のキャッシュ実装によって決定される他の理由でキャッシュから削除できます。</span><span class="sxs-lookup"><span data-stu-id="82381-264">However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.ObjectCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-265">キャッシュ内のキャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-265">A unique identifier for a cache entry in the cache.</span></span></param>
        <summary><span data-ttu-id="82381-266"><see cref="T:System.Runtime.Caching.ObjectCache" /> クラスの既定のインデクサーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="82381-266">Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <value><span data-ttu-id="82381-267">キャッシュ インスタンスへのインデクサーとして使用されるキー。</span><span class="sxs-lookup"><span data-stu-id="82381-267">A key that serves as an indexer into the cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-268">このプロパティの set アクセサーの動作は、<xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="82381-268">The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method.</span></span> <span data-ttu-id="82381-269">内部的には、キャッシュ実装は、指定された値の絶対有効期限を <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> メソッドに設定できます。</span><span class="sxs-lookup"><span data-stu-id="82381-269">Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method.</span></span> <span data-ttu-id="82381-270">ただし、この動作は最終的にキャッシュの実装によって決まります。</span><span class="sxs-lookup"><span data-stu-id="82381-270">However this behavior is ultimately up to the cache implementation.</span></span>  
  
 <span data-ttu-id="82381-271">Get アクセサーの動作は、<xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> メソッドを呼び出し、リージョン名に `null` を使用するのと似ています。</span><span class="sxs-lookup"><span data-stu-id="82381-271">The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82381-272">特定の <see cref="T:System.Runtime.Caching.ObjectCache" /> インスタンスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="82381-272">Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache" /> instance.</span></span></summary>
        <value><span data-ttu-id="82381-273">特定のキャッシュ インスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="82381-273">The name of a specific cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-274">キャッシュの実装によっては、1つのアプリケーションで実行されているキャッシュの複数のインスタンスをサポートする場合があります。</span><span class="sxs-lookup"><span data-stu-id="82381-274">Some cache implementations might support multiple instances of the cache that is running in a single application.</span></span> <span data-ttu-id="82381-275">このプロパティを使用すると、キャッシュの実装者は、特定のキャッシュインスタンスを識別する名前を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="82381-275">This property lets cache implementers return a name that identifies a specific cache instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82381-276">キャッシュ エントリにスライド式有効期限が設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="82381-276">Indicates that a cache entry has no sliding expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-277">期間または定義された時間に基づく有効期限は、スライディング有効期限とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="82381-277">Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</span></span> <span data-ttu-id="82381-278">通常、スライド式有効期限に基づく項目を見つけするキャッシュ実装は、指定された時間内にアクセスされていない項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="82381-278">Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</span></span>  
  
 <span data-ttu-id="82381-279">有効期限の値として設定された <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> フィールド値を使用してキャッシュに挿入されるキャッシュエントリは、スライディング時間枠の非アクティビティのため、削除しないでください。</span><span class="sxs-lookup"><span data-stu-id="82381-279">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</span></span> <span data-ttu-id="82381-280">ただし、キャッシュ項目に絶対有効期限が設定されている場合、またはその他の削除イベント (変更モニターやメモリ不足など) が発生した場合は、キャッシュ項目を削除できます。</span><span class="sxs-lookup"><span data-stu-id="82381-280">However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Remove : string * string -&gt; obj" Usage="objectCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-281">キャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-281">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-282">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-282">Optional.</span></span> <span data-ttu-id="82381-283">領域が実装されている場合は、キャッシュ エントリが追加されたキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-283">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="82381-284">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-284">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-285">派生クラスでオーバーライドされると、キャッシュからキャッシュ エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="82381-285">When overridden in a derived class, removes the cache entry from the cache.</span></span></summary>
        <returns><span data-ttu-id="82381-286">キーで指定された、削除されたキャッシュ エントリの値を表すオブジェクト。指定したエントリが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82381-286">An object that represents the value of the removed cache entry that was specified by the key, or <see langword="null" /> if the specified entry was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-287">カスタムキャッシュ実装でこのメソッドをオーバーライドする場合、`key`に対応するキャッシュにキャッシュエントリがあると、削除された項目の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="82381-287">If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned.</span></span> <span data-ttu-id="82381-288">キャッシュから何も削除されていない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="82381-288">If nothing was removed from the cache, the method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82381-289">一部の分散キャッシュ実装では、キャッシュから削除された値を返す機能がサポートされていない場合があります。</span><span class="sxs-lookup"><span data-stu-id="82381-289">Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</span></span> <span data-ttu-id="82381-290">これは、キャッシュの実装で、削除されたキャッシュ項目の値を返すことがサポートされていないことが原因である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="82381-290">This might be because the cache implementation does not support returning the value of a removed cache item.</span></span> <span data-ttu-id="82381-291">また、戻り値としてオブジェクトをマーシャリングすると、コストが高すぎることが原因である場合もあります。</span><span class="sxs-lookup"><span data-stu-id="82381-291">It might also be because marshaling the object as a return value is too expensive.</span></span> <span data-ttu-id="82381-292">このような場合、キャッシュの実装は `null`を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="82381-292">In such cases, cache implementations can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82381-293">派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入します。</span><span class="sxs-lookup"><span data-stu-id="82381-293">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-294"><xref:System.Runtime.Caching.ObjectCache.Set%2A> オーバーロードメソッドの一般的な動作は、挿入または更新操作です。</span><span class="sxs-lookup"><span data-stu-id="82381-294">The typical behavior of the <xref:System.Runtime.Caching.ObjectCache.Set%2A> overload methods is an insert-or-update operation.</span></span> <span data-ttu-id="82381-295">指定されたエントリが存在しない場合、キャッシュエントリが新しいエントリとして挿入されるか、既に存在する場合は、新しい値でキャッシュエントリが更新されます。</span><span class="sxs-lookup"><span data-stu-id="82381-295">A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="objectCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="82381-296">追加するキャッシュ項目。</span><span class="sxs-lookup"><span data-stu-id="82381-296">The cache item to add.</span></span></param>
        <param name="policy"><span data-ttu-id="82381-297">キャッシュ エントリの削除の詳細を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-297">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="82381-298">このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="82381-298">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="82381-299">派生クラスでオーバーライドされると、キャッシュ エントリを <see cref="T:System.Runtime.Caching.CacheItem" /> インスタンスとしてキャッシュに挿入し、エントリの削除方法に関する情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="82381-299">When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, specifying information about how the entry will be evicted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-300">`item` のキーが存在しない場合は、`item` が新しいキャッシュエントリとして挿入されます。</span><span class="sxs-lookup"><span data-stu-id="82381-300">If the key for `item` does not exist, `item` is inserted as a new cache entry.</span></span> <span data-ttu-id="82381-301">`item` に一致するキーを持つ項目が存在する場合、既存のキャッシュエントリの値を更新または上書きするために `item` の値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="82381-301">If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="objectCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-302">キャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-302">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="82381-303">挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="82381-303">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="82381-304">キャッシュ エントリの有効期限が切れる固定日時。</span><span class="sxs-lookup"><span data-stu-id="82381-304">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-305">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-305">Optional.</span></span> <span data-ttu-id="82381-306">領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-306">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="82381-307">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-307">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-308">派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入し、時間ベースの有効期限の詳細を指定します。</span><span class="sxs-lookup"><span data-stu-id="82381-308">When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-309">`key` に一致する項目がキャッシュに存在しない場合、`value` と `key` を使用して新しいキャッシュエントリとして挿入されます。</span><span class="sxs-lookup"><span data-stu-id="82381-309">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="82381-310">`item` に一致するキーを持つ項目が存在する場合は、`value`を使用してキャッシュエントリが更新または上書きされます。</span><span class="sxs-lookup"><span data-stu-id="82381-310">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="objectCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="82381-311">キャッシュ エントリの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="82381-311">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="82381-312">挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="82381-312">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="82381-313">キャッシュ エントリの削除の詳細を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-313">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="82381-314">このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="82381-314">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="82381-315">省略可。</span><span class="sxs-lookup"><span data-stu-id="82381-315">Optional.</span></span> <span data-ttu-id="82381-316">領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。</span><span class="sxs-lookup"><span data-stu-id="82381-316">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="82381-317">省略可能なパラメーターの既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82381-317">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="82381-318">派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入します。</span><span class="sxs-lookup"><span data-stu-id="82381-318">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-319">このメソッドオーバーロードを使用すると、時間ベースの絶対有効期限で使用できるものよりも多くの削除または有効期限の詳細を指定できます。</span><span class="sxs-lookup"><span data-stu-id="82381-319">This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</span></span>  
  
 <span data-ttu-id="82381-320">`key` に一致する項目がキャッシュに存在しない場合、`value` と `key` を使用して新しいキャッシュエントリとして挿入されます。</span><span class="sxs-lookup"><span data-stu-id="82381-320">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="82381-321">`item` に一致するキーを持つ項目が存在する場合は、`value`を使用してキャッシュエントリが更新または上書きされます。</span><span class="sxs-lookup"><span data-stu-id="82381-321">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82381-322">厳密に型指定されたコレクションに対する繰り返し処理をサポートします。</span><span class="sxs-lookup"><span data-stu-id="82381-322">Supports iteration over a strongly typed collection.</span></span></summary>
        <returns><span data-ttu-id="82381-323">キャッシュ内のキャッシュ エントリへのアクセスを提供する列挙子オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-323">The enumerator object that provides access to the cache entries in the cache.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82381-324">ジェネリック コレクションに対する反復処理をサポートします。</span><span class="sxs-lookup"><span data-stu-id="82381-324">Supports iteration over a generic collection.</span></span></summary>
        <returns><span data-ttu-id="82381-325">キャッシュ内のアイテムへのアクセスを提供する列挙子オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82381-325">The enumerator object that provides access to the items in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82381-326">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="82381-326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="82381-327">派生 <xref:System.Runtime.Caching.ObjectCache> インスタンスが <xref:System.Collections.IEnumerable> インターフェイスにキャストされている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="82381-327">It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="82381-328">開発者は、このメソッドを使用して、キャッシュエントリのジェネリックコレクションを反復処理できます。</span><span class="sxs-lookup"><span data-stu-id="82381-328">Developers can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 <span data-ttu-id="82381-329">これは、<xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> メソッドを内部で呼び出す既定の <xref:System.Collections.IEnumerable.GetEnumerator%2A> 実装です。</span><span class="sxs-lookup"><span data-stu-id="82381-329">This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
