<Type Name="ModelService" FullName="System.Activities.Presentation.Services.ModelService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="664573cddce32363212658a6c406b8a4cf10bb43" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73376461" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ModelService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelService abstract" />
  <TypeSignature Language="F#" Value="type ModelService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="106f1-101">このクラスは、モデルと対話するためにデザイナーが使用するメイン エントリ ポイントです。</span><span class="sxs-lookup"><span data-stu-id="106f1-101">This class is the main entry point that the designer uses to interact with the model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106f1-102">派生クラスの作成時に実装する必要があるサービスのメソッドには、パブリック メソッドとプロテクト メソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="106f1-102">The service has a split between public and protected methods that you must implement when you create a derived class.</span></span> <span data-ttu-id="106f1-103">パブリック メソッドは、どこからでも呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="106f1-103">The public methods are callable by anyone.</span></span> <span data-ttu-id="106f1-104">プロテクト メソッドは、モデルから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-104">The protected methods are invoked by the model.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="106f1-105">新しい <see cref="T:System.Activities.Presentation.Services.ModelService" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="106f1-105">Creates a new <see cref="T:System.Activities.Presentation.Services.ModelService" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateItem">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="106f1-106">指定した型の <see cref="T:System.Activities.Presentation.Model.ModelItem" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="106f1-106">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span></span> <span data-ttu-id="106f1-107">このメソッドは、ユーザーが新規アイテムを作成するときに <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-107">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (item As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="106f1-108">複製およびラップするアイテム。</span><span class="sxs-lookup"><span data-stu-id="106f1-108">The item to clone and wrap.</span></span></param>
        <summary><span data-ttu-id="106f1-109">既存のインスタンスを受け取り、そのインスタンスのディープ クローンであるモデル アイテムを作成します。</span><span class="sxs-lookup"><span data-stu-id="106f1-109">Takes an existing instance and creates a model item that is a deep clone of the instance.</span></span></summary>
        <returns><span data-ttu-id="106f1-110">新たに作成された、既存のアイテムのクローンである <see cref="T:System.Activities.Presentation.Model.ModelItem" /> です。</span><span class="sxs-lookup"><span data-stu-id="106f1-110">The newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is a clone of the existing item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, params object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (itemType As Type, options As CreateOptions, ParamArray arguments As Object()) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(Type ^ itemType, System::Activities::Presentation::Model::CreateOptions options, ... cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : Type * System.Activities.Presentation.Model.CreateOptions * obj[] -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateItem (itemType, options, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
        <Parameter Name="options" Type="System.Activities.Presentation.Model.CreateOptions" />
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="106f1-111">作成するアイテムの型。</span><span class="sxs-lookup"><span data-stu-id="106f1-111">The type of item to create.</span></span></param>
        <param name="options"><span data-ttu-id="106f1-112">作成オプション。</span><span class="sxs-lookup"><span data-stu-id="106f1-112">Creation options.</span></span> <span data-ttu-id="106f1-113">アイテムの既定値を初期化するかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="106f1-113">You can specify whether you would like to initialize default values for an item.</span></span></param>
        <param name="arguments"><span data-ttu-id="106f1-114">アイテムのコンストラクターに渡す引数の配列。</span><span class="sxs-lookup"><span data-stu-id="106f1-114">An array of arguments to the constructor of the item.</span></span></param>
        <summary><span data-ttu-id="106f1-115">指定した型の <see cref="T:System.Activities.Presentation.Model.ModelItem" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="106f1-115">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span></span> <span data-ttu-id="106f1-116">このメソッドは、ユーザーが新規アイテムを作成するときに <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-116">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span></span></summary>
        <returns><span data-ttu-id="106f1-117">新しく作成された <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="106f1-117">The newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStaticMemberItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class System.Type type, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateStaticMemberItem(Type ^ type, System::String ^ memberName);" />
      <MemberSignature Language="F#" Value="abstract member CreateStaticMemberItem : Type * string -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateStaticMemberItem (type, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="106f1-118">参照されている静的メンバーを格納している型。</span><span class="sxs-lookup"><span data-stu-id="106f1-118">The type that contains the static member being referenced.</span></span></param>
        <param name="memberName"><span data-ttu-id="106f1-119">参照されている静的メンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="106f1-119">The name of the static member being referenced.</span></span></param>
        <summary><span data-ttu-id="106f1-120">指定したクラスの静的メンバーの値を表す新しいモデル アイテムを作成します。</span><span class="sxs-lookup"><span data-stu-id="106f1-120">Creates a new model item that represents the value of a static member of the given class.</span></span></summary>
        <returns><span data-ttu-id="106f1-121"><see cref="T:System.Activities.Presentation.Model.ModelItem" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="106f1-121">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106f1-122">たとえば、`Brushes.Red` への参照をモデルに追加するには、パラメーターとして `typeof(Brushes)` および文字列 "Red" を指定してこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="106f1-122">For example, to add a reference to `Brushes.Red` to the model, call this method with `typeof(Brushes)` and the string "Red" as the parameters.</span></span> <span data-ttu-id="106f1-123">この場合、`{x:Static Brushes.Red}` として XAML にシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-123">This will be serialized into XAML as `{x:Static Brushes.Red}`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="106f1-124">検索開始位置を指定して、一致するモデル アイテムを検索します。</span><span class="sxs-lookup"><span data-stu-id="106f1-124">Finds matching model items given a starting point from which to look.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106f1-125">検索は、すべて再帰的に行われます。</span><span class="sxs-lookup"><span data-stu-id="106f1-125">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate&lt;Type&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Predicate`1&lt;class System.Type&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Find (startingItem As ModelItem, match As Predicate(Of Type)) As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Predicate&lt;Type ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.Activities.Presentation.Model.ModelItem * Predicate&lt;Type&gt; -&gt; seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelService.Find (startingItem, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="match" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="startingItem"><span data-ttu-id="106f1-126">検索を開始する位置にある <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="106f1-126">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span></span> <span data-ttu-id="106f1-127">このアイテムの上のアイテムは無視されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-127">Items above this item will be ignored.</span></span> <span data-ttu-id="106f1-128">このアイテムと、それより下位の階層にあるアイテムが検索対象になります。</span><span class="sxs-lookup"><span data-stu-id="106f1-128">This item, and any item below it in the hierarchy, will be included in the search.</span></span> <span data-ttu-id="106f1-129">この値が <see langword="null" /> の場合は、代わりに <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-129">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span></span></param>
        <param name="match"><span data-ttu-id="106f1-130">より複雑な型の照合を使用できるようにする述語。</span><span class="sxs-lookup"><span data-stu-id="106f1-130">A predicate that allows more complex type matching to be used.</span></span> <span data-ttu-id="106f1-131">このメソッドでは、指定した親スコープ内で、述語に一致するすべてのアイテムが列挙されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-131">This method will enumerate all items within the given parent scope that match the predicate.</span></span></param>
        <summary><span data-ttu-id="106f1-132">検索開始位置を指定して、一致するモデル アイテムを検索します。</span><span class="sxs-lookup"><span data-stu-id="106f1-132">Finds matching model items given a starting point from which to look.</span></span></summary>
        <returns><span data-ttu-id="106f1-133">クエリに一致するすべてのモデル アイテムが格納された <see cref="T:System.Collections.Generic.IEnumerable`1" /> です。</span><span class="sxs-lookup"><span data-stu-id="106f1-133">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106f1-134">検索は、すべて再帰的に行われます。</span><span class="sxs-lookup"><span data-stu-id="106f1-134">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="106f1-135"><paramref name="match" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="106f1-135"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.Activities.Presentation.Model.ModelItem * Type -&gt; seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelService.Find (startingItem, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="startingItem"><span data-ttu-id="106f1-136">検索を開始する位置にある <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="106f1-136">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span></span> <span data-ttu-id="106f1-137">このアイテムの上のアイテムは無視されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-137">Items above this item will be ignored.</span></span> <span data-ttu-id="106f1-138">このアイテムと、それより下位の階層にあるアイテムが検索対象になります。</span><span class="sxs-lookup"><span data-stu-id="106f1-138">This item, and any item below it in the hierarchy, will be included in the search.</span></span> <span data-ttu-id="106f1-139">この値が <see langword="null" /> の場合は、代わりに <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-139">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span></span></param>
        <param name="type"><span data-ttu-id="106f1-140">検索するオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="106f1-140">The <see cref="T:System.Type" /> of the object to find.</span></span> <span data-ttu-id="106f1-141">このメソッドでは、指定した親スコープ内で、要求された型のすべてのアイテムが列挙されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-141">This method will enumerate all items within the given parent scope that are of the requested type.</span></span></param>
        <summary><span data-ttu-id="106f1-142">検索開始位置を指定して、一致するモデル アイテムを検索します。</span><span class="sxs-lookup"><span data-stu-id="106f1-142">Finds matching model items given a starting point from which to look.</span></span></summary>
        <returns><span data-ttu-id="106f1-143">クエリに一致するすべてのモデル アイテムが格納された <see cref="T:System.Collections.Generic.IEnumerable`1" /> です。</span><span class="sxs-lookup"><span data-stu-id="106f1-143">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106f1-144">検索は、すべて再帰的に行われます。</span><span class="sxs-lookup"><span data-stu-id="106f1-144">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="106f1-145"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="106f1-145"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="106f1-146">指定したスコープで、指定した名前の <see cref="T:System.Activities.Presentation.Model.ModelItem" /> を検索します。</span><span class="sxs-lookup"><span data-stu-id="106f1-146">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106f1-147">モデルアイテムが見つからなかった場合は `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="106f1-147">Returns `null` if the model item could not be located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromName (scope As ModelItem, name As String) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FromName : System.Activities.Presentation.Model.ModelItem * string -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.FromName (scope, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="106f1-148">スコープ (省略可能)。</span><span class="sxs-lookup"><span data-stu-id="106f1-148">An optional scope to provide.</span></span> <span data-ttu-id="106f1-149">スコープを指定しない場合は、スコープとして <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-149">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span></span> <span data-ttu-id="106f1-150">スコープを指定した場合は、階層内で最も近い <see cref="T:System.Windows.Markup.INameScope" /> を使用してアイテムが検索されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-150">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span></span></param>
        <param name="name"><span data-ttu-id="106f1-151">検索する名前。</span><span class="sxs-lookup"><span data-stu-id="106f1-151">The name to locate.</span></span></param>
        <summary><span data-ttu-id="106f1-152">指定したスコープで、指定した名前の <see cref="T:System.Activities.Presentation.Model.ModelItem" /> を検索します。</span><span class="sxs-lookup"><span data-stu-id="106f1-152">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <returns><span data-ttu-id="106f1-153">名前が <paramref name="name" /> と一致する場合は <see cref="T:System.Activities.Presentation.Model.ModelItem" /> を返します。一致するものがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="106f1-153">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="106f1-154"><paramref name="name" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="106f1-154"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name, valuetype System.StringComparison comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FromName (scope As ModelItem, name As String, comparison As StringComparison) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name, StringComparison comparison);" />
      <MemberSignature Language="F#" Value="abstract member FromName : System.Activities.Presentation.Model.ModelItem * string * StringComparison -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.FromName (scope, name, comparison)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="comparison" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="106f1-155">スコープ (省略可能)。</span><span class="sxs-lookup"><span data-stu-id="106f1-155">An optional scope to provide.</span></span> <span data-ttu-id="106f1-156">スコープを指定しない場合は、スコープとして <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-156">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span></span> <span data-ttu-id="106f1-157">スコープを指定した場合は、階層内で最も近い <see cref="T:System.Windows.Markup.INameScope" /> を使用してアイテムが検索されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-157">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span></span></param>
        <param name="name"><span data-ttu-id="106f1-158">検索する名前。</span><span class="sxs-lookup"><span data-stu-id="106f1-158">The name to locate.</span></span></param>
        <param name="comparison"><span data-ttu-id="106f1-159">名前の比較方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="106f1-159">Determines how the name should be compared.</span></span> <span data-ttu-id="106f1-160">既定では、序数に対して比較されます。</span><span class="sxs-lookup"><span data-stu-id="106f1-160">The default is to compare against ordinal.</span></span></param>
        <summary><span data-ttu-id="106f1-161">指定したスコープで、指定した名前の <see cref="T:System.Activities.Presentation.Model.ModelItem" /> を検索します。</span><span class="sxs-lookup"><span data-stu-id="106f1-161">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <returns><span data-ttu-id="106f1-162">名前が <paramref name="name" /> と一致する場合は <see cref="T:System.Activities.Presentation.Model.ModelItem" /> を返します。一致するものがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="106f1-162">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="106f1-163"><paramref name="name" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="106f1-163"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ModelChanged">
      <MemberSignature Language="C#" Value="public abstract event EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Services.ModelService.ModelChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Custom Event ModelChanged As EventHandler(Of ModelChangedEventArgs) " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event EventHandler&lt;System::Activities::Presentation::Services::ModelChangedEventArgs ^&gt; ^ ModelChanged;" />
      <MemberSignature Language="F#" Value="member this.ModelChanged : EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; " Usage="member this.ModelChanged : System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ModelChanged As EventHandler(Of ModelChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106f1-164">このイベントは、モデルでなんらかの変更が行われた場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="106f1-164">This event is raised when something in the model has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106f1-165">イベントのイベント引数を使用して、変更内容を取得できます。</span><span class="sxs-lookup"><span data-stu-id="106f1-165">The event arguments in the event can be used to find what has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelService.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Services.ModelService.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106f1-166">オブジェクト階層構造のルート</span><span class="sxs-lookup"><span data-stu-id="106f1-166">The root of the object hierarchy.</span></span></summary>
        <value><span data-ttu-id="106f1-167"><see cref="T:System.Activities.Presentation.Model.ModelItem" />としてのモデル階層のルート。</span><span class="sxs-lookup"><span data-stu-id="106f1-167">The root of the model hierarchy as a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106f1-168">線形のストアの場合、ルートは、ストア内の最初のオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="106f1-168">For linear stores, the root is the first object in the store.</span></span> <span data-ttu-id="106f1-169">オブジェクトのツリーを表すストアの場合、ツリーの最上位ノードを返します。</span><span class="sxs-lookup"><span data-stu-id="106f1-169">For stores that represent a tree of objects, this returns the topmost node of the tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
