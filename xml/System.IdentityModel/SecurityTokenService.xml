<Type Name="SecurityTokenService" FullName="System.IdentityModel.SecurityTokenService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="178d7c121e25517828e3ec3661390cd3481a387f" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83951281" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.SecurityTokenService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenService" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenService abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenService = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b1c06-101">セキュリティ トークン サービス (STS) のプロパティとメソッドを定義する抽象基本クラス。</span><span class="sxs-lookup"><span data-stu-id="b1c06-101">The abstract base class that defines the properties and methods of a security token service (STS).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-102">STS を作成するには、<xref:System.IdentityModel.SecurityTokenService> クラスから派生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-102">To create an STS you must derive from the <xref:System.IdentityModel.SecurityTokenService> class.</span></span> <span data-ttu-id="b1c06-103">カスタムクラスでは、少なくとも <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> および <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-103">In your custom class you must, at a minimum, override the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="b1c06-104">これらのオーバーライドを使用すると、クラスで定義されている他のすべてのメソッドの既定の実装を使用して作成された STS は、セキュリティトークン要求 (RST) に応答してセキュリティトークンを発行することができます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-104">With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST).</span></span> <span data-ttu-id="b1c06-105">つまり、WS-TRUST 仕様で定義されている問題バインディングが実装されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-105">That is, the Issue binding defined in the WS-Trust specification is implemented.</span></span> <span data-ttu-id="b1c06-106">このバインディングは、<xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドに実装されています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-106">This binding is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="b1c06-107">その他の WS-TRUST バインド (更新、キャンセル、および検証) は、既定のケースで実装されていません。これらのバインドのいずれかに対応する RST が検出された場合は、適切なエラーが呼び出し元に返されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-107">None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered.</span></span> <span data-ttu-id="b1c06-108">もちろん、適切なメソッド (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>、<xref:System.IdentityModel.SecurityTokenService.Cancel%2A>、および <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) をオーバーライドして、これらのバインドを STS に実装することができます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-108">You can, of course, override the appropriate methods (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, and <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) to implement these bindings in your STS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b1c06-109">運用の準備ができている STS を実装するには、そのようなサービスの公開に固有のセキュリティリスクを軽減するために、慎重に計画し、大量のリソースを消費することがあります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-109">Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service.</span></span> <span data-ttu-id="b1c06-110">Windows Identity Foundation (WIF) を使用するほとんどの開発者は、STS 自体を開発するのではなく、STS に id 管理をアウトソーシングするアプリケーションを開発します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-110">Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself.</span></span> <span data-ttu-id="b1c06-111">WIF は visual Studio の拡張機能であり、Visual Studio 2012 の Id およびアクセスツールであり、開発環境で開発者がソリューションをテストするのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-111">WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment.</span></span> <span data-ttu-id="b1c06-112">このツールには、開発中のアプリケーションに対して特定の要求を処理するように構成できる STS の `LocalSTS`が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-112">This tool includes an STS, `LocalSTS`, that you can configure to serve specific claims to the application that you are developing.</span></span> <span data-ttu-id="b1c06-113">Id およびアクセスツールの詳細については、「 [Visual Studio 2012 用 id およびアクセスツール](/dotnet/framework/security/identity-and-access-tool-for-vs)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1c06-113">For more information about the Identity and Access tool, see [Identity and Access Tool for Visual Studio 2012](/dotnet/framework/security/identity-and-access-tool-for-vs).</span></span> <span data-ttu-id="b1c06-114">場合によっては、`LocalSTS` は、アプリケーションを適切にテストするために必要な機能を提供しないことがあります。たとえば、アプリケーションで使用するためのカスタムトークンハンドラーの開発が必要なシナリオで、</span><span class="sxs-lookup"><span data-stu-id="b1c06-114">In some scenarios, `LocalSTS` may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application.</span></span> <span data-ttu-id="b1c06-115">このような場合は、<xref:System.IdentityModel.SecurityTokenService> から派生させて、開発環境に配置でき、アプリケーションでそのような機能をテストするために使用できる1つ以上の単純な STSs を作成できます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-115">In these cases, you can derive from <xref:System.IdentityModel.SecurityTokenService> to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application.</span></span> <span data-ttu-id="b1c06-116">このセクションの残りの部分では、<xref:System.IdentityModel.SecurityTokenService> クラスによって公開されるメソッドに焦点を当て、単純な STS を実装し、トークン発行パイプラインを拡張できるようにします。</span><span class="sxs-lookup"><span data-stu-id="b1c06-116">The rest of this section focuses on the methods exposed by the <xref:System.IdentityModel.SecurityTokenService> class that enable you to implement a simple STS and extend the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="b1c06-117">次の一覧は、テスト環境または開発環境で使用するために開発者にとって重要な主要な方法の概要を示しています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-117">The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.</span></span>  
  
-   <span data-ttu-id="b1c06-118"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-118">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="b1c06-119">このメソッドは、RP に関する情報を含む <xref:System.IdentityModel.Scope> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-119">This method returns a <xref:System.IdentityModel.Scope> object that contains information about the RP.</span></span> <span data-ttu-id="b1c06-120">このオブジェクトは、トークン発行パイプラインの残りの部分で使用されます。また、応答で使用する署名と暗号化の資格情報、および `AppliesTo` と `ReplyTo` (必要な場合) のアドレスに関する情報も含まれます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-120">This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the `AppliesTo` and `ReplyTo` (if required) addresses.</span></span> <span data-ttu-id="b1c06-121">このメソッドはオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-121">You must override this method.</span></span>  
  
-   <span data-ttu-id="b1c06-122"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-122">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method.</span></span> <span data-ttu-id="b1c06-123">このメソッドは、RP に返すクレームを含む <xref:System.Security.Claims.ClaimsIdentity> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-123">This method returns an <xref:System.Security.Claims.ClaimsIdentity> object that contains the claims to return to the RP.</span></span> <span data-ttu-id="b1c06-124">このメソッドはオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-124">You must override this method.</span></span>  
  
-   <span data-ttu-id="b1c06-125"><xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-125">The <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="b1c06-126">このメソッドは、受信セキュリティトークン要求 (RST) を処理し、RP での認証に使用できるトークンを含む応答 (RSTR) を呼び出し元に返すトークン要求パイプラインを実装します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-126">This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP.</span></span> <span data-ttu-id="b1c06-127"><xref:System.IdentityModel.SecurityTokenService> クラスで定義されている他のメソッドの多くは、このメソッドから呼び出されます。これには、<xref:System.IdentityModel.SecurityTokenService.GetScope%2A> メソッドと <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> メソッドが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-127">Many of the other methods defined in the <xref:System.IdentityModel.SecurityTokenService> class are called from this method, including the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="b1c06-128">このメソッドをオーバーライドする必要はありませんが、実装するトークン要求パイプラインについて理解しておくと役立つ場合があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-128">You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.</span></span>  
  
 <span data-ttu-id="b1c06-129">STS は <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> クラスを使用して構成されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-129">An STS is configured through the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1c06-130"><xref:System.IdentityModel.SecurityTokenService> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="b1c06-130">The code examples that are used in the <xref:System.IdentityModel.SecurityTokenService> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="b1c06-131">このサンプルは、単純な Web トークン (SWT) の処理を可能にするカスタムクラスを提供します。これには、SWT トークンを提供できるパッシブ STS の実装が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-131">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="b1c06-132">アクティブな STS を実装する方法の例については、`Federation Metadata` のサンプルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1c06-132">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="b1c06-133">これらのサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1c06-133">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-).</span></span> <span data-ttu-id="b1c06-134">次のコードは、<xref:System.IdentityModel.SecurityTokenService> クラスを使用してパッシブ STS を実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-134">The following code shows the implementation of a passive STS using the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#3)]  
  
 <span data-ttu-id="b1c06-135">次のコードは、`default.aspx.cs` ファイルの分離コードから <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> メソッドを呼び出すことによって、カスタムパッシブ STS を呼び出して WS-FEDERATION 要求を処理する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-135">The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> method from the code behind in the `default.aspx.cs` file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="b1c06-136"><see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> と <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> の両方のメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-136">You must override both the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> and the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> methods.</span></span></para></block>
    <altmember cref="T:System.IdentityModel.Scope" />
    <altmember cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
    <altmember cref="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (securityTokenServiceConfiguration As SecurityTokenServiceConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenService(System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ securityTokenServiceConfiguration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.SecurityTokenService : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration -&gt; System.IdentityModel.SecurityTokenService" Usage="new System.IdentityModel.SecurityTokenService securityTokenServiceConfiguration" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityTokenServiceConfiguration" Type="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
      </Parameters>
      <Docs>
        <param name="securityTokenServiceConfiguration"><span data-ttu-id="b1c06-137">STS の設定を格納している <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-137">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the settings for the STS.</span></span></param>
        <summary><span data-ttu-id="b1c06-138">指定した構成設定を使用して <see cref="T:System.IdentityModel.SecurityTokenService" /> クラスを初期化するために、派生クラスから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-138">Called from derived classes to initialize the <see cref="T:System.IdentityModel.SecurityTokenService" /> class using the specified configuration settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-139">このコンストラクターを使用して、スコーププロバイダーとトークン発行者の証明書を初期化します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-139">Use this constructor to initialize scope provider and token issuer certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1c06-140"><paramref name="securityTokenServiceConfiguration" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1c06-140"><paramref name="securityTokenServiceConfiguration" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCancel (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginCancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginCancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginCancel (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-141">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-141">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-142">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-142">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-143">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-143">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="b1c06-144">非同期の取り消し操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b1c06-144">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous cancel operation.</span></span></param>
        <param name="state"><span data-ttu-id="b1c06-145">非同期のキャンセル操作に関連付けられたステータス情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-145">An object that contains state information associated with the asynchronous cancel operation.</span></span></param>
        <summary><span data-ttu-id="b1c06-146">派生クラスでオーバーライドされると、非同期の WS-Trust Cancel 要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-146">When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-147">非同期の取り消し操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-148">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-148">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetOutputClaimsIdentity (principal As ClaimsPrincipal, request As RequestSecurityToken, scope As Scope, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginGetOutputClaimsIdentity (principal, request, scope, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-149">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-149">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-150">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-150">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-151">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-151">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="scope"><span data-ttu-id="b1c06-152">リクエストと関連付けられている証明書利用者に関する情報を含む <see cref="T:System.IdentityModel.Scope" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-152">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span></span></param>
        <param name="callback"><span data-ttu-id="b1c06-153">非同期操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b1c06-153">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="b1c06-154">非同期操作に関連付けられたステータス情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-154">An object that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="b1c06-155">派生クラスでオーバーライドされると、<see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> メソッドへの非同期呼び出しを開始します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-155">When overridden in a derived class, begins an asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> method.</span></span></summary>
        <returns><span data-ttu-id="b1c06-156">非同期操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-156">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-157">このメソッドの既定の実装では、<xref:System.NotImplementedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-157">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetScope">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetScope (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginGetScope (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-158">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-158">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-159">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-159">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-160">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-160">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="b1c06-161">非同期操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b1c06-161">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="b1c06-162">非同期操作に関連付けられたステータス情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-162">An object that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="b1c06-163">派生クラスでオーバーライドされると、<see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> メソッドへの非同期呼び出しを開始します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-163">When overridden in a derived class, begins an asynchronous call for the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span></span></summary>
        <returns><span data-ttu-id="b1c06-164">非同期の取り消し操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-164">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-165">このメソッドの既定の実装では、<xref:System.NotImplementedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-165">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginIssue">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginIssue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginIssue (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginIssue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginIssue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginIssue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginIssue (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-166">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-166">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-167">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-167">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-168">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-168">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="b1c06-169">非同期の発行操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b1c06-169">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous issue operation.</span></span></param>
        <param name="state"><span data-ttu-id="b1c06-170">非同期の発行操作に関連付けられたステータス情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-170">An object that contains state information associated with the asynchronous issue operation.</span></span></param>
        <summary><span data-ttu-id="b1c06-171">派生クラスでオーバーライドされると、非同期の WS-Trust Issue 要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-171">When overridden in a derived class, begins an asynchronous WS-Trust Issue request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-172">非同期の発行操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-172">The <see cref="T:System.IAsyncResult" /> that references the asynchronous issue operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-173">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-173">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenew">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRenew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRenew (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRenew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRenew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginRenew (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-174">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-174">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-175">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-175">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-176">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-176">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="b1c06-177">非同期の更新操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b1c06-177">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous renew operation.</span></span></param>
        <param name="state"><span data-ttu-id="b1c06-178">非同期の更新操作に関連付けられたステータス情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-178">An object that contains state information associated with the asynchronous renew operation.</span></span></param>
        <summary><span data-ttu-id="b1c06-179">派生クラスでオーバーライドされると、非同期の WS-Trust Renew 要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-179">When overridden in a derived class, begins an asynchronous WS-Trust Renew request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-180">非同期更新操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-180">The <see cref="T:System.IAsyncResult" /> that references the asynchronous renew operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-181">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-181">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginValidate">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginValidate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginValidate (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginValidate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginValidate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginValidate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginValidate (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-182">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-182">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-183">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-183">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-184">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-184">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="b1c06-185">非同期の検証操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b1c06-185">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous validate operation.</span></span></param>
        <param name="state"><span data-ttu-id="b1c06-186">非同期の検証操作に関連付けられたステータス情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-186">An object that contains state information associated with the asynchronous validate operation.</span></span></param>
        <summary><span data-ttu-id="b1c06-187">派生クラスでオーバーライドされると、非同期の WS-Trust Validate 要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-187">When overridden in a derived class, begins an asynchronous WS-Trust Validate request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-188">非同期の検証操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-188">The <see cref="T:System.IAsyncResult" /> that references the asynchronous validate operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-189">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-189">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Cancel (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Cancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Cancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Cancel (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-190">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-190">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-191">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-191">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-192">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-192">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <summary><span data-ttu-id="b1c06-193">派生クラスでオーバーライドされると、WS-Trust Cancel 要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-193">When overridden in a derived class, processes a WS-Trust Cancel request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-194">呼び出し元に返す RSTR を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-194">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-195">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-195">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateSecurityTokenDescriptor (request As RequestSecurityToken, scope As Scope) As SecurityTokenDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenDescriptor ^ CreateSecurityTokenDescriptor(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenDescriptor : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.SecurityTokenDescriptor&#xA;override this.CreateSecurityTokenDescriptor : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.SecurityTokenDescriptor" Usage="securityTokenService.CreateSecurityTokenDescriptor (request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="b1c06-196">受信トークン要求。</span><span class="sxs-lookup"><span data-stu-id="b1c06-196">The incoming token request.</span></span></param>
        <param name="scope"><span data-ttu-id="b1c06-197"><see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> から返される <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-197">The <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> object returned from <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span></span></param>
        <summary><span data-ttu-id="b1c06-198"><see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" /> のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-198">Creates an instance of a <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="b1c06-199"><see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-199">The <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-200"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A>後のトークンの発行中に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-200">Invoked during token issuance after <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1c06-201"><paramref name="request" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1c06-201"><paramref name="request" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1c06-202">または</span><span class="sxs-lookup"><span data-stu-id="b1c06-202">-or-</span></span> 
 <span data-ttu-id="b1c06-203"><paramref name="scope" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1c06-203"><paramref name="scope" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCancel (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCancel : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndCancel : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="b1c06-204"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-204">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b1c06-205">派生クラスでオーバーライドされると、非同期の WS-Trust Cancel 要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-205">When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-206">呼び出し元に返す RSTR を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-206">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-207">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-207">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetOutputClaimsIdentity (result As IAsyncResult) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ EndGetOutputClaimsIdentity(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetOutputClaimsIdentity : IAsyncResult -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.EndGetOutputClaimsIdentity : IAsyncResult -&gt; System.Security.Claims.ClaimsIdentity" Usage="securityTokenService.EndGetOutputClaimsIdentity result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="b1c06-208"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-208">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b1c06-209">派生クラスでオーバーライドされると、<see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> メソッドへの非同期呼び出しを完了します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-209">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="b1c06-210">発行されたセキュリティ トークンに配置されるクレームのコレクションを含む <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-210">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-211">このメソッドの既定の実装では、<xref:System.NotImplementedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-211">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetScope">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope EndGetScope(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetScope (result As IAsyncResult) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Scope ^ EndGetScope(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetScope : IAsyncResult -&gt; System.IdentityModel.Scope&#xA;override this.EndGetScope : IAsyncResult -&gt; System.IdentityModel.Scope" Usage="securityTokenService.EndGetScope result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="b1c06-212"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-212">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b1c06-213">派生クラスでオーバーライドされると、<see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> メソッドへの非同期呼び出しを完了します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-213">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="b1c06-214"><see cref="T:System.IdentityModel.Scope" /> のメソッド呼び出しで指定された要求 (RST) に関連付けられている証明書利用者 (RP) 情報をカプセル化する <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-214">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-215">このメソッドの既定の実装では、<xref:System.NotImplementedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-215">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndIssue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndIssue (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndIssue(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndIssue : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndIssue : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndIssue result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="b1c06-216"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-216">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b1c06-217">派生クラスでオーバーライドされると、非同期の WS-Trust Issue 要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-217">When overridden in a derived class, completes the asynchronous WS-Trust Issue request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-218">呼び出し元に返す RSTR を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-218">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-219">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-219">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRenew (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndRenew(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRenew : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndRenew : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndRenew result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="b1c06-220"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-220">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b1c06-221">派生クラスでオーバーライドされると、非同期の WS-Trust Renew 要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-221">When overridden in a derived class, completes the asynchronous WS-Trust Renew request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-222">呼び出し元に返す RSTR を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-222">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-223">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-223">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndValidate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndValidate (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndValidate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndValidate : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndValidate : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndValidate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="b1c06-224"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-224">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b1c06-225">派生クラスでオーバーライドされると、非同期の WS-Trust Validate 要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-225">When overridden in a derived class, completes the asynchronous WS-Trust Validate request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-226">呼び出し元に返す RSTR を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-226">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-227">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-227">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="protected virtual string GetIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetIssuerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : unit -&gt; string&#xA;override this.GetIssuerName : unit -&gt; string" Usage="securityTokenService.GetIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1c06-228">セキュリティ トークン サービス (STS) の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-228">Gets the name of the security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="b1c06-229">発行者名。</span><span class="sxs-lookup"><span data-stu-id="b1c06-229">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-230">このメソッドは、<xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドに実装されている既定のトークン発行パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-230">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="b1c06-231">既定の実装は、<xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> プロパティを通じてアクセスされる構成から <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-231">The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetOutputClaimsIdentity (principal As ClaimsPrincipal, request As RequestSecurityToken, scope As Scope) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Security::Claims::ClaimsIdentity ^ GetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.Security.Claims.ClaimsIdentity" Usage="securityTokenService.GetOutputClaimsIdentity (principal, request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-232">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-232">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-233">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-233">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-234">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-234">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="scope"><span data-ttu-id="b1c06-235">リクエストと関連付けられている証明書利用者に関する情報を含む <see cref="T:System.IdentityModel.Scope" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-235">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span></span> <span data-ttu-id="b1c06-236">これは、<see cref="T:System.IdentityModel.Scope" /> メソッドが返した <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1c06-236">This is the <see cref="T:System.IdentityModel.Scope" /> object that was returned by the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span></span></param>
        <summary><span data-ttu-id="b1c06-237">この派生クラスでオーバーライドされると、このメソッドは、発行済みトークンに含まれる出力サブジェクトのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-237">When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.</span></span></summary>
        <returns><span data-ttu-id="b1c06-238">発行されたセキュリティ トークンに配置されるクレームのコレクションを含む <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-238">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-239"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> メソッドは、<xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドによって実装されるトークン発行パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-239">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method is called from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="b1c06-240">このメソッドは、トークンの要求元 (`principal` パラメーター)、受信 RST (`request` パラメーター)、およびトークンの対象となる証明書利用者 (`scope` パラメーター) に基づいて、発行されたセキュリティトークンに含める要求を含む <xref:System.Security.Claims.ClaimsIdentity> を返します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-240">It returns an <xref:System.Security.Claims.ClaimsIdentity> that contains the claims to include in the issued security token based on the requestor of the token (the `principal` parameter), the incoming RST (the `request` parameter), and the relying party for which the token is intended (the `scope` parameter).</span></span> <span data-ttu-id="b1c06-241">このメソッドのロジックは、主に次の質問に答えることに関係しています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-241">The logic in this method is primarily concerned with answering the following questions:</span></span>  
  
-   <span data-ttu-id="b1c06-242">**目的の RP に基づいて、応答に含める要求の種類を指定してください。**</span><span class="sxs-lookup"><span data-stu-id="b1c06-242">**Which claim types should be included in the response based on the RP for which it is intended?**</span></span> <span data-ttu-id="b1c06-243">通常、この方法は、要求の <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> プロパティを調べることによって、各 RP に必要なクレームの種類のリストや要求ごとに、RP 単位で決定されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-243">Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> property of the request.</span></span> <span data-ttu-id="b1c06-244">ただし、応答に含める要求を決定するためのロジックと詳細は、実装に完全に対応しています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-244">However, the logic and details for determining the claims to include in the response is completely up to your implementation.</span></span>  
  
-   <span data-ttu-id="b1c06-245">**応答内の要求に割り当てる必要がある要求の値**</span><span class="sxs-lookup"><span data-stu-id="b1c06-245">**Which claim values should be assigned to the claims in the response?**</span></span> <span data-ttu-id="b1c06-246">Id プロバイダー (IP-HTTPS) の場合、これは通常、(`principal` パラメーターによって提供される) 要求元の <xref:System.Security.Claims.ClaimsPrincipal> 内の1つ以上の要求を使用してストア (またはその他のエンティティ) にアクセスし、必要な要求の種類の値を返すことを意味します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-246">For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor's <xref:System.Security.Claims.ClaimsPrincipal> (provided by the `principal` parameter) to access a store (or other entity) to return values for the required claim types.</span></span> <span data-ttu-id="b1c06-247">フェデレーションプロバイダー (R STS) の場合、これは通常、要求を満たすために要求元の入力方向の要求に対して何らかの処理を実行することを意味します。要求元によって提示された一部の要求に対してフィルター処理または変換を実行し、その他の要求を未変更の状態で渡すこと。</span><span class="sxs-lookup"><span data-stu-id="b1c06-247">For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor's incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified.</span></span> <span data-ttu-id="b1c06-248">もちろん、応答に含める要求を決定する場合と同様に、これらの要求の値を確認する方法の詳細とロジックは、実装によって決まります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-248">Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1c06-249">このトピックで使用するコード例は、`Custom Token` のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="b1c06-249">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="b1c06-250">このサンプルは、単純な Web トークン (SWT) の処理を可能にするカスタムクラスを提供します。これには、SWT トークンを提供できるパッシブ STS の実装が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-250">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="b1c06-251">アクティブな STS を実装する方法の例については、`Federation Metadata` のサンプルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1c06-251">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="b1c06-252">これらのサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1c06-252">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-).</span></span> <span data-ttu-id="b1c06-253">次のコードは、<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> メソッドをオーバーライドして STS の要求を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-253">The following code shows how to override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to return claims for your STS.</span></span> <span data-ttu-id="b1c06-254">この例では、要求セキュリティトークン (RST) メッセージは無視され、STS で認証されたユーザーに基づくクレームのコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-254">In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1c06-255">このメソッドは、<see cref="T:System.IdentityModel.SecurityTokenService" /> クラスの実装でオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-255">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span></span></para></block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetProofToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.ProofDescriptor GetProofToken(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetProofToken (request As RequestSecurityToken, scope As Scope) As ProofDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::ProofDescriptor ^ GetProofToken(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member GetProofToken : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.ProofDescriptor&#xA;override this.GetProofToken : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.ProofDescriptor" Usage="securityTokenService.GetProofToken (request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.ProofDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="b1c06-256">受信したトークン要求 (RST) を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-256">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span></span></param>
        <param name="scope"><span data-ttu-id="b1c06-257">証明書利用者に関する情報をカプセル化する <see cref="T:System.IdentityModel.Scope" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1c06-257">The <see cref="T:System.IdentityModel.Scope" /> instance that encapsulates information about the relying party.</span></span></param>
        <summary><span data-ttu-id="b1c06-258">応答 (RSTR) に含まれる証明トークンを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-258">Gets the proof token to be included in the response (RSTR).</span></span></summary>
        <returns><span data-ttu-id="b1c06-259">新しく作成されたプルーフ記述子を表す <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-259">A <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" /> that represents the newly created proof descriptor.</span></span> <span data-ttu-id="b1c06-260">プルーフ記述子には、非対称プルーフ記述子または対称プルーフ記述子を指定できます。所有者トークンの場合は、<see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-260">The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <see langword="null" /> in the bearer token case.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-261">このメソッドは、<xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドに実装されている既定のトークン発行パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-261">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="b1c06-262">既定の実装は、証明の記述子を返すか、適切な例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b1c06-262">The default implementation returns a proof descriptor or throws an appropriate exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1c06-263"><paramref name="request" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1c06-263"><paramref name="request" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1c06-264">または</span><span class="sxs-lookup"><span data-stu-id="b1c06-264">-or-</span></span> 
 <span data-ttu-id="b1c06-265"><paramref name="scope" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1c06-265"><paramref name="scope" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestorProofEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRequestorProofEncryptingCredentials (request As RequestSecurityToken) As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::EncryptingCredentials ^ GetRequestorProofEncryptingCredentials(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestorProofEncryptingCredentials : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Tokens.EncryptingCredentials&#xA;override this.GetRequestorProofEncryptingCredentials : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Tokens.EncryptingCredentials" Usage="securityTokenService.GetRequestorProofEncryptingCredentials request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="b1c06-266">受信したトークン要求 (RST) を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-266">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span></span></param>
        <summary><span data-ttu-id="b1c06-267">要求元の証明暗号化の資格情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-267">Gets the requestor's proof encrypting credentials.</span></span></summary>
        <returns><span data-ttu-id="b1c06-268">要求元の暗号化の資格情報を表す <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-268">An <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> object that represents the requestor's encrypting credentials.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-269">このメソッドは、<xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> メソッドから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-269">This method is called from the <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method.</span></span>  
  
 <span data-ttu-id="b1c06-270">既定の実装では、次のことが行われます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-270">The default implementation does the following.</span></span> <span data-ttu-id="b1c06-271">要求に暗号化トークンが指定されていない場合は `null` を返します (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType> プロパティは `null`)。</span><span class="sxs-lookup"><span data-stu-id="b1c06-271">Returns `null` if there is no encryption token specified in the request (the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType> property is `null`).</span></span> <span data-ttu-id="b1c06-272">それ以外の場合、トークンを <xref:System.IdentityModel.Tokens.X509SecurityToken>として取得できる場合は、そのトークンに基づいて資格情報が返されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-272">Otherwise, if it can get the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, it returns credentials based on that token.</span></span> <span data-ttu-id="b1c06-273">トークンを <xref:System.IdentityModel.Tokens.X509SecurityToken>として解決できない場合は、<xref:System.IdentityModel.RequestFailedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-273">If it cannot resolve the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, a <xref:System.IdentityModel.RequestFailedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1c06-274"><paramref name="request" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1c06-274"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponse (request As RequestSecurityToken, tokenDescriptor As SecurityTokenDescriptor) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ GetResponse(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.GetResponse : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.GetResponse (request, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="b1c06-275">トークン要求を含む RST。</span><span class="sxs-lookup"><span data-stu-id="b1c06-275">The RST that contains the token request.</span></span></param>
        <param name="tokenDescriptor"><span data-ttu-id="b1c06-276">発行されたトークンで使用する情報を含むトークン記述子。</span><span class="sxs-lookup"><span data-stu-id="b1c06-276">The token descriptor that contains the information to use for the issued token.</span></span></param>
        <summary><span data-ttu-id="b1c06-277">指定した要求 (RST) およびセキュリティ トークン記述子を使用して発行されたトークンを含む応答 (RSTR) を作成します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-277">Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1c06-278">指定した要求とトークンの記述子から応答を作成できない場合、応答 (RSTR) または <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1c06-278">The response (RSTR) or <see langword="null" /> if a response cannot be created from the specified request and token descriptor.</span></span> <span data-ttu-id="b1c06-279"><paramref name="tokenDescriptor" /> パラメーターが <see langword="null" /> の場合、既定の実装は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-279">The default implementation returns <see langword="null" /> if the <paramref name="tokenDescriptor" /> parameter is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-280"><xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> メソッドは、<xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドによって実装されるトークン発行パイプラインからの最後の手順として呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-280">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method is called as the last step from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="b1c06-281">このメソッドは、元の受信要求 (RST) と、トークン発行パイプラインの前の手順で作成されたトークン記述子を使用して、応答 (RSTR) を作成し、返します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-281">It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="b1c06-282">既定の実装では、要求パラメーターで指定された RST を <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType> コンストラクターに渡し、<xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> に渡されるトークン記述子の <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType> メソッドを呼び出して、そのプロパティを新しく作成した RSTR に適用し、トークン記述子の <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> プロパティを使用して RSTR の <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> プロパティを設定し、最後に次の表に従って RSTR の <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-282">The default implementation creates the RSTR by passing the RST specified in the request parameter to the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType> constructor, invoking the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType> method on the token descriptor passed into <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> to apply its properties to the newly created RSTR, setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> property on the RSTR by using the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property on the token descriptor, and finally setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> property on the RSTR according to the following table:</span></span>  
  
|<span data-ttu-id="b1c06-283">`RST.ReplyTo` プロパティ</span><span class="sxs-lookup"><span data-stu-id="b1c06-283">`RST.ReplyTo` property</span></span>|<span data-ttu-id="b1c06-284"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1c06-284"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> property.</span></span>|<span data-ttu-id="b1c06-285">`RSTR.ReplyTo` プロパティ</span><span class="sxs-lookup"><span data-stu-id="b1c06-285">`RSTR.ReplyTo` property</span></span>|  
|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="b1c06-286">オン</span><span class="sxs-lookup"><span data-stu-id="b1c06-286">Set</span></span>|<span data-ttu-id="b1c06-287">未設定</span><span class="sxs-lookup"><span data-stu-id="b1c06-287">Not Set</span></span>|<span data-ttu-id="b1c06-288">未設定</span><span class="sxs-lookup"><span data-stu-id="b1c06-288">Not Set</span></span>|  
|<span data-ttu-id="b1c06-289">オン</span><span class="sxs-lookup"><span data-stu-id="b1c06-289">Set</span></span>|<span data-ttu-id="b1c06-290">オン</span><span class="sxs-lookup"><span data-stu-id="b1c06-290">Set</span></span>|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b1c06-291">未設定</span><span class="sxs-lookup"><span data-stu-id="b1c06-291">Not Set</span></span>|<span data-ttu-id="b1c06-292">オン</span><span class="sxs-lookup"><span data-stu-id="b1c06-292">Set</span></span>|<span data-ttu-id="b1c06-293">未設定</span><span class="sxs-lookup"><span data-stu-id="b1c06-293">Not Set</span></span>|  
|<span data-ttu-id="b1c06-294">未設定</span><span class="sxs-lookup"><span data-stu-id="b1c06-294">Not Set</span></span>|<span data-ttu-id="b1c06-295">未設定</span><span class="sxs-lookup"><span data-stu-id="b1c06-295">Not Set</span></span>|<span data-ttu-id="b1c06-296">未設定</span><span class="sxs-lookup"><span data-stu-id="b1c06-296">Not Set</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope GetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetScope (principal As ClaimsPrincipal, request As RequestSecurityToken) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Scope ^ GetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Scope" Usage="securityTokenService.GetScope (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-297">要求を行っているクライアントを表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-297">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the client making the request.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-298">受信した要求 (RST) を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-298">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming request (RST).</span></span></param>
        <summary><span data-ttu-id="b1c06-299">指定したリクエスト (RST) と関連付けられている証明書利用者 (RP) に関する情報を含む <see cref="T:System.IdentityModel.Scope" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-299">Gets a <see cref="T:System.IdentityModel.Scope" /> object that contains information about the relying party (RP) associated with the specified request (RST).</span></span> <span data-ttu-id="b1c06-300">このメソッドは、<see cref="T:System.IdentityModel.SecurityTokenService" /> クラスの実装でオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-300">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span></span></summary>
        <returns><span data-ttu-id="b1c06-301">要求に関連付けられている RP 情報をカプセル化する <see cref="T:System.IdentityModel.Scope" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-301">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the RP information associated with the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-302"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A> メソッドは、<xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> メソッドの後にトークン発行パイプラインから呼び出され、受信要求用に構成された <xref:System.IdentityModel.Scope> オブジェクトを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-302">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method is called from the token issuance pipeline after the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method and should return a <xref:System.IdentityModel.Scope> object configured for the incoming request.</span></span> <span data-ttu-id="b1c06-303">(トークン発行パイプラインは <xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドに実装されています)。<xref:System.IdentityModel.Scope> オブジェクトは、セキュリティトークン要求 (RST) に関連付けられた RP に関する情報をカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-303">(The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.) The <xref:System.IdentityModel.Scope> object encapsulates information about the RP associated with the security token request (RST).</span></span> <span data-ttu-id="b1c06-304">これには、RP で使用される暗号化と署名の資格情報、および応答で発行されたトークンや対称キーを暗号化するかどうかに関する情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-304">This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response.</span></span> <span data-ttu-id="b1c06-305"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A> メソッドで実行されるいくつかの一般的なタスクは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="b1c06-305">Some typical tasks performed in the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method are:</span></span>  
  
-   <span data-ttu-id="b1c06-306">トークンが意図されている RP が、認識されている RP であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-306">Determine whether the RP for which the token is intended is a recognized RP.</span></span> <span data-ttu-id="b1c06-307">この方法は、実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-307">How this is accomplished depends on your implementation.</span></span> <span data-ttu-id="b1c06-308">目的の RP がこの STS の有効な RP でない場合、メソッドは <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-308">If the intended RP is not a valid RP for this STS, then the method should throw an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
-   <span data-ttu-id="b1c06-309">応答 (RSTR) で使用される署名資格情報を決定し、それに応じて <xref:System.IdentityModel.Scope.SigningCredentials%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-309">Determine the signing credentials to be used in the response (RSTR) and set the <xref:System.IdentityModel.Scope.SigningCredentials%2A> property accordingly.</span></span>  
  
-   <span data-ttu-id="b1c06-310">応答とそれに含まれる対称キーを暗号化する必要があるかどうか、および暗号化に使用する資格情報を決定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-310">Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption.</span></span> <span data-ttu-id="b1c06-311"><xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>、<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>、および <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> の各プロパティを適宜設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-311">Set the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, and <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> properties accordingly.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="b1c06-312">既定では、STS がセキュリティで保護されていないトークンを発行するのを防ぐために、<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> プロパティと <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> プロパティが `true` に設定されています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-312">By default, the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> and <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> properties are set `true` to prevent the STS from issuing tokens that are not secure.</span></span> <span data-ttu-id="b1c06-313">運用環境では、これらのプロパティを `false` に設定しないことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b1c06-313">It is recommended that these properties never be set to `false` in a production environment.</span></span>  
  
-   <span data-ttu-id="b1c06-314">応答が返されるアドレスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-314">Determine the address to which the response should be returned.</span></span> <span data-ttu-id="b1c06-315"><xref:System.IdentityModel.Scope.AppliesToAddress%2A> または <xref:System.IdentityModel.Scope.ReplyToAddress%2A> のいずれかのプロパティを適宜設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-315">Set either the <xref:System.IdentityModel.Scope.AppliesToAddress%2A> or <xref:System.IdentityModel.Scope.ReplyToAddress%2A> property accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1c06-316">このトピックで使用するコード例は、`Custom Token` のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="b1c06-316">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="b1c06-317">このサンプルは、単純な Web トークン (SWT) の処理を可能にするカスタムクラスを提供します。これには、SWT トークンを提供できるパッシブ STS の実装が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-317">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="b1c06-318">アクティブな STS を実装する方法の例については、`Federation Metadata` のサンプルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1c06-318">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="b1c06-319">これらのサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1c06-319">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-).</span></span>  
  
 <span data-ttu-id="b1c06-320"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A> メソッドを実装する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-320">The following code example shows an implementation of the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="b1c06-321">この実装では、RP が STS によって認識されていることを確認し、要求の <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> アドレスを検証して、<xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType> プロパティを設定します。また、ファイルにハードコーディングされている証明書に基づいて、RP で使用する署名と暗号化の資格情報を設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-321">This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1c06-322">このメソッドは、<see cref="T:System.IdentityModel.SecurityTokenService" /> クラスの実装でオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-322">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span></span></para></block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityTokenHandler">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler(string requestedTokenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSecurityTokenHandler (requestedTokenType As String) As SecurityTokenHandler" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenHandler ^ GetSecurityTokenHandler(System::String ^ requestedTokenType);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityTokenHandler : string -&gt; System.IdentityModel.Tokens.SecurityTokenHandler&#xA;override this.GetSecurityTokenHandler : string -&gt; System.IdentityModel.Tokens.SecurityTokenHandler" Usage="securityTokenService.GetSecurityTokenHandler requestedTokenType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedTokenType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestedTokenType"><span data-ttu-id="b1c06-323">要求されたトークンの種類の URI を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="b1c06-323">A string that contains the requested token type URI.</span></span></param>
        <summary><span data-ttu-id="b1c06-324">指定した種類のセキュリティ トークンを発行するための適切なセキュリティ トークン ハンドラーを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-324">Gets the appropriate security token handler for issuing a security token of the specified type.</span></span></summary>
        <returns><span data-ttu-id="b1c06-325">発行されたセキュリティ トークンの作成に使用されるトークン ハンドラーを表す <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-325">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that represents the token handler to be used for creating the issued security token.</span></span> <span data-ttu-id="b1c06-326">要求されたトークンの種類がサポートされない場合 <see langword="null" /> を返します (指定されたトークンの種類用に構成されたハンドラーはありません)。</span><span class="sxs-lookup"><span data-stu-id="b1c06-326">Returns <see langword="null" /> if the requested token type is not supported (there is no handler configured for the specified token type).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-327">既定の実装では `requestedTokenType` が `null` または空の文字列の場合、構成からの既定のトークンの種類が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-327">In the default implementation if `requestedTokenType` is `null` or an empty string, the default token type from configuration is used.</span></span> <span data-ttu-id="b1c06-328">これは、<xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> プロパティを通じてアクセスされる STS 構成オブジェクトの <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-328">This is specified by the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> property of the STS configuration object accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 <span data-ttu-id="b1c06-329">このメソッドは、<xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドに実装されている既定のトークン発行パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-329">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetTokenLifetime">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime(class System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenLifetime (requestLifetime As Lifetime) As Lifetime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::Lifetime ^ GetTokenLifetime(System::IdentityModel::Protocols::WSTrust::Lifetime ^ requestLifetime);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenLifetime : System.IdentityModel.Protocols.WSTrust.Lifetime -&gt; System.IdentityModel.Protocols.WSTrust.Lifetime&#xA;override this.GetTokenLifetime : System.IdentityModel.Protocols.WSTrust.Lifetime -&gt; System.IdentityModel.Protocols.WSTrust.Lifetime" Usage="securityTokenService.GetTokenLifetime requestLifetime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Lifetime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestLifetime" Type="System.IdentityModel.Protocols.WSTrust.Lifetime" />
      </Parameters>
      <Docs>
        <param name="requestLifetime"><span data-ttu-id="b1c06-330">要求された有効期間を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-330">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the requested lifetime.</span></span></param>
        <summary><span data-ttu-id="b1c06-331">発行済みトークンの有効期間を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-331">Gets the lifetime for the issued token.</span></span></summary>
        <returns><span data-ttu-id="b1c06-332">与えられた有効期間を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-332">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the granted lifetime.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-333">このメソッドは、通常、RST に到着した有効期間で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-333">This method is normally called with the lifetime that arrived in the RST.</span></span> <span data-ttu-id="b1c06-334">既定の実装では、トークンの有効期間は次の表に従って計算されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-334">In the default implementation, the token lifetime is calculated according to the following table.</span></span>  
  
|<span data-ttu-id="b1c06-335">作成済み (では)</span><span class="sxs-lookup"><span data-stu-id="b1c06-335">Created (in)</span></span>|<span data-ttu-id="b1c06-336">有効期限 (in)</span><span class="sxs-lookup"><span data-stu-id="b1c06-336">Expires (in)</span></span>|<span data-ttu-id="b1c06-337">作成済み (では)</span><span class="sxs-lookup"><span data-stu-id="b1c06-337">Created (in)</span></span>|<span data-ttu-id="b1c06-338">有効期限 (出力)</span><span class="sxs-lookup"><span data-stu-id="b1c06-338">Expires (out)</span></span>|  
|--------------------|--------------------|--------------------|---------------------|  
|`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b1c06-339">C</span><span class="sxs-lookup"><span data-stu-id="b1c06-339">C</span></span>|`null`|<span data-ttu-id="b1c06-340">C</span><span class="sxs-lookup"><span data-stu-id="b1c06-340">C</span></span>|<span data-ttu-id="b1c06-341">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b1c06-341">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span></span>|  
|`null`|<span data-ttu-id="b1c06-342">E</span><span class="sxs-lookup"><span data-stu-id="b1c06-342">E</span></span>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<span data-ttu-id="b1c06-343">E</span><span class="sxs-lookup"><span data-stu-id="b1c06-343">E</span></span>|  
|<span data-ttu-id="b1c06-344">C</span><span class="sxs-lookup"><span data-stu-id="b1c06-344">C</span></span>|<span data-ttu-id="b1c06-345">E</span><span class="sxs-lookup"><span data-stu-id="b1c06-345">E</span></span>|<span data-ttu-id="b1c06-346">C</span><span class="sxs-lookup"><span data-stu-id="b1c06-346">C</span></span>|<span data-ttu-id="b1c06-347">E</span><span class="sxs-lookup"><span data-stu-id="b1c06-347">E</span></span>|  
  
 <span data-ttu-id="b1c06-348">このメソッドは、<xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドに実装されている既定のトークン発行パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-348">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="Issue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Issue (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Issue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Issue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Issue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Issue (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-349">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-349">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-350">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-350">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-351">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-351">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <summary><span data-ttu-id="b1c06-352">セキュリティ トークンを発行します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-352">Issues a security token.</span></span></summary>
        <returns><span data-ttu-id="b1c06-353">発行されたセキュリティ トークンを格納する <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1c06-353">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that contains the issued security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-354">このメソッドは、WS-TRUST 仕様で定義されている問題バインディングを実装します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-354">This method implements the Issue binding defined in the WS-Trust specification.</span></span> <span data-ttu-id="b1c06-355"><xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドの既定の実装では、トークン発行 (要求発行) パイプラインを使用して受信要求 (RST) を処理し、RP または適切な例外で要求元を認証するための適切な要求を含むセキュリティトークンを含む応答 (RSTR) のいずれかを返します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-355">The default implementation of the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception.</span></span> <span data-ttu-id="b1c06-356">既定の実装のトークン発行パイプラインは、(<xref:System.IdentityModel.SecurityTokenService> クラスの) 次のメソッドの呼び出しで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-356">The token issuance pipeline in the default implementation consists of calls to the following methods (of the <xref:System.IdentityModel.SecurityTokenService> class).</span></span>  
  
1.  <span data-ttu-id="b1c06-357">要求 (RST) を検証する <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-357">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method to validate the request (RST).</span></span>  
  
2.  <span data-ttu-id="b1c06-358">要求に関連付けられている証明書利用者 (RP) に関する情報を格納する <xref:System.IdentityModel.Scope> オブジェクトを取得する <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-358">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get a <xref:System.IdentityModel.Scope> object that contains information about the relying party (RP) associated with the request.</span></span> <span data-ttu-id="b1c06-359">このメソッドはオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-359">You must override this method.</span></span> <span data-ttu-id="b1c06-360"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A> が `null`を返すと、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-360">If <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> returns `null`, a <xref:System.InvalidOperationException> is thrown.</span></span>  
  
3.  <span data-ttu-id="b1c06-361">RST と、前の手順で返された <xref:System.IdentityModel.Scope> オブジェクトに基づいてセキュリティトークン記述子を返す <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-361">The <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> method to return a security token descriptor based on the RST and the <xref:System.IdentityModel.Scope> object returned in the previous step.</span></span> <span data-ttu-id="b1c06-362">セキュリティトークン記述子 (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) には、トークンハンドラーで使用できる形式の要求に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-362">The security token descriptor (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contains information about the request in a form that can be used by a token handler.</span></span> <span data-ttu-id="b1c06-363"><xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType> プロパティは、呼び出しによって返される記述子に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-363">The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType> property is set to the descriptor returned by the call.</span></span> <span data-ttu-id="b1c06-364">`null` が返された場合、または記述子の <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> プロパティが `null`場合は、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-364">If `null` is returned or if the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the descriptor is `null`, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="b1c06-365">この例外は、<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType> プロパティが `true`、返された記述子の <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> プロパティが `null`場合にもスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-365">The exception is also thrown if the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType> property is `true` but the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property on the returned descriptor is `null`.</span></span>  
  
4.  <span data-ttu-id="b1c06-366">要求されたトークンの種類に基づいて適切なトークンハンドラーを取得する <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-366">The <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> method to get the appropriate token handler based on the kind of token requested.</span></span> <span data-ttu-id="b1c06-367">`null` が返された場合は、<xref:System.NotImplementedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-367">If `null` is returned, a <xref:System.NotImplementedException> is thrown.</span></span>  
  
5.  <span data-ttu-id="b1c06-368">トークンの発行者名を取得する <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-368">The <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> method to get the issuer name for the token.</span></span> <span data-ttu-id="b1c06-369">名前が `null` または空の場合、<xref:System.InvalidOperationException> をスローします。それ以外の場合は、記述子の <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-369">Throws an <xref:System.InvalidOperationException> if the name is `null` or empty; otherwise sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property on the descriptor.</span></span>  
  
6.  <span data-ttu-id="b1c06-370">トークンの有効期間を取得し、記述子の <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> プロパティを設定する <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-370">The <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> method to get the lifetime for the token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property on the descriptor.</span></span>  
  
7.  <span data-ttu-id="b1c06-371">発行されたトークンに含める証明トークンを取得し、記述子の <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> プロパティを設定する <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-371">The <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method to get the proof token to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> property on the descriptor.</span></span>  
  
8.  <span data-ttu-id="b1c06-372">発行されたトークンに含まれるクレームを取得し、記述子の <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> プロパティを設定する <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-372">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to get the claims to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> property on the descriptor.</span></span> <span data-ttu-id="b1c06-373">このメソッドはオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1c06-373">You must override this method.</span></span>  
  
9. <span data-ttu-id="b1c06-374">発行されたトークンを含む応答 (RSTR) を作成する <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1c06-374">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method to create a response (RSTR) that contains the issued token.</span></span>  
  
 <span data-ttu-id="b1c06-375"><xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッドをオーバーライドして、カスタムトークン発行パイプラインを実装できます。ただし、これは通常、<xref:System.IdentityModel.SecurityTokenService> クラスのほとんどのカスタム実装が意図されている開発環境とテスト環境では必要ありません。</span><span class="sxs-lookup"><span data-stu-id="b1c06-375">You can override the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the <xref:System.IdentityModel.SecurityTokenService> class are intended.</span></span> <span data-ttu-id="b1c06-376">多くの場合、<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> と <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> メソッドをオーバーライドし、必要に応じて <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> メソッドをオーバーライドして、環境に対して保守可能な STS を提供します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-376">In many of these cases you override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> and <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> methods and optionally override the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method  to provide a serviceable STS for your environment.</span></span> <span data-ttu-id="b1c06-377">さらにカスタマイズが必要な場合は、前に示した既定のトークン発行パイプラインの各ステージを実装するメソッドをオーバーライドすることによって、多くの場合、これを提供できます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-377">If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Principal" />
      <MemberSignature Language="VB.NET" Value="Public Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); void set(System::Security::Claims::ClaimsPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Principal : System.Security.Claims.ClaimsPrincipal with get, set" Usage="System.IdentityModel.SecurityTokenService.Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1c06-378">現在のインスタンスに関連付けられたプリンシパルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-378">Gets or sets the principal associated with the current instance.</span></span></summary>
        <value><span data-ttu-id="b1c06-379">現在のプリンシパルを表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-379">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the current principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Renew (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Renew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Renew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Renew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Renew (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-380">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-380">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-381">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-381">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-382">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-382">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <summary><span data-ttu-id="b1c06-383">派生クラスでオーバーライドされると、WS-Trust Renew 要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-383">When overridden in a derived class, processes a WS-Trust Renew request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-384">呼び出し元に返す RSTR を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-384">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-385">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-385">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ Request { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken with get, set" Usage="System.IdentityModel.SecurityTokenService.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1c06-386">現在のインスタンスに関連付けられたセキュリティ トークン要求 (RST) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-386">Gets or sets the security token request (RST) associated with the current instance.</span></span></summary>
        <value><span data-ttu-id="b1c06-387">要求を格納している <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-387">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that contains the request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Scope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Scope Scope" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As Scope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Scope ^ Scope { System::IdentityModel::Scope ^ get(); void set(System::IdentityModel::Scope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.IdentityModel.Scope with get, set" Usage="System.IdentityModel.SecurityTokenService.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1c06-388">現在のインスタンスに関連付けられたスコープを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-388">Gets or sets the scope associated with the current instance.</span></span></summary>
        <value><span data-ttu-id="b1c06-389">トークン発行要求の構成を表す <see cref="T:System.IdentityModel.Scope" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-389">A <see cref="T:System.IdentityModel.Scope" /> that represents the configuration for the token issuance request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberSignature Language="VB.NET" Value="Protected Property SecurityTokenDescriptor As SecurityTokenDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::SecurityTokenDescriptor ^ SecurityTokenDescriptor { System::IdentityModel::Tokens::SecurityTokenDescriptor ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenDescriptor : System.IdentityModel.Tokens.SecurityTokenDescriptor with get, set" Usage="System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1c06-390">現在のインスタンスに関連付けられた <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-390">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> associated with the current instance.</span></span></summary>
        <value><span data-ttu-id="b1c06-391">現在のインスタンスに関連付けられたセキュリティ トークン記述子。</span><span class="sxs-lookup"><span data-stu-id="b1c06-391">The security token descriptor that is associated with the current instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1c06-392">プロパティに <see langword="null" /> を設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="b1c06-392">An attempt to set the property to <see langword="null" /> occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenServiceConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTokenServiceConfiguration As SecurityTokenServiceConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ SecurityTokenServiceConfiguration { System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.SecurityTokenServiceConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1c06-393">所有者構成インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-393">Gets the owner configuration instance.</span></span></summary>
        <value><span data-ttu-id="b1c06-394">現在のインスタンスの構成を格納している <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-394">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the configuration for the current instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Validate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Validate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Validate (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="b1c06-395">トークン要求元の ID を表す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-395">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="b1c06-396">生成されたセキュリティ トークン要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-396">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="b1c06-397">これには、要求メッセージと、承認コンテキストなどの他のクライアント関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1c06-397">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <summary><span data-ttu-id="b1c06-398">派生クラスでオーバーライドされると、WS-Trust Validate 要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-398">When overridden in a derived class, processes a WS-Trust Validate request.</span></span></summary>
        <returns><span data-ttu-id="b1c06-399">呼び出し元に返す RSTR を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-399">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-400">このメソッドの既定の実装では、<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-400">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateRequest(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateRequest (request As RequestSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateRequest(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member ValidateRequest : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; unit&#xA;override this.ValidateRequest : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; unit" Usage="securityTokenService.ValidateRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="b1c06-401">要求を表す <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="b1c06-401">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the request.</span></span></param>
        <summary><span data-ttu-id="b1c06-402">このインスタンスによってカプセル化されたセキュリティ トークン要求 (RST) を検証します。</span><span class="sxs-lookup"><span data-stu-id="b1c06-402">Validates the security token request (RST) encapsulated by this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c06-403"><xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> メソッドは、受信 RST を検証するために、トークン発行パイプライン (<xref:System.IdentityModel.SecurityTokenService.Issue%2A> メソッド) から呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-403">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST.</span></span> <span data-ttu-id="b1c06-404">RST は STS の要件 (ポリシー) に対して検証され、有効でない場合は適切な例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-404">The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.</span></span>  
  
 <span data-ttu-id="b1c06-405"><xref:System.IdentityModel.SecurityTokenService> クラスの既定の実装では、RST-RSTR パターンのみがサポートされており、WS-TRUST 仕様の問題バインディングのみがサポートされます (要求の <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> プロパティは <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>に設定する必要があります)。</span><span class="sxs-lookup"><span data-stu-id="b1c06-405">The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="b1c06-406">このメソッドの既定の実装では、これらの要件 (および「例外」セクションで説明されている他の要件) が適用されます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-406">The default implementation of this method enforces these requirements (and others noted in the exceptions section).</span></span> <span data-ttu-id="b1c06-407">カスタム STS に対して異なる検証要件を適用する必要がある場合は、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="b1c06-407">You can override this method if you must enforce different validation requirements for your custom STS.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException"><span data-ttu-id="b1c06-408"><paramref name="request" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1c06-408"><paramref name="request" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1c06-409">または</span><span class="sxs-lookup"><span data-stu-id="b1c06-409">-or-</span></span> 
<span data-ttu-id="b1c06-410">要求の <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> プロパティは <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" /> に設定されません。</span><span class="sxs-lookup"><span data-stu-id="b1c06-410">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> property of the request is not set to <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />.</span></span>  
  
<span data-ttu-id="b1c06-411">または</span><span class="sxs-lookup"><span data-stu-id="b1c06-411">-or-</span></span> 
<span data-ttu-id="b1c06-412">要求の <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> プロパティが <see langword="null" /> でなく、<see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" /> クラスで定義されている定数の 1 つでもありません。</span><span class="sxs-lookup"><span data-stu-id="b1c06-412">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> property of the request is not <see langword="null" /> or one of the constants defined in the <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" /> class.</span></span>  
  
<span data-ttu-id="b1c06-413">または</span><span class="sxs-lookup"><span data-stu-id="b1c06-413">-or-</span></span> 
<span data-ttu-id="b1c06-414">要求の <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> が <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> であり、<see langword="KeySize" /> 要素が存在しますが、その値が 0 と等しくありません。</span><span class="sxs-lookup"><span data-stu-id="b1c06-414">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> of the request is <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> and the <see langword="KeySize" /> element is present, but its value is not equal to zero.</span></span></exception>
        <exception cref="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException"><span data-ttu-id="b1c06-415">STS が、要求トークンの種類をサポートしていません (要求の <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> プロパティの値に基づく)。</span><span class="sxs-lookup"><span data-stu-id="b1c06-415">The STS does not support the request token type (based on the value of the <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> property of the request).</span></span></exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
  </Members>
</Type>
