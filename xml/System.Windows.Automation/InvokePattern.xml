<Type Name="InvokePattern" FullName="System.Windows.Automation.InvokePattern">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4957714815f1da37136a6720782e4eea1846ac8d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82371559" /></Metadata><TypeSignature Language="C#" Value="public class InvokePattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokePattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.InvokePattern" />
  <TypeSignature Language="VB.NET" Value="Public Class InvokePattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvokePattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type InvokePattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3b5ea-101">単一の明確な処理を開始または実行し、アクティブになったときに状態を保持しないコントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-101">Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b5ea-102">同じ動作が別のコントロールパターンによって公開されていない場合、コントロールは <xref:System.Windows.Automation.InvokePattern> をサポートします。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-102">Controls support <xref:System.Windows.Automation.InvokePattern> if the same behavior is not exposed through another control pattern.</span></span> <span data-ttu-id="3b5ea-103">たとえば、コントロールの <xref:System.Windows.Automation.InvokePattern.Invoke%2A> メソッドが <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> または <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> メソッドと同じアクションを実行する場合、コントロールは <xref:System.Windows.Automation.InvokePattern>をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-103">For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support <xref:System.Windows.Automation.InvokePattern>.</span></span>  
  
 <span data-ttu-id="3b5ea-104">状態を維持する、チェックボックスやオプションボタンなどのコントロールを表す要素 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]、<xref:System.Windows.Automation.TogglePattern> または <xref:System.Windows.Automation.SelectionItemPattern>をサポートします。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-104">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IInvokeProvider" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="3b5ea-105">UI オートメーション コントロール パターンの概要</span><span class="sxs-lookup"><span data-stu-id="3b5ea-105">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md"><span data-ttu-id="3b5ea-106">クライアントの UI オートメーション コントロール パターン</span><span class="sxs-lookup"><span data-stu-id="3b5ea-106">UI Automation Control Patterns for Clients</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="3b5ea-107">UI オートメーションを使用したコントロールの呼び出し</span><span class="sxs-lookup"><span data-stu-id="3b5ea-107">Invoke a Control Using UI Automation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="3b5ea-108">InvokePattern と ExpandCollapsePattern のメニュー項目のサンプル</span><span class="sxs-lookup"><span data-stu-id="3b5ea-108">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.InvokePattern.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="member this.Invoke : unit -&gt; unit" Usage="invokePattern.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3b5ea-109">要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-109">Sends a request to activate a control and initiate its single, unambiguous action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b5ea-110"><xref:System.Windows.Automation.InvokePattern.Invoke%2A> の呼び出しは、ブロックせずにすぐに制御を戻す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-110">Calls to <xref:System.Windows.Automation.InvokePattern.Invoke%2A> should return immediately without blocking.</span></span> <span data-ttu-id="3b5ea-111">ただし、この動作は、[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] プロバイダーの実装に完全に依存しています。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-111">However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] provider implementation.</span></span> <span data-ttu-id="3b5ea-112"><xref:System.Windows.Automation.InvokePattern.Invoke%2A> を呼び出すことで、ブロッキングの問題 (モーダルダイアログなど) が発生するシナリオでは、メソッドを呼び出すために個別のヘルパースレッドが必要になることがあります。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-112">In scenarios where calling <xref:System.Windows.Automation.InvokePattern.Invoke%2A> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b5ea-113">次の例では、コントロールから <xref:System.Windows.Automation.InvokePattern> コントロールパターンが取得され、<xref:System.Windows.Automation.InvokePattern.Invoke%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-113">In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.</span></span>  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3b5ea-114">要素が <see cref="T:System.Windows.Automation.InvokePattern" /> コントロール パターンをサポートしていないか、非表示またはブロックされています。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-114">The element does not support the <see cref="T:System.Windows.Automation.InvokePattern" /> control pattern or is hidden or blocked.</span></span></exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException"><span data-ttu-id="3b5ea-115">この要素は有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-115">The element is not enabled.</span></span> <span data-ttu-id="3b5ea-116">UI オートメーション プロバイダーが <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> プロパティの独自の処理を実装した場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-116">Can be raised when a UI Automation provider has implemented its own handling of the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> property.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="3b5ea-117">UI オートメーションを使用したコントロールの呼び出し</span><span class="sxs-lookup"><span data-stu-id="3b5ea-117">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="3b5ea-118">InvokePattern と ExpandCollapsePattern のメニュー項目のサンプル</span><span class="sxs-lookup"><span data-stu-id="3b5ea-118">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InvokedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvokedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b5ea-119">コントロールが呼び出されるか、アクティブ化されるときに発生するイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-119">Identifies the event raised when a control is invoked or activated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b5ea-120">この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-120">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="3b5ea-121">UI オートメーションプロバイダーは、<xref:System.Windows.Automation.InvokePatternIdentifiers>の同等のフィールドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-121">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="3b5ea-122"><xref:System.Windows.Automation.InvokePattern.InvokedEvent> 識別子は、<xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>にパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-122">The <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b5ea-123">次の例では、イベントハンドラーは、イベント引数の <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> と <xref:System.Windows.Automation.InvokePattern.InvokedEvent> 識別子フィールドを比較することによって、呼び出されたイベントとしてイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-123">In the following example, the event handler identifies the event as an Invoked event by comparing the <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in the event arguments with the <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier field.</span></span>  
  
 [!code-csharp[UIAClient_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#101)]
 [!code-vb[UIAClient_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="3b5ea-124">UI オートメーションを使用したコントロールの呼び出し</span><span class="sxs-lookup"><span data-stu-id="3b5ea-124">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="3b5ea-125">InvokePattern と ExpandCollapsePattern のメニュー項目のサンプル</span><span class="sxs-lookup"><span data-stu-id="3b5ea-125">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.InvokePattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b5ea-126"><see cref="T:System.Windows.Automation.InvokePattern" /> コントロール パターンを識別します。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-126">Identifies the <see cref="T:System.Windows.Automation.InvokePattern" /> control pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b5ea-127">この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-127">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="3b5ea-128">UI オートメーションプロバイダーは、<xref:System.Windows.Automation.InvokePatternIdentifiers>の同等のフィールドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-128">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="3b5ea-129">パターン識別子は、指定された <xref:System.Windows.Automation.AutomationElement>から目的のコントロールパターンを取得するために、<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> などのメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-129">The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b5ea-130">次の例では、コントロールから <xref:System.Windows.Automation.InvokePattern> コントロールパターンが取得され、<xref:System.Windows.Automation.InvokePattern.Invoke%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3b5ea-130">In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.</span></span>  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="3b5ea-131">UI オートメーションを使用したコントロールの呼び出し</span><span class="sxs-lookup"><span data-stu-id="3b5ea-131">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="3b5ea-132">InvokePattern と ExpandCollapsePattern のメニュー項目のサンプル</span><span class="sxs-lookup"><span data-stu-id="3b5ea-132">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
