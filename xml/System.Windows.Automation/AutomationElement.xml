<Type Name="AutomationElement" FullName="System.Windows.Automation.AutomationElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8eeed3dba1a09809e090fde016938b76719c853d" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83970317" /></Metadata><TypeSignature Language="C#" Value="public sealed class AutomationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AutomationElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AutomationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationElement sealed" />
  <TypeSignature Language="F#" Value="type AutomationElement = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Automation ツリー内の UI Automation 要素を表します。UI Automation クライアント アプリケーションによって識別子として使用される値を格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> は、基になる実装 ([!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] や [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]など) に関係なく、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]の一部に対応します。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/65847654-9994-4a9e-b36d-2dd5d998770b">UI オートメーションの概要</related>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AcceleratorKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceleratorKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AcceleratorKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceleratorKeyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 アクセラレータキーの組み合わせによってアクションが呼び出されます。 たとえば、CTRL + O は、[ファイルを**開く**] コモンダイアログボックスを呼び出すためによく使用されます。 "アクセラレータキー" プロパティが設定されている <xref:System.Windows.Automation.AutomationElement> は、常に <xref:System.Windows.Automation.InvokePattern> クラスを実装します。  
  
 プロパティの戻り値の型は <xref:System.String>です。 プロパティの既定値は空の文字列です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#124](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#124)]
 [!code-vb[UIAClient_snip#124](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#124)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#125](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#125)]
 [!code-vb[UIAClient_snip#125](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#125)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AccessKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccessKeyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 アクセスキーは、メニュー、メニュー項目、またはコントロールのラベル (添付メニュー関数をアクティブにするボタンなど) のテキスト内の文字です。 たとえば、文字 "O" は、**ファイル**メニューから [ファイルを**開く**] コモンダイアログボックスを起動するためによく使用されます。  
  
 アクセスキーの値は <xref:System.String> 型で、要素のアクセスキーとして登録されている文字が含まれます。 文字列の既定値は空の文字列です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#127](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#127)]
 [!code-vb[UIAClient_snip#127](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#127)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#128](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#128)]
 [!code-vb[UIAClient_snip#128](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#128)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="AsyncContentLoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AsyncContentLoadedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AsyncContentLoadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AsyncContentLoadedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期でコンテンツを読み込んでいる間に発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このイベントは、主に、非同期のコンテンツ読み込みイベントが発生したことを示すためにプロバイダーによって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AsyncContentLoadedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationFocusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationFocusChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationFocusChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationFocusChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスが変更されたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771428(v=vs.90)">TrackFocus サンプル</related>
      </Docs>
    </Member>
    <Member MemberName="AutomationIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AutomationIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AutomationIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素を識別するために使用される <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの戻り値の型は <xref:System.String>です。 プロパティの既定値は空の文字列です。  
  
 使用可能な場合、要素の <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> は、ローカル言語に関係なく、アプリケーションのインスタンスで常に同じである必要があります。 値は兄弟要素間で一意である必要がありますが、必ずしもデスクトップ全体で一意である必要はありません。 たとえば、アプリケーションの複数のインスタンス、または Microsoft Windows エクスプローラーの複数のフォルダービューには、"SystemMenuBar" など、同じ <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>を持つ要素が含まれている場合があります。  
  
 テスト性を向上させるために <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> のサポートは常に推奨されますが、このプロパティは必須ではありません。 サポートされている場合、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> は、UI 言語に関係なく実行されるテスト自動化スクリプトの作成に役立ちます。 クライアントは、他のアプリケーションによって公開されている <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>について、想定しないようにする必要があります。 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> は、アプリケーションのさまざまなリリースまたはビルド間で安定しているとは限りません。  
  
 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 要素のインスタンスは、デスクトップ上で <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> プロパティによって一意に識別されます。  
  
> [!NOTE]
>  <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> をサポートしているのは、最上位のアプリケーション ウィンドウ以外のコントロール ビューにあるすべての UI オートメーション要素、ID または x:Uid を持たない [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] コントロールから派生した UI オートメーション要素、およびコントロール ID を持たない [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] コントロールから派生した UI オートメーション要素です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#129](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#129)]
 [!code-vb[UIAClient_snip#129](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#129)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#130](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#130)]
 [!code-vb[UIAClient_snip#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#130)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">UI オートメーション要素の取得</related>
      </Docs>
    </Member>
    <Member MemberName="AutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationPropertyChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationPropertyChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationPropertyChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ変更イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty BoundingRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BoundingRectangleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ BoundingRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BoundingRectangleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 外接する四角形の型は <xref:System.Windows.Rect>です。 返される四角形は、物理的な画面座標で表されます。 既定値は <xref:System.Windows.Rect.Empty%2A> です。 項目が現在 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]を表示していない場合は <xref:System.Windows.Rect.Empty%2A> が返されます。  
  
 返される四角形には、クリックできないポイントを含めることができます。 このような状況が発生する可能性があるのは、[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 項目に不規則な形またはクリック可能な領域がある場合、または他の [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 要素によって隠されている場合などです。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#131](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#131)]
 [!code-vb[UIAClient_snip#131](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#131)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#132](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#132)]
 [!code-vb[UIAClient_snip#132](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#132)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI オートメーションおよび画面の拡大縮小</related>
      </Docs>
    </Member>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Cached { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Cached : System.Windows.Automation.AutomationElement.AutomationElementInformation" Usage="System.Windows.Automation.AutomationElement.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトのキャッシュされた [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティ値を取得します。</summary>
        <value><see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされたプロパティ値を格納する構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティのアクセサーは、<xref:System.Windows.Automation.AutomationElement.Cached%2A>によって返される構造体のプロパティとして表されます。 構造体を取得する必要はありません。次の例のように、そのメンバーに直接アクセスできます。 使用できるプロパティとその使用法の詳細については、「<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>」を参照してください。  
  
 この要素の [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティの現在の値を取得するには、<xref:System.Windows.Automation.AutomationElement.Current%2A> プロパティを使用します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティを使用して、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> プロパティをキャッシュし、取得する方法を示しています。  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">キャッシュされたプロパティがありません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI オートメーション クライアントにおけるキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="CachedChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElementCollection CachedChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedChildren As AutomationElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementCollection ^ CachedChildren { System::Windows::Automation::AutomationElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedChildren : System.Windows.Automation.AutomationElementCollection" Usage="System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされた子要素を取得します。</summary>
        <value>子要素のコレクション。 要素に子がない場合、このコレクションは空になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返されるコレクションのビューは、この <xref:System.Windows.Automation.AutomationElement> オブジェクトが取得されたときにアクティブだった <xref:System.Windows.Automation.CacheRequest> の <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> 条件によって決まります。  
  
 子は、<xref:System.Windows.Automation.CacheRequest> のスコープに <xref:System.Windows.Automation.TreeScope.Subtree>、<xref:System.Windows.Automation.TreeScope.Children>、または <xref:System.Windows.Automation.TreeScope.Descendants>が含まれている場合にのみキャッシュされます。  
  
 子がこのレベルでキャッシュされることを指定した <xref:System.Windows.Automation.CacheRequest>、子が存在しない場合、このプロパティの値は0になります。 ただし、このレベルで子をキャッシュする要求が行われなかった場合、プロパティを取得しようとすると例外が発生します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.CacheRequest> がアクティブで <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> が <xref:System.Windows.Automation.TreeScope.Children>場合に、親ウィンドウ要素からリストボックス要素が取得されます。 子要素 (つまりリスト項目) の指定されたプロパティはキャッシュに格納され、リストボックスの <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> から取得できます。  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <exception cref="T:System.InvalidOperationException">この要素の子をキャッシュする要求は行われていません。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI オートメーション クライアントにおけるキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="CachedParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement CachedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement CachedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedParent As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ CachedParent { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedParent : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされた親を取得します。</summary>
        <value>親要素。 指定された要素に親がない場合 (この要素がルートノードの場合など) は、戻り値を <see langword="null" /> できます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、リストボックスとそのリスト項目の <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> プロパティがキャッシュされています。 リストボックス要素は、各リスト項目要素の [<xref:System.Windows.Automation.AutomationElement.CachedParent%2A>] プロパティで使用できます。  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">親要素はキャッシュされていません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI オートメーション クライアントにおけるキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="ClassNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClassNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassNameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClassNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassNameProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 クラス名は UI オートメーションプロバイダーの実装に依存しているため、標準形式ではカウントできません。 ただし、クラス名がわかっている場合は、それを使用して、アプリケーションが予期された [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素を操作していることを確認できます。  
  
 プロパティの戻り値の型は <xref:System.String>です。 既定値は空の文字列です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#133](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#133)]
 [!code-vb[UIAClient_snip#133](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#133)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#134](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#134)]
 [!code-vb[UIAClient_snip#134](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#134)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ClickablePointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClickablePointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickablePointProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClickablePointProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickablePointProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クリック可能なポイントのプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 <xref:System.Windows.Automation.AutomationElement> は、別のウィンドウで完全に隠されている場合はクリックできません。  
  
 プロパティの戻り値の型は <xref:System.Windows.Point>です。 既定値は `null` です。  
  
 返される値は、物理的な画面座標です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。  
  
 [!code-csharp[UIAClient_snip#135](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#135)]
 [!code-vb[UIAClient_snip#135](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#135)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#166](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#166)]
 [!code-vb[UIAClient_snip#166](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#166)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI オートメーションおよび画面の拡大縮小</related>
      </Docs>
    </Member>
    <Member MemberName="ControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ControlTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの既定値は <xref:System.Windows.Automation.ControlType.Custom>  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#136](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#136)]
 [!code-vb[UIAClient_snip#136](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#136)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#137](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#137)]
 [!code-vb[UIAClient_snip#137](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#137)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/261dcc59-3a62-4e40-91dd-63ff9d2241c0">UI オートメーション コントロール型</related>
      </Docs>
    </Member>
    <Member MemberName="CultureProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CultureProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CultureProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CultureProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CultureProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CultureProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カルチャ プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 Windows Presentation Foundation (WPF) フレームワーク内では、.NET Framework は自動的に既定で英語に自動的に設定されるため、報告される既定値は常に `en-US` になります。 他のユーザーインターフェイス (UI) フレームワークの場合は、このプロパティを明示的に設定する必要があります。そうしないと、公開されません。  
  
 このプロパティは、コントロールごとに存在できますが、通常はアプリケーションレベルでのみ使用できます。  
  
 プロパティの戻り値の型は <xref:System.Globalization.CultureInfo>です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。  
  
 [!code-csharp[UIAClient_snip#138](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#138)]
 [!code-vb[UIAClient_snip#138](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#138)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Current { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.AutomationElement.AutomationElementInformation" Usage="System.Windows.Automation.AutomationElement.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Automation.AutomationElement" /> の現在のプロパティ値を取得します。</summary>
        <value>現在のプロパティ値を格納する構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティのアクセサーは、<xref:System.Windows.Automation.AutomationElement.Current%2A>によって返される構造体のプロパティとして表されます。 構造体を取得する必要はありません。次の例のように、そのメンバーに直接アクセスできます。 使用できるプロパティとその使用法の詳細については、「<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>」を参照してください。  
  
 この要素の [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティのキャッシュされた値を取得するには、<xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティを使用します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Automation.AutomationElement.Current%2A> プロパティを使用して、リストで選択された項目の名前を取得する方法を示しています。  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="automationElement.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">比較する <see cref="T:System.Windows.Automation.AutomationElement" /> です。</param>
        <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の値が、この <see cref="T:System.Windows.Automation.AutomationElement" /> の値と同一かどうかを判断します。</summary>
        <returns>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> が、この <see cref="T:System.Windows.Automation.AutomationElement" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 等しいかどうかを比較する2つの要素には、異なる時点からキャッシュされた異なる情報が含まれる場合があります。 等値チェックでは、<xref:System.Windows.Automation.AutomationElement> オブジェクトが同じ基になるユーザーインターフェイス要素を参照していることのみをテストします。つまり、実行時の識別子が同じであるということです。  
  
 このメソッドは、実行時の識別子を比較する等値演算子に相当します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AutomationElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AutomationElement ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="automationElement.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElementCollection FindAll(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (scope As TreeScope, condition As Condition) As AutomationElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElementCollection ^ FindAll(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="member this.FindAll : System.Windows.Automation.TreeScope * System.Windows.Automation.Condition -&gt; System.Windows.Automation.AutomationElementCollection" Usage="automationElement.FindAll (scope, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">検索のスコープを指定する、値のビットごとの組み合わせ。</param>
        <param name="condition">照合する検索条件を格納するオブジェクト。</param>
        <summary>指定した条件を満たすすべての <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを返します。</summary>
        <returns>指定した条件を満たすオブジェクトのコレクション。 一致がない場合は、空のコレクションが返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 検索のスコープは、メソッドが呼び出される要素に対して相対的です。 要素は、ツリー内で見つかった順序で返されます。  
  
 デスクトップでトップレベルウィンドウを検索する場合は、<xref:System.Windows.Automation.TreeScope.Descendants>ではなく `scope`で <xref:System.Windows.Automation.TreeScope.Children> を指定してください。 デスクトップのサブツリー全体を検索すると、何千もの項目を反復処理し、stack overflow に陥る可能性があります。  
  
 クライアントアプリケーションが独自のユーザーインターフェイスで要素を見つけようとする場合は、すべての [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 呼び出しを別のスレッドで行う必要があります。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.AutomationElement.FindAll%2A> を使用して、ウィンドウ内のすべての有効なボタンを検索する方法を示します。  
  
 [!code-csharp[UIAClient_snip#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#116)]
 [!code-vb[UIAClient_snip#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">UI オートメーション要素の取得</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI オートメーション スレッド処理の問題点</related>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement FindFirst(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFirst (scope As TreeScope, condition As Condition) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ FindFirst(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="member this.FindFirst : System.Windows.Automation.TreeScope * System.Windows.Automation.Condition -&gt; System.Windows.Automation.AutomationElement" Usage="automationElement.FindFirst (scope, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">検索のスコープを指定する、値のビットごとの組み合わせ。</param>
        <param name="condition">照合する検索条件を格納するオブジェクト。</param>
        <summary>指定した条件と一致する最初の子要素または子孫要素を返します。</summary>
        <returns>条件を満たす最初の要素。一致が見つからなかった場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 検索のスコープは、メソッドが呼び出される要素に対して相対的です。  
  
 デスクトップでトップレベルウィンドウを検索する場合は、<xref:System.Windows.Automation.TreeScope.Descendants>ではなく `scope`で <xref:System.Windows.Automation.TreeScope.Children> を指定してください。 デスクトップのサブツリー全体を検索すると、何千もの項目を反復処理し、stack overflow に陥る可能性があります。  
  
 クライアントアプリケーションが独自のユーザーインターフェイスで要素を見つけようとする場合は、すべての [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 呼び出しを別のスレッドで行う必要があります。  
  
   
  
## Examples  
 次の例では、識別子から子ウィンドウを検索する方法を示します。  
  
 [!code-csharp[UIAClient_snip#110](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#110)]
 [!code-vb[UIAClient_snip#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#110)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">UI オートメーション要素の取得</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI オートメーション スレッド処理の問題点</related>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ FocusedElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在フォーカスがある <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
        <value>フォーカスがある [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クライアントアプリケーションが独自のユーザーインターフェイスで要素を見つけようとする場合は、すべての [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 呼び出しを別のスレッドで行う必要があります。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI オートメーション スレッド処理の問題点</related>
      </Docs>
    </Member>
    <Member MemberName="FrameworkIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty FrameworkIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FrameworkIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ FrameworkIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FrameworkIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.String>です。 既定値は空の文字列です。  
  
 このプロパティを使用すると、アプリケーションは UI フレームワーク全体に特殊なケースを適用できます。 プロパティ値の例としては、"Win32"、"WinForm"、"直接" のようなものがあります。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。  
  
 [!code-csharp[UIAClient_snip#139](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#139)]
 [!code-vb[UIAClient_snip#139](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#139)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (hwnd As IntPtr) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromHandle(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromHandle hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 要素のハンドル。</param>
        <summary>指定したウィンドウ ハンドルによって参照される [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目の新しい <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを取得します。</summary>
        <returns><paramref name="hwnd" /> によって識別される [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 項目の <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">UI オートメーション要素の取得</related>
      </Docs>
    </Member>
    <Member MemberName="FromLocalProvider">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromLocalProvider(class System.Windows.Automation.Provider.IRawElementProviderSimple localImpl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLocalProvider (localImpl As IRawElementProviderSimple) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromLocalProvider(System::Windows::Automation::Provider::IRawElementProviderSimple ^ localImpl);" />
      <MemberSignature Language="F#" Value="static member FromLocalProvider : System.Windows.Automation.Provider.IRawElementProviderSimple -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromLocalProvider localImpl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localImpl" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="localImpl">プロバイダー オブジェクト。</param>
        <summary>ローカル <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> 実装から新しい <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを取得します。</summary>
        <returns>プロバイダー オブジェクトによって提供される要素を表す <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が独自のネイティブ要素型にアクセスできるようにするために、クライアントヘルパーライブラリによって使用される場合があります。 たとえば、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] は、<xref:System.Windows.UIElement>から直接 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素を取得するクライアントに <xref:System.Windows.Automation.AutomationElement> を返すことができるように、内部的にこのメソッドを使用します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">UI オートメーション要素の取得</related>
      </Docs>
    </Member>
    <Member MemberName="FromPoint">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromPoint(valuetype System.Windows.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPoint (pt As Point) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromPoint(System::Windows::Point pt);" />
      <MemberSignature Language="F#" Value="static member FromPoint : System.Windows.Point -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromPoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="pt">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 要素があるデスクトップ上の物理的な画面座標。</param>
        <summary>デスクトップ上の指定したポイントにある <see cref="T:System.Windows.Automation.AutomationElement" /> 項目の新しい [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] オブジェクトを取得します。</summary>
        <returns>指定したポイントにある [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.FromPoint%2A> は、ルート要素に最も近い論理ツリー内の要素を返します。  
  
 クライアントアプリケーションが独自のユーザーインターフェイスで要素を見つけようとする場合は、すべての [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 呼び出しを別のスレッドで行う必要があります。  
  
 ポイントは、返される <xref:System.Windows.Automation.AutomationElement>の外接する四角形の範囲内にありますが、コントロールのクリック可能な部分であるとは限りません。 たとえば、円形のボタンは、外接する四角形の角の1つ付近でクリックすることはできません。  
  
   
  
## Examples  
 次の例では、システムカーソル位置にある <xref:System.Windows.Automation.AutomationElement> を取得します。  
  
 [!code-csharp[UIAClient_snip#181](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#181)]
 [!code-vb[UIAClient_snip#181](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#181)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">UI オートメーション要素の取得</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI オートメーションおよび画面の拡大縮小</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI オートメーション スレッド処理の問題点</related>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPattern">
      <MemberSignature Language="C#" Value="public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPattern : System.Windows.Automation.AutomationPattern -&gt; obj" Usage="automationElement.GetCachedPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">取得するパターンの識別子。</param>
        <summary>指定したパターンをこの <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュから取得します。</summary>
        <returns>指定したパターンを表すオブジェクト。 一致するパターンがない場合は、<see langword="null" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> は、指定されたパターンをキャッシュから取得します。 指定したパターンの現在のオブジェクトを取得するには、<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>を呼び出します。  
  
 要求されたパターンが以前にキャッシュされていない場合、このメソッドは例外をスローします。  
  
   
  
## Examples  
 次の例では、パターンをキャッシュおよび取得する方法を示します。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求したパターンはキャッシュ内に存在しないか、この要素ではサポートされていません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI オートメーション クライアントにおけるキャッシュ</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したプロパティのキャッシュされた値を <see cref="T:System.Windows.Automation.AutomationElement" /> から取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> <xref:System.Windows.Automation.AutomationElement>のキャッシュから指定されたプロパティを取得します。 現在のプロパティを取得するには、<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>を呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Cached" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI オートメーション クライアントにおけるキャッシュ</related>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">クライアントの UI オートメーション プロパティ</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPropertyValue : System.Windows.Automation.AutomationProperty -&gt; obj" Usage="automationElement.GetCachedPropertyValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">取得するプロパティの識別子。</param>
        <summary>指定したプロパティの値をこの <see cref="T:System.Windows.Automation.AutomationElement" />のキャッシュから取得します。 ターゲット [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 要素で明示的にサポートされていないプロパティに対しては、そのプロパティ型の適切な既定値が返されます。</summary>
        <returns>指定したプロパティの値が格納されているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要素の UI オートメーションプロバイダーがプロパティをサポートしている場合は、プロパティの値が返されます。 それ以外の場合は、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] によって指定された既定のプロパティが返されます。 既定のプロパティの詳細については、<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>などの <xref:System.Windows.Automation.AutomationElement>のプロパティ識別子フィールドを参照してください。  
  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> <xref:System.Windows.Automation.AutomationElement>のキャッシュから指定されたプロパティを取得します。 指定されたプロパティ呼び出しの現在のオブジェクトを取得するには <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>。  
  
 要求されたプロパティが以前にキャッシュされていなかった場合、このメソッドは例外をスローします。  
  
   
  
## Examples  
 次に、このメソッドを使用してキャッシュされたプロパティを取得する方法を示します。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 用の [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] は存在しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPropertyValue : System.Windows.Automation.AutomationProperty * bool -&gt; obj" Usage="automationElement.GetCachedPropertyValue (property, ignoreDefaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">取得するプロパティの識別子。</param>
        <param name="ignoreDefaultValue">指定したプロパティがサポートされていない場合に、既定値を無視するかどうかを指定する値。</param>
        <summary>指定したプロパティの値をこの <see cref="T:System.Windows.Automation.AutomationElement" />のキャッシュから取得します。既定のプロパティを無視するように指定することもできます。</summary>
        <returns>指定したプロパティの値を格納するオブジェクト。または、要素が値を提供せず、<paramref name="ignoreDefaultValue" /> が <see langword="true" /> である場合は <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> は、<xref:System.Windows.Automation.AutomationElement>のキャッシュから指定されたプロパティを取得します。 現在のプロパティを取得するには、<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>を呼び出します。  
  
 `ignoreDefaultValue` で `false` を渡すことは、<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>を呼び出すことと同じです。  
  
 要素の UI オートメーションプロバイダーがプロパティをサポートしている場合は、プロパティの値が返されます。 それ以外の場合、`ignoreDefaultValue` が `false`場合、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] によって指定された既定のプロパティが返されます。 既定のプロパティの詳細については、<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>などの <xref:System.Windows.Automation.AutomationElement>のプロパティ識別子フィールドを参照してください。  
  
 要求されたプロパティが以前にキャッシュされていなかった場合、このメソッドは例外をスローします。  
  
   
  
## Examples  
 次の例は、このメソッドを使用してキャッシュされたプロパティを取得する方法を示しています。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetClickablePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetClickablePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClickablePoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetClickablePoint();" />
      <MemberSignature Language="F#" Value="member this.GetClickablePoint : unit -&gt; System.Windows.Point" Usage="automationElement.GetClickablePoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Automation.AutomationElement" /> のクリック可能なポイントを取得します。</summary>
        <returns>クライアントがこの要素をクリックするために使用できるポイントの物理的な画面座標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> は、別のウィンドウで完全に隠されている場合はクリックできません。  
  
 次のすべての条件を満たす場合、<xref:System.Windows.Automation.AutomationElement> はクリック可能です。  
  
-   プログラムによって表示され、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] ツリーで使用できます。  
  
-   親コンテナー内のビューに完全にスクロールされます (存在する場合)。 要素がクリップされている場合、その要素がクリック可能であることは保証されません。  
  
-   要素は、他の UI 要素によって隠されていません。 要素が先祖以外の一部の UI 要素によって部分的に隠されている場合は、クリックできない可能性があります。  
  
-   要素が含まれているウィンドウ自体をクリック可能にする必要があります。 たとえば、ウィンドウが完全に透明になっている場合は、ウィンドウをクリックできません。 マウスをクリックすると下のウィンドウが表示されるので、透明ウィンドウ内のコントロールはクリック可能なポイントを返しません。  
  
-   要素がコンテナー (リストビューやツリービューなど) の場合は、クリックするとコントロールの背景がフォーカスされる点が必要です。 コンテナーコントロールのすべての部分が子要素によって占有されている場合は、クリックできません。  
  
 UI オートメーションプロバイダーによってクリック可能として定義されているポイントをクリックしたときに、コントロールが何も実行しないという保証はありません。 コントロールに対してアクションを実行する代わりに、コントロールパターンを使用することを検討してください。  
  
   
  
## Examples  
 次のコードでは、コントロールのクリック可能なポイントを取得し、そのポイントにシステムカーソルを移動します。  
  
 [!code-csharp[UIAClient_snip#179](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#179)]
 [!code-vb[UIAClient_snip#179](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#179)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.NoClickablePointException">クリック可能なポイントはありません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI オートメーションおよび画面の拡大縮小</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPattern">
      <MemberSignature Language="C#" Value="public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPattern : System.Windows.Automation.AutomationPattern -&gt; obj" Usage="automationElement.GetCurrentPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">取得するパターンの識別子。</param>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> の指定したパターン オブジェクトを取得します。</summary>
        <returns>パターン オブジェクト (指定したパターンが現在 <see cref="T:System.Windows.Automation.AutomationElement" /> でサポートされている場合)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> は、呼び出し時の使用可能範囲に基づいて、指定されたパターンを取得します。  
  
 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]の形式によっては、この方法では、プロセス間のパフォーマンスのオーバーヘッドが発生します。 アプリケーションでは、パターンをキャッシュし、<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>を使用してそれらを取得することによって、オーバーヘッドに専念できます。  
  
   
  
## Examples  
 次の例は、このメソッドを使用して、リストボックス内の項目を選択するために使用される <xref:System.Windows.Automation.SelectionItemPattern>を取得する方法を示しています。  
  
 [!code-csharp[UIAClient_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#103)]
 [!code-vb[UIAClient_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#103)]  
  
> [!NOTE]
>  例のような繰り返しのタスクの場合、パターンをキャッシュして <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>を使用する方が効率的です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パターンは要素でサポートされていません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-for-clients">クライアントの UI オートメーション コントロール パターン</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したプロパティの現在の値を <see cref="T:System.Windows.Automation.AutomationElement" /> から取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> メソッドによって返される値は、呼び出された時点で最新です。 この値は、その後、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]と対話する他のアプリケーションによって変更される可能性があります。  
  
 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]の形式によっては、この方法では、プロセス間のパフォーマンスのオーバーヘッドが発生します。 アプリケーションは、プロパティをキャッシュしてから、<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>を使用して取得することによって、オーバーヘッドを集中させることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Current" />
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">クライアントの UI オートメーション プロパティ</related>
        <related type="Article" href="~/docs/framework/ui-automation/ui-automation-properties-overview.md">UI オートメーション プロパティの概要</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPropertyValue : System.Windows.Automation.AutomationProperty -&gt; obj" Usage="automationElement.GetCurrentPropertyValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">取得するプロパティを指定する [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティ識別子。</param>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" />の指定したプロパティの値を取得します。 ターゲット [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 要素で明示的にサポートされていないプロパティに対しては、そのプロパティ型の適切な既定値が返されます。</summary>
        <returns>指定したプロパティの値が格納されているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> メソッドによって返される値は、呼び出された時点で最新です。 この値は、その後、[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]と対話する他のアプリケーションによって変更される可能性があります。  
  
 要素の UI オートメーションプロバイダーがプロパティをサポートしている場合は、プロパティの値が返されます。 それ以外の場合は、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] によって指定された既定のプロパティが返されます。 既定のプロパティの詳細については、<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>などの <xref:System.Windows.Automation.AutomationElement>のプロパティ識別子フィールドを参照してください。  
  
 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]の形式によっては、この方法では、プロセス間のパフォーマンスのオーバーヘッドが発生します。 プロパティをキャッシュしてから、<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>を使用して取得することによって、オーバーヘッドを集中します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPropertyValue : System.Windows.Automation.AutomationProperty * bool -&gt; obj" Usage="automationElement.GetCurrentPropertyValue (property, ignoreDefaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">取得するプロパティを指定する [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティ識別子。</param>
        <param name="ignoreDefaultValue">指定したプロパティがサポートされている場合に、既定値を無視するかどうかを指定する値。</param>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" />の指定したプロパティの値を取得します。既定のプロパティを無視するように指定することもできます。</summary>
        <returns>指定したプロパティの値を格納するオブジェクト。または、要素が値を提供せず、<paramref name="ignoreDefaultValue" /> が <see langword="true" /> である場合は <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ignoreDefaultValue` で `false` を渡すことは、<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>を呼び出すことと同じです。  
  
 要素の UI オートメーションプロバイダーがプロパティをサポートしている場合は、プロパティの値が返されます。 それ以外の場合、`ignoreDefaultValue` が `false`場合、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] によって指定された既定のプロパティが返されます。 既定のプロパティの詳細については、<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>などの <xref:System.Windows.Automation.AutomationElement>のプロパティ識別子フィールドを参照してください。  
  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> メソッドによって返される値は、呼び出された時点で最新です。 この値は、その後、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]と対話する他のアプリケーションによって変更される可能性があります。  
  
 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]の形式によっては、この方法では、プロセス間のパフォーマンスのオーバーヘッドが発生します。 アプリケーションは、プロパティをキャッシュしてから、<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>を使用して取得することによって、オーバーヘッドを集中させることができます。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、<xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="automationElement.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のハッシュ コードを取得します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeId : unit -&gt; int[]" Usage="automationElement.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目に割り当てられた一意の識別子を取得します。</summary>
        <returns>ランタイム識別子を表す整数の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 識別子は、その識別子が生成されたデスクトップの [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] に対してのみ一意であることが保証されます。 識別子は、時間の経過と共に再利用できます。  
  
 実行時の識別子の形式は、今後のリリースで変更される可能性があります。 返される識別子は、不透明な値として扱われ、比較にのみ使用されます。たとえば、<xref:System.Windows.Automation.AutomationElement> がキャッシュ内にあるかどうかを判断します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Automation.AutomationElement>の実行時識別子を取得する方法を示しています。  
  
 [!code-csharp[UIAClient_snip#111](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#111)]
 [!code-vb[UIAClient_snip#111](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetSupportedPatterns();" />
      <MemberSignature Language="F#" Value="member this.GetSupportedPatterns : unit -&gt; System.Windows.Automation.AutomationPattern[]" Usage="automationElement.GetSupportedPatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> がサポートするコントロール パターンを取得します。</summary>
        <returns>サポートされているコントロール パターンを表す <see cref="T:System.Windows.Automation.AutomationPattern" /> オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、このメソッドはデバッグに使用されます。 この呼び出しを行うには、可能なすべてのパターンの <xref:System.Windows.Automation.AutomationElement> にクエリを実行するため、大量の処理が必要になります。 通常は、<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> を使用して、<xref:System.Windows.Automation.AutomationElement>から特定のコントロールパターンを取得します。 特定のパターンがサポートされているかどうかを確認するには、適切なプロパティを確認します。たとえば、<xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>のようにします。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Automation.AutomationElement>でサポートされているコントロールパターンを取得する方法を示しています。  
  
 [!code-csharp[UIAClient_snip#114](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#114)]
 [!code-vb[UIAClient_snip#114](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#114)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-for-clients">クライアントの UI オートメーション コントロール パターン</related>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetSupportedProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetSupportedProperties();" />
      <MemberSignature Language="F#" Value="member this.GetSupportedProperties : unit -&gt; System.Windows.Automation.AutomationProperty[]" Usage="automationElement.GetSupportedProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要素でサポートされているプロパティの識別子を取得します。</summary>
        <returns>サポートされているプロパティの識別子の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された配列は、この要素でサポートされているすべてのプロパティを識別します。ただし、重複するエントリや、`null` または空の値を含むプロパティを含めることもできます。 ほとんどの場合、<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> を使用して、プロパティが現在サポートされているかどうかを判断し、現在の値を取得することをお勧めします。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.AutomationElement>によってサポートされるプロパティを取得する方法を示します。  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">クライアントの UI オートメーション プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedCache">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetUpdatedCache(class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdatedCache (request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetUpdatedCache(System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetUpdatedCache : System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="automationElement.GetUpdatedCache request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="request">更新されたキャッシュに含めるパターンとプロパティ。</param>
        <summary>更新されたキャッシュを持つ新しい <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
        <returns>更新されたキャッシュを持つ新しい <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 元の <xref:System.Windows.Automation.AutomationElement> は変更されません。 <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> は、同じ [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] を参照し、同じ <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>を持つ新しい <xref:System.Windows.Automation.AutomationElement>を返します。  
  
   
  
## Examples  
 次の例では、コンボボックスの選択範囲が変更されるたびにキャッシュを更新する方法を示します。  
  
 [!code-csharp[UIAClient_snip#109](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#109)]
 [!code-vb[UIAClient_snip#109](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#109)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI オートメーション クライアントにおけるキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasKeyboardFocusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HasKeyboardFocusProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasKeyboardFocusProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#140](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#140)]
 [!code-vb[UIAClient_snip#140](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#140)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="HelpTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HelpTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HelpTextProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HelpTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HelpTextProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 通常、この情報は、プロバイダーによって指定されたツールヒントから取得されます。  
  
 プロパティの戻り値の型は <xref:System.String>です。 プロパティの既定値は空の文字列です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsContentElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsContentElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsContentElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsContentElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsContentElementProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] ツリーのコンテンツビューには、[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]内のデータを表す要素のみが含まれている [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] のビューが用意されています。  
  
 要素は、コンテンツを保持できるコントロールである必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `true`です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#141](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#141)]
 [!code-vb[UIAClient_snip#141](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#141)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#142](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#142)]
 [!code-vb[UIAClient_snip#142](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#142)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-tree-overview">UI オートメーション ツリーの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsControlElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsControlElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsControlElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsControlElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsControlElementProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 コントロールは、ユーザーが対話型として認識するか、[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]内の情報を含んでいる要素です。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `true`です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#143](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#143)]
 [!code-vb[UIAClient_snip#143](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#143)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#144](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#144)]
 [!code-vb[UIAClient_snip#144](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#144)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-tree-overview">UI オートメーション ツリーの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsDockPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDockPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsDockPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDockPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.DockPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> が参照する[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目が有効かどうかを指定する <see cref="T:System.Windows.Automation.AutomationElement" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
 コントロールの有効な状態が `false`場合は、子コントロールも有効になっていないと見なされます。 親コントロールの状態が変化したときに、子要素のプロパティ変更イベントを予期しないようにする必要があります。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#146](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#146)]
 [!code-vb[UIAClient_snip#146](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#146)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsExpandCollapsePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandCollapsePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsExpandCollapsePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを示す値を取得します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsGridItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGridItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.GridItemPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsGridPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGridPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.GridPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsInvokePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInvokePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInvokePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.InvokePattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsItemContainerPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsItemContainerPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsItemContainerPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.ItemContainerPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsKeyboardFocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティは、<xref:System.Windows.Automation.AutomationElement.SetFocus%2A> メソッドが適切に機能するために必要な情報を提供します。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#147](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#147)]
 [!code-vb[UIAClient_snip#147](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#147)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleViewPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMultipleViewPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMultipleViewPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.MultipleViewPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsOffscreenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffscreenProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsOffscreenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOffscreenProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" /> 項目が画面に表示されているかどうかを示す [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 戻り値の型は <xref:System.Boolean>であり、既定値は `false`です。  
  
 このプロパティが `true`場合の詳細については、「<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>」を参照してください。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#148](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#148)]
 [!code-vb[UIAClient_snip#148](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#148)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#149](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#149)]
 [!code-vb[UIAClient_snip#149](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#149)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsPasswordProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPasswordProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsPasswordProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPasswordProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 このプロパティの戻り値は <xref:System.Boolean>です。 コンテンツが保護されていることを示すために `true` を返します。それ以外の場合は `false`。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。  
  
 [!code-csharp[UIAClient_snip#150](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#150)]
 [!code-vb[UIAClient_snip#150](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#150)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsRangeValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRangeValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRangeValuePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.RangeValuePattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForFormProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRequiredForFormProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRequiredForFormProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRequiredForFormProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRequiredForFormProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 このプロパティの戻り値の型は <xref:System.Boolean>であり、既定値は `false`です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#151](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#151)]
 [!code-vb[UIAClient_snip#151](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#151)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsScrollItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsScrollItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.ScrollItemPattern" /> に対して <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsScrollPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsScrollPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.ScrollPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.SelectionItemPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.SelectionPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronizedInputPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSynchronizedInputPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSynchronizedInputPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTableItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTableItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTableItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.TableItemPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsTablePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTablePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTablePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTablePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.TablePattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsTextPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTextPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTextPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTextPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.TextPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsTogglePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTogglePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTogglePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.TogglePattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsTransformPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTransformPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTransformPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.TransformPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsValuePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsValuePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.ValuePattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizedItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVirtualizedItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVirtualizedItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsWindowPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsWindowPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.WindowPattern" /> で <see cref="T:System.Windows.Automation.AutomationElement" />コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 プロパティの戻り値の型は <xref:System.Boolean>です。 プロパティの既定値は `false`です。  
  
   
  
## Examples  
 次の例では、指定されたコントロールパターンが <xref:System.Windows.Automation.AutomationElement>によってサポートされているかどうかを ascertains します。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ItemStatusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemStatusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemStatusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemStatusProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemStatusProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複雑な項目の視覚的表現のステータスを指定する <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 戻り値は、コントロールで定義された <xref:System.String>です。 既定値は空の文字列です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#152](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#152)]
 [!code-vb[UIAClient_snip#152](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#152)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#153](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#153)]
 [!code-vb[UIAClient_snip#153](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#153)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 戻り値は、コントロールで定義された <xref:System.String>です。 既定値は空の文字列です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#154](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#154)]
 [!code-vb[UIAClient_snip#154](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#154)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値ではなく、アプリケーション定義の文字列が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#155](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#155)]
 [!code-vb[UIAClient_snip#155](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#155)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LabeledByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LabeledByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LabeledByProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LabeledByProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LabeledByProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに関連付けられたラベルを識別する <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの戻り値の型は <xref:System.Windows.Automation.AutomationElement>です。 プロパティの既定値は `null`です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#156](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#156)]
 [!code-vb[UIAClient_snip#156](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#156)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#157](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#157)]
 [!code-vb[UIAClient_snip#157](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#157)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayoutInvalidatedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ LayoutInvalidatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayoutInvalidatedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>レイアウトが無効になったときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このイベントは、多くの要素の可視性情報が変更されたときに、要素のコンテナーによって発生します。  このイベントは、<xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> を更新する必要があることを示すインジケーターとしてクライアントによって使用され、ツリー内の要素用にキャッシュされている可能性のある情報を <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> ます。 このイベントをトリガーするために推奨される変更の数は25です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalizedControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LocalizedControlTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalizedControlTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ローカル言語で <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロバイダーは、適切に定義されたコントロール型のないカスタムコントロールを表す場合に、このプロパティを公開する必要があります。  
  
 プロパティの戻り値の型は <xref:System.String>です。 プロパティの既定値は空の文字列です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#158](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#158)]
 [!code-vb[UIAClient_snip#158](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#158)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#159](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#159)]
 [!code-vb[UIAClient_snip#159](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#159)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="MenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューを閉じたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューを開いたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの戻り値の型は <xref:System.String>です。 プロパティの既定値は空の文字列です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#160](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#160)]
 [!code-vb[UIAClient_snip#160](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#160)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#161](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#161)]
 [!code-vb[UIAClient_snip#161](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#161)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NativeWindowHandleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NativeWindowHandleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NativeWindowHandleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NativeWindowHandleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの戻り値の型は <xref:System.Int32>です。 このプロパティの既定値は 0 です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#162](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#162)]
 [!code-vb[UIAClient_snip#162](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#162)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#163](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#163)]
 [!code-vb[UIAClient_snip#163](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#163)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="NotSupported">
      <MemberSignature Language="C#" Value="public static readonly object NotSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object NotSupported" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NotSupported As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ NotSupported;" />
      <MemberSignature Language="F#" Value=" staticval mutable NotSupported : obj" Usage="System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティがサポートされないことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.AutomationElement>のヘルプテキストプロパティを取得し、コントロールがそのプロパティをサポートしていない場合に <xref:System.Windows.Automation.AutomationElement.NotSupported> を返すように指定しています。  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">比較対象となる最初の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <param name="right">比較対象となる 2 番目の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが同じ[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 要素を参照しているかどうかを示す値を返します。</summary>
        <returns>2 つの <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが同じ [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 要素を参照している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 等しいかどうかを比較する2つの <xref:System.Windows.Automation.AutomationElement> オブジェクトは、異なる時点のキャッシュされた情報を格納している可能性があります。 <xref:System.Windows.Automation.AutomationElement.op_Equality%2A> は、オブジェクトが、基になる同じ [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 要素を参照していることのみをテストします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="System.Windows.Automation.AutomationElement.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">比較対象となる最初の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <param name="right">比較対象となる 2 番目の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが別の[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 要素を参照しているかどうかを示す値を返します。</summary>
        <returns>2 つのオブジェクトが別の [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 要素を参照している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ OrientationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OrientationProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの値の型は <xref:System.Windows.Automation.OrientationType>です。 既定値は <xref:System.Windows.Automation.OrientationType.None> です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#164](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#164)]
 [!code-vb[UIAClient_snip#164](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#164)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#165](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#165)]
 [!code-vb[UIAClient_snip#165](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#165)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="PositionInSetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty PositionInSetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty PositionInSetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.PositionInSetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PositionInSetProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ PositionInSetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PositionInSetProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.PositionInSetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>兄弟と見なされる要素セット内のオートメーション要素の序数位置を記述します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

`PositionInSetProperty` は <xref:System.Windows.Automation.AutomationElement.SizeOfSetProperty> と組み合わせて、セット内のオートメーション要素の序数位置を記述します。

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ProcessIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProcessIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ProcessIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProcessIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 このプロパティは、<xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティから取得することもできます。  
  
 プロパティの戻り値の型は <xref:System.Int32>です。 このプロパティの既定値は 0 です。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。 既定値は、要素がを提供していない場合に返されます。  
  
 [!code-csharp[UIAClient_snip#167](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#167)]
 [!code-vb[UIAClient_snip#167](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#167)]  
  
 次の例では、プロパティの現在の値を取得しますが、要素自体がプロパティの値を提供しない場合は、既定値の代わりに <xref:System.Windows.Automation.AutomationElement.NotSupported> が返されることを指定します。  
  
 [!code-csharp[UIAClient_snip#168](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#168)]
 [!code-vb[UIAClient_snip#168](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#168)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RootElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ RootElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootElement : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のデスクトップのルート <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
        <value>ルート要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ルート要素は、<xref:System.Windows.Automation.AutomationElement.FindAll%2A> および <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> メソッドを使用して、他の要素を検索するための出発点として使用できます。  
  
 ルート要素から検索する場合は、<xref:System.Windows.Automation.TreeScope.Descendants>ではなく、検索の範囲内で <xref:System.Windows.Automation.TreeScope.Children> を指定してください。 デスクトップのサブツリー全体を検索すると、何千もの項目を反復処理し、stack overflow に陥る可能性があります。  
  
   
  
## Examples  
 次のコード例では、デスクトップの直下にあるすべての子のコレクションを取得します。  
  
 [!code-csharp[UIAClient_snip#201](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#201)]
 [!code-vb[UIAClient_snip#201](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty RuntimeIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RuntimeIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ RuntimeIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RuntimeIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素のランタイム識別子を格納するプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 Runtime ID プロパティは、デスクトップ上で一意の <xref:System.Windows.Automation.AutomationElement> の ID を指定します。  
  
 プロパティの戻り値は <xref:System.Int32>型の配列です。 既定値はありません。  
  
   
  
## Examples  
 次の例では、プロパティの現在の値を取得します。  
  
 [!code-csharp[UIAClient_snip#169](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#169)]
 [!code-vb[UIAClient_snip#169](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#169)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.GetRuntimeId" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">UI オートメーション プロパティの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberSignature Language="F#" Value="member this.SetFocus : unit -&gt; unit" Usage="automationElement.SetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Automation.AutomationElement" />にフォーカスを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの動作は、要素の UI オートメーションプロバイダーによる実装によって異なります。 フォーカスを設定しても、必ずしも要素を前面に配置したり、表示したりすることはありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SizeOfSetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty SizeOfSetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty SizeOfSetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.SizeOfSetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeOfSetProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ SizeOfSetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeOfSetProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.SizeOfSetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループまたはセット内の兄弟と見なされるオートメーション要素の数を記述します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

`SizeOfSetProperty` は <xref:System.Windows.Automation.AutomationElement.PositionInSetProperty> と組み合わせて、セット内の項目の数を記述します。

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StructureChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent StructureChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StructureChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ StructureChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StructureChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] ツリー構造が変更されたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツールヒントが閉じたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツールヒントが開いたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この識別子は、UI オートメーションクライアントアプリケーションによって使用されます。 UI オートメーションプロバイダーは、<xref:System.Windows.Automation.AutomationElementIdentifiers>で同等の識別子を使用する必要があります。  
  
 ツールヒントはデスクトップ上で一時的なものであり、クライアントがイベントを受信したときにツールヒントが閉じている可能性があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCachedPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCachedPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCachedPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberSignature Language="F#" Value="member this.TryGetCachedPattern : System.Windows.Automation.AutomationPattern * obj -&gt; bool" Usage="automationElement.TryGetCachedPattern (pattern, patternObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">取得するコントロール パターンの識別子。</param>
        <param name="patternObject">戻り時に、キャッシュ内にパターンが存在する場合はそのパターンが格納されます。それ以外の場合は <see langword="null" />が格納されます。</param>
        <summary>キャッシュからコントロール パターンを取得します。</summary>
        <returns>キャッシュ内にパターンが存在する場合は<see langword="true" /> 。キャッシュ内に存在しない場合やサポートされていない場合は <see langword="false" /> 。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、コントロールパターンをキャッシュおよび取得する方法を示しています。  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI オートメーション クライアントにおけるキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetClickablePoint">
      <MemberSignature Language="C#" Value="public bool TryGetClickablePoint (out System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetClickablePoint([out] valuetype System.Windows.Point&amp; pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetClickablePoint (ByRef pt As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetClickablePoint([Runtime::InteropServices::Out] System::Windows::Point % pt);" />
      <MemberSignature Language="F#" Value="member this.TryGetClickablePoint : Point -&gt; bool" Usage="automationElement.TryGetClickablePoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pt">このメソッドが戻るときに、クリック可能なポイントの物理的な画面座標が格納されます。</param>
        <summary>要素内のクリック可能なポイントを取得します。</summary>
        <returns>クリック可能なポイントがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> は、別のウィンドウで完全に隠されている場合はクリックできません。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.AutomationElement>上のクリック可能なポイントを取得しようとしています。  
  
 [!code-csharp[UIAClient_snip#112](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#112)]
 [!code-vb[UIAClient_snip#112](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI オートメーションおよび画面の拡大縮小</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberSignature Language="F#" Value="member this.TryGetCurrentPattern : System.Windows.Automation.AutomationPattern * obj -&gt; bool" Usage="automationElement.TryGetCurrentPattern (pattern, patternObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">取得するコントロール パターンの識別子。</param>
        <param name="patternObject">戻り時に、コントロール パターンがサポートされている場合はそのパターンが格納されます。それ以外の場合は <see langword="null" />が格納されます。</param>
        <summary>コントロール パターンを実装するオブジェクトを取得します。</summary>
        <returns>パターンがサポートされている場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]の形式によっては、この方法では、プロセス間のパフォーマンスのオーバーヘッドが発生します。 アプリケーションでは、パターンをキャッシュし、<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>を使用してそれらを取得することによって、オーバーヘッドに専念できます。  
  
   
  
## Examples  
 次の例は、このメソッドを使用してコントロールパターンを取得する方法を示しています。  
  
 [!code-csharp[UIAClient_snip#113](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#113)]
 [!code-vb[UIAClient_snip#113](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-for-clients">クライアントの UI オートメーション コントロール パターン</related>
      </Docs>
    </Member>
  </Members>
</Type>
