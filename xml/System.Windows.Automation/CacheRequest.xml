<Type Name="CacheRequest" FullName="System.Windows.Automation.CacheRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57a4551e4b9d6ec2b573594d103f6b9a0b8bb638" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83978284" /></Metadata><TypeSignature Language="C#" Value="public sealed class CacheRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.CacheRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheRequest sealed" />
  <TypeSignature Language="F#" Value="type CacheRequest = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0cf8b-101"><see cref="T:System.Windows.Automation.AutomationElement" /> が取得されるときに、UI オートメーション フレームワークがキャッシュするプロパティおよびパターンを指定します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-101">Specifies properties and patterns that the UI Automation framework caches when an <see cref="T:System.Windows.Automation.AutomationElement" /> is obtained.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-102">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] を使用してプロパティとパターンを取得するには、パフォーマンスの低下を伴うプロセス間の呼び出しが必要です。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-102">Retrieving properties and patterns through [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requires cross-process calls that can slow down performance.</span></span> <span data-ttu-id="0cf8b-103">バッチ操作でプロパティとパターンの値をキャッシュすることにより、アプリケーションのパフォーマンスを向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-103">By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</span></span>  
  
 <span data-ttu-id="0cf8b-104">クラスコンストラクターを呼び出して、新しいキャッシュ要求を作成します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-104">Create a new cache request by calling the class constructor.</span></span> <span data-ttu-id="0cf8b-105">要求は、<xref:System.Windows.Automation.CacheRequest.Add%2A> メソッドを繰り返し呼び出すことによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-105">The request is populated by repeated calls to the <xref:System.Windows.Automation.CacheRequest.Add%2A> method.</span></span>  
  
 <span data-ttu-id="0cf8b-106">アクティブにできるのは1つの <xref:System.Windows.Automation.CacheRequest> のみです。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-106">Only a single <xref:System.Windows.Automation.CacheRequest> can be active.</span></span> <span data-ttu-id="0cf8b-107">要求をアクティブ化するには、次の2つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-107">There are two ways to activate a request:</span></span>  
  
-   <span data-ttu-id="0cf8b-108">要求に対して <xref:System.Windows.Automation.CacheRequest.Activate%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-108">Call <xref:System.Windows.Automation.CacheRequest.Activate%2A> on the request.</span></span> <span data-ttu-id="0cf8b-109">これにより、要求がスタックにプッシュされ、オブジェクトが破棄されると要求がポップされます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-109">This pushes the request onto the stack, and the request is popped when the object is disposed.</span></span> <span data-ttu-id="0cf8b-110">例外が発生した場合でも破棄されるようにするには、`using` ブロック (Visual Basic で`Using`) 内の <xref:System.Windows.Automation.CacheRequest.Activate%2A> からの戻り値を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-110">To ensure disposal even if an exception is raised, use the return value from <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="0cf8b-111"><xref:System.Windows.Automation.CacheRequest.Push%2A>を呼び出すことによって、要求を内部スタックに配置します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-111">Put the request onto the internal stack by calling <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span> <span data-ttu-id="0cf8b-112">スタック上の最上位の要求のみがアクティブであり、<xref:System.Windows.Automation.CacheRequest.Pop%2A>によってスタックから削除された次の要求である必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-112">Only the topmost request on the stack is active, and it must be the next one removed from the stack by <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span> <span data-ttu-id="0cf8b-113">要求をポップすると、それが非アクティブになります。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-113">Popping the request deactivates it.</span></span>  
  
 <span data-ttu-id="0cf8b-114">要求がアクティブになっている間に取得される [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] の要素には、指定されたプロパティとパターンのキャッシュされた値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-114">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elements obtained while the request is active will have cached values for the properties and patterns specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-115">次の例では、<xref:System.Windows.Automation.CacheRequest.Activate%2A> を使用してパターンとプロパティをキャッシュする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-115">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 <span data-ttu-id="0cf8b-116">次の例は、<xref:System.Windows.Automation.CacheRequest.Push%2A> と <xref:System.Windows.Automation.CacheRequest.Pop%2A> を使用してパターンとプロパティをキャッシュする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-116">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-117">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-117">Caching in UI Automation Clients</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-118">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-118">Use Caching in UI Automation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771456(v=vs.90)"><span data-ttu-id="0cf8b-119">FetchTimer サンプル</span><span class="sxs-lookup"><span data-stu-id="0cf8b-119">FetchTimer Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cf8b-120"><see cref="T:System.Windows.Automation.CacheRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-120">Initializes a new instance of the <see cref="T:System.Windows.Automation.CacheRequest" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-121"><xref:System.Windows.Automation.CacheRequest> が作成されると、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 識別子が既定のプロパティとしてキャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-121">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-122">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-122">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-123">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-123">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public IDisposable Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; IDisposable" Usage="cacheRequest.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cf8b-124">この <see cref="T:System.Windows.Automation.CacheRequest" /> を、同じスレッドで <see cref="T:System.Windows.Automation.AutomationElement" /> が要求されたときに返される項目のアクティブな指定として設定します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-124">Sets this <see cref="T:System.Windows.Automation.CacheRequest" /> as the active specification for the items that are returned when an <see cref="T:System.Windows.Automation.AutomationElement" /> is requested on the same thread.</span></span></summary>
        <returns><span data-ttu-id="0cf8b-125"><see cref="T:System.Windows.Automation.CacheRequest" /> を破棄するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-125">The object that can be used to dispose the <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-126">通常、このメソッドの使用は、<xref:System.Windows.Automation.CacheRequest>をアクティブ化する手段として <xref:System.Windows.Automation.CacheRequest.Push%2A> と <xref:System.Windows.Automation.CacheRequest.Pop%2A> を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-126">Using this method is usually preferable to using <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> as a means of activating the <xref:System.Windows.Automation.CacheRequest>.</span></span> <span data-ttu-id="0cf8b-127"><xref:System.Windows.Automation.CacheRequest.Activate%2A> が呼び出されたときにオブジェクトがスタックにプッシュされ、破棄されるときにポップされます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-127">The object is pushed onto the stack when <xref:System.Windows.Automation.CacheRequest.Activate%2A> is called, and then popped off when it is disposed.</span></span> <span data-ttu-id="0cf8b-128">破棄を確実に行うには、戻り値を `using` ブロック (`Using` Visual Basic) 内に配置します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-128">To ensure disposal, place the return value within a `using` block (`Using` in Visual Basic).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-129">次の例では、<xref:System.Windows.Automation.CacheRequest.Activate%2A> を使用してパターンとプロパティをキャッシュする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-129">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-130">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-130">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-131">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-131">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cf8b-132">プロパティまたはパターン識別子を <see cref="T:System.Windows.Automation.CacheRequest" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-132">Adds a property or pattern identifier to a <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-133"><xref:System.Windows.Automation.CacheRequest> オブジェクトが作成されると、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 識別子が既定のプロパティとしてキャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-133">When a <xref:System.Windows.Automation.CacheRequest> object is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="0cf8b-134">キャッシュ要求に既に存在するオブジェクトを追加しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-134">Adding an object that is already in the cache request has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (pattern As AutomationPattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationPattern -&gt; unit" Usage="cacheRequest.Add pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="0cf8b-135">キャッシュするパターンを指定する識別子。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-135">An identifier specifying a pattern to cache.</span></span></param>
        <summary><span data-ttu-id="0cf8b-136">指定した <see cref="T:System.Windows.Automation.AutomationPattern" /> 識別子を、この <see cref="T:System.Windows.Automation.CacheRequest" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-136">Adds the specified <see cref="T:System.Windows.Automation.AutomationPattern" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-137">既にキャッシュ要求に含まれているパターンを追加しても、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-137">Adding a pattern that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-138">次の例では、<xref:System.Windows.Automation.CacheRequest> を作成し、キャッシュするパターンを追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-138">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0cf8b-139"><see cref="T:System.Windows.Automation.CacheRequest" /> がアクティブです。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-139">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-140">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-140">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-141">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-141">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (property As AutomationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationProperty -&gt; unit" Usage="cacheRequest.Add property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="0cf8b-142">キャッシュするプロパティ値を指定する識別子。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-142">An identifier specifying a property value to cache.</span></span></param>
        <summary><span data-ttu-id="0cf8b-143">指定した <see cref="T:System.Windows.Automation.AutomationProperty" /> 識別子を、この <see cref="T:System.Windows.Automation.CacheRequest" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-143">Adds the specified <see cref="T:System.Windows.Automation.AutomationProperty" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-144"><xref:System.Windows.Automation.CacheRequest> が作成されると、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 識別子が既定のプロパティとしてキャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-144">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="0cf8b-145">キャッシュ要求に既に存在するプロパティを追加しても、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-145">Adding a property that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-146">次の例では、<xref:System.Windows.Automation.CacheRequest> を作成し、キャッシュするプロパティを追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-146">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0cf8b-147"><see cref="T:System.Windows.Automation.CacheRequest" /> がアクティブです。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-147">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-148">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-148">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-149">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-149">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutomationElementMode">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElementMode AutomationElementMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationElementMode As AutomationElementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementMode AutomationElementMode { System::Windows::Automation::AutomationElementMode get(); void set(System::Windows::Automation::AutomationElementMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutomationElementMode : System.Windows.Automation.AutomationElementMode with get, set" Usage="System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cf8b-150">返される要素に、基になる[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] への完全参照を含めるか、またはキャッシュされた情報だけを含めるかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-150">Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], or only cached information.</span></span></summary>
        <value><span data-ttu-id="0cf8b-151">返される要素に基になる[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] への完全参照を含める場合は、<see cref="F:System.Windows.Automation.AutomationElementMode.Full" />。それ以外の場合は <see cref="F:System.Windows.Automation.AutomationElementMode.None" />。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-151"><see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> if the returned elements have a full reference to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]; otherwise <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-152"><xref:System.Windows.Automation.AutomationElementMode.Full> が既定値であり、返される要素に、基になる [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]への完全な参照が含まれていることを指定します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-152"><xref:System.Windows.Automation.AutomationElementMode.Full> is the default value, and specifies that returned elements contain a full reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="0cf8b-153"><xref:System.Windows.Automation.AutomationElementMode.None> は、返される要素に、基になる [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]への参照がなく、キャッシュされた情報のみを含むことを指定します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-153"><xref:System.Windows.Automation.AutomationElementMode.None> specifies that the returned elements have no reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], and contain only cached information.</span></span>  
  
 <span data-ttu-id="0cf8b-154"><xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>、<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>、<xref:System.Windows.Automation.AutomationElement.SetFocus%2A>などの要素に対する特定の操作には、完全な参照が必要です。none を持つ要素でこれらを実行しようとすると、<xref:System.InvalidOperationException>になります。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-154">Certain operations on elements, including <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, and <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, require a full reference; attempting to perform these on an element that has none results in an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="0cf8b-155"><xref:System.Windows.Automation.AutomationElementMode.None> を使用すると、完全な参照の設定に伴うオーバーヘッドが回避されるため、プロパティだけが必要な場合に効率が向上します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-155">Using <xref:System.Windows.Automation.AutomationElementMode.None> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-156">次の例では、<xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> が <xref:System.Windows.Automation.AutomationElementMode.None>に設定されています。結果として、取得したオブジェクトに対してキャッシュされたプロパティとパターンのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-156">In the following example, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> is set to <xref:System.Windows.Automation.AutomationElementMode.None>, with the result that only cached properties and patterns are available for the retrieved object.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-157">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-157">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-158">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-158">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.CacheRequest Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.CacheRequest Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::CacheRequest ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Automation.CacheRequest" Usage="cacheRequest.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cf8b-159">この <see cref="T:System.Windows.Automation.CacheRequest" /> のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-159">Creates a copy of this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <returns><span data-ttu-id="0cf8b-160">現在のオブジェクトの変更可能なコピー。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-160">A modifiable copy of the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.CacheRequest Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.CacheRequest Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::CacheRequest ^ Current { System::Windows::Automation::CacheRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.CacheRequest" Usage="System.Windows.Automation.CacheRequest.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cf8b-161">現在のスレッドでアクティブな <see cref="T:System.Windows.Automation.CacheRequest" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-161">Gets the <see cref="T:System.Windows.Automation.CacheRequest" /> that is active on the current thread.</span></span></summary>
        <value><span data-ttu-id="0cf8b-162">アクティブな <see cref="T:System.Windows.Automation.CacheRequest" />。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-162">The active <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; unit" Usage="cacheRequest.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cf8b-163">現在のスレッドの内部スタックから、アクティブな <see cref="T:System.Windows.Automation.CacheRequest" /> を削除します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-163">Removes the active <see cref="T:System.Windows.Automation.CacheRequest" /> from the internal stack for the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-164"><xref:System.Windows.Automation.CacheRequest.Pop%2A> メソッドを使用して、現在アクティブな要求だけを削除できます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-164">Only the currently active request can be removed using the <xref:System.Windows.Automation.CacheRequest.Pop%2A> method.</span></span> <span data-ttu-id="0cf8b-165">現在のものではない要求を削除しようとすると、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-165">Attempting to remove a request that is not the current one results in an exception.</span></span>  
  
 <span data-ttu-id="0cf8b-166">キャッシュ要求を入れ子にしない限り、<xref:System.Windows.Automation.CacheRequest.Activate%2A> を使用して、スタックに要求を配置することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-166">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="0cf8b-167">理由は、例外が発生した場合でも、<xref:System.Windows.Automation.CacheRequest.Activate%2A> を `using` ブロック (Visual Basic で`Using`) 内で使用できることです。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-167">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-168">次の例では、<xref:System.Windows.Automation.CacheRequest.Pop%2A>を使用して <xref:System.Windows.Automation.CacheRequest> を非アクティブ化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-168">The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0cf8b-169">スタックに最後にプッシュされたものではないキャッシュ要求を削除しようとしました。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-169">An attempt was made to remove a cache request that was not the last one pushed onto the stack.</span></span></exception>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-170">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-170">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-171">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-171">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Push" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push();" />
      <MemberSignature Language="F#" Value="member this.Push : unit -&gt; unit" Usage="cacheRequest.Push " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cf8b-172"><see cref="T:System.Windows.Automation.CacheRequest" /> を内部状態スタックに配置して、現在のスレッドのアクティブな要求にします。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-172">Places the <see cref="T:System.Windows.Automation.CacheRequest" /> on the internal state stack, making it the active request on the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-173">複数の <xref:System.Windows.Automation.CacheRequest> オブジェクトを状態スタックに配置できます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-173">Multiple <xref:System.Windows.Automation.CacheRequest> objects can be placed onto the state stack.</span></span> <span data-ttu-id="0cf8b-174">キャッシュ要求は、プッシュされた順序でスタックから削除する必要があります。それ以外の場合は、<xref:System.InvalidOperationException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-174">Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <xref:System.InvalidOperationException> exception is raised.</span></span>  
  
 <span data-ttu-id="0cf8b-175">キャッシュ要求を入れ子にしない限り、<xref:System.Windows.Automation.CacheRequest.Activate%2A> を使用して、スタックに要求を配置することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-175">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="0cf8b-176">理由は、例外が発生した場合でも、<xref:System.Windows.Automation.CacheRequest.Activate%2A> を `using` ブロック (Visual Basic で`Using`) 内で使用できることです。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-176">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-177">次の例では、<xref:System.Windows.Automation.CacheRequest.Push%2A>を使用して <xref:System.Windows.Automation.CacheRequest> をアクティブ化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-177">The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-178">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-178">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-179">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-179">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TreeFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition TreeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition TreeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeFilter As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ TreeFilter { System::Windows::Automation::Condition ^ get(); void set(System::Windows::Automation::Condition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreeFilter : System.Windows.Automation.Condition with get, set" Usage="System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cf8b-180">キャッシュ時に使用する、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素ツリーのビューを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-180">Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching.</span></span></summary>
        <value><span data-ttu-id="0cf8b-181">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素ツリーのビュー。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-181">The view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span></span> <span data-ttu-id="0cf8b-182">既定のビューは、<see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /> です。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-182">The default view is <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-183">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素ツリーのビューの詳細については、「 [UI オートメーションツリーの概要](/dotnet/framework/ui-automation/ui-automation-tree-overview)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-183">For additional information on views of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree, see [UI Automation Tree Overview](/dotnet/framework/ui-automation/ui-automation-tree-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-184">次の例では、<xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> が <xref:System.Windows.Automation.Automation.RawViewCondition> に設定されているので、コンテンツビューまたはコントロールビューの一部であるかどうかに関係なく、すべての要素に対してキャッシュが実行されます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-184">In the following example, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-185">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-185">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-186">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-186">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TreeScope">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TreeScope TreeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TreeScope TreeScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeScope As TreeScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TreeScope TreeScope { System::Windows::Automation::TreeScope get(); void set(System::Windows::Automation::TreeScope value); };" />
      <MemberSignature Language="F#" Value="member this.TreeScope : System.Windows.Automation.TreeScope with get, set" Usage="System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cf8b-187">キャッシュをサブツリーのルートに対してだけ実行するか、または子または子孫に対しても実行するかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-187">Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</span></span></summary>
        <value><span data-ttu-id="0cf8b-188"><see cref="F:System.Windows.Automation.TreeScope.Element" />、<see cref="F:System.Windows.Automation.TreeScope.Children" />、<see cref="F:System.Windows.Automation.TreeScope.Descendants" />、または <see cref="F:System.Windows.Automation.TreeScope.Subtree" /> のうちの 1 つ以上。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-188">One or more of <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" />, or <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span></span> <span data-ttu-id="0cf8b-189">既定値は <see cref="F:System.Windows.Automation.TreeScope.Element" /> です。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-189">The default value is <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cf8b-190">キャッシュのスコープは、<xref:System.Windows.Automation.AutomationElement.FindFirst%2A> または <xref:System.Windows.Automation.AutomationElement.FindAll%2A> が呼び出されるオブジェクトとは関係なく、フェッチされるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-190">The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> or <xref:System.Windows.Automation.AutomationElement.FindAll%2A> is called.</span></span> <span data-ttu-id="0cf8b-191">例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-191">See the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cf8b-192">次の例では、<xref:System.Windows.Automation.CacheRequest> がアクティブで <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> が <xref:System.Windows.Automation.TreeScope.Children>場合に、親ウィンドウ要素からリストボックス要素が取得されます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-192">In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope.Children>.</span></span> <span data-ttu-id="0cf8b-193">子要素 (つまりリスト項目) の指定されたプロパティはキャッシュに格納され、リストボックスの <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> から取得できます。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-193">The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.</span></span>  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0cf8b-194">プロパティを <see cref="F:System.Windows.Automation.TreeScope.Parent" /> または <see cref="F:System.Windows.Automation.TreeScope.Ancestors" /> に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="0cf8b-194">An attempt was made to set the property to <see cref="F:System.Windows.Automation.TreeScope.Parent" /> or <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="0cf8b-195">UI オートメーション クライアントにおけるキャッシュ</span><span class="sxs-lookup"><span data-stu-id="0cf8b-195">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="0cf8b-196">UI オートメーションにおけるキャッシュの使用</span><span class="sxs-lookup"><span data-stu-id="0cf8b-196">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
