<Type Name="AutomationElementCollection" FullName="System.Windows.Automation.AutomationElementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6abacd684d9f9652cf9f5a2ba62caa2b6a43f8f" /><Meta Name="ms.sourcegitcommit" Value="83d757eaee63e682417f41094d711281691d9aba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/10/2020" /><Meta Name="ms.locfileid" Value="78956136" /></Metadata><TypeSignature Language="C#" Value="public class AutomationElementCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutomationElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationElementCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationElementCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type AutomationElementCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="248ec-101"><see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="248ec-101">Represents a collection of <see cref="T:System.Windows.Automation.AutomationElement" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="248ec-102"><xref:System.Windows.Automation.AutomationElementCollection> は、<xref:System.Windows.Automation.AutomationElement.FindAll%2A>などのメソッドの戻り値の型として使用されます。</span><span class="sxs-lookup"><span data-stu-id="248ec-102"><xref:System.Windows.Automation.AutomationElementCollection> is used as the return type for methods such as <xref:System.Windows.Automation.AutomationElement.FindAll%2A>.</span></span> <span data-ttu-id="248ec-103">アプリケーション定義のコレクションに使用するためのものではなく、<xref:System.Collections.ArrayList>などのより汎用的なクラスを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="248ec-103">It is not intended to be used for application-defined collections, for which you should use a more generic class such as <xref:System.Collections.ArrayList>.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/ui-automation/obtaining-ui-automation-elements.md"><span data-ttu-id="248ec-104">UI オートメーション要素の取得</span><span class="sxs-lookup"><span data-stu-id="248ec-104">Obtaining UI Automation Elements</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="248ec-105">コレクションの要素を配列にコピーします。コピー操作は、コピー先の配列の指定したインデックスから開始されます。</span><span class="sxs-lookup"><span data-stu-id="248ec-105">Copies the collection's elements to an array, starting at the specified index in the target array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="automationElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="248ec-106">コレクションからコピーされる要素のコピー先です。</span><span class="sxs-lookup"><span data-stu-id="248ec-106">The destination of the elements copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="248ec-107">コピーの開始位置となる、コピー先配列内の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="248ec-107">The zero-based index in the target array where copying should begin.</span></span></param>
        <summary><span data-ttu-id="248ec-108">コレクションの要素を配列にコピーします。コピー操作は、コピー先の配列の指定したインデックスから開始されます。</span><span class="sxs-lookup"><span data-stu-id="248ec-108">Copies the collection's elements to an array, starting at the specified index in the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="248ec-109">次の例は、<xref:System.Windows.Automation.AutomationElementCollection> をオブジェクトの配列にコピーする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="248ec-109">The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of objects.</span></span>  
  
 [!code-csharp[UIAClient_snip#118](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#118)]
 [!code-vb[UIAClient_snip#118](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Automation.AutomationElement[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Automation.AutomationElement[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As AutomationElement(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Automation::AutomationElement ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Windows.Automation.AutomationElement[] * int -&gt; unit" Usage="automationElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Automation.AutomationElement[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="248ec-110">コレクションからコピーされる要素のコピー先です。</span><span class="sxs-lookup"><span data-stu-id="248ec-110">The destination of the elements copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="248ec-111">コピーの開始位置となる、コピー先配列内の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="248ec-111">The zero-based index in the target array where copying should begin.</span></span></param>
        <summary><span data-ttu-id="248ec-112">このコレクションの要素を特殊な配列インスタンスにコピーします。コピー操作は、コピー先の配列の指定したインデックスから開始されます。</span><span class="sxs-lookup"><span data-stu-id="248ec-112">Copies the collection's elements to a specialized array instance, starting at the specified index in the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="248ec-113">次の例は、<xref:System.Windows.Automation.AutomationElement> オブジェクトの配列に <xref:System.Windows.Automation.AutomationElementCollection> をコピーする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="248ec-113">The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of <xref:System.Windows.Automation.AutomationElement> objects.</span></span>  
  
 [!code-csharp[UIAClient_snip#117](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#117)]
 [!code-vb[UIAClient_snip#117](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#117)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="248ec-114">コピー先の配列のサイズが十分に大きくないか、<paramref name="index" /> が配列の境界の外側にあります。</span><span class="sxs-lookup"><span data-stu-id="248ec-114">The destination array is not large enough, or <paramref name="index" /> is outside the bounds of the array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Automation.AutomationElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="248ec-115">このコレクション内の要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="248ec-115">Gets the number of elements in this collection.</span></span></summary>
        <value><span data-ttu-id="248ec-116">要素の数。</span><span class="sxs-lookup"><span data-stu-id="248ec-116">The number of elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="248ec-117">次の例は、使用されている <xref:System.Windows.Automation.AutomationElementCollection.Count%2A> プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="248ec-117">The following example shows the <xref:System.Windows.Automation.AutomationElementCollection.Count%2A> property being used.</span></span>  
  
 [!code-csharp[UIAClient_snip#117](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#117)]
 [!code-vb[UIAClient_snip#117](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="automationElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="248ec-118">コレクション内の項目を反復処理するために使用できる列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="248ec-118">Returns an enumerator that can be used to iterate through the items in the collection.</span></span></summary>
        <returns><span data-ttu-id="248ec-119"><see cref="T:System.Windows.Automation.AutomationElementCollection" /> を反復処理するために使用できる列挙子。</span><span class="sxs-lookup"><span data-stu-id="248ec-119">An enumerator that can be used to iterate through the <see cref="T:System.Windows.Automation.AutomationElementCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElementCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Automation.AutomationElementCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="248ec-120"><see cref="T:System.Windows.Automation.AutomationElementCollection" /> オブジェクトが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="248ec-120">Gets a value indicating whether the <see cref="T:System.Windows.Automation.AutomationElementCollection" /> object is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="248ec-121">常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="248ec-121">Always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="248ec-122"><xref:System.Windows.Automation.AutomationElementCollection> はスレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="248ec-122">An <xref:System.Windows.Automation.AutomationElementCollection> is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElementCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ default[int] { System::Windows::Automation::AutomationElement ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElementCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="248ec-123">コレクション内の要素の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="248ec-123">The zero-based index of the element in the collection.</span></span></param>
        <summary><span data-ttu-id="248ec-124">指定したインデックスにある <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="248ec-124">Gets the <see cref="T:System.Windows.Automation.AutomationElement" /> at the specified index.</span></span></summary>
        <value><span data-ttu-id="248ec-125">指定したインデックスにある <see cref="T:System.Windows.Automation.AutomationElement" /> です。</span><span class="sxs-lookup"><span data-stu-id="248ec-125">The <see cref="T:System.Windows.Automation.AutomationElement" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="248ec-126">次の例では、最初の要素が <xref:System.Windows.Automation.AutomationElementCollection>から取得されます。</span><span class="sxs-lookup"><span data-stu-id="248ec-126">In the following example, the first element is retrieved from an <xref:System.Windows.Automation.AutomationElementCollection>.</span></span>  
  
 [!code-csharp[UIAClient_snip#182](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#182)]
 [!code-vb[UIAClient_snip#182](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#182)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="248ec-127">負の整数が <paramref name="index" /> に対して指定されたか、<paramref name="index" /> が <see cref="P:System.Windows.Automation.AutomationElementCollection.Count" /> 以上です。</span><span class="sxs-lookup"><span data-stu-id="248ec-127">A negative integer was specified for <paramref name="index" />, or <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Automation.AutomationElementCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElementCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Automation.AutomationElementCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="248ec-128"><see cref="T:System.Windows.Automation.AutomationElementCollection" /> コレクションへのアクセスの同期に使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="248ec-128">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Automation.AutomationElementCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="248ec-129">コレクションへのアクセスの同期に使用できるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="248ec-129">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
