<Type Name="DataTable" FullName="System.Data.DataTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a8afe5d5f1f78596dc4b52752032ca75e9c5fda" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73341904" /></Metadata><TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.Runtime.Serialization.ISerializable, class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTable" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitializeNotification, IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitializeNotification, System::Runtime::Serialization::ISerializable, System::Xml::Serialization::IXmlSerializable" />
  <TypeSignature Language="F#" Value="type DataTable = class&#xA;    inherit MarshalByValueComponent&#xA;    interface IListSource&#xA;    interface ISupportInitializeNotification&#xA;    interface ISerializable&#xA;    interface IXmlSerializable&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultEvent("RowChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultProperty("TableName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetDataTableSchema")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b5f3c-101">メモリ内データの 1 つのテーブルを表します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-101">Represents one table of in-memory data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-102"><xref:System.Data.DataTable> は、ADO.NET ライブラリの中央のオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-102">The <xref:System.Data.DataTable> is a central object in the ADO.NET library.</span></span> <span data-ttu-id="b5f3c-103"><xref:System.Data.DataTable> を使用するその他のオブジェクトには、<xref:System.Data.DataSet> と <xref:System.Data.DataView>があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-103">Other objects that use the <xref:System.Data.DataTable> include the <xref:System.Data.DataSet> and the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="b5f3c-104"><xref:System.Data.DataTable> オブジェクトにアクセスするときは、条件付きで大文字と小文字を区別することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-104">When accessing <xref:System.Data.DataTable> objects, note that they are conditionally case sensitive.</span></span> <span data-ttu-id="b5f3c-105">たとえば、1つの <xref:System.Data.DataTable> に "mydatatable" という名前が付けられ、別の名前が "Mydatatable" の場合、いずれかのテーブルの検索に使用される文字列は、大文字と小文字が区別されると見なされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-105">For example, if one <xref:System.Data.DataTable> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</span></span> <span data-ttu-id="b5f3c-106">ただし、"mydatatable" が存在し、"Mydatatable" が存在しない場合、検索文字列は大文字と小文字が区別されないと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-106">However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</span></span> <span data-ttu-id="b5f3c-107"><xref:System.Data.DataSet> には、<xref:System.Data.DataTable.TableName%2A> プロパティ値が同じで <xref:System.Data.DataTable.Namespace%2A> プロパティ値が異なる2つの <xref:System.Data.DataTable> オブジェクトを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-107">A <xref:System.Data.DataSet> can contain two <xref:System.Data.DataTable> objects that have the same <xref:System.Data.DataTable.TableName%2A> property value but different <xref:System.Data.DataTable.Namespace%2A> property values.</span></span> <span data-ttu-id="b5f3c-108"><xref:System.Data.DataTable> オブジェクトの操作の詳細については、「 [DataTable の作成](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-108">For more information about working with <xref:System.Data.DataTable> objects, see [Creating a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span></span>  
  
 <span data-ttu-id="b5f3c-109">プログラムによって <xref:System.Data.DataTable> を作成する場合は、まず、<xref:System.Data.DataColumn> オブジェクトを <xref:System.Data.DataColumnCollection> に追加して (<xref:System.Data.DataTable.Columns%2A> プロパティを通じてアクセス)、そのスキーマを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-109">If you are creating a <xref:System.Data.DataTable> programmatically, you must first define its schema by adding <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection> (accessed through the <xref:System.Data.DataTable.Columns%2A> property).</span></span> <span data-ttu-id="b5f3c-110"><xref:System.Data.DataColumn> オブジェクトの追加の詳細については、「 [DataTable への列の追加](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-110">For more information about adding <xref:System.Data.DataColumn> objects, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="b5f3c-111"><xref:System.Data.DataTable>に行を追加するには、最初に <xref:System.Data.DataTable.NewRow%2A> メソッドを使用して新しい <xref:System.Data.DataRow> オブジェクトを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-111">To add rows to a <xref:System.Data.DataTable>, you must first use the <xref:System.Data.DataTable.NewRow%2A> method to return a new <xref:System.Data.DataRow> object.</span></span> <span data-ttu-id="b5f3c-112"><xref:System.Data.DataTable.NewRow%2A> メソッドは、テーブルの <xref:System.Data.DataColumnCollection>によって定義されているため、<xref:System.Data.DataTable>のスキーマを含む行を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-112">The <xref:System.Data.DataTable.NewRow%2A> method returns a row with the schema of the <xref:System.Data.DataTable>, as it is defined by the table's <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="b5f3c-113"><xref:System.Data.DataTable> が格納できる行の最大数は16777216です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-113">The maximum number of rows that a <xref:System.Data.DataTable> can store is 16,777,216.</span></span> <span data-ttu-id="b5f3c-114">詳細については、「 [DataTable へのデータの追加](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-114">For more information, see [Adding Data to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="b5f3c-115"><xref:System.Data.DataTable> には、データの整合性を確保するために使用できる <xref:System.Data.Constraint> オブジェクトのコレクションも含まれています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-115">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.Constraint> objects that can be used to ensure the integrity of the data.</span></span> <span data-ttu-id="b5f3c-116">詳細については、「 [DataTable の制約](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-116">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="b5f3c-117">テーブルに変更が加えられたかどうかを判断するために使用できる <xref:System.Data.DataTable> イベントは多数あります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-117">There are many <xref:System.Data.DataTable> events that can be used to determine when changes are made to a table.</span></span> <span data-ttu-id="b5f3c-118">これには、<xref:System.Data.DataTable.RowChanged>、<xref:System.Data.DataTable.RowChanging>、<xref:System.Data.DataTable.RowDeleting>、および <xref:System.Data.DataTable.RowDeleted> が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-118">These include <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting>, and <xref:System.Data.DataTable.RowDeleted>.</span></span> <span data-ttu-id="b5f3c-119"><xref:System.Data.DataTable>で使用できるイベントの詳細については、「 [DataTable イベントの処理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-119">For more information about the events that can be used with a <xref:System.Data.DataTable>, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
 <span data-ttu-id="b5f3c-120"><xref:System.Data.DataTable> のインスタンスが作成されると、読み取り/書き込みプロパティの一部が初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-120">When an instance of <xref:System.Data.DataTable> is created, some of the read/write properties are set to initial values.</span></span> <span data-ttu-id="b5f3c-121">これらの値の一覧については、<xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> コンストラクターに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-121">For a list of these values, see the <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> constructor topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-122"><xref:System.Data.DataSet> オブジェクトと <xref:System.Data.DataTable> オブジェクトは <xref:System.ComponentModel.MarshalByValueComponent>から継承され、.NET Framework リモート処理のための <xref:System.Runtime.Serialization.ISerializable> インターフェイスをサポートします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-122">The <xref:System.Data.DataSet> and <xref:System.Data.DataTable> objects inherit from <xref:System.ComponentModel.MarshalByValueComponent>, and support the <xref:System.Runtime.Serialization.ISerializable> interface for .NET Framework remoting.</span></span> <span data-ttu-id="b5f3c-123">これらのオブジェクトは、.NET Framework リモート処理に使用できる唯一の ADO.NET オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-123">These are the only ADO.NET objects that you can use for .NET Framework remoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-124">次の例では、2つの <xref:System.Data.DataTable> オブジェクトと1つの <xref:System.Data.DataRelation> オブジェクトを作成し、新しいオブジェクトを <xref:System.Data.DataSet>に追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-124">The following example creates two <xref:System.Data.DataTable> objects and one <xref:System.Data.DataRelation> object, and adds the new objects to a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="b5f3c-125">次に、テーブルが <xref:System.Windows.Forms.DataGridView> コントロールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-125">The tables are then displayed in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b5f3c-126">このサンプルでは、特定のスキーマ定義を使用して手動で DataTable を作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-126">This sample demonstrates how to create a DataTable manually with specific schema definitions:</span></span>  
  
-   <span data-ttu-id="b5f3c-127">複数の Datatable を作成し、初期列を定義します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-127">Create multiple DataTables and define the initial columns.</span></span>  
  
-   <span data-ttu-id="b5f3c-128">テーブルの制約を作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-128">Create the table constraints.</span></span>  
  
-   <span data-ttu-id="b5f3c-129">値を挿入し、テーブルを表示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-129">Insert the values and display the tables.</span></span>  
  
-   <span data-ttu-id="b5f3c-130">式列を作成し、テーブルを表示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-130">Create the expression columns and display the tables.</span></span>  
  
 <span data-ttu-id="b5f3c-131">C#このコードサンプルを含むプロジェクト Visual Basic は、[開発者コードサンプル](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-131">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/classic webdata datatable example2/cs/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/classic webdata datatable example2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b5f3c-132">この型は、マルチスレッドの読み取り操作に対して安全です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-132">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="b5f3c-133">書き込み操作はすべて同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-133">You must synchronize any write operations.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-134">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-134">Creating and Using DataTables</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-135"><see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-135">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-136">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-136">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-137">引数を指定せずに、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-137">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-138">コンストラクターは、<xref:System.Data.DataTable> オブジェクトのすべてのプロパティの初期値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-138">The constructor sets initial values for all properties of the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="b5f3c-139">次の表に、プロパティとその既定値を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-139">The following table shows the properties and their default values.</span></span> <span data-ttu-id="b5f3c-140"><xref:System.Data.DataTable> のインスタンスが作成されると、次の読み取り/書き込みプロパティが初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-140">When an instance of <xref:System.Data.DataTable> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="b5f3c-141">プロパティ</span><span class="sxs-lookup"><span data-stu-id="b5f3c-141">Property</span></span>|<span data-ttu-id="b5f3c-142">既定値</span><span class="sxs-lookup"><span data-stu-id="b5f3c-142">Default value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="b5f3c-143">**CaseSensitive**</span><span class="sxs-lookup"><span data-stu-id="b5f3c-143">**CaseSensitive**</span></span>|<span data-ttu-id="b5f3c-144">親 <xref:System.Data.DataSet>と同じです (1 つに属している場合)。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-144">Same as the parent <xref:System.Data.DataSet>, if it belongs to one.</span></span> <span data-ttu-id="b5f3c-145">それ以外の場合は `false`。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-145">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="b5f3c-146">**DisplayExpression**</span><span class="sxs-lookup"><span data-stu-id="b5f3c-146">**DisplayExpression**</span></span>|<span data-ttu-id="b5f3c-147">空の文字列 ("")</span><span class="sxs-lookup"><span data-stu-id="b5f3c-147">Empty string ("")</span></span>|  
|<span data-ttu-id="b5f3c-148">**ロケール**</span><span class="sxs-lookup"><span data-stu-id="b5f3c-148">**Locale**</span></span>|<span data-ttu-id="b5f3c-149">親 <xref:System.Data.DataSet> オブジェクトの <xref:System.Globalization.CultureInfo> と同じです (<xref:System.Data.DataSet.Locale%2A> プロパティによって返されます)。親が存在しない場合、既定値は現在のシステム <xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-149">Same as the parent <xref:System.Data.DataSet> object's <xref:System.Globalization.CultureInfo> (returned by the <xref:System.Data.DataSet.Locale%2A> property); if no parent exists, the default is the current system <xref:System.Globalization.CultureInfo>.</span></span>|  
|<span data-ttu-id="b5f3c-150">**MinimumCapacity**</span><span class="sxs-lookup"><span data-stu-id="b5f3c-150">**MinimumCapacity**</span></span>|<span data-ttu-id="b5f3c-151">50行。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-151">50 rows.</span></span>|  
  
 <span data-ttu-id="b5f3c-152">プロパティの別の呼び出しを使用して、これらのプロパティの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-152">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-153">次の例では、<xref:System.Data.DataColumn> と <xref:System.Data.DataRow>を使用して新しい <xref:System.Data.DataTable> を作成し、<xref:System.Windows.Forms.DataGridView> コントロールに表示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-153">The following example creates a new <xref:System.Data.DataTable> with <xref:System.Data.DataColumn> and <xref:System.Data.DataRow>, and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-154">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-154">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable tableName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="b5f3c-155">テーブルに付ける名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-155">The name to give the table.</span></span> <span data-ttu-id="b5f3c-156"><paramref name="tableName" /> が <see langword="null" /> または空の文字列の場合は、<see cref="T:System.Data.DataTableCollection" /> に追加したときに既定の名前が付けられます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-156">If <paramref name="tableName" /> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span></span></param>
        <summary><span data-ttu-id="b5f3c-157">指定したテーブル名を使用して <see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-157">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5f3c-158">次の例では、<xref:System.Data.DataTable> を作成し、<xref:System.Windows.Forms.DataGridView> コントロールに表示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-158">The following example creates a <xref:System.Data.DataTable> and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-159">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-159">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataTable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataTable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="b5f3c-160">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-160">The data needed to serialize or deserialize an object.</span></span></param>
        <param name="context"><span data-ttu-id="b5f3c-161">指定したシリアル化ストリームの転送元と転送先。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-161">The source and destination of a given serialized stream.</span></span></param>
        <summary><span data-ttu-id="b5f3c-162"><see cref="T:System.Data.DataTable" /> と <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を使用して、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-162">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-163"><xref:System.Runtime.Serialization.ISerializable>には、この <xref:System.Data.DataTable> コンストラクターの実装が必要です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-163">This implementation of the <xref:System.Data.DataTable> constructor is required for <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-164">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-164">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String, tableNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string * string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (tableName, tableNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="tableNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="b5f3c-165">テーブルに付ける名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-165">The name to give the table.</span></span> <span data-ttu-id="b5f3c-166"><paramref name="tableName" /> が <see langword="null" /> または空の文字列の場合は、<see cref="T:System.Data.DataTableCollection" /> に追加したときに既定の名前が付けられます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-166">If <paramref name="tableName" /> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span></span></param>
        <param name="tableNamespace"><span data-ttu-id="b5f3c-167"><see langword="DataTable" /> に格納されているデータの XML 表現の名前空間。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-167">The namespace for the XML representation of the data stored in the <see langword="DataTable" />.</span></span></param>
        <summary><span data-ttu-id="b5f3c-168">指定したテーブル名と名前空間を使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-168">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class using the specified table name and namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-169">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-169">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataTable.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-170">前回 <see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのテーブルに対して行われたすべての変更をコミットします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-170">Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-171"><xref:System.Data.DataTable.AcceptChanges%2A> が呼び出されると、編集モードのすべての <xref:System.Data.DataRow> オブジェクトは正常に編集を終了します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-171">When <xref:System.Data.DataTable.AcceptChanges%2A> is called, any <xref:System.Data.DataRow> object still in edit mode successfully ends its edits.</span></span> <span data-ttu-id="b5f3c-172"><xref:System.Data.DataRowState> も変更されます。すべての `Added` と `Modified` の行が `Unchanged`になり、`Deleted` 行が削除されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-172">The <xref:System.Data.DataRowState> also changes: all `Added` and `Modified` rows become `Unchanged`, and `Deleted` rows are removed.</span></span>  
  
 <span data-ttu-id="b5f3c-173"><xref:System.Data.DataTable.AcceptChanges%2A> メソッドは、通常、<xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> メソッドを使用して <xref:System.Data.DataSet> を更新しようとした後に <xref:System.Data.DataTable> で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-173">The <xref:System.Data.DataTable.AcceptChanges%2A> method is generally called on a <xref:System.Data.DataTable> after you attempt to update the <xref:System.Data.DataSet> using the <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-174">次の例では、各テーブルでエラーがないかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-174">The following example tests each table for errors.</span></span> <span data-ttu-id="b5f3c-175">テーブルのエラーを (未定義の関数に渡すことによって) 調整できる場合は、<xref:System.Data.DataTable.AcceptChanges%2A> が呼び出されます。それ以外の場合は、<xref:System.Data.DataTable.RejectChanges%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-175">If the table's errors can be reconciled (by passing it to an undefined function), <xref:System.Data.DataTable.AcceptChanges%2A> is called; otherwise, <xref:System.Data.DataTable.RejectChanges%2A> is called.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-176">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-176">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="dataTable.BeginInit " />
      <MemberSignature Language="C#" Value="public void BeginInit ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-177">フォームまたは別のコンポーネントで使用する <see cref="T:System.Data.DataTable" /> の初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-177">Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span></span> <span data-ttu-id="b5f3c-178">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-178">The initialization occurs at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-179">Visual Studio .NET デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-179">The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="b5f3c-180"><xref:System.Data.DataTable.EndInit%2A> メソッドは、初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-180">The <xref:System.Data.DataTable.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="b5f3c-181"><xref:System.Data.DataTable.BeginInit%2A> メソッドと <xref:System.Data.DataTable.EndInit%2A> メソッドを使用すると、完全に初期化される前にコントロールが使用されなくなります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-181">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-182">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-182">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadData">
      <MemberSignature Language="C#" Value="public void BeginLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoadData();" />
      <MemberSignature Language="F#" Value="member this.BeginLoadData : unit -&gt; unit" Usage="dataTable.BeginLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-183">データを読み込む間、通知、インデックスの維持、および制約をオフにします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-183">Turns off notifications, index maintenance, and constraints while loading data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-184"><xref:System.Data.DataTable.BeginLoadData%2A> は、<xref:System.Data.DataTable.LoadDataRow%2A> と <xref:System.Data.DataTable.EndLoadData%2A>と組み合わせて使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-184">Use <xref:System.Data.DataTable.BeginLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-185">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-185">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CaseSensitive : bool with get, set" Usage="System.Data.DataTable.CaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableCaseSensitiveDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-186">テーブル内の文字列比較で大文字と小文字を区別するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-186">Indicates whether string comparisons within the table are case-sensitive.</span></span></summary>
        <value><span data-ttu-id="b5f3c-187">比較で大文字と小文字を区別する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-187"><see langword="true" /> if the comparison is case-sensitive; otherwise <see langword="false" />.</span></span> <span data-ttu-id="b5f3c-188">既定値は親 <see cref="T:System.Data.DataSet" /> オブジェクトの <see cref="P:System.Data.DataSet.CaseSensitive" /> プロパティに設定します。<see cref="T:System.Data.DataTable" /> とは独立して <see cref="T:System.Data.DataSet" /> を作成した場合は <see langword="false" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-188">The default is set to the parent <see cref="T:System.Data.DataSet" /> object's <see cref="P:System.Data.DataSet.CaseSensitive" /> property, or <see langword="false" /> if the <see cref="T:System.Data.DataTable" /> was created independently of a <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-189"><xref:System.Data.DataTable.CaseSensitive%2A> プロパティは、並べ替え、検索、およびフィルター処理での文字列比較に影響します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-189">The <xref:System.Data.DataTable.CaseSensitive%2A> property affects string comparisons in sorting, searching, and filtering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-190">次の例では、<xref:System.Data.DataTable>で <xref:System.Data.DataTable.Select%2A> メソッドを2回呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-190">The following example calls the <xref:System.Data.DataTable.Select%2A> method twice on a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-191">最初に、<xref:System.Data.DataTable.CaseSensitive%2A> プロパティは `false`に設定されます。2番目は `true`になります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-191">The first time, the <xref:System.Data.DataTable.CaseSensitive%2A> property is set to `false`, the second, to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-192">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-192">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChildRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ChildRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ChildRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ChildRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ChildRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ChildRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableChildRelationsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-193">この <see cref="T:System.Data.DataTable" /> の子リレーションシップのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-193">Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="b5f3c-194">テーブルの子リレーションを格納している <see cref="T:System.Data.DataRelationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-194">A <see cref="T:System.Data.DataRelationCollection" /> that contains the child relations for the table.</span></span> <span data-ttu-id="b5f3c-195"><see cref="T:System.Data.DataRelation" /> オブジェクトが存在しない場合、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-195">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-196"><xref:System.Data.DataRelation> は、2つのテーブル間のリレーションシップを定義します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-196">A <xref:System.Data.DataRelation> defines the relationship between two tables.</span></span> <span data-ttu-id="b5f3c-197">通常、2つのテーブルは、同じデータを含む1つのフィールドを介してリンクされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-197">Typically, two tables are linked through a single field that contains the same data.</span></span> <span data-ttu-id="b5f3c-198">たとえば、住所データを含むテーブルには、国/地域を表すコードを含む1つのフィールドが含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-198">For example, a table which contains address data may have a single field containing codes that represent countries/regions.</span></span> <span data-ttu-id="b5f3c-199">国/地域データを含む2番目のテーブルには、国/地域を識別するコードを含む1つのフィールドがあります。このコードは、最初のテーブルの対応するフィールドに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-199">A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</span></span> <span data-ttu-id="b5f3c-200"><xref:System.Data.DataRelation>には、少なくとも4つの情報が含まれています。 (1) 最初のテーブルの名前、(2) 最初のテーブルの列名、(3) 2 番目のテーブルの名前、(4) 2 番目のテーブルの列名。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-200">A <xref:System.Data.DataRelation>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-201">次の例では、<xref:System.Data.DataTable.ChildRelations%2A> プロパティを使用して、<xref:System.Data.DataTable>内の各子 <xref:System.Data.DataRelation> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-201">The following example uses the <xref:System.Data.DataTable.ChildRelations%2A> property to return each child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-202">各リレーションシップは、行の配列を返すために、<xref:System.Data.DataRow> の <xref:System.Data.DataRow.GetChildRows%2A> メソッドの引数として使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-202">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="b5f3c-203">行の各列の値が出力されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-203">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ParentRelations" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-204">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-204">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-205"><see cref="T:System.Data.DataTable" /> からすべてのデータを消去します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-205">Clears the <see cref="T:System.Data.DataTable" /> of all data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-206">すべてのテーブルのすべての行が削除されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-206">All rows in all tables are removed.</span></span> <span data-ttu-id="b5f3c-207">子行が孤立する原因となる、子リレーションシップが適用されている場合は、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-207">An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</span></span>  
  
 <span data-ttu-id="b5f3c-208"><xref:System.Data.DataSet> が <xref:System.Xml.XmlDataDocument>にバインドされている場合、<xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> または <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> を呼び出すと、<xref:System.NotSupportedException>が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-208">If the <xref:System.Data.DataSet> is bound to an <xref:System.Xml.XmlDataDocument>, calling <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> or <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> raises the <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="b5f3c-209">このような状況を回避するには、各テーブルを走査し、各行を一度に1行ずつ削除します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-209">To avoid this situation, traverse each table, removing each row one at a time.</span></span> <span data-ttu-id="b5f3c-210"><xref:System.Data.DataTable.NewRow%2A> を使用して新しい行を作成する場合は、<xref:System.Data.DataTable.Clear%2A>を呼び出す前に行を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-210">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be processed before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-211">次の例では、すべてのデータのテーブルをクリアします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-211">The following example clears the table of all data.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-212">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-212">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-213">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-213">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Data.DataTable&#xA;override this.Clone : unit -&gt; System.Data.DataTable" Usage="dataTable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-214">すべての <see cref="T:System.Data.DataTable" /> スキーマおよび制約を含め <see cref="T:System.Data.DataTable" /> の構造体のクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-214">Clones the structure of the <see cref="T:System.Data.DataTable" />, including all <see cref="T:System.Data.DataTable" /> schemas and constraints.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-215">現在の <see cref="T:System.Data.DataTable" /> と同じスキーマを持つ新しい <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-215">A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-216">これらのクラスが派生している場合、複製も同じ派生クラスになります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-216">If these classes have been derived, the clone will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="b5f3c-217">複製によって、元の <xref:System.Data.DataTable>と同じ構造を持つ新しい <xref:System.Data.DataTable> が作成されますが、データはコピーされません (新しい <xref:System.Data.DataTable> には `DataRows`が含まれません)。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-217">Clone creates a new <xref:System.Data.DataTable> with the same structure as the original <xref:System.Data.DataTable>, but does not copy any data (the new <xref:System.Data.DataTable> will not contain any `DataRows`).</span></span> <span data-ttu-id="b5f3c-218">構造とデータの両方を新しい <xref:System.Data.DataTable>にコピーするには、<xref:System.Data.DataTable.Copy%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-218">To copy both the structure and data into a new <xref:System.Data.DataTable>, use <xref:System.Data.DataTable.Copy%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-219">次のサンプルは、DataTable を実行した後で、変換先テーブルの構造と制約を更新する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-219">The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</span></span> <span data-ttu-id="b5f3c-220">ClonedDataTable クラスは、変換先テーブルを返し、すべての更新イベントを含めます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-220">The ClonedDataTable class will return a destination table and includes all the updating events.</span></span> <span data-ttu-id="b5f3c-221">複製後、ソーステーブルの構造が変更されても、コピー先のテーブルには反映されません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-221">After the clone, structure changes in the source table won't be reflected in the destination table.</span></span> <span data-ttu-id="b5f3c-222">具体的には、このサンプルは次のようになります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-222">Specifically, this sample will:</span></span>  
  
-   <span data-ttu-id="b5f3c-223">ソーステーブル内の列の変更を更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-223">Update the changes of the columns in source table.</span></span>  
  
-   <span data-ttu-id="b5f3c-224">ソーステーブルの UniqueConstraint の変更を更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-224">Update the changes of the UniqueConstraint in source table.</span></span>  
  
-   <span data-ttu-id="b5f3c-225">ソーステーブルの ForeignKeyConstraint の変更を更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-225">Update the changes of the ForeignKeyConstraint in source table.</span></span>  
  
 <span data-ttu-id="b5f3c-226">C#このコードサンプルを含むプロジェクト Visual Basic は、[開発者コードサンプル](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-226">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span></span>  
  
```csharp  
using System;  
using System.Linq;  
using System.Data;  
using System.ComponentModel;  
  
class Program {  
   static void Main(string[] args) {  
      DataTable courses = NewCourseDataTable();  
      Console.WriteLine("This is the source table:");  
      WriteDataTable(courses);  
  
      ClonedDataTable clonedResult = new ClonedDataTable(courses);  
      DataTable clonedCourses = clonedResult.DestinationTable;  
      Console.WriteLine("This is the destination table:");  
      WriteDataTable(clonedCourses);  
  
      // Add the events of updating column collection into the source table.  
      clonedResult.UpdateAddedColumn();  
      clonedResult.UpdateDeletedColumn();  
      // Add a DataColumn in source table.  
      DataColumn columnCredits = new DataColumn("Credits", typeof(Int32));  
      courses.Columns.Add(columnCredits);  
      Console.WriteLine("After add a column in source table, it's the result in the destination:");  
      WriteDataTable(clonedCourses);  
  
      // Add the event of updating UniqueConstraint into the source table.  
      clonedResult.UpdateUniqueConstraint();  
  
      // Add the unique constraint in source table.  
      UniqueConstraint uniqueConstraint = new UniqueConstraint(courses.Columns["CourseId"]);  
      courses.Constraints.Add(uniqueConstraint);  
  
      Console.WriteLine(@"If we add the unique constraint in source table and then insert the duplicate   
rows into the destination table, we will get the following error:");  
      InsertDuplicateData(clonedCourses);  
      Console.WriteLine();  
  
      // Add the event of updating ForeignKeyConstraint into the source table.  
      clonedResult.UpdateForeignKeyConstraint();  
  
      // Add the ForeignKeyConstraint into the source table.  
      DataTable departments = NewDepartmentDataTable();  
      DataSet dataset = new DataSet();  
  
      dataset.Tables.Add(courses);  
      dataset.Tables.Add(clonedCourses);  
      dataset.Tables.Add(departments);  
  
      ForeignKeyConstraint foreignKey = new ForeignKeyConstraint(departments.Columns["DepartmentId"], courses.Columns["DepartmentId"]);  
      courses.Constraints.Add(foreignKey);  
  
      Console.WriteLine(@"If we add the foreign key constraint in source table and then insert a row   
without the parent  into the destination table, we will get the following error:");  
      InsertNoParentRow(clonedCourses);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static private DataTable NewCourseDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("CourseId", typeof(String)),  
                                      new DataColumn("CourseName",typeof(String)),                                        
                                      new DataColumn("DepartmentId", typeof(Int32))  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add("C1045", "Calculus", 7);  
      newTable.Rows.Add("C1061", "Physics", 1);  
      newTable.Rows.Add("C2021", "Composition", 2);  
      newTable.Rows.Add("C2042", "Literature", 2);  
  
      return newTable;  
   }  
  
   static private DataTable NewDeparmentDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("DepartmentId", typeof(Int32)),  
                                      new DataColumn("Name",typeof(String)),  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add(1, "Engineering");  
      newTable.Rows.Add(2, "English");  
      newTable.Rows.Add(4, "Economics");  
      newTable.Rows.Add(7, "Mathematics");  
  
      return newTable;  
   }  
  
   static private void WriteDataTable(DataTable table) {  
      if (table == null)  
         return;  
  
      foreach (DataColumn column in table.Columns) {  
         Console.Write("{0,-15}", column.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         for (int i = 0; i < table.Columns.Count; i++)  
            Console.Write("{0,-15}", row[i].ToString());  
         Console.WriteLine();  
      }  
  
      Console.WriteLine();  
   }  
  
   static private void InsertDuplicateData(DataTable table) {  
      try {  
         table.Rows.Add("C1045", "Calculus", 7);  
         table.Rows.Add("C1045", "Calculus", 7);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
  
   private static void InsertNoParentRow(DataTable table) {  
      try {  
         table.Rows.Add("C1061", "Physics", 11);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
}  
  
public class ClonedDataTable {  
   private DataTable sourceTable;  
   private DataTable destinationTable;  
  
   public ClonedDataTable(DataTable source) {  
      sourceTable = source;  
      // set the cloned result  
      destinationTable = sourceTable.Clone();  
   }  
  
   public void UpdateAddedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnAdded);  
   }  
  
   public void UpdateDeletedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnDeleted);  
   }  
  
   public void UpdateUniqueConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(UniqueConstraint_Changed);  
   }  
  
   public void UpdateForeignKeyConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(ForeignKeyConstraint_Changed);  
   }  
  
   // After the source table adds a column, the method will add the same column in the destination table.  
   void ColumnAdded(object sender, System.ComponentModel.CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null) {  
            DataColumn newColumn = new DataColumn(column.ColumnName, column.DataType, column.Expression, column.ColumnMapping);  
  
            if (!destinationTable.Columns.Contains(newColumn.ColumnName))  
               destinationTable.Columns.Add(newColumn);  
         }  
      }  
   }  
  
   // After the source table deletes a column, the method will delete the same column in the destination table.  
   void ColumnDeleted(object sender, CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Remove) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null)  
            if (destinationTable.Columns.Contains(column.ColumnName))  
               destinationTable.Columns.Remove(column.ColumnName);  
      }  
   }  
  
   // After the source table changes the UniqueConstraint, this method changes the same UniqueConstraint in destination table.        
   void UniqueConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      UniqueConstraint constraint = e.Element as UniqueConstraint;  
  
      if (constraint == null)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         Boolean isPrimaryKey = constraint.IsPrimaryKey;  
  
         // Get the columns used in new constraint from the destination table.  
         for (Int32 i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         UniqueConstraint newConstraint = new UniqueConstraint(constraintName, columns, isPrimaryKey);  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // After the source table changes the ForeignKeyConstraint, this method changes    
   // the same ForeignKeyConstraint in the destination table.  
   void ForeignKeyConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      ForeignKeyConstraint constraint = e.Element as ForeignKeyConstraint;  
  
      if (constraint == null)  
         return;  
  
      // If the source and destination are not in the same DataSet, don't change the ForeignKeyConstraint.  
      if (sourceTable.DataSet != destinationTable.DataSet)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         DataColumn[] parentColumns = constraint.RelatedColumns;  
  
         // Get the columns used in new constraint from the destination table.  
         for (int i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         ForeignKeyConstraint newConstraint = new ForeignKeyConstraint(constraintName, parentColumns, columns);  
         newConstraint.AcceptRejectRule = constraint.AcceptRejectRule;  
         newConstraint.DeleteRule = constraint.DeleteRule;  
         newConstraint.UpdateRule = constraint.UpdateRule;  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // return the destination table.  
   public DataTable DestinationTable {  
      get { return destinationTable; }  
   }  
}  
```  
  
 <span data-ttu-id="b5f3c-227">このサンプルでは、DataTable 内のデータを変更し、データソースを更新する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-227">This sample shows how to modify data in a DataTable and update the data source.</span></span>  
  
 <span data-ttu-id="b5f3c-228">まず、データベースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-228">First, create a database:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 <span data-ttu-id="b5f3c-229">これで、サンプルをコンパイルして実行できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-229">You can now compile and run the sample.</span></span> <span data-ttu-id="b5f3c-230">[DataTable 内のデータを変更し、データソースに更新する方法](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4)にC#ついては、このサンプルの Visual Basic とプロジェクトをご用意しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-230">[How to modify data in DataTable and update to the data source](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) has Visual Basic and C# projects of this sample.</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
   string MySchoolConnectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True";  
  
      // Get Data  
      String selectString =  
       @"Select [CourseID],[Year],[Title],[Credits],[DepartmentID] From [dbo].[Course];  
               Select [DepartmentID],[Name],[Budget],[StartDate],[Administrator] From [dbo].[Department] ";  
  
      DataSet dataSet = new DataSet();  
      DataTable course = dataSet.Tables.Add("Course");  
      DataTable department = dataSet.Tables.Add("Department");  
  
      Console.WriteLine("Get data from database:");  
      GetDataTables(MySchoolConnectionString, selectString, dataSet, course, department);  
      Console.WriteLine();  
  
      // Use DataTable Edits to edit the data  
      String updateString =  
              @"Update [dbo].[Course] Set [Credits]=@Credits Where [CourseID]=@CourseID;";  
  
      course.ColumnChanged += OnColumnChanged;  
  
      // Set the Credits of first row is negative value, and set the Credits of second row is plus.  
      ChangeCredits(course, course.Rows[0], -1);  
      ChangeCredits(course, course.Rows[1], 11);  
  
      UpdateDataTables(MySchoolConnectionString, updateString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"),  
          new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits"));  
      Console.WriteLine("Only the Credits of second row is changed.");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      // Delete and Remove from DataTable  
      // Create the foreign key constraint, and set the DeleteRule with Cascade.  
      ForeignKeyConstraint courseDepartFK = new ForeignKeyConstraint("CourseDepartFK", department.Columns["DepartmentID"], course.Columns["DepartmentID"]);  
      courseDepartFK.DeleteRule = Rule.Cascade;  
      courseDepartFK.UpdateRule = Rule.Cascade;  
      courseDepartFK.AcceptRejectRule = AcceptRejectRule.None;  
      course.Constraints.Add(courseDepartFK);  
  
      String deleteString = @"Delete From [dbo].[Course] Where [CourseID]=@CourseID;";  
  
      department.Rows[0].Delete();  
      Console.WriteLine("If One row in Department table is deleted, the related rows in Course table will also be deleted.");  
      Console.WriteLine("Department DataTable:");  
      ShowDataTable(department);  
      Console.WriteLine();  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
      // Update the delete operation  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
      Console.WriteLine("After delete operation:");  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      course.Rows.RemoveAt(0);  
      Console.WriteLine("Now we remove one row from Course:");  
      ShowDataTable(course);  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
   }  
  
   // Use SqlDataAdapter to get data.  
   private static void GetDataTables(String connectionString, String selectString,  
       DataSet dataSet, params DataTable[] tables) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.SelectCommand = new SqlCommand(selectString);  
         adapter.SelectCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Fill(0, 0, tables);  
  
         foreach (DataTable table in dataSet.Tables) {  
            Console.WriteLine("Data in {0}:", table.TableName);  
            ShowDataTable(table);  
            Console.WriteLine();  
         }  
      }  
   }  
  
   // Use SqlDataAdapter to update the updata operation.  
   private static void UpdateDataTables(String connectionString, String updateString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.UpdateCommand = new SqlCommand(updateString);  
         adapter.UpdateCommand.Parameters.AddRange(parameters);  
         adapter.UpdateCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use SqlDataAdapter to update delete operation.  
   private static void DeleteDataTables(String connectionString, String deleteString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.DeleteCommand = new SqlCommand(deleteString);  
         adapter.DeleteCommand.Parameters.AddRange(parameters);  
         adapter.DeleteCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use DataTable Edits to modify the data.  
   private static void ChangeCredits(DataTable table, DataRow row, Int32 credits) {  
      row.BeginEdit();  
      Console.WriteLine("We change row {0}", table.Rows.IndexOf(row));  
      row["Credits"] = credits;  
      row.EndEdit();  
   }  
  
   // The method will be invoked when the value in DataTable is changed.  
   private static void OnColumnChanged(Object sender, DataColumnChangeEventArgs args) {  
      Int32 credits = 0;  
      // If Credits is changed and the value is negative, we'll cancel the edit.  
      if ((args.Column.ColumnName == "Credits") &&  
          (!Int32.TryParse(args.ProposedValue.ToString(), out credits) || credits < 0)) {  
         Console.WriteLine("The value of Credits is invalid. Edit canceled.");  
         args.Row.CancelEdit();  
      }  
   }  
  
   // Display the column and value of DataTable.  
   private static void ShowDataTable(DataTable table) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-14}", col.ColumnName);  
      }  
      Console.WriteLine("{0,-14}", "RowState");  
  
      foreach (DataRow row in table.Rows) {  
         if (row.RowState == DataRowState.Deleted) {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col, DataRowVersion.Original]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col, DataRowVersion.Original]);  
               else  
                  Console.Write("{0,-14}", row[col, DataRowVersion.Original]);  
            }  
         }  
         else {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col]);  
               else  
                  Console.Write("{0,-14}", row[col]);  
            }  
         }  
         Console.WriteLine("{0,-14}", row.RowState);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Copy" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-231">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-231">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanged As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnChangedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-232"><see cref="T:System.Data.DataColumn" /> 内の指定した <see cref="T:System.Data.DataRow" /> の値が変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-232">Occurs after a value has been changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-233">詳細については、「 [DataTable イベントの処理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-233">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnChangeEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-234">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-234">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanging As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnChangingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-235"><see cref="T:System.Data.DataColumn" /> 内の指定した <see cref="T:System.Data.DataRow" /> の値が変更されているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-235">Occurs when a value is being changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-236">詳細については、「 [DataTable イベントの処理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-236">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-237">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-237">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Data.DataColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumnCollection ^ Columns { System::Data::DataColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Data.DataColumnCollection" Usage="System.Data.DataTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-238">このテーブルに属する列のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-238">Gets the collection of columns that belong to this table.</span></span></summary>
        <value><span data-ttu-id="b5f3c-239">テーブルの <see cref="T:System.Data.DataColumnCollection" /> オブジェクトのコレクションを格納している <see cref="T:System.Data.DataColumn" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-239">A <see cref="T:System.Data.DataColumnCollection" /> that contains the collection of <see cref="T:System.Data.DataColumn" /> objects for the table.</span></span> <span data-ttu-id="b5f3c-240"><see cref="T:System.Data.DataColumn" /> オブジェクトが存在しない場合、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-240">An empty collection is returned if no <see cref="T:System.Data.DataColumn" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-241"><xref:System.Data.DataColumnCollection> は、各列のデータ型を定義することで、テーブルのスキーマを決定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-241">The <xref:System.Data.DataColumnCollection> determines the schema of a table by defining the data type of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-242">次の例では、<xref:System.Data.DataTable.Columns%2A> プロパティを使用して、テーブルの各行の各値を出力します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-242">The following example prints each value of each row in a table using the <xref:System.Data.DataTable.Columns%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-243">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-243">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public object Compute (string expression, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Compute(string expression, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Compute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compute (expression As String, filter As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Compute(System::String ^ expression, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="member this.Compute : string * string -&gt; obj" Usage="dataTable.Compute (expression, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="filter" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="b5f3c-244">計算する式。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-244">The expression to compute.</span></span></param>
        <param name="filter"><span data-ttu-id="b5f3c-245">式で評価される行を制限するフィルター。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-245">The filter to limit the rows that evaluate in the expression.</span></span></param>
        <summary><span data-ttu-id="b5f3c-246">フィルター基準を満たしている現在の行で指定した式を計算します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-246">Computes the given expression on the current rows that pass the filter criteria.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-247">計算の結果に設定された <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-247">An <see cref="T:System.Object" />, set to the result of the computation.</span></span> <span data-ttu-id="b5f3c-248">式が null に評価された場合、戻り値は <see cref="F:System.DBNull.Value" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-248">If the expression evaluates to null, the return value will be <see cref="F:System.DBNull.Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-249">`expression` パラメーターには集計関数が必要です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-249">The `expression` parameter requires an aggregate function.</span></span> <span data-ttu-id="b5f3c-250">たとえば、次の式は有効です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-250">For example, the following is a legal expression:</span></span>  
  
 `Count(Quantity)`  
  
 <span data-ttu-id="b5f3c-251">ただし、この式は次の式ではありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-251">But this expression is not:</span></span>  
  
 `Sum (Quantity * UnitPrice)`  
  
 <span data-ttu-id="b5f3c-252">複数の列に対して操作を実行する必要がある場合は、<xref:System.Data.DataColumn>を作成し、その <xref:System.Data.DataColumn.Expression%2A> プロパティを適切な式に設定して、結果の列に集計式を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-252">If you must perform an operation on two or more columns, you should create a <xref:System.Data.DataColumn>, set its <xref:System.Data.DataColumn.Expression%2A> property to an appropriate expression, and use an aggregate expression on the resulting column.</span></span> <span data-ttu-id="b5f3c-253">その場合は、"total" という名前の <xref:System.Data.DataColumn> を指定し、<xref:System.Data.DataColumn.Expression%2A> プロパティを次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-253">In that case, given a <xref:System.Data.DataColumn> with the name "total", and the <xref:System.Data.DataColumn.Expression%2A> property set to this:</span></span>  
  
 `"Quantity * UnitPrice"`  
  
 <span data-ttu-id="b5f3c-254"><xref:System.Data.DataTable.Compute%2A> メソッドの expression 引数は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-254">The expression argument for the <xref:System.Data.DataTable.Compute%2A> method would then be this:</span></span>  
  
 `Sum(total)`  
  
 <span data-ttu-id="b5f3c-255">2番目のパラメーター `filter`は、式で使用される行を決定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-255">The second parameter, `filter`, determines which rows are used in the expression.</span></span> <span data-ttu-id="b5f3c-256">たとえば、テーブルに "colDate" という名前の日付列が含まれている場合は、次の式を使用して行を制限することができます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-256">For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</span></span>  
  
 `colDate > 1/1/99 AND colDate < 17/1/99`  
  
 <span data-ttu-id="b5f3c-257">両方のパラメーターの式を作成するためのルールについては、<xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-257">For rules on creating expressions for both parameters, see the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-258">次の例では、id 番号が5である販売員の "Total" という名前の列の値を合計します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-258">The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Compute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Compute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-259">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-259">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Data.ConstraintCollection Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ConstraintCollection Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As ConstraintCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConstraintCollection ^ Constraints { System::Data::ConstraintCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Data.ConstraintCollection" Usage="System.Data.DataTable.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableConstraintsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConstraintCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-260">このテーブルに保持されている制約のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-260">Gets the collection of constraints maintained by this table.</span></span></summary>
        <value><span data-ttu-id="b5f3c-261">テーブルの <see cref="T:System.Data.ConstraintCollection" /> オブジェクトのコレクションを格納している <see cref="T:System.Data.Constraint" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-261">A <see cref="T:System.Data.ConstraintCollection" /> that contains the collection of <see cref="T:System.Data.Constraint" /> objects for the table.</span></span> <span data-ttu-id="b5f3c-262"><see cref="T:System.Data.Constraint" /> オブジェクトが存在しない場合、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-262">An empty collection is returned if no <see cref="T:System.Data.Constraint" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-263"><xref:System.Data.ForeignKeyConstraint> は、列 (または列) の値が削除または更新されたときに実行されるアクションを制限します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-263">A <xref:System.Data.ForeignKeyConstraint> restricts the action performed when a value in a column (or columns) is either deleted or updated.</span></span> <span data-ttu-id="b5f3c-264">このような制約は、主キー列と共に使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-264">Such a constraint is intended to be used with primary key columns.</span></span> <span data-ttu-id="b5f3c-265">2つのテーブル間の親子リレーションシップでは、親テーブルから値を削除すると、次のいずれかの方法で子の行に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-265">In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</span></span>  
  
-   <span data-ttu-id="b5f3c-266">子行を削除することもできます (連鎖アクション)。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-266">The child rows can also be deleted (a cascading action).</span></span>  
  
-   <span data-ttu-id="b5f3c-267">子列 (または列) の値は null 値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-267">The values in the child column (or columns) can be set to null values.</span></span>  
  
-   <span data-ttu-id="b5f3c-268">子列 (または列) の値は、既定値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-268">The values in the child column (or columns) can be set to default values.</span></span>  
  
-   <span data-ttu-id="b5f3c-269">例外を生成できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-269">An exception can be generated.</span></span>  
  
 <span data-ttu-id="b5f3c-270">主キーの値を一意でない値に設定しようとすると、<xref:System.Data.UniqueConstraint> がアクティブになります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-270">A <xref:System.Data.UniqueConstraint> becomes active when attempting to set a value in a primary key to a non-unique value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-271">次の例では、制約のコレクションに <xref:System.Data.ForeignKeyConstraint> を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-271">The following example adds a <xref:System.Data.ForeignKeyConstraint> to the collection of constraints.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-272">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-272">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Data.DataTable" Usage="dataTable.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-273">この <see cref="T:System.Data.DataTable" /> の構造体だけでなくデータもコピーします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-273">Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-274">この <see cref="T:System.Data.DataTable" /> と同じ構造体 (テーブル スキーマおよび制約) とデータを持つ新しい <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-274">A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable" />.</span></span>  
  
<span data-ttu-id="b5f3c-275">これらのクラスが派生されている場合は、コピーも同じ派生クラスになります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-275">If these classes have been derived, the copy will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="b5f3c-276"><see cref="M:System.Data.DataTable.Copy" /> は、新しい <see cref="T:System.Data.DataTable" /> を元の <see cref="T:System.Data.DataTable" /> と同じ構造とデータで作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-276"><see cref="M:System.Data.DataTable.Copy" /> creates a new <see cref="T:System.Data.DataTable" /> with the same structure and data as the original <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="b5f3c-277">構造体を新しい <see cref="T:System.Data.DataTable" /> にコピーし、データをコピーしない場合は、<see cref="M:System.Data.DataTable.Clone" /> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-277">To copy the structure to a new <see cref="T:System.Data.DataTable" />, but not the data, use <see cref="M:System.Data.DataTable.Clone" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5f3c-278">次の例では、<xref:System.Data.DataTable.Copy%2A> メソッドを使用して、元の <xref:System.Data.DataTable>のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-278">The following example uses the <xref:System.Data.DataTable.Copy%2A> method to create a copy of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-279">親 <xref:System.Data.DataTable> または <xref:System.Data.DataSet>から継承されている場合、名前空間の名前は保持されません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-279">The namespace name is not retained if it is inherited from a parent <xref:System.Data.DataTable> or <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Copy Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Copy Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataView.ToTable" />
        <altmember cref="M:System.Data.DataTable.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-280">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-280">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDataReader">
      <MemberSignature Language="C#" Value="public System.Data.DataTableReader CreateDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTableReader CreateDataReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateDataReader" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDataReader () As DataTableReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTableReader ^ CreateDataReader();" />
      <MemberSignature Language="F#" Value="member this.CreateDataReader : unit -&gt; System.Data.DataTableReader" Usage="dataTable.CreateDataReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-281">この <see cref="T:System.Data.DataTableReader" /> 内のデータに対応する <see cref="T:System.Data.DataTable" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-281">Returns a <see cref="T:System.Data.DataTableReader" /> corresponding to the data within this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-282">1 つの結果セットを格納した <see cref="T:System.Data.DataTableReader" />。ソース インスタンスである <see cref="T:System.Data.DataTable" /> に対応します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-282">A <see cref="T:System.Data.DataTableReader" /> containing one result set, corresponding to the source <see cref="T:System.Data.DataTable" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5f3c-283"><xref:System.Data.DataTable> インスタンスを作成するコンソール アプリケーションの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-283">The following console application creates a <xref:System.Data.DataTable> instance.</span></span> <span data-ttu-id="b5f3c-284">この例では、次に、入力された <xref:System.Data.DataTable> を <xref:System.Data.DataTable.CreateDataReader%2A> メソッドを呼び出すプロシージャに渡します。このメソッドは、<xref:System.Data.DataTableReader>内に含まれる結果を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-284">The example then passes the filled <xref:System.Data.DataTable> to a procedure that calls the <xref:System.Data.DataTable.CreateDataReader%2A> method, which iterates through the results contained within the <xref:System.Data.DataTableReader>.</span></span>  
  
 [!code-csharp[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/VB/source.vb#1)]  
  
 <span data-ttu-id="b5f3c-285">この例では、次の出力がコンソール ウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-285">The example displays the following output in the console window:</span></span>  
  
 `1 Mary`  
  
 `2 Andy`  
  
 `3 Peter`  
  
 `4 Russ`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.CreateDataReader" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-286">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-286">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : unit -&gt; System.Data.DataTable&#xA;override this.CreateInstance : unit -&gt; System.Data.DataTable" Usage="dataTable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-287"><see cref="T:System.Data.DataTable" /> の新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-287">Creates a new instance of <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-288">新しい式。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-288">The new expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Data.DataTable.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDataSetDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-289">このテーブルが属する <see cref="T:System.Data.DataSet" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-289">Gets the <see cref="T:System.Data.DataSet" /> to which this table belongs.</span></span></summary>
        <value><span data-ttu-id="b5f3c-290">このテーブルが属する <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-290">The <see cref="T:System.Data.DataSet" /> to which this table belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-291">コントロールが <xref:System.Data.DataTable>にデータバインドされており、テーブルが <xref:System.Data.DataSet>に属している場合は、このプロパティを使用して <xref:System.Data.DataSet> にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-291">If a control is data bound to a <xref:System.Data.DataTable>, and the table belongs to a <xref:System.Data.DataSet>, you can get to the <xref:System.Data.DataSet> through this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-292">次の例では、<xref:System.Data.DataTable.DataSet%2A> プロパティを使用して、指定されたテーブルの親 <xref:System.Data.DataSet> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-292">The following example returns the parent <xref:System.Data.DataSet> of a given table through the <xref:System.Data.DataTable.DataSet%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-293">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-293">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultView">
      <MemberSignature Language="C#" Value="public System.Data.DataView DefaultView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataView DefaultView" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DefaultView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultView As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataView ^ DefaultView { System::Data::DataView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultView : System.Data.DataView" Usage="System.Data.DataTable.DefaultView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDefaultViewDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-294">フィルター処理されたビューまたはカーソル位置を含むことがある、テーブルのカスタマイズされたビューを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-294">Gets a customized view of the table that may include a filtered view, or a cursor position.</span></span></summary>
        <value><span data-ttu-id="b5f3c-295"><see cref="T:System.Data.DataView" /> に関連付けられている <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-295">The <see cref="T:System.Data.DataView" /> associated with the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-296"><xref:System.Data.DataTable.DefaultView%2A> プロパティは、<xref:System.Data.DataTable>の並べ替え、フィルター処理、および検索に使用できる <xref:System.Data.DataView> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-296">The <xref:System.Data.DataTable.DefaultView%2A> property returns a <xref:System.Data.DataView> you can use to sort, filter, and search a <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-297">次の例では、<xref:System.Data.DataTable.DefaultView%2A> プロパティを使用して <xref:System.Data.DataTable> オブジェクトの <xref:System.Data.DataView> のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-297">The following example sets a property of the <xref:System.Data.DataTable> object's <xref:System.Data.DataView> through the <xref:System.Data.DataTable.DefaultView%2A> property.</span></span> <span data-ttu-id="b5f3c-298">また、この例では、"CompanyName" という名前の列を含む "仕入先" という名前の <xref:System.Data.DataTable> への <xref:System.Windows.Forms.DataGridView> コントロールのバインドも示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-298">The example also shows the binding of a <xref:System.Windows.Forms.DataGridView> control to a <xref:System.Data.DataTable> named "Suppliers" that includes a column named "CompanyName."</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-299">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-299">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisplayExpression">
      <MemberSignature Language="C#" Value="public string DisplayExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayExpression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DisplayExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayExpression : string with get, set" Usage="System.Data.DataTable.DisplayExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDisplayExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-300">ユーザー インターフェイスにこのテーブルを表示するために使用する値を返す式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-300">Gets or sets the expression that returns a value used to represent this table in the user interface.</span></span> <span data-ttu-id="b5f3c-301"><see langword="DisplayExpression" /> プロパティを使用すると、ユーザー インターフェイスにこのテーブルの名前が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-301">The <see langword="DisplayExpression" /> property lets you display the name of this table in a user interface.</span></span></summary>
        <value><span data-ttu-id="b5f3c-302">表示文字列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-302">A display string.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-303">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-303">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="dataTable.EndInit " />
      <MemberSignature Language="C#" Value="public void EndInit ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-304">フォームまたは別のコンポーネントで使用する <see cref="T:System.Data.DataTable" /> の初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-304">Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span></span> <span data-ttu-id="b5f3c-305">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-305">The initialization occurs at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-306">Visual Studio .NET デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-306">The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="b5f3c-307"><xref:System.Data.DataTable.BeginInit%2A> メソッドは、初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-307">The <xref:System.Data.DataTable.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="b5f3c-308"><xref:System.Data.DataTable.BeginInit%2A> メソッドと <xref:System.Data.DataTable.EndInit%2A> メソッドを使用すると、完全に初期化される前にコントロールが使用されなくなります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-308">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-309">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-309">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndLoadData">
      <MemberSignature Language="C#" Value="public void EndLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadData();" />
      <MemberSignature Language="F#" Value="member this.EndLoadData : unit -&gt; unit" Usage="dataTable.EndLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-310">データを読み込んだ後、通知、インデックスの維持、および制約をオンにします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-310">Turns on notifications, index maintenance, and constraints after loading data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-311"><xref:System.Data.DataTable.EndLoadData%2A> は、<xref:System.Data.DataTable.LoadDataRow%2A> と <xref:System.Data.DataTable.BeginLoadData%2A>と組み合わせて使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-311">Use <xref:System.Data.DataTable.EndLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.BeginLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-312">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-312">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataTable.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-313">カスタマイズされたユーザー情報のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-313">Gets the collection of customized user information.</span></span></summary>
        <value><span data-ttu-id="b5f3c-314">カスタム ユーザー情報が格納された <see cref="T:System.Data.PropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-314">A <see cref="T:System.Data.PropertyCollection" /> that contains custom user information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-315"><xref:System.Data.DataTable>にカスタム情報を追加するには、<xref:System.Data.DataTable.ExtendedProperties%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-315">Use the <xref:System.Data.DataTable.ExtendedProperties%2A> to add custom information to a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-316">`Add` メソッドを使用して情報を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-316">Add information with the `Add` method.</span></span> <span data-ttu-id="b5f3c-317">`Item` メソッドを使用して情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-317">Retrieve information with the `Item` method.</span></span>  
  
 <span data-ttu-id="b5f3c-318">拡張プロパティの型は <xref:System.String>である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-318">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="b5f3c-319">文字列型ではないプロパティは、<xref:System.Data.DataTable> が XML として記述されている場合、永続化されません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-319">Properties that are not of type String are not persisted when the <xref:System.Data.DataTable> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-320">次の例では、<xref:System.Data.DataTable.ExtendedProperties%2A> プロパティを使用して <xref:System.Data.DataTable> にタイムスタンプ値を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-320">The following example adds a timestamp value to the <xref:System.Data.DataTable> through the <xref:System.Data.DataTable.ExtendedProperties%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-321">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-321">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="fInitInProgress">
      <MemberSignature Language="C#" Value="protected internal bool fInitInProgress;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly bool fInitInProgress" />
      <MemberSignature Language="DocId" Value="F:System.Data.DataTable.fInitInProgress" />
      <MemberSignature Language="VB.NET" Value="Protected Friend fInitInProgress As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected public: bool fInitInProgress;" />
      <MemberSignature Language="F#" Value="val mutable fInitInProgress : bool" Usage="System.Data.DataTable.fInitInProgress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-322">初期化処理中かどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-322">Checks whether initialization is in progress.</span></span> <span data-ttu-id="b5f3c-323">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-323">The initialization occurs at run time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-324">前回 <see cref="T:System.Data.DataTable" /> を読み取るか、<see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのデータセットに対して行われたすべての変更が格納されているこのデータセットのコピーを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-324">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-325">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-325">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-326">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-326">Working with DataTable Events</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges();" />
      <MemberSignature Language="F#" Value="member this.GetChanges : unit -&gt; System.Data.DataTable" Usage="dataTable.GetChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-327">前回 <see cref="T:System.Data.DataTable" /> を読み取るか、<see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのデータセットに対して行われたすべての変更が格納されているこのデータセットのコピーを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-327">Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" /> was last called.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-328">この <see cref="T:System.Data.DataTable" /> からの変更のコピー。変更がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-328">A copy of the changes from this <see cref="T:System.Data.DataTable" />, or <see langword="null" /> if no changes are found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-329">保留中の変更がある元の <xref:System.Data.DataSet> 内のすべての行のコピーを含む新しい <xref:System.Data.DataSet> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-329">Creates a new <xref:System.Data.DataSet> containing a copy of all rows in the original <xref:System.Data.DataSet> that have pending changes.</span></span> <span data-ttu-id="b5f3c-330">リレーションシップの制約により、変更された行の外部キーに対応する主キーが変更されていない行に含まれている場合は、変更されていない行が新しい <xref:System.Data.DataSet> に追加されることがあります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-330">Relationship constraints can cause additional unchanged rows to be added to the new <xref:System.Data.DataSet> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</span></span> <span data-ttu-id="b5f3c-331">元の <xref:System.Data.DataSet> に保留中の変更がある行がない場合、メソッドは `null` (`Nothing` Visual Basic) を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-331">The method returns `null` (`Nothing` in Visual Basic) if there are no rows in the original <xref:System.Data.DataSet> with pending changes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-332">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-332">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-333">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-333">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges (System.Data.DataRowState rowStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges(valuetype System.Data.DataRowState rowStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (rowStates As DataRowState) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges(System::Data::DataRowState rowStates);" />
      <MemberSignature Language="F#" Value="member this.GetChanges : System.Data.DataRowState -&gt; System.Data.DataTable" Usage="dataTable.GetChanges rowStates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowStates" Type="System.Data.DataRowState" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rowStates"><span data-ttu-id="b5f3c-334"><see cref="T:System.Data.DataRowState" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-334">One of the <see cref="T:System.Data.DataRowState" /> values.</span></span></param>
        <summary><span data-ttu-id="b5f3c-335">前回 <see cref="T:System.Data.DataTable" /> を読み取るか、<see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのデータセットに対して行われたすべての変更が格納されているこのデータセットのコピーを、<see cref="T:System.Data.DataRowState" /> によってフィルター処理した後で取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-335">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-336">アクションを実行した後、<see cref="T:System.Data.DataTable" /> を使用して元の <see cref="T:System.Data.DataTable" /> にマージするために使用できる、<see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> のフィルター処理後のコピー。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-336">A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed on it, and later be merged back in the <see cref="T:System.Data.DataTable" /> using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span></span> <span data-ttu-id="b5f3c-337">必要な <see cref="T:System.Data.DataRowState" /> の行が見つからない場合、このメソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-337">If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-338"><xref:System.Data.DataTable.GetChanges%2A> メソッドは、元のに導入された変更のみを含む2番目の <xref:System.Data.DataTable> オブジェクトを生成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-338">The <xref:System.Data.DataTable.GetChanges%2A> method is used to produce a second <xref:System.Data.DataTable> object that contains only the changes introduced into the original.</span></span> <span data-ttu-id="b5f3c-339">`rowStates` 引数を使用して、新しいオブジェクトに含める変更の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-339">Use the `rowStates` argument to specify the type of changes the new object should include.</span></span>  
  
 <span data-ttu-id="b5f3c-340">リレーションシップの制約により、変更されていない親行が含まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-340">Relationship constraints may cause unchanged parent rows to be included.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-341">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-341">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-342">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-342">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTableSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataTableSchema (schemaSet As XmlSchemaSet) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetDataTableSchema(System::Xml::Schema::XmlSchemaSet ^ schemaSet);" />
      <MemberSignature Language="F#" Value="static member GetDataTableSchema : System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaComplexType" Usage="System.Data.DataTable.GetDataTableSchema schemaSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="schemaSet"><span data-ttu-id="b5f3c-343"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-343">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span></span></param>
        <summary><span data-ttu-id="b5f3c-344">このメソッドは、Web サービスの <see cref="T:System.Xml.Schema.XmlSchemaSet" /> を記述する Web サービス記述言語 (WSDL) を含む <see cref="T:System.Data.DataTable" /> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-344">This method returns an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance containing the Web Services Description Language (WSDL) that describes the <see cref="T:System.Data.DataTable" /> for Web Services.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-345"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-345">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-346">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-346">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrors () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetErrors();" />
      <MemberSignature Language="F#" Value="member this.GetErrors : unit -&gt; System.Data.DataRow[]" Usage="dataTable.GetErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-347">エラーが含まれる <see cref="T:System.Data.DataRow" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-347">Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-348">エラーが含まれる <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-348">An array of <see cref="T:System.Data.DataRow" /> objects that have errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-349"><xref:System.Data.DataRow.RowError%2A> 設定されている <xref:System.Data.DataRow> オブジェクトの一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-349">Returns the list of <xref:System.Data.DataRow> objects that have <xref:System.Data.DataRow.RowError%2A> set.</span></span> <span data-ttu-id="b5f3c-350">たとえば、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> を `true`に設定して <xref:System.Data.Common.DataAdapter.Update%2A> を呼び出すと、エラーが発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-350">For example, errors can occur when calling <xref:System.Data.Common.DataAdapter.Update%2A> with <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> set to `true`.</span></span> <span data-ttu-id="b5f3c-351">すべてのエラーを解決して更新のために <xref:System.Data.DataSet> を再送信するまで、<xref:System.Data.DataTable> で <xref:System.Data.DataTable.AcceptChanges%2A> を呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-351">Do not invoke <xref:System.Data.DataTable.AcceptChanges%2A> on the <xref:System.Data.DataTable> until you resolve all errors and resubmit the <xref:System.Data.DataSet> for updating.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-352">次の例では、<xref:System.Data.DataTable.GetErrors%2A> メソッドを使用して、エラーのある <xref:System.Data.DataRow> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-352">The following example uses the <xref:System.Data.DataTable.GetErrors%2A> method to return an array of <xref:System.Data.DataRow> objects that have errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-353">DataTable (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-353">DataTables (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="dataTable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="b5f3c-354"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトと関連付けられているシリアル化データを保持する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-354">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data associated with the <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="context"><span data-ttu-id="b5f3c-355"><see cref="T:System.Runtime.Serialization.StreamingContext" /> に関連付けられているシリアル化ストリームのソースおよびデスティネーションを格納する <see cref="T:System.Data.DataTable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-355">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataTable" />.</span></span></param>
        <summary><span data-ttu-id="b5f3c-356">シリアル化情報オブジェクトを、<see cref="T:System.Data.DataTable" /> のシリアル化に必要なデータで事前設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-356">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5f3c-357"><paramref name="info" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-357">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-358">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-358">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRowType">
      <MemberSignature Language="C#" Value="protected virtual Type GetRowType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetRowType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetRowType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRowType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetRowType();" />
      <MemberSignature Language="F#" Value="abstract member GetRowType : unit -&gt; Type&#xA;override this.GetRowType : unit -&gt; Type" Usage="dataTable.GetRowType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-359">行の種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-359">Gets the row type.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-360"><see cref="T:System.Data.DataRow" /> の型。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-360">The type of the <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="dataTable.GetSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-361">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-361">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-362"><see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> メソッドによって生成され <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> メソッドによって処理されるオブジェクトの XML 表現を記述する <see cref="T:System.Xml.Schema.XmlSchema" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-362">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataTable.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableHasErrorsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-363">テーブルが属する <see cref="T:System.Data.DataSet" /> のいずれかのテーブルのいずれかの行にエラーがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-363">Gets a value indicating whether there are errors in any of the rows in any of the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</span></span></summary>
        <value><span data-ttu-id="b5f3c-364">エラーがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-364"><see langword="true" /> if errors exist; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-365"><xref:System.Data.DataTable>に含まれる一連のデータをユーザーが操作するときに、変更によって検証エラーが発生した場合は、各変更をエラーでマークできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-365">As users work on a set of data contained in a <xref:System.Data.DataTable>, you can mark each change with an error if the change causes some validation failure.</span></span> <span data-ttu-id="b5f3c-366"><xref:System.Data.DataRow.RowError%2A> プロパティを使用して、<xref:System.Data.DataRow> 全体にエラーメッセージをマークできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-366">You can mark an entire <xref:System.Data.DataRow> with an error message using the <xref:System.Data.DataRow.RowError%2A> property.</span></span> <span data-ttu-id="b5f3c-367"><xref:System.Data.DataRow.SetColumnError%2A> メソッドを使用して、行の各列にエラーを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-367">You can also set errors on each column of the row with the <xref:System.Data.DataRow.SetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-368"><xref:System.Data.DataSet>を使用してデータソースを更新する前に、まずターゲット <xref:System.Data.DataSet>で <xref:System.Data.DataSet.GetChanges%2A> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-368">Before updating a data source with a <xref:System.Data.DataSet>, it's recommended that you first invoke the <xref:System.Data.DataSet.GetChanges%2A> method on the target <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="b5f3c-369">メソッドによって、元のに加えられた変更のみを含む <xref:System.Data.DataSet> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-369">The method results in a <xref:System.Data.DataSet> that contains only the changes made to the original.</span></span> <span data-ttu-id="b5f3c-370">更新のためにデータソースに <xref:System.Data.DataSet> を送信する前に、各テーブルの <xref:System.Data.DataTable.HasErrors%2A> プロパティを調べて、行または行の列にエラーがアタッチされているかどうかを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-370">Before sending the <xref:System.Data.DataSet> to the data source for updating, check the <xref:System.Data.DataTable.HasErrors%2A> property of each table to see if any errors have been attached to the rows or columns in the rows.</span></span>  
  
 <span data-ttu-id="b5f3c-371">各エラーを調整した後、`DataRow`の <xref:System.Data.DataRow.ClearErrors%2A> 方法でエラーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-371">After reconciling each error, clear the errors with the <xref:System.Data.DataRow.ClearErrors%2A> method of the `DataRow`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-372">次の例では、<xref:System.Data.DataTable.HasErrors%2A> プロパティを使用して、テーブルにエラーが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-372">The following example uses the <xref:System.Data.DataTable.HasErrors%2A> property to check if a table contains errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-373">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-373">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ImportRow">
      <MemberSignature Language="C#" Value="public void ImportRow (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportRow(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportRow (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportRow(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.ImportRow : System.Data.DataRow -&gt; unit" Usage="dataTable.ImportRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="b5f3c-374">インポートする <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-374">The <see cref="T:System.Data.DataRow" /> to be imported.</span></span></param>
        <summary><span data-ttu-id="b5f3c-375">プロパティ設定、元の値、および現在の値を保持し、<see cref="T:System.Data.DataRow" /> を <see cref="T:System.Data.DataTable" /> にコピーします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-375">Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-376">を呼び <xref:System.Data.DataTable.NewRow%2A> 出すと、既存のテーブルスキーマを使用してテーブルに行が追加されますが、行の既定値が使用され、<xref:System.Data.DataRowState> が `Detached`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-376">Calling <xref:System.Data.DataTable.NewRow%2A> adds a row to the table using the existing table schema, but with default values for the row, and sets the <xref:System.Data.DataRowState> to `Detached`.</span></span> <span data-ttu-id="b5f3c-377"><xref:System.Data.DataTable.ImportRow%2A> を呼び出すと、既存の <xref:System.Data.DataRowState> が行の他の値と共に保持されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-377">Calling <xref:System.Data.DataTable.ImportRow%2A> preserves the existing <xref:System.Data.DataRowState> along with other values in the row.</span></span> <span data-ttu-id="b5f3c-378">パラメーターとして渡された `DataRow` がデタッチ済みの状態である場合、そのメソッドは無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-378">If the `DataRow` that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="b5f3c-379">新しい行がデータテーブルの最後に追加されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-379">The new row will be added to the end of the data table.</span></span>  
  
 <span data-ttu-id="b5f3c-380">新しい行が制約に違反している場合は、データテーブルに追加されません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-380">If the new row violates a Constraint it won't be added to the data table.</span></span>  
  
 <span data-ttu-id="b5f3c-381">新しい行のインデックスを取得するには、DataTable. Rows. Find と DataTable. IndexOf という形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-381">You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</span></span> <span data-ttu-id="b5f3c-382">詳細については、「<xref:System.Data.DataRowCollection>」および「<xref:System.Data.DataTable.Rows%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-382">See <xref:System.Data.DataRowCollection> and <xref:System.Data.DataTable.Rows%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-383">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-383">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5cb86d48-a987-4af4-80e0-8cc2c8373d62"><span data-ttu-id="b5f3c-384">DataTable 内のデータの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-384">Manipulating Data in a DataTable (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Initialized;" />
      <MemberSignature Language="F#" Value="member this.Initialized : EventHandler " Usage="member this.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.ISupportInitializeNotification.Initialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-385"><see cref="T:System.Data.DataTable" /> が初期化された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-385">Occurs after the <see cref="T:System.Data.DataTable" /> is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-386">詳細については、「<xref:System.Data.DataTable.IsInitialized%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-386">For more information, see <xref:System.Data.DataTable.IsInitialized%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-387">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-387">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-388">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-388">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Data.DataTable.IsInitialized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ISupportInitializeNotification.IsInitialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-389"><see cref="T:System.Data.DataTable" /> が初期化されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-389">Gets a value that indicates whether the <see cref="T:System.Data.DataTable" /> is initialized.</span></span></summary>
        <value><span data-ttu-id="b5f3c-390">コンポーネントが初期化を完了したことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-390"><see langword="true" /> to indicate the component has completed initialization; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-391">Visual Studio などによって構築されているときの <xref:System.Data.DataTable> の状態を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-391">Returns the status of the <xref:System.Data.DataTable> while it's being constructed, for instance by Visual Studio.</span></span> <span data-ttu-id="b5f3c-392"><xref:System.Data.DataTable.BeginInit%2A> メソッドは、それを `false` に設定し、<xref:System.Data.DataTable.EndInit%2A> メソッドによって `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-392">The <xref:System.Data.DataTable.BeginInit%2A> method sets it to `false` and <xref:System.Data.DataTable.EndInit%2A> method sets it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-393">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-393">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-394">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-394">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-395">指定された <see cref="T:System.Data.DataTable" /> を使用し、<see cref="T:System.Data.IDataReader" /> にデータ ソースからの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-395">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="b5f3c-396"><see langword="DataTable" /> が既に行を含んでいる場合、データ ソースからの受信データは既存の行にマージされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-396">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-397">`Load` メソッドは、指定されたデータソースからデータを取得し、それを現在のデータコンテナー (この場合は `DataTable`) に追加することを中心として、いくつかの一般的なシナリオで使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-397">The `Load` method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a `DataTable`).</span></span> <span data-ttu-id="b5f3c-398">これらのシナリオでは、`DataTable`の標準の使用方法について説明し、その更新とマージの動作について説明します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-398">These scenarios describe standard usage for a `DataTable`, describing its update and merge behavior.</span></span>  
  
 <span data-ttu-id="b5f3c-399">1つのプライマリデータソースと同期または更新する `DataTable`。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-399">A `DataTable` synchronizes or updates with a single primary data source.</span></span> <span data-ttu-id="b5f3c-400">`DataTable` によって変更が追跡され、プライマリデータソースとの同期が可能になります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-400">The `DataTable` tracks changes, allowing synchronization with the primary data source.</span></span> <span data-ttu-id="b5f3c-401">さらに、1つまたは複数のセカンダリデータソースからの増分データを受け取ることが `DataTable` ます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-401">In addition, a `DataTable` can accept incremental data from one or more secondary data sources.</span></span> <span data-ttu-id="b5f3c-402">`DataTable` は、セカンダリデータソースとの同期を許可するために変更を追跡する責任はありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-402">The `DataTable` isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</span></span>  
  
 <span data-ttu-id="b5f3c-403">これらの2つの仮想データソースを指定すると、ユーザーは次のいずれかの動作を必要とする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-403">Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</span></span>  
  
-   <span data-ttu-id="b5f3c-404">プライマリデータソースから `DataTable` を初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-404">Initialize `DataTable` from a primary data source.</span></span> <span data-ttu-id="b5f3c-405">このシナリオでは、ユーザーは、プライマリデータソースの値を使用して空の `DataTable` を初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-405">In this scenario, the user wants to initialize an empty `DataTable` with values from the primary data source.</span></span> <span data-ttu-id="b5f3c-406">その後、ユーザーが変更をプライマリデータソースに反映する予定です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-406">Later the user intends to propagate changes back to the primary data source.</span></span>  
  
-   <span data-ttu-id="b5f3c-407">変更を保持し、プライマリデータソースから再同期します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-407">Preserve changes and re-synchronize from the primary data source.</span></span> <span data-ttu-id="b5f3c-408">このシナリオでは、ユーザーは前のシナリオで入力した `DataTable` を取得し、プライマリデータソースとの増分同期を実行して、`DataTable`に加えられた変更を保持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-408">In this scenario, the user wants to take the `DataTable` filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the `DataTable`.</span></span>  
  
-   <span data-ttu-id="b5f3c-409">セカンダリデータソースからの増分データフィード。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-409">Incremental data feed from secondary data sources.</span></span> <span data-ttu-id="b5f3c-410">このシナリオでは、ユーザーは1つまたは複数のセカンダリデータソースから変更をマージし、それらの変更をプライマリデータソースに反映させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-410">In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</span></span>  
  
 <span data-ttu-id="b5f3c-411">`Load` メソッドを使用すると、すべてのシナリオを可能にすることができます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-411">The `Load` method makes all these scenarios possible.</span></span> <span data-ttu-id="b5f3c-412">このメソッドのオーバーロードの1つだけでなく、読み込みオプションパラメーターを指定して、<xref:System.Data.DataTable> 内の行が読み込まれている行とどのように結合されるかを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-412">All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <xref:System.Data.DataTable> combine with rows being loaded.</span></span> <span data-ttu-id="b5f3c-413">(動作の指定を許可しないオーバーロードでは、既定の load オプションが使用されます)。次の表では、<xref:System.Data.LoadOption> 列挙型によって提供される3つの読み込みオプションについて説明します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-413">(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <xref:System.Data.LoadOption> enumeration.</span></span> <span data-ttu-id="b5f3c-414">どちらの場合も、説明は、受信データの行の主キーが既存の行の主キーと一致する場合の動作を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-414">In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</span></span>  
  
|<span data-ttu-id="b5f3c-415">Load オプション</span><span class="sxs-lookup"><span data-stu-id="b5f3c-415">Load Option</span></span>|<span data-ttu-id="b5f3c-416">説明</span><span class="sxs-lookup"><span data-stu-id="b5f3c-416">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="b5f3c-417">`PreserveChanges` (既定値)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-417">`PreserveChanges` (default)</span></span>|<span data-ttu-id="b5f3c-418">受信した行の値を使用して、行の元のバージョンを更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-418">Updates the original version of the row with the value of the incoming row.</span></span>|  
|`OverwriteChanges`|<span data-ttu-id="b5f3c-419">行の現在のバージョンと元のバージョンを、受信した行の値で更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-419">Updates the current and original versions of the row with the value of the incoming row.</span></span>|  
|`Upsert`|<span data-ttu-id="b5f3c-420">行の現在のバージョンを、受信した行の値で更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-420">Updates the current version of the row with the value of the incoming row.</span></span>|  
  
 <span data-ttu-id="b5f3c-421">一般に、`PreserveChanges` オプションと `OverwriteChanges` オプションは、ユーザーが `DataSet` とその変更をプライマリデータソースと同期する必要があるシナリオを対象としています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-421">In general, the `PreserveChanges` and `OverwriteChanges` options are intended for scenarios in which the user needs to synchronize the `DataSet` and its changes with the primary data source.</span></span> <span data-ttu-id="b5f3c-422">`Upsert` オプションを選択すると、1つまたは複数のセカンダリデータソースからの変更を簡単に集計できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-422">The `Upsert` option facilitates aggregating changes from one or more secondary data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-423">次の例は、<xref:System.Data.DataTable.Load%2A> メソッドの呼び出しに関連するいくつかの問題を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-423">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="b5f3c-424">まず、この例では、読み込まれた <xref:System.Data.IDataReader>からのスキーマの推論、互換性のないスキーマの処理、不足または追加の列を持つスキーマなど、スキーマの問題に焦点を当てています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-424">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="b5f3c-425">この例では、さまざまな読み込みオプションの処理など、データの問題に焦点を当てています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-425">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-426">この例では、`Load`のオーバーロードされたバージョンのいずれかを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-426">This example shows how to use one of the overloaded versions of `Load`.</span></span> <span data-ttu-id="b5f3c-427">使用できるその他の例については、個々のオーバーロードに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-427">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.Load" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-428">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-428">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader -&gt; unit" Usage="dataTable.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-429">結果セットを提供する <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-429">An <see cref="T:System.Data.IDataReader" /> that provides a result set.</span></span></param>
        <summary><span data-ttu-id="b5f3c-430">指定された <see cref="T:System.Data.DataTable" /> を使用し、<see cref="T:System.Data.IDataReader" /> にデータ ソースからの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-430">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="b5f3c-431"><see cref="T:System.Data.DataTable" /> が既に行を含んでいる場合、データ ソースからの受信データは既存の行にマージされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-431">If the <see cref="T:System.Data.DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-432"><xref:System.Data.DataTable.Load%2A> メソッドは、読み込まれた <xref:System.Data.IDataReader>から最初の結果セットを使用し、正常に完了した後、リーダーの位置を次の結果セットに設定します (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-432">The <xref:System.Data.DataTable.Load%2A> method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="b5f3c-433">データを変換する場合、`Load` メソッドは、<xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> メソッドと同じ変換規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-433">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b5f3c-434"><xref:System.Data.DataTable.Load%2A> メソッドでは、<xref:System.Data.IDataReader> インスタンスからデータを読み込むときに、スキーマ、データ、およびイベント操作という3つの特定の問題を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-434">The <xref:System.Data.DataTable.Load%2A> method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="b5f3c-435">スキーマを使用する場合、<xref:System.Data.DataTable.Load%2A> 方法では、次の表に示すような条件が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-435">When working with the schema, the <xref:System.Data.DataTable.Load%2A> method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="b5f3c-436">データが含まれていない場合でも、インポートされたすべての結果セットに対してスキーマ操作が行われます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-436">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="b5f3c-437">条件</span><span class="sxs-lookup"><span data-stu-id="b5f3c-437">Condition</span></span>|<span data-ttu-id="b5f3c-438">動作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-438">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="b5f3c-439"><xref:System.Data.DataTable> にはスキーマがありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-439">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="b5f3c-440"><xref:System.Data.DataTable.Load%2A> メソッドは、インポートされた <xref:System.Data.IDataReader>からの結果セットに基づいてスキーマを推測します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-440">The <xref:System.Data.DataTable.Load%2A> method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="b5f3c-441"><xref:System.Data.DataTable> にはスキーマがありますが、読み込まれたスキーマと互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-441">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="b5f3c-442"><xref:System.Data.DataTable.Load%2A> メソッドは、互換性のないスキーマにデータを読み込もうとしたときに発生する特定のエラーに対応する例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-442">The <xref:System.Data.DataTable.Load%2A> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="b5f3c-443">スキーマには互換性がありますが、読み込まれた結果セットのスキーマには、<xref:System.Data.DataTable>に存在しない列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-443">The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <xref:System.Data.DataTable>.</span></span>|<span data-ttu-id="b5f3c-444"><xref:System.Data.DataTable.Load%2A> メソッドは、`DataTable`のスキーマに余分な列を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-444">The <xref:System.Data.DataTable.Load%2A> method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="b5f3c-445"><xref:System.Data.DataTable> および読み込まれた結果セット内の対応する列が値と互換性がない場合、メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-445">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="b5f3c-446">また、このメソッドは、追加されたすべての列の結果セットから制約情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-446">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="b5f3c-447">Primary Key 制約の場合を除き、この制約情報は、現在の <xref:System.Data.DataTable> に読み込み操作の開始時に列が含まれていない場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-447">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="b5f3c-448">スキーマには互換性がありますが、読み込まれた結果セットのスキーマには、`DataTable`よりも多くの列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-448">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="b5f3c-449">存在しない列に既定値が定義されているか、列のデータ型が null 値を許容している場合、<xref:System.Data.DataTable.Load%2A> メソッドでは、欠落している列の既定値または `null` 値を置き換えることで行を追加できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-449">If a missing column has a default value defined or the column's data type is nullable, the <xref:System.Data.DataTable.Load%2A> method allows the rows to be added, substituting the default or `null` value for the missing column.</span></span> <span data-ttu-id="b5f3c-450">既定値または `null` を使用できない場合、`Load` メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-450">If no default value or `null` can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="b5f3c-451">特定の既定値が指定されていない場合、`Load` メソッドでは、暗黙的な既定値として `null` 値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-451">If no specific default value has been supplied, the `Load` method uses the `null` value as the implied default value.</span></span>|  
  
 <span data-ttu-id="b5f3c-452">データ操作の観点から `Load` 手法の動作を検討する前に、<xref:System.Data.DataTable> 内の各行が各列の現在の値と元の値の両方を保持することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-452">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="b5f3c-453">これらの値は等価である場合もあれば、`DataTable`の入力後に行のデータが変更されている場合は異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-453">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span>  <span data-ttu-id="b5f3c-454">詳細については、「[行の状態と行のバージョン](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-454">For more information, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="b5f3c-455">このバージョンの `Load` メソッドは、各行の現在の値を保持して、元の値をそのまま残します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-455">This version of the `Load` method attempts to preserve the current values in each row, leaving the original value intact.</span></span> <span data-ttu-id="b5f3c-456">(受信データの動作を細かく制御する必要がある場合は、「<xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>」を参照してください)。既存の行と受信した行に対応する主キーの値が含まれている場合、行は現在の行の状態の値を使用して処理されます。それ以外の場合は、新しい行として扱われます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-456">(If you want finer control over the behavior of incoming data, see <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="b5f3c-457">イベント操作に関しては、各行が変更される前に <xref:System.Data.DataTable.RowChanging> イベントが発生し、各行が変更された後に <xref:System.Data.DataTable.RowChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-457">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="b5f3c-458">どちらの場合も、イベントハンドラーに渡される <xref:System.Data.DataRowChangeEventArgs> インスタンスの <xref:System.Data.DataRowChangeEventArgs.Action%2A> プロパティには、イベントに関連付けられている特定のアクションに関する情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-458">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="b5f3c-459">このアクション値は、読み込み操作の前の行の状態によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-459">This action value depends on the state of the row before the load operation.</span></span> <span data-ttu-id="b5f3c-460">どちらの場合も、両方のイベントが発生し、アクションはそれぞれに対して同じです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-460">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="b5f3c-461">現在の行の状態に応じて、各行の現在のバージョンまたは元のバージョンのいずれかまたは両方にアクションを適用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-461">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="b5f3c-462">次の表に、`Load` メソッドの動作を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-462">The following table displays behavior for the `Load` method.</span></span> <span data-ttu-id="b5f3c-463">最後の行 ("(存在しない)") には、既存の行と一致しない受信行の動作が記述されています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-463">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="b5f3c-464">この表の各セルでは、行内のフィールドの現在の値と元の値、および `Load` メソッドが完了した後の値の <xref:System.Data.DataRowState> について説明しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-464">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span> <span data-ttu-id="b5f3c-465">この場合、メソッドでは load オプションを指定することはできず、既定の `PreserveChanges`を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-465">In this case, the method doesn't allow you to indicate the load option, and uses the default, `PreserveChanges`.</span></span>  
  
|<span data-ttu-id="b5f3c-466">既存の DataRowState</span><span class="sxs-lookup"><span data-stu-id="b5f3c-466">Existing DataRowState</span></span>|<span data-ttu-id="b5f3c-467">`Load` メソッドの後の値、およびイベントアクション</span><span class="sxs-lookup"><span data-stu-id="b5f3c-467">Values after `Load` method, and event action</span></span>|  
|---------------------------|--------------------------------------------------|  
|<span data-ttu-id="b5f3c-468">追加</span><span class="sxs-lookup"><span data-stu-id="b5f3c-468">Added</span></span>|<span data-ttu-id="b5f3c-469">Current = 既存の > を \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-469">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-470">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-470">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-471">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-471">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-472">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-472">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="b5f3c-473">変更日時</span><span class="sxs-lookup"><span data-stu-id="b5f3c-473">Modified</span></span>|<span data-ttu-id="b5f3c-474">Current = 既存の > を \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-474">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-475">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-475">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-476">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-476">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-477">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-477">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="b5f3c-478">Deleted</span><span class="sxs-lookup"><span data-stu-id="b5f3c-478">Deleted</span></span>|<span data-ttu-id="b5f3c-479">現在の = \<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-479">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-480">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-480">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-481">状態 = \<削除されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-481">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="b5f3c-482">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-482">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="b5f3c-483">Unchanged</span><span class="sxs-lookup"><span data-stu-id="b5f3c-483">Unchanged</span></span>|<span data-ttu-id="b5f3c-484">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-484">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-485">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-485">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-486">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-486">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-487">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-487">RowAction = ChangeCurrentAndOriginal</span></span>|  
|<span data-ttu-id="b5f3c-488">(存在しない)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-488">(Not present)</span></span>|<span data-ttu-id="b5f3c-489">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-489">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-490">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-490">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-491">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-491">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-492">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-492">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="b5f3c-493"><xref:System.Data.DataColumn> 内の値は、<xref:System.Data.DataColumn.ReadOnly%2A> や <xref:System.Data.DataColumn.AutoIncrement%2A>などのプロパティを使用して制限できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-493">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="b5f3c-494">`Load` メソッドは、列のプロパティで定義されている動作と一貫性のある方法で、このような列を処理します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-494">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="b5f3c-495"><xref:System.Data.DataColumn> の読み取り専用制約は、メモリ内で発生した変更に対してのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-495">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="b5f3c-496">`Load` メソッドは、必要に応じて、読み取り専用の列の値を上書きします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-496">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="b5f3c-497">現在の行を受信した行と比較するために使用する主キーフィールドのバージョンを決定するために、`Load` メソッドでは、行に存在する場合は、元のバージョンの primary key 値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-497">To determine which version of the primary key field to use for comparing the current row with an incoming row, the `Load` method uses the original version of the primary key value within a row, if it exists.</span></span> <span data-ttu-id="b5f3c-498">それ以外の場合、`Load` メソッドは主キーフィールドの現在のバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-498">Otherwise, the `Load` method uses the current version of the primary key field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-499">次の例は、<xref:System.Data.DataTable.Load%2A> メソッドの呼び出しに関連するいくつかの問題を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-499">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="b5f3c-500">まず、この例では、読み込まれた <xref:System.Data.IDataReader>からのスキーマの推論、互換性のないスキーマの処理、不足または追加の列を持つスキーマなど、スキーマの問題に焦点を当てています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-500">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="b5f3c-501">この例では、`Load` メソッドを呼び出し、読み込み操作の前後にデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-501">The example then calls the `Load` method, displaying the data both before and after the load operation.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-502">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-502">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-503">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-503">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader * System.Data.LoadOption -&gt; unit" Usage="dataTable.Load (reader, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-504">1 つ以上の結果セットを含む <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-504">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</span></span></param>
        <param name="loadOption"><span data-ttu-id="b5f3c-505"><see cref="T:System.Data.LoadOption" /> 列挙体の値。<see cref="T:System.Data.DataTable" /> に既に含まれている行を同じ主キーを持つ受信した行と結合する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-505">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span></span></param>
        <summary><span data-ttu-id="b5f3c-506">指定された <see cref="T:System.Data.DataTable" /> を使用し、<see cref="T:System.Data.IDataReader" /> にデータ ソースからの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-506">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="b5f3c-507"><see langword="DataTable" /> が既に行を含んでいる場合、<paramref name="loadOption" /> パラメーターの値に従って、データ ソースからの受信データは既存の行にマージされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-507">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <paramref name="loadOption" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-508">`Load` メソッドは、読み込まれた <xref:System.Data.IDataReader>から最初の結果セットを使用し、正常に完了した後、リーダーの位置を次の結果セットに設定します (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-508">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="b5f3c-509">データを変換する場合、`Load` メソッドは、<xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドと同じ変換規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-509">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-510">`Load` メソッドでは、<xref:System.Data.IDataReader> インスタンスからデータを読み込むときに、スキーマ、データ、およびイベント操作という3つの特定の問題を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-510">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="b5f3c-511">スキーマを使用する場合、`Load` 方法では、次の表に示すような条件が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-511">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="b5f3c-512">データが含まれていない場合でも、インポートされたすべての結果セットに対してスキーマ操作が行われます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-512">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="b5f3c-513">条件</span><span class="sxs-lookup"><span data-stu-id="b5f3c-513">Condition</span></span>|<span data-ttu-id="b5f3c-514">動作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-514">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="b5f3c-515"><xref:System.Data.DataTable> にはスキーマがありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-515">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="b5f3c-516">`Load` メソッドは、インポートされた <xref:System.Data.IDataReader>からの結果セットに基づいてスキーマを推測します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-516">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="b5f3c-517"><xref:System.Data.DataTable> にはスキーマがありますが、読み込まれたスキーマと互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-517">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="b5f3c-518">`Load` メソッドは、互換性のないスキーマにデータを読み込もうとしたときに発生する特定のエラーに対応する例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-518">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="b5f3c-519">スキーマには互換性がありますが、読み込まれた結果セットのスキーマには、`DataTable`に存在しない列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-519">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="b5f3c-520">`Load` メソッドは、`DataTable`のスキーマに余分な列を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-520">The `Load` method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="b5f3c-521"><xref:System.Data.DataTable> および読み込まれた結果セット内の対応する列が値と互換性がない場合、メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-521">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="b5f3c-522">また、このメソッドは、追加されたすべての列の結果セットから制約情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-522">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="b5f3c-523">Primary Key 制約の場合を除き、この制約情報は、現在の <xref:System.Data.DataTable> に読み込み操作の開始時に列が含まれていない場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-523">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="b5f3c-524">スキーマには互換性がありますが、読み込まれた結果セットのスキーマには、`DataTable`よりも多くの列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-524">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="b5f3c-525">存在しない列に既定値が定義されているか、列のデータ型が null 値を許容している場合、`Load` 方法では、欠落している列の既定値または null 値を置き換えることで行を追加できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-525">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="b5f3c-526">既定値または null を使用できない場合、`Load` メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-526">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="b5f3c-527">特定の既定値が指定されていない場合、`Load` メソッドは、暗黙的な既定値として null 値を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-527">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="b5f3c-528">データ操作の観点から `Load` 手法の動作を検討する前に、<xref:System.Data.DataTable> 内の各行が各列の現在の値と元の値の両方を保持することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-528">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="b5f3c-529">これらの値は等価である場合もあれば、`DataTable`の入力後に行のデータが変更されている場合は異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-529">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="b5f3c-530">詳細については[、「行の状態と行のバージョン](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-530">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="b5f3c-531">このメソッド呼び出しでは、指定された <xref:System.Data.LoadOption> パラメーターが受信データの処理に影響を及ぼします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-531">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="b5f3c-532">Load メソッドが、既存の行と同じ主キーを持つ行の読み込みをどのように処理するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-532">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="b5f3c-533">現在の値、元の値、またはその両方を変更する必要がありますか。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-533">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="b5f3c-534">これらの問題は、`loadOption` パラメーターによって制御されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-534">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="b5f3c-535">既存の行と受信した行に対応する主キーの値が含まれている場合、行は現在の行の状態の値を使用して処理されます。それ以外の場合は、新しい行として扱われます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-535">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="b5f3c-536">イベント操作に関しては、各行が変更される前に <xref:System.Data.DataTable.RowChanging> イベントが発生し、各行が変更された後に <xref:System.Data.DataTable.RowChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-536">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="b5f3c-537">どちらの場合も、イベントハンドラーに渡される <xref:System.Data.DataRowChangeEventArgs> インスタンスの <xref:System.Data.DataRowChangeEventArgs.Action%2A> プロパティには、イベントに関連付けられている特定のアクションに関する情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-537">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="b5f3c-538">このアクション値は、読み込み操作の前の行の状態によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-538">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="b5f3c-539">どちらの場合も、両方のイベントが発生し、アクションはそれぞれに対して同じです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-539">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="b5f3c-540">現在の行の状態に応じて、各行の現在のバージョンまたは元のバージョンのいずれかまたは両方にアクションを適用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-540">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="b5f3c-541">次の表は、`LoadOption` の各値と共に呼び出された場合の Load メソッドの動作と、値が読み込み中の行の行の状態とどのように対話するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-541">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="b5f3c-542">最後の行 ("(存在しない)") には、既存の行と一致しない受信行の動作が記述されています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-542">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="b5f3c-543">この表の各セルでは、行内のフィールドの現在の値と元の値、および `Load` メソッドが完了した後の値の <xref:System.Data.DataRowState> について説明しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-543">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="b5f3c-544">既存の DataRowState</span><span class="sxs-lookup"><span data-stu-id="b5f3c-544">Existing DataRowState</span></span>|<span data-ttu-id="b5f3c-545">Upsert</span><span class="sxs-lookup"><span data-stu-id="b5f3c-545">Upsert</span></span>|<span data-ttu-id="b5f3c-546">過剰 Writの場合</span><span class="sxs-lookup"><span data-stu-id="b5f3c-546">OverwriteChanges</span></span>|<span data-ttu-id="b5f3c-547">PreserveChanges (既定の動作)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-547">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="b5f3c-548">追加</span><span class="sxs-lookup"><span data-stu-id="b5f3c-548">Added</span></span>|<span data-ttu-id="b5f3c-549">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-549">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-550">Original =-\<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-550">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-551">State = \<追加されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-551">State = \<Added></span></span><br /><br /> <span data-ttu-id="b5f3c-552">RowAction = 変更</span><span class="sxs-lookup"><span data-stu-id="b5f3c-552">RowAction = Change</span></span>|<span data-ttu-id="b5f3c-553">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-553">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-554">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-554">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-555">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-555">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-556">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-556">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-557">Current = 既存の > を \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-557">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-558">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-558">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-559">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-559">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-560">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-560">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="b5f3c-561">変更日時</span><span class="sxs-lookup"><span data-stu-id="b5f3c-561">Modified</span></span>|<span data-ttu-id="b5f3c-562">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-562">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-563">Original = 既存の > の \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-563">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-564">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-564">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-565">RowAction = 変更</span><span class="sxs-lookup"><span data-stu-id="b5f3c-565">RowAction = Change</span></span>|<span data-ttu-id="b5f3c-566">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-566">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-567">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-567">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-568">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-568">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-569">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-569">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-570">Current = 既存の > を \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-570">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-571">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-571">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-572">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-572">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-573">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-573">RowAction =ChangeOriginal</span></span>|  
|<span data-ttu-id="b5f3c-574">Deleted</span><span class="sxs-lookup"><span data-stu-id="b5f3c-574">Deleted</span></span>|<span data-ttu-id="b5f3c-575">(読み込みは削除された行には影響しません)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-575">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="b5f3c-576">現在の =---</span><span class="sxs-lookup"><span data-stu-id="b5f3c-576">Current = ---</span></span><br /><br /> <span data-ttu-id="b5f3c-577">Original = 既存の > の \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-577">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-578">状態 = \<削除されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-578">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="b5f3c-579">(新しい行は次の特性で追加されます)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-579">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="b5f3c-580">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-580">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-581">Original = \<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-581">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-582">State = \<追加されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-582">State = \<Added></span></span><br /><br /> <span data-ttu-id="b5f3c-583">RowAction = Add</span><span class="sxs-lookup"><span data-stu-id="b5f3c-583">RowAction = Add</span></span>|<span data-ttu-id="b5f3c-584">削除を元に戻すと</span><span class="sxs-lookup"><span data-stu-id="b5f3c-584">Undo delete and</span></span><br /><br /> <span data-ttu-id="b5f3c-585">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-585">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-586">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-586">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-587">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-587">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-588">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-588">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-589">現在の = \<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-589">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-590">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-590">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-591">状態 = \<削除されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-591">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="b5f3c-592">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-592">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="b5f3c-593">Unchanged</span><span class="sxs-lookup"><span data-stu-id="b5f3c-593">Unchanged</span></span>|<span data-ttu-id="b5f3c-594">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-594">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-595">Original = 既存の > の \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-595">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-596">新しい値が既存の値と同じ場合は、</span><span class="sxs-lookup"><span data-stu-id="b5f3c-596">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="b5f3c-597">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-597">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-598">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="b5f3c-598">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="b5f3c-599">Else</span><span class="sxs-lookup"><span data-stu-id="b5f3c-599">Else</span></span><br /><br /> <span data-ttu-id="b5f3c-600">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-600">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-601">RowAction = 変更</span><span class="sxs-lookup"><span data-stu-id="b5f3c-601">RowAction = Change</span></span>|<span data-ttu-id="b5f3c-602">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-602">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-603">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-603">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-604">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-604">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-605">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-605">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-606">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-606">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-607">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-607">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-608">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-608">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-609">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-609">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="b5f3c-610">存在しない)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-610">Not present)</span></span>|<span data-ttu-id="b5f3c-611">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-611">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-612">Original = \<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-612">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-613">State = \<追加されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-613">State = \<Added></span></span><br /><br /> <span data-ttu-id="b5f3c-614">RowAction = Add</span><span class="sxs-lookup"><span data-stu-id="b5f3c-614">RowAction = Add</span></span>|<span data-ttu-id="b5f3c-615">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-615">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-616">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-616">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-617">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-617">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-618">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-618">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-619">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-619">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-620">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-620">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-621">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-621">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-622">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-622">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="b5f3c-623"><xref:System.Data.DataColumn> 内の値は、<xref:System.Data.DataColumn.ReadOnly%2A> や <xref:System.Data.DataColumn.AutoIncrement%2A>などのプロパティを使用して制限できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-623">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="b5f3c-624">`Load` メソッドは、列のプロパティで定義されている動作と一貫性のある方法で、このような列を処理します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-624">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="b5f3c-625"><xref:System.Data.DataColumn> の読み取り専用制約は、メモリ内で発生した変更に対してのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-625">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="b5f3c-626">`Load` メソッドは、必要に応じて、読み取り専用の列の値を上書きします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-626">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="b5f3c-627">`Load` メソッドを呼び出すときに OverwriteChanges オプションまたは PreserveChanges オプションを指定すると、受信データが `DataTable`のプライマリデータソースから送信され、DataTable が変更を追跡して変更を反映できることが前提となります。データソースに戻ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-627">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="b5f3c-628">Upsert オプションを選択した場合、データは、ユーザーによって変更された可能性がある中間層コンポーネントによって提供されるデータなど、セカンダリデータソースのいずれかから送信されるものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-628">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="b5f3c-629">この場合、`DataTable`内の1つ以上のデータソースからデータを集計し、データをプライマリデータソースに反映することが意図されています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-629">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="b5f3c-630"><xref:System.Data.LoadOption> パラメーターは、主キーの比較に使用する行の特定のバージョンを決定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-630">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="b5f3c-631">次の表に詳細を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-631">The table below provides the details.</span></span>  
  
|<span data-ttu-id="b5f3c-632">Load オプション</span><span class="sxs-lookup"><span data-stu-id="b5f3c-632">Load option</span></span>|<span data-ttu-id="b5f3c-633">主キーの比較に使用される DataRow のバージョン</span><span class="sxs-lookup"><span data-stu-id="b5f3c-633">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="b5f3c-634">元のバージョン (存在する場合)、それ以外の場合は現在のバージョン</span><span class="sxs-lookup"><span data-stu-id="b5f3c-634">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="b5f3c-635">元のバージョン (存在する場合)、それ以外の場合は現在のバージョン</span><span class="sxs-lookup"><span data-stu-id="b5f3c-635">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="b5f3c-636">現在のバージョン (存在する場合)、それ以外の場合は元のバージョン</span><span class="sxs-lookup"><span data-stu-id="b5f3c-636">Current version, if it exists, otherwise Original version</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-637">次の例は、<xref:System.Data.DataTable.Load%2A> メソッドの呼び出しに関連するいくつかの問題を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-637">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="b5f3c-638">まず、この例では、読み込まれた <xref:System.Data.IDataReader>からのスキーマの推論、互換性のないスキーマの処理、不足または追加の列を持つスキーマなど、スキーマの問題に焦点を当てています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-638">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="b5f3c-639">この例では、さまざまな読み込みオプションの処理など、データの問題に焦点を当てています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-639">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-640">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-640">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-641">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-641">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit&#xA;override this.Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit" Usage="dataTable.Load (reader, loadOption, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-642">結果セットを提供する <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-642">A <see cref="T:System.Data.IDataReader" /> that provides a result set.</span></span></param>
        <param name="loadOption"><span data-ttu-id="b5f3c-643"><see cref="T:System.Data.LoadOption" /> 列挙体の値。<see cref="T:System.Data.DataTable" /> に既に含まれている行を同じ主キーを持つ受信した行と結合する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-643">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span></span></param>
        <param name="errorHandler"><span data-ttu-id="b5f3c-644">データの読み込み中にエラーが発生した場合に呼び出される <see cref="T:System.Data.FillErrorEventHandler" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-644">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-645">エラー処理デリゲートを使用し、指定された <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.IDataReader" /> にデータ ソースからの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-645">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" /> using an error-handling delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-646">`Load` メソッドは、読み込まれた <xref:System.Data.IDataReader>から最初の結果セットを使用し、正常に完了した後、リーダーの位置を次の結果セットに設定します (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-646">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="b5f3c-647">データを変換する場合、`Load` メソッドは、<xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> メソッドと同じ変換規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-647">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b5f3c-648">`Load` メソッドでは、<xref:System.Data.IDataReader> インスタンスからデータを読み込むときに、スキーマ、データ、およびイベント操作という3つの特定の問題を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-648">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="b5f3c-649">スキーマを使用する場合、`Load` 方法では、次の表に示すような条件が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-649">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="b5f3c-650">データが含まれていない場合でも、インポートされたすべての結果セットに対してスキーマ操作が行われます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-650">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="b5f3c-651">条件</span><span class="sxs-lookup"><span data-stu-id="b5f3c-651">Condition</span></span>|<span data-ttu-id="b5f3c-652">動作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-652">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="b5f3c-653"><xref:System.Data.DataTable> にはスキーマがありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-653">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="b5f3c-654">`Load` メソッドは、インポートされた <xref:System.Data.IDataReader>からの結果セットに基づいてスキーマを推測します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-654">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="b5f3c-655"><xref:System.Data.DataTable> にはスキーマがありますが、読み込まれたスキーマと互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-655">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="b5f3c-656">`Load` メソッドは、互換性のないスキーマにデータを読み込もうとしたときに発生する特定のエラーに対応する例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-656">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="b5f3c-657">スキーマには互換性がありますが、読み込まれた結果セットのスキーマには、`DataTable`に存在しない列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-657">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="b5f3c-658">`Load` メソッドは、`DataTable`のスキーマに余分な列を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-658">The `Load` method adds the extra column(s) to `DataTable`'s schema.</span></span> <span data-ttu-id="b5f3c-659"><xref:System.Data.DataTable> および読み込まれた結果セット内の対応する列が値と互換性がない場合、メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-659">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="b5f3c-660">また、このメソッドは、追加されたすべての列の結果セットから制約情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-660">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="b5f3c-661">Primary Key 制約の場合を除き、この制約情報は、現在の <xref:System.Data.DataTable> に読み込み操作の開始時に列が含まれていない場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-661">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="b5f3c-662">スキーマには互換性がありますが、読み込まれた結果セットのスキーマには、`DataTable`よりも多くの列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-662">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="b5f3c-663">存在しない列に既定値が定義されているか、列のデータ型が null 値を許容している場合、`Load` 方法では、欠落している列の既定値または null 値を置き換えることで行を追加できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-663">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="b5f3c-664">既定値または null を使用できない場合、`Load` メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-664">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="b5f3c-665">特定の既定値が指定されていない場合、`Load` メソッドは、暗黙的な既定値として null 値を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-665">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="b5f3c-666">データ操作の観点から `Load` 手法の動作を検討する前に、<xref:System.Data.DataTable> 内の各行が各列の現在の値と元の値の両方を保持することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-666">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="b5f3c-667">これらの値は等価である場合もあれば、`DataTable`の入力後に行のデータが変更されている場合は異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-667">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="b5f3c-668">詳細については[、「行の状態と行のバージョン](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-668">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="b5f3c-669">このメソッド呼び出しでは、指定された <xref:System.Data.LoadOption> パラメーターが受信データの処理に影響を及ぼします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-669">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="b5f3c-670">Load メソッドが、既存の行と同じ主キーを持つ行の読み込みをどのように処理するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-670">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="b5f3c-671">現在の値、元の値、またはその両方を変更する必要がありますか。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-671">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="b5f3c-672">これらの問題は、`loadOption` パラメーターによって制御されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-672">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="b5f3c-673">既存の行と受信した行に対応する主キーの値が含まれている場合、行は現在の行の状態の値を使用して処理されます。それ以外の場合は、新しい行として扱われます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-673">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="b5f3c-674">イベント操作に関しては、各行が変更される前に <xref:System.Data.DataTable.RowChanging> イベントが発生し、各行が変更された後に <xref:System.Data.DataTable.RowChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-674">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="b5f3c-675">どちらの場合も、イベントハンドラーに渡される <xref:System.Data.DataRowChangeEventArgs> インスタンスの <xref:System.Data.DataRowChangeEventArgs.Action%2A> プロパティには、イベントに関連付けられている特定のアクションに関する情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-675">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="b5f3c-676">このアクション値は、読み込み操作の前の行の状態によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-676">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="b5f3c-677">どちらの場合も、両方のイベントが発生し、アクションはそれぞれに対して同じです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-677">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="b5f3c-678">現在の行の状態に応じて、各行の現在のバージョンまたは元のバージョンのいずれかまたは両方にアクションを適用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-678">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="b5f3c-679">次の表は、`LoadOption` の各値と共に呼び出された場合の Load メソッドの動作と、値が読み込み中の行の行の状態とどのように対話するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-679">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="b5f3c-680">最後の行 ("(存在しない)") には、既存の行と一致しない受信行の動作が記述されています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-680">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="b5f3c-681">この表の各セルでは、行内のフィールドの現在の値と元の値、および `Load` メソッドが完了した後の値の <xref:System.Data.DataRowState> について説明しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-681">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="b5f3c-682">既存の DataRowState</span><span class="sxs-lookup"><span data-stu-id="b5f3c-682">Existing DataRowState</span></span>|<span data-ttu-id="b5f3c-683">Upsert</span><span class="sxs-lookup"><span data-stu-id="b5f3c-683">Upsert</span></span>|<span data-ttu-id="b5f3c-684">過剰 Writの場合</span><span class="sxs-lookup"><span data-stu-id="b5f3c-684">OverwriteChanges</span></span>|<span data-ttu-id="b5f3c-685">PreserveChanges (既定の動作)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-685">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="b5f3c-686">追加</span><span class="sxs-lookup"><span data-stu-id="b5f3c-686">Added</span></span>|<span data-ttu-id="b5f3c-687">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-687">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-688">Original =-\<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-688">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-689">State = \<追加されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-689">State = \<Added></span></span><br /><br /> <span data-ttu-id="b5f3c-690">RowAction = 変更</span><span class="sxs-lookup"><span data-stu-id="b5f3c-690">RowAction = Change</span></span>|<span data-ttu-id="b5f3c-691">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-691">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-692">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-692">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-693">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-693">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-694">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-694">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-695">Current = 既存の > を \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-695">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-696">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-696">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-697">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-697">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-698">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-698">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="b5f3c-699">変更日時</span><span class="sxs-lookup"><span data-stu-id="b5f3c-699">Modified</span></span>|<span data-ttu-id="b5f3c-700">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-700">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-701">Original = 既存の > の \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-701">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-702">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-702">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-703">RowAction = 変更</span><span class="sxs-lookup"><span data-stu-id="b5f3c-703">RowAction = Change</span></span>|<span data-ttu-id="b5f3c-704">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-704">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-705">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-705">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-706">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-706">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-707">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-707">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-708">Current = 既存の > を \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-708">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-709">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-709">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-710">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-710">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-711">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-711">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="b5f3c-712">eleted</span><span class="sxs-lookup"><span data-stu-id="b5f3c-712">eleted</span></span>|<span data-ttu-id="b5f3c-713">(読み込みは削除された行には影響しません)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-713">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="b5f3c-714">現在の =---</span><span class="sxs-lookup"><span data-stu-id="b5f3c-714">Current = ---</span></span><br /><br /> <span data-ttu-id="b5f3c-715">Original = 既存の > の \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-715">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-716">状態 = \<削除されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-716">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="b5f3c-717">(新しい行は次の特性で追加されます)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-717">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="b5f3c-718">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-718">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-719">Original = \<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-719">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-720">State = \<追加されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-720">State = \<Added></span></span><br /><br /> <span data-ttu-id="b5f3c-721">RowAction = Add</span><span class="sxs-lookup"><span data-stu-id="b5f3c-721">RowAction = Add</span></span>|<span data-ttu-id="b5f3c-722">削除を元に戻すと</span><span class="sxs-lookup"><span data-stu-id="b5f3c-722">Undo delete and</span></span><br /><br /> <span data-ttu-id="b5f3c-723">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-723">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-724">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-724">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-725">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-725">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-726">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-726">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-727">現在の = \<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-727">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-728">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-728">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-729">状態 = \<削除されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-729">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="b5f3c-730">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-730">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="b5f3c-731">Unchanged</span><span class="sxs-lookup"><span data-stu-id="b5f3c-731">Unchanged</span></span>|<span data-ttu-id="b5f3c-732">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-732">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-733">Original = 既存の > の \<</span><span class="sxs-lookup"><span data-stu-id="b5f3c-733">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="b5f3c-734">新しい値が既存の値と同じ場合は、</span><span class="sxs-lookup"><span data-stu-id="b5f3c-734">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="b5f3c-735">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-735">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-736">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="b5f3c-736">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="b5f3c-737">Else</span><span class="sxs-lookup"><span data-stu-id="b5f3c-737">Else</span></span><br /><br /> <span data-ttu-id="b5f3c-738">状態 = \<変更 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-738">State = \<Modified></span></span><br /><br /> <span data-ttu-id="b5f3c-739">RowAction = 変更</span><span class="sxs-lookup"><span data-stu-id="b5f3c-739">RowAction = Change</span></span>|<span data-ttu-id="b5f3c-740">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-740">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-741">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-741">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-742">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-742">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-743">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-743">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-744">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-744">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-745">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-745">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-746">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-746">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-747">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-747">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="b5f3c-748">存在しない)</span><span class="sxs-lookup"><span data-stu-id="b5f3c-748">Not present)</span></span>|<span data-ttu-id="b5f3c-749">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-749">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-750">Original = \<使用できません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-750">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="b5f3c-751">State = \<追加されました ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-751">State = \<Added></span></span><br /><br /> <span data-ttu-id="b5f3c-752">RowAction = Add</span><span class="sxs-lookup"><span data-stu-id="b5f3c-752">RowAction = Add</span></span>|<span data-ttu-id="b5f3c-753">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-753">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-754">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-754">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-755">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-755">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-756">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-756">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="b5f3c-757">Current = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-757">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-758">Original = \<受信 ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-758">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="b5f3c-759">State = \<変更されていません ></span><span class="sxs-lookup"><span data-stu-id="b5f3c-759">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="b5f3c-760">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="b5f3c-760">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="b5f3c-761"><xref:System.Data.DataColumn> 内の値は、<xref:System.Data.DataColumn.ReadOnly%2A> や <xref:System.Data.DataColumn.AutoIncrement%2A>などのプロパティを使用して制限できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-761">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="b5f3c-762">`Load` メソッドは、列のプロパティで定義されている動作と一貫性のある方法で、このような列を処理します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-762">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="b5f3c-763"><xref:System.Data.DataColumn> の読み取り専用制約は、メモリ内で発生した変更に対してのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-763">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="b5f3c-764">`Load` メソッドは、必要に応じて、読み取り専用の列の値を上書きします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-764">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="b5f3c-765">`Load` メソッドを呼び出すときに OverwriteChanges オプションまたは PreserveChanges オプションを指定すると、受信データが `DataTable`のプライマリデータソースから送信され、DataTable が変更を追跡して変更を反映できることが前提となります。データソースに戻ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-765">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="b5f3c-766">Upsert オプションを選択した場合、データは、ユーザーによって変更された可能性がある中間層コンポーネントによって提供されるデータなど、セカンダリデータソースのいずれかから送信されるものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-766">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="b5f3c-767">この場合、`DataTable`内の1つ以上のデータソースからデータを集計し、データをプライマリデータソースに反映することが意図されています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-767">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="b5f3c-768"><xref:System.Data.LoadOption> パラメーターは、主キーの比較に使用する行の特定のバージョンを決定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-768">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="b5f3c-769">次の表に詳細を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-769">The table below provides the details.</span></span>  
  
|<span data-ttu-id="b5f3c-770">Load オプション</span><span class="sxs-lookup"><span data-stu-id="b5f3c-770">Load option</span></span>|<span data-ttu-id="b5f3c-771">主キーの比較に使用される DataRow のバージョン</span><span class="sxs-lookup"><span data-stu-id="b5f3c-771">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="b5f3c-772">元のバージョン (存在する場合)、それ以外の場合は現在のバージョン</span><span class="sxs-lookup"><span data-stu-id="b5f3c-772">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="b5f3c-773">元のバージョン (存在する場合)、それ以外の場合は現在のバージョン</span><span class="sxs-lookup"><span data-stu-id="b5f3c-773">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="b5f3c-774">現在のバージョン (存在する場合)、それ以外の場合は元のバージョン</span><span class="sxs-lookup"><span data-stu-id="b5f3c-774">Current version, if it exists, otherwise Original version</span></span>|  
  
 <span data-ttu-id="b5f3c-775">`errorHandler` パラメーターは、データの読み込み中にエラーが発生したときに呼び出されるプロシージャを参照する <xref:System.Data.FillErrorEventHandler> デリゲートです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-775">The `errorHandler` parameter is a <xref:System.Data.FillErrorEventHandler> delegate that refers to a procedure that is called when an error occurs while loading data.</span></span> <span data-ttu-id="b5f3c-776">プロシージャに渡される <xref:System.Data.FillErrorEventArgs> パラメーターには、発生したエラー、データの現在の行、および格納されている <xref:System.Data.DataTable> に関する情報を取得するためのプロパティが用意されています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-776">The <xref:System.Data.FillErrorEventArgs> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <xref:System.Data.DataTable> being filled.</span></span> <span data-ttu-id="b5f3c-777">より単純な try/catch ブロックではなく、このデリゲートメカニズムを使用すると、エラーを特定し、状況を処理し、必要に応じて処理を続行できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-777">Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</span></span> <span data-ttu-id="b5f3c-778"><xref:System.Data.FillErrorEventArgs> パラメーターは <xref:System.Data.FillErrorEventArgs.Continue%2A> プロパティを提供します。このプロパティを `true` に設定して、エラーを処理し、処理を続行することを示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-778">The <xref:System.Data.FillErrorEventArgs> parameter supplies a <xref:System.Data.FillErrorEventArgs.Continue%2A> property: set this property to `true` to indicate that you have handled the error and wish to continue processing.</span></span> <span data-ttu-id="b5f3c-779">プロパティを `false` に設定して、処理を停止することを指定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-779">Set the property to `false` to indicate that you wish to halt processing.</span></span> <span data-ttu-id="b5f3c-780">プロパティを `false` に設定すると、問題を発生させたコードが例外をスローすることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-780">Be aware that setting the property to `false` causes the code that triggered the problem to throw an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-781">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-781">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-782">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-782">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadDataRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-783">特定の行を検索し、更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-783">Finds and updates a specific row.</span></span> <span data-ttu-id="b5f3c-784">一致する行が見つからない場合は、指定した値を使用して新しい行が作成されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-784">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-785">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-785">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, bool fAcceptChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, bool fAcceptChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadDataRow (values As Object(), fAcceptChanges As Boolean) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, bool fAcceptChanges);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * bool -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, fAcceptChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="fAcceptChanges" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="b5f3c-786">新しい行の作成に使用する値の配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-786">An array of values used to create the new row.</span></span></param>
        <param name="fAcceptChanges"><span data-ttu-id="b5f3c-787">変更を受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-787"><see langword="true" /> to accept changes; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b5f3c-788">特定の行を検索し、更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-788">Finds and updates a specific row.</span></span> <span data-ttu-id="b5f3c-789">一致する行が見つからない場合は、指定した値を使用して新しい行が作成されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-789">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-790">新しい <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-790">The new <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-791"><xref:System.Data.DataTable.LoadDataRow%2A> メソッドは、値の配列を受け取り、主キー列の一致する値を検索します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-791">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="b5f3c-792">列に既定値がある場合は、その列の既定値を設定するために、配列に null 値を渡します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-792">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="b5f3c-793">同様に、列の <xref:System.Data.DataColumn.AutoIncrement%2A> プロパティが true に設定されている場合は、配列に null 値を渡して、自動的に生成される行の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-793">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="b5f3c-794">`fAcceptChanges` パラメーターが `true` または指定されていない場合は、新しいデータが追加され、<xref:System.Data.DataTable>のすべての変更を受け入れるために <xref:System.Data.DataTable.AcceptChanges%2A> が呼び出されます。引数が `false`場合、新しく追加された行は挿入としてマークされ、既存の行に対する変更は変更としてマークされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-794">If the `fAcceptChanges` parameter is `true` or not specified, the new data is added and then <xref:System.Data.DataTable.AcceptChanges%2A> is called to accept all changes in the <xref:System.Data.DataTable>; if the argument is `false`, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</span></span>  
  
 <span data-ttu-id="b5f3c-795">例外は、<xref:System.Data.DataTable.ColumnChanging> または <xref:System.Data.DataTable.RowChanging> のいずれかのイベント中に発生することもあります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-795">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="b5f3c-796">例外が発生した場合、行はテーブルに追加されません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-796">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="b5f3c-797"><xref:System.Data.DataTable.LoadDataRow%2A> は、<xref:System.Data.DataTable.BeginLoadData%2A> と <xref:System.Data.DataTable.EndLoadData%2A>と組み合わせて使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-797">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-798">次の例では、<xref:System.Data.DataTable.LoadDataRow%2A> メソッドを使用して、行を検索します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-798">The following example uses the <xref:System.Data.DataTable.LoadDataRow%2A> method to attempt to find a row.</span></span> <span data-ttu-id="b5f3c-799">そのような行が見つからない場合は、値を使用して新しい行が作成されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-799">If no such row is found, the values are used to create a new row.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b5f3c-800">配列がテーブルの列数より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-800">The array is larger than the number of columns in the table.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b5f3c-801">値が各列の型と一致していません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-801">A value doesn't match its respective column type.</span></span></exception>
        <exception cref="T:System.Data.ConstraintException"><span data-ttu-id="b5f3c-802">この行を追加すると、制約が無効になります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-802">Adding the row invalidates a constraint.</span></span></exception>
        <exception cref="T:System.Data.NoNullAllowedException"><span data-ttu-id="b5f3c-803"><see cref="P:System.Data.DataColumn.AllowDBNull" /> が false である列に null を格納しようとしています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-803">Attempting to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-804">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-804">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-805">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-805">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * System.Data.LoadOption -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="b5f3c-806">新しい行の作成に使用する値の配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-806">An array of values used to create the new row.</span></span></param>
        <param name="loadOption"><span data-ttu-id="b5f3c-807">配列値を既存の行にある対応する値に適用する方法を決定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-807">Used to determine how the array values are applied to the corresponding values in an existing row.</span></span></param>
        <summary><span data-ttu-id="b5f3c-808">特定の行を検索し、更新します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-808">Finds and updates a specific row.</span></span> <span data-ttu-id="b5f3c-809">一致する行が見つからない場合は、指定した値を使用して新しい行が作成されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-809">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-810">新しい <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-810">The new <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-811"><xref:System.Data.DataTable.LoadDataRow%2A> メソッドは、値の配列を受け取り、主キー列の一致する値を検索します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-811">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="b5f3c-812">列に既定値がある場合は、その列の既定値を設定するために、配列に null 値を渡します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-812">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="b5f3c-813">同様に、列の <xref:System.Data.DataColumn.AutoIncrement%2A> プロパティが true に設定されている場合は、配列に null 値を渡して、自動的に生成される行の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-813">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="b5f3c-814">`loadOption` パラメーターの値は、配列内の値が既存の行に適用される方法を決定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-814">The value of the `loadOption` parameter is used to determine how the values in the array are applied to an existing row.</span></span> <span data-ttu-id="b5f3c-815">たとえば、`loadOption` が `OverwriteChanges`に設定されている場合、各列の `Original` と `Current` の値が、受信した行の値に置き換えられ、`RowState` プロパティが `Unchanged`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-815">For example, if `loadOption` is set to `OverwriteChanges`, the `Original` and `Current` values of each column are replaced with the values in the incoming row and the `RowState` property is set to `Unchanged`.</span></span>  
  
 <span data-ttu-id="b5f3c-816">例外は、<xref:System.Data.DataTable.ColumnChanging> または <xref:System.Data.DataTable.RowChanging> のいずれかのイベント中に発生することもあります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-816">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="b5f3c-817">例外が発生した場合、行はテーブルに追加されません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-817">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="b5f3c-818"><xref:System.Data.DataTable.LoadDataRow%2A> は、<xref:System.Data.DataTable.BeginLoadData%2A> と <xref:System.Data.DataTable.EndLoadData%2A>と組み合わせて使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-818">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-819">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-819">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Locale" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Locale { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Locale : System.Globalization.CultureInfo with get, set" Usage="System.Data.DataTable.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableLocaleDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-820">テーブル内の文字列の比較に使用するロケール情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-820">Gets or sets the locale information used to compare strings within the table.</span></span></summary>
        <value><span data-ttu-id="b5f3c-821">ユーザーのコンピューターのロケールについてのデータが格納されている <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-821">A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale.</span></span> <span data-ttu-id="b5f3c-822">既定値は <see cref="T:System.Data.DataSet" /> が属する <see cref="T:System.Globalization.CultureInfo" /> オブジェクトの (<see cref="P:System.Data.DataSet.Locale" /> プロパティによって返される) <see cref="T:System.Data.DataTable" /> です。テーブルが <see cref="T:System.Data.DataSet" /> に属さない場合、既定値は現在のシステムの <see cref="T:System.Globalization.CultureInfo" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-822">The default is the <see cref="T:System.Data.DataSet" /> object's <see cref="T:System.Globalization.CultureInfo" /> (returned by the <see cref="P:System.Data.DataSet.Locale" /> property) to which the <see cref="T:System.Data.DataTable" /> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet" />, the default is the current system <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-823"><xref:System.Globalization.CultureInfo> は、特定のカルチャまたはコミュニティのソフトウェアの設定を表します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-823">A <xref:System.Globalization.CultureInfo> represents the software preferences of a particular culture or community.</span></span>  
  
 <span data-ttu-id="b5f3c-824">文字列比較に使用する場合、<xref:System.Globalization.CultureInfo> は並べ替え、比較、およびフィルター処理に影響します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-824">When used for string comparisons, the <xref:System.Globalization.CultureInfo> affects sorting, comparisons, and filtering.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-825">式を含む列では、<xref:System.StringComparison.InvariantCulture> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-825">In columns that contain expressions, the <xref:System.StringComparison.InvariantCulture> is used.</span></span> <span data-ttu-id="b5f3c-826"><xref:System.StringComparison.CurrentCulture> は無視されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-826">The <xref:System.StringComparison.CurrentCulture> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-827">次の例では、<xref:System.Data.DataTable.Locale%2A> を使用して <xref:System.Globalization.CultureInfo> を設定し、ISO 言語名を出力します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-827">The following example sets the <xref:System.Globalization.CultureInfo> through the <xref:System.Data.DataTable.Locale%2A> and prints the ISO language name.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Locale Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Locale Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-828">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-828">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-829">指定した <see cref="T:System.Data.DataTable" /> を現在の <see cref="T:System.Data.DataTable" /> とマージします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-829">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-830">`Merge` メソッドは、ほぼ類似したスキーマを持つ2つの <xref:System.Data.DataTable> オブジェクトをマージするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-830">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="b5f3c-831">通常、マージはクライアントアプリケーションで使用され、データソースからの最新の変更内容を既存の <xref:System.Data.DataTable>に組み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-831">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-832">これにより、クライアントアプリケーションは、データソースの最新のデータを使用して <xref:System.Data.DataTable> を更新できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-832">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="b5f3c-833">マージ操作では、元のテーブルとマージするテーブルだけが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-833">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="b5f3c-834">子テーブルは、影響を受けたり、含まれたりすることはありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-834">Child tables are not affected or included.</span></span> <span data-ttu-id="b5f3c-835">テーブルに1つ以上の子テーブルがあり、リレーションシップの一部として定義されている場合は、各子テーブルを個別にマージする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-835">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-836">次のコンソールアプリケーションは、<xref:System.Data.DataTable.Merge%2A> メソッドの `missingSchemaAction` パラメーターの動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-836">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="b5f3c-837">次の例では、同じテーブルの2つのバージョンを作成し、2つ目のバージョンのスキーマを変更します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-837">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="b5f3c-838">次に、コードは2番目のテーブルを最初のテーブルにマージしようとします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-838">The code then attempts to merge the second table into the first.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-839">次の例では、いずれかのオーバーロードされたバージョンの Merge を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-839">This example shows how to use one of the overloaded versions of Merge.</span></span> <span data-ttu-id="b5f3c-840">使用できるその他の例については、個々のオーバーロードに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-840">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableMergeOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableMergeOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-841">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-841">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable -&gt; unit" Usage="dataTable.Merge table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b5f3c-842">現在の <see cref="T:System.Data.DataTable" /> とマージする <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-842">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span></span></param>
        <summary><span data-ttu-id="b5f3c-843">指定した <see cref="T:System.Data.DataTable" /> を現在の <see cref="T:System.Data.DataTable" /> とマージします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-843">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-844">Merge メソッドは、ほぼ類似したスキーマを持つ2つの <xref:System.Data.DataTable> オブジェクトをマージするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-844">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="b5f3c-845">通常、マージはクライアントアプリケーションで使用され、データソースからの最新の変更内容を既存の <xref:System.Data.DataTable>に組み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-845">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-846">これにより、クライアントアプリケーションは、データソースの最新のデータを使用して <xref:System.Data.DataTable> を更新できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-846">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="b5f3c-847">マージ操作では、元のテーブルとマージするテーブルだけが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-847">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="b5f3c-848">子テーブルは、影響を受けたり、含まれたりすることはありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-848">Child tables are not affected or included.</span></span> <span data-ttu-id="b5f3c-849">テーブルに1つ以上の子テーブルがあり、リレーションシップの一部として定義されている場合は、各子テーブルを個別にマージする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-849">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="b5f3c-850">`Merge` メソッドは、変更の検証、エラーの調整、変更によるデータソースの更新、最後に既存の <xref:System.Data.DataTable>の更新を伴う一連の手順の最後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-850">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="b5f3c-851">マージを実行すると、マージ操作中に既存のデータに加えられた変更が既定で保持されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-851">When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</span></span> <span data-ttu-id="b5f3c-852">開発者は、このメソッドの他の2つのオーバーロードのいずれかを呼び出し、`preserveChanges` パラメーターに false 値を指定することによって、この動作を変更できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-852">Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the `preserveChanges` parameter.</span></span>  
  
 <span data-ttu-id="b5f3c-853">クライアントアプリケーションでは、通常、1つのボタンをクリックするだけで、変更されたデータを収集し、中間層コンポーネントに送信する前にそのデータを検証することができます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-853">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="b5f3c-854">このシナリオでは、<xref:System.Data.DataTable.GetChanges%2A> メソッドが最初に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-854">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="b5f3c-855">このメソッドは、検証とマージのために最適化された2番目の <xref:System.Data.DataTable> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-855">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="b5f3c-856">この2番目の <xref:System.Data.DataTable> オブジェクトには、変更された <xref:System.Data.DataRow> オブジェクトのみが含まれ、その結果、元の <xref:System.Data.DataTable>のサブセットになります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-856">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-857">通常、このサブセットは小さいため、中間層コンポーネントにより効率的に戻されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-857">This subset is generally smaller and thus more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="b5f3c-858">次に、中間層コンポーネントによって、元のデータソースが、ストアドプロシージャによって変更されて更新されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-858">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="b5f3c-859">その後、中間層では、元のデータを含む新しい <xref:System.Data.DataTable> とデータソースの最新のデータ (元のクエリを再度実行) のいずれかを返すことができます。または、データソースから変更を加えたサブセットを送信することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-859">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="b5f3c-860">(たとえば、データソースによって一意の主キー値が自動的に作成された場合、これらの値をクライアントアプリケーションに反映させることができます)。どちらの場合も、返された <xref:System.Data.DataTable> は、<xref:System.Data.DataTable.Merge%2A> メソッドを使用して、クライアントアプリケーションの元の <xref:System.Data.DataTable> に再びマージできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-860">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-861">新しいソース <xref:System.Data.DataTable> をターゲットにマージすると、<xref:System.Data.DataRowState> の値が `Unchanged`、`Modified`、または `Deleted`のソース行が、同じ主キー値を持つターゲット行と照合されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-861">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted`, is matched to target rows with the same primary key values.</span></span> <span data-ttu-id="b5f3c-862"><xref:System.Data.DataRowState> 値が `Added` のソース行は、新しいソース行と同じ主キー値を持つ新しいターゲット行と照合されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-862">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-863">次のコンソールアプリケーションでは、単純な <xref:System.Data.DataTable> を作成し、テーブルにデータを追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-863">The following console application creates a simple <xref:System.Data.DataTable> and adds data to the table.</span></span> <span data-ttu-id="b5f3c-864">次に、テーブルのコピーを作成して、コピーに行を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-864">The example then creates a copy of the table, adding rows to the copy.</span></span> <span data-ttu-id="b5f3c-865">最後に、この例では、<xref:System.Data.DataTable.Merge%2A> メソッドを呼び出して、2番目のテーブルのデータを最初のテーブルのデータとマージします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-865">Finally, the example calls the <xref:System.Data.DataTable.Merge%2A> method to merge the data in the second table with the data in the first table.</span></span>  
  
 [!code-csharp[DataWorks DataTable.Merge#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.Merge#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-866">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-866">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-867">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-867">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable, preserveChanges As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool -&gt; unit" Usage="dataTable.Merge (table, preserveChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="preserveChanges" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b5f3c-868">現在の <see langword="DataTable" /> とマージする <see langword="DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-868">The <see langword="DataTable" /> to be merged with the current <see langword="DataTable" />.</span></span></param>
        <param name="preserveChanges"><span data-ttu-id="b5f3c-869">現在の <see langword="true" /> に対して行われた変更を保持するには <see langword="DataTable" />。保持しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-869"><see langword="true" />, to preserve changes in the current <see langword="DataTable" />; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b5f3c-870">指定した <see cref="T:System.Data.DataTable" /> を現在の <see langword="DataTable" /> とマージし、現在の <see langword="DataTable" /> の変更を保持するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-870">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes in the current <see langword="DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-871">Merge メソッドは、ほぼ類似したスキーマを持つ2つの <xref:System.Data.DataTable> オブジェクトをマージするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-871">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="b5f3c-872">通常、マージはクライアントアプリケーションで使用され、データソースからの最新の変更内容を既存の <xref:System.Data.DataTable>に組み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-872">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-873">これにより、クライアントアプリケーションは、データソースの最新のデータを使用して <xref:System.Data.DataTable> を更新できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-873">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="b5f3c-874">マージ操作では、元のテーブルとマージするテーブルだけが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-874">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="b5f3c-875">子テーブルは、影響を受けたり、含まれたりすることはありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-875">Child tables are not affected or included.</span></span> <span data-ttu-id="b5f3c-876">テーブルに1つ以上の子テーブルがあり、リレーションシップの一部として定義されている場合は、各子テーブルを個別にマージする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-876">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="b5f3c-877">`Merge` メソッドは、変更の検証、エラーの調整、変更によるデータソースの更新、最後に既存の <xref:System.Data.DataTable>の更新を伴う一連の手順の最後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-877">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="b5f3c-878">マージの実行時に、開発者が `preserveChanges` パラメーターに false を指定していない限り、マージ操作中に既存のデータに加えられた変更は保持されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-878">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="b5f3c-879">`preserveChanges` パラメーターが `true`に設定されている場合、既存の行の現在の行バージョンの既存の値は、入力した値によって上書きされません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-879">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="b5f3c-880">`preserveChanges` パラメーターが `false`に設定されている場合、既存の行の現在の行バージョンの既存の値は、入力した値によって上書きされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-880">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="b5f3c-881">行バージョンの詳細については、「[行の状態と行のバージョン](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-881">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="b5f3c-882">クライアントアプリケーションでは、通常、1つのボタンをクリックするだけで、変更されたデータを収集し、中間層コンポーネントに送信する前にそのデータを検証することができます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-882">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="b5f3c-883">このシナリオでは、<xref:System.Data.DataTable.GetChanges%2A> メソッドが最初に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-883">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="b5f3c-884">このメソッドは、検証とマージのために最適化された2番目の <xref:System.Data.DataTable> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-884">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="b5f3c-885">この2番目の <xref:System.Data.DataTable> オブジェクトには、変更された <xref:System.Data.DataTable> および <xref:System.Data.DataRow> オブジェクトのみが含まれ、その結果、元の <xref:System.Data.DataTable>のサブセットになります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-885">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-886">通常、このサブセットは小さいため、中間層コンポーネントにより効率的に返されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-886">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="b5f3c-887">次に、中間層コンポーネントによって、元のデータソースが、ストアドプロシージャによって変更されて更新されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-887">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="b5f3c-888">その後、中間層では、元のデータを含む新しい <xref:System.Data.DataTable> とデータソースの最新のデータ (元のクエリを再度実行) のいずれかを返すことができます。または、データソースから変更を加えたサブセットを送信することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-888">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="b5f3c-889">(たとえば、データソースによって一意の主キー値が自動的に作成された場合、これらの値をクライアントアプリケーションに反映させることができます)。どちらの場合も、返された <xref:System.Data.DataTable> は、<xref:System.Data.DataTable.Merge%2A> メソッドを使用して、クライアントアプリケーションの元の <xref:System.Data.DataTable> に再びマージできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-889">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-890">新しいソース <xref:System.Data.DataTable> をターゲットにマージする場合、<xref:System.Data.DataRowState> 値が `Unchanged`、`Modified`、または `Deleted` のソース行が、同じ主キー値を持つターゲット行と照合されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-890">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="b5f3c-891"><xref:System.Data.DataRowState> 値が `Added` のソース行は、新しいソース行と同じ主キー値を持つ新しいターゲット行と照合されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-891">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-892">次のコンソールアプリケーションでは、行を含む <xref:System.Data.DataTable> を作成し、それらの行の一部のデータを変更し、別の <xref:System.Data.DataTable>のデータをマージしようとします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-892">The following console application creates a <xref:System.Data.DataTable> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-893">この例では、`preserveChanges` パラメーターのさまざまな動作を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-893">The example demonstrates the different behaviors for the `preserveChanges` parameter.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-894">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-894">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-895">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-895">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges, valuetype System.Data.MissingSchemaAction missingSchemaAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges, System::Data::MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool * System.Data.MissingSchemaAction -&gt; unit" Usage="dataTable.Merge (table, preserveChanges, missingSchemaAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="preserveChanges" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="missingSchemaAction" Type="System.Data.MissingSchemaAction" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b5f3c-896">現在の <see cref="T:System.Data.DataTable" /> とマージする <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-896">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="preserveChanges"><span data-ttu-id="b5f3c-897">現在の <see langword="true" /> に対して行われた変更を保持するには <see cref="T:System.Data.DataTable" />。保持しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-897"><see langword="true" />, to preserve changes in the current <see cref="T:System.Data.DataTable" />; otherwise <see langword="false" />.</span></span></param>
        <param name="missingSchemaAction"><span data-ttu-id="b5f3c-898"><see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-898">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span></param>
        <summary><span data-ttu-id="b5f3c-899">指定した <see cref="T:System.Data.DataTable" /> を現在の <see langword="DataTable" /> とマージして、現在の <see langword="DataTable" /> の変更を保持するかどうかを指定し、さらに欠けているスキーマの処理方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-899">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes and how to handle missing schema in the current <see langword="DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-900">`Merge` メソッドは、ほぼ類似したスキーマを持つ2つの <xref:System.Data.DataTable> オブジェクトをマージするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-900">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="b5f3c-901">通常、マージはクライアントアプリケーションで使用され、データソースからの最新の変更内容を既存の <xref:System.Data.DataTable>に組み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-901">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-902">これにより、クライアントアプリケーションは、データソースの最新のデータを使用して <xref:System.Data.DataTable> を更新できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-902">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="b5f3c-903">マージ操作では、元のテーブルとマージするテーブルだけが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-903">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="b5f3c-904">子テーブルは、影響を受けたり、含まれたりすることはありません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-904">Child tables are not affected or included.</span></span> <span data-ttu-id="b5f3c-905">テーブルに1つ以上の子テーブルがあり、リレーションシップの一部として定義されている場合は、各子テーブルを個別にマージする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-905">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="b5f3c-906">`Merge` メソッドは、変更の検証、エラーの調整、変更によるデータソースの更新、最後に既存の <xref:System.Data.DataTable>の更新を伴う一連の手順の最後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-906">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="b5f3c-907">マージの実行時に、開発者が `preserveChanges` パラメーターに false を指定していない限り、マージ操作中に既存のデータに加えられた変更は保持されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-907">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="b5f3c-908">`preserveChanges` パラメーターが `true`に設定されている場合、既存の行の現在の行バージョンの既存の値は、入力した値によって上書きされません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-908">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="b5f3c-909">`preserveChanges` パラメーターが `false`に設定されている場合、既存の行の現在の行バージョンの既存の値は、入力した値によって上書きされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-909">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="b5f3c-910">行バージョンの詳細については、「[行の状態と行のバージョン](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-910">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="b5f3c-911">クライアントアプリケーションでは、通常、1つのボタンをクリックするだけで、変更されたデータを収集し、中間層コンポーネントに送信する前にそのデータを検証することができます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-911">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="b5f3c-912">このシナリオでは、<xref:System.Data.DataTable.GetChanges%2A> メソッドが最初に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-912">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="b5f3c-913">このメソッドは、検証とマージのために最適化された2番目の <xref:System.Data.DataTable> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-913">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="b5f3c-914">この2番目の <xref:System.Data.DataTable> オブジェクトには、変更された <xref:System.Data.DataTable> および <xref:System.Data.DataRow> オブジェクトのみが含まれ、その結果、元の <xref:System.Data.DataTable>のサブセットになります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-914">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-915">通常、このサブセットは小さいため、中間層コンポーネントにより効率的に返されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-915">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="b5f3c-916">次に、中間層コンポーネントによって、元のデータソースが、ストアドプロシージャによって変更されて更新されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-916">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="b5f3c-917">その後、中間層では、元のデータを含む新しい <xref:System.Data.DataTable> とデータソースの最新のデータ (元のクエリを再度実行) のいずれかを返すことができます。または、データソースから変更を加えたサブセットを送信することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-917">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="b5f3c-918">(たとえば、データソースによって一意の主キー値が自動的に作成された場合、これらの値をクライアントアプリケーションに反映させることができます)。どちらの場合も、返された <xref:System.Data.DataTable> は、<xref:System.Data.DataTable.Merge%2A> メソッドを使用して、クライアントアプリケーションの元の <xref:System.Data.DataTable> に再びマージできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-918">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-919"><xref:System.Data.DataTable.Merge%2A> メソッドが呼び出されると、2つの <xref:System.Data.DataTable> オブジェクトのスキーマが比較されます。これは、スキーマが変更されている可能性があるためです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-919">When the <xref:System.Data.DataTable.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataTable> objects are compared, because it is possible that the schemas may have been changed.</span></span> <span data-ttu-id="b5f3c-920">たとえば、企業間のシナリオでは、自動化されたプロセスによって新しい列が XML スキーマに追加されている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-920">For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</span></span> <span data-ttu-id="b5f3c-921">ソース <xref:System.Data.DataTable> に、ターゲットに存在しないスキーマ要素 (追加された <xref:System.Data.DataColumn> オブジェクト) が含まれている場合は、`missingSchemaAction` 引数を `MissingSchemaAction.Add`に設定することによって、スキーマ要素をターゲットに追加できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-921">If the source <xref:System.Data.DataTable> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`.</span></span> <span data-ttu-id="b5f3c-922">この場合、結合された <xref:System.Data.DataTable> には追加されたスキーマとデータが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-922">In that case, the merged <xref:System.Data.DataTable> contains the added schema and data.</span></span>  
  
 <span data-ttu-id="b5f3c-923">スキーマをマージすると、データはマージされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-923">After merging schemas, the data is merged.</span></span>  
  
 <span data-ttu-id="b5f3c-924">新しいソース <xref:System.Data.DataTable> をターゲットにマージする場合、<xref:System.Data.DataRowState> 値が `Unchanged`、`Modified`、または `Deleted` のソース行が、同じ主キー値を持つターゲット行と照合されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-924">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="b5f3c-925"><xref:System.Data.DataRowState> 値が `Added` のソース行は、新しいソース行と同じ主キー値を持つ新しいターゲット行と照合されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-925">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-926">次のコンソールアプリケーションは、<xref:System.Data.DataTable.Merge%2A> メソッドの `missingSchemaAction` パラメーターの動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-926">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="b5f3c-927">次の例では、同じテーブルの2つのバージョンを作成し、2つ目のバージョンのスキーマを変更します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-927">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="b5f3c-928">次に、コードは2番目のテーブルを最初のテーブルにマージしようとします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-928">The code then attempts to merge the second table into the first.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-929">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-929">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-930">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-930">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MinimumCapacity">
      <MemberSignature Language="C#" Value="public int MinimumCapacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.MinimumCapacity" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumCapacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumCapacity : int with get, set" Usage="System.Data.DataTable.MinimumCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableMinimumCapacityDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-931">このテーブルの初期開始サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-931">Gets or sets the initial starting size for this table.</span></span></summary>
        <value><span data-ttu-id="b5f3c-932">この行の初期開始サイズ。行数で表します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-932">The initial starting size in rows of this table.</span></span> <span data-ttu-id="b5f3c-933">既定値は50です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-933">The default is 50.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-934"><xref:System.Data.DataTable.MinimumCapacity%2A> を使用すると、データをフェッチする前に、システムで適切なリソースのセットを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-934">The <xref:System.Data.DataTable.MinimumCapacity%2A> allows the system to create an appropriate set of resources before fetching data.</span></span> <span data-ttu-id="b5f3c-935">パフォーマンスが重要な状況では、このプロパティを設定するとパフォーマンスが最適化されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-935">In a situation when performance is critical, setting this property can optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-936">次の例では、<xref:System.Data.DataTable>の <xref:System.Data.DataTable.MinimumCapacity%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-936">The following example sets the <xref:System.Data.DataTable.MinimumCapacity%2A> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-937">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-937">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataTable.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-938"><see cref="T:System.Data.DataTable" /> に格納されているデータの XML 表現の名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-938">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="b5f3c-939"><see cref="T:System.Data.DataTable" /> の名前空間。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-939">The namespace of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-940">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-940">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow NewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow NewRow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow () As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ NewRow();" />
      <MemberSignature Language="F#" Value="member this.NewRow : unit -&gt; System.Data.DataRow" Usage="dataTable.NewRow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-941">テーブルと同じスキーマで新しい <see cref="T:System.Data.DataRow" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-941">Creates a new <see cref="T:System.Data.DataRow" /> with the same schema as the table.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-942"><see cref="T:System.Data.DataRow" /> と同じスキーマを持つ <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-942">A <see cref="T:System.Data.DataRow" /> with the same schema as the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-943"><xref:System.Data.DataTable.NewRow%2A> メソッドを使用して、<xref:System.Data.DataTable>と同じスキーマを持つ新しい <xref:System.Data.DataRow> オブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-943">You must use the <xref:System.Data.DataTable.NewRow%2A> method to create new <xref:System.Data.DataRow> objects with the same schema as the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-944"><xref:System.Data.DataRow>を作成した後、<xref:System.Data.DataTable> オブジェクトの <xref:System.Data.DataTable.Rows%2A> プロパティを使用して、<xref:System.Data.DataRowCollection>に追加できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-944">After creating a <xref:System.Data.DataRow>, you can add it to the <xref:System.Data.DataRowCollection>, through the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.Rows%2A> property.</span></span> <span data-ttu-id="b5f3c-945"><xref:System.Data.DataTable.NewRow%2A> を使用して新しい行を作成する場合は、<xref:System.Data.DataTable.Clear%2A>を呼び出す前に、データテーブルに行を追加または削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-945">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be added to or deleted from the data table before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-946">次の例では、<xref:System.Data.DataTable>を作成し、テーブルのスキーマを決定する2つの <xref:System.Data.DataColumn> オブジェクトを追加して、<xref:System.Data.DataTable.NewRow%2A> メソッドを使用していくつかの新しい <xref:System.Data.DataRow> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-946">The following example creates a <xref:System.Data.DataTable>, adds two <xref:System.Data.DataColumn> objects that determine the table's schema, and creates several new <xref:System.Data.DataRow> objects using the <xref:System.Data.DataTable.NewRow%2A> method.</span></span> <span data-ttu-id="b5f3c-947">これらの <xref:System.Data.DataRow> オブジェクトは、<xref:System.Data.DataRowCollection.Add%2A> メソッドを使用して <xref:System.Data.DataRowCollection> に追加されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-947">Those <xref:System.Data.DataRow> objects are then added to the <xref:System.Data.DataRowCollection> using the <xref:System.Data.DataRowCollection.Add%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-948">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-948">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-949">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-949">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewRowArray">
      <MemberSignature Language="C#" Value="protected internal System.Data.DataRow[] NewRowArray (int size);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.DataRow[] NewRowArray(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function NewRowArray (size As Integer) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ NewRowArray(int size);" />
      <MemberSignature Language="F#" Value="member this.NewRowArray : int -&gt; System.Data.DataRow[]" Usage="dataTable.NewRowArray size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="b5f3c-950">配列のサイズを表す <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-950">A <see cref="T:System.Int32" /> value that describes the size of the array.</span></span></param>
        <summary><span data-ttu-id="b5f3c-951"><see cref="T:System.Data.DataRow" /> の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-951">Returns an array of <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-952">新しい配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-952">The new array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowFromBuilder">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataRow NewRowFromBuilder (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataRow NewRowFromBuilder(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NewRowFromBuilder (builder As DataRowBuilder) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataRow ^ NewRowFromBuilder(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow&#xA;override this.NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="dataTable.NewRowFromBuilder builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="b5f3c-953"><see cref="T:System.Data.DataRowBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-953">A <see cref="T:System.Data.DataRowBuilder" /> object.</span></span></param>
        <summary><span data-ttu-id="b5f3c-954">既存の行から新しい行を作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-954">Creates a new row from an existing row.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-955"><see cref="T:System.Data.DataRow" /> の派生クラス。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-955">A <see cref="T:System.Data.DataRow" /> derived class.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-956">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-956">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanged e" />
      <MemberSignature Language="C#" Value="protected virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-957">イベント データを格納している <see cref="T:System.Data.DataColumnChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-957">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-958"><see cref="E:System.Data.DataTable.ColumnChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-958">Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-959">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-959">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-960">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-960">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5f3c-961">派生クラスで <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-961">When overriding <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-962">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-962">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-963">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-963">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanging e" />
      <MemberSignature Language="C#" Value="protected virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-964">イベント データを格納している <see cref="T:System.Data.DataColumnChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-964">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-965"><see cref="E:System.Data.DataTable.ColumnChanging" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-965">Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-966">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-966">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-967">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-967">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5f3c-968">派生クラスで <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-968">When overriding <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-969">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-969">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-970">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-970">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataTable.OnPropertyChanging pcevent" />
      <MemberSignature Language="C#" Value="protected internal virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="b5f3c-971">イベント データを格納している <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-971">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-972"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-972">Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-973">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-973">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-974">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-974">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5f3c-975">派生クラスで <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-975">When overriding <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-976">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-976">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-977">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-977">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveColumn">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveColumn (System.Data.DataColumn column);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveColumn (column As DataColumn)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveColumn : System.Data.DataColumn -&gt; unit&#xA;override this.OnRemoveColumn : System.Data.DataColumn -&gt; unit" Usage="dataTable.OnRemoveColumn column" />
      <MemberSignature Language="C#" Value="protected internal virtual void OnRemoveColumn (System.Data.DataColumn column);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRemoveColumn (column As DataColumn)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="b5f3c-978">削除する <see cref="T:System.Data.DataColumn" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-978">The <see cref="T:System.Data.DataColumn" /> being removed.</span></span></param>
        <summary><span data-ttu-id="b5f3c-979"><see cref="T:System.Data.DataTable" /> が削除されることを <see cref="T:System.Data.DataColumn" /> に通知します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-979">Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is being removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-980">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-980">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-981">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-981">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5f3c-982">派生クラスで <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-982">When overriding <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-983">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-983">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-984">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-984">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanged (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanged(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanged (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanged(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-985">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-985">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-986"><see cref="E:System.Data.DataTable.RowChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-986">Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-987">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-987">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-988">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-988">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5f3c-989">派生クラスで <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-989">When overriding <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-990">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-990">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-991">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-991">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanging (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanging(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanging (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanging(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-992">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-992">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-993"><see cref="E:System.Data.DataTable.RowChanging" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-993">Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-994">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-994">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-995">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-995">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5f3c-996">派生クラスで <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-996">When overriding <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-997">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-997">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-998">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-998">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-999">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-999">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1000"><see cref="E:System.Data.DataTable.RowDeleted" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1000">Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1001">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1001">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-1002">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1002">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5f3c-1003">派生クラスで <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1003">When overriding <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1004">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1004">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1005">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1005">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-1006">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1006">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1007"><see cref="E:System.Data.DataTable.RowDeleting" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1007">Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1008">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1008">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-1009">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1009">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5f3c-1010">派生クラスで <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1010">When overriding <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1011">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1011">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1012">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1012">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableCleared">
      <MemberSignature Language="C#" Value="protected virtual void OnTableCleared (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableCleared(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableCleared (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableCleared(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableCleared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-1013">イベント データを格納している <see cref="T:System.Data.DataTableClearEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1013">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1014"><see cref="E:System.Data.DataTable.TableCleared" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1014">Raises the <see cref="E:System.Data.DataTable.TableCleared" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1015"><xref:System.Data.DataTable.TableCleared> イベントを発生させます。このイベントは、すべての行が正常にクリアされた後、<xref:System.Data.DataTable.Clear%2A> メソッドから呼び出し元に制御が戻される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1015">Raises the <xref:System.Data.DataTable.TableCleared> event, which is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span>  
  
 <span data-ttu-id="b5f3c-1016">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1016">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-1017">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1017">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1018">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1018">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1019">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1019">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableClearing">
      <MemberSignature Language="C#" Value="protected virtual void OnTableClearing (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableClearing(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableClearing (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableClearing(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableClearing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-1020">イベント データを格納している <see cref="T:System.Data.DataTableClearEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1020">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1021"><see cref="E:System.Data.DataTable.TableClearing" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1021">Raises the <see cref="E:System.Data.DataTable.TableClearing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1022"><xref:System.Data.DataTable.Clear%2A> 操作の処理が開始される前に発生する <xref:System.Data.DataTable.TableClearing> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1022">Raises the <xref:System.Data.DataTable.TableClearing> event, which is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span>  
  
 <span data-ttu-id="b5f3c-1023">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1023">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-1024">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1024">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1025">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1025">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1026">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1026">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableNewRow">
      <MemberSignature Language="C#" Value="protected virtual void OnTableNewRow (System.Data.DataTableNewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableNewRow(class System.Data.DataTableNewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableNewRow (e As DataTableNewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableNewRow(System::Data::DataTableNewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit&#xA;override this.OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit" Usage="dataTable.OnTableNewRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableNewRowEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5f3c-1027">イベント データを格納している <see cref="T:System.Data.DataTableNewRowEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1027">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1028"><see cref="E:System.Data.DataTable.TableNewRow" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1028">Raises the <see cref="E:System.Data.DataTable.TableNewRow" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1029"><xref:System.Data.DataTable.NewRow%2A>を使用して新しい <xref:System.Data.DataRow> が作成された後に発生する <xref:System.Data.DataTable.TableNewRow> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1029">Raises the <xref:System.Data.DataTable.TableNewRow> event, which fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span>  
  
 <span data-ttu-id="b5f3c-1030">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1030">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5f3c-1031">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1031">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1032">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1032">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1033">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1033">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParentRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ParentRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ParentRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ParentRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ParentRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ParentRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableParentRelationsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1034">この <see cref="T:System.Data.DataTable" /> の親リレーションシップのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1034">Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="b5f3c-1035">テーブルの親リレーションを格納している <see cref="T:System.Data.DataRelationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1035">A <see cref="T:System.Data.DataRelationCollection" /> that contains the parent relations for the table.</span></span> <span data-ttu-id="b5f3c-1036"><see cref="T:System.Data.DataRelation" /> オブジェクトが存在しない場合、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1036">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5f3c-1037">次の例では、<xref:System.Data.DataTable.ParentRelations%2A> プロパティを使用して、<xref:System.Data.DataTable>内の各親 <xref:System.Data.DataRelation> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1037">The following example uses the <xref:System.Data.DataTable.ParentRelations%2A> property to return each parent <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-1038">各リレーションシップは、行の配列を返すために、<xref:System.Data.DataRow> の <xref:System.Data.DataRow.GetParentRows%2A> メソッドの引数として使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1038">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetParentRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="b5f3c-1039">行の各列の値が出力されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1039">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1040">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1040">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataTable.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTablePrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1041"><see cref="T:System.Data.DataTable" /> に格納されているデータの XML 表現の名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1041">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="b5f3c-1042"><see cref="T:System.Data.DataTable" /> のプリフィックス。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1042">The prefix of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1043">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1043">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKey">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] PrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.PrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryKey As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::DataColumn ^&gt; ^ PrimaryKey { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); void set(cli::array &lt;System::Data::DataColumn ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKey : System.Data.DataColumn[] with get, set" Usage="System.Data.DataTable.PrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.PrimaryKeyTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTablePrimaryKeyDescr")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1044">このデータ テーブルの主キーとして機能する列の配列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1044">Gets or sets an array of columns that function as primary keys for the data table.</span></span></summary>
        <value><span data-ttu-id="b5f3c-1045"><see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1045">An array of <see cref="T:System.Data.DataColumn" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1046">テーブル内のレコードを識別するには、テーブルの主キーが一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1046">The primary key of a table must be unique to identify the record in the table.</span></span> <span data-ttu-id="b5f3c-1047">また、2つ以上の列で構成される主キーを持つテーブルを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1047">It's also possible to have a table with a primary key made up of two or more columns.</span></span> <span data-ttu-id="b5f3c-1048">これは、1つの列に十分な一意の値を含めることができない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1048">This occurs when a single column can't contain enough unique values.</span></span> <span data-ttu-id="b5f3c-1049">たとえば、2つの列の主キーが "FirstName" 列と "LastName" 列で構成されている場合があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1049">For example, a two column primary key might consist of a "FirstName" and "LastName" column.</span></span> <span data-ttu-id="b5f3c-1050">主キーは複数の列で構成できるので、<xref:System.Data.DataTable.PrimaryKey%2A> プロパティは <xref:System.Data.DataColumn> オブジェクトの配列で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1050">Because primary keys can be made up of more than one column, the <xref:System.Data.DataTable.PrimaryKey%2A> property consists of an array of <xref:System.Data.DataColumn> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1051">最初の例は、`DataGrid`に表示される <xref:System.Data.DataTable> の主キー列を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1051">The first example shows how to return the primary key columns for a <xref:System.Data.DataTable> displayed in a `DataGrid`.</span></span> <span data-ttu-id="b5f3c-1052">2番目の例では、<xref:System.Data.DataTable>の主キー列を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1052">The second example demonstrates how to set the primary key columns for a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DataException"><span data-ttu-id="b5f3c-1053">キーが外部キーです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1053">The key is a foreign key.</span></span></exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1054">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1054">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1055">XML スキーマとデータを <see cref="T:System.Data.DataTable" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1055">Reads XML schema and data into the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1056"><xref:System.Data.DataTable.ReadXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を XML ドキュメントから <xref:System.Data.DataTable> に読み取ることができます。一方、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドでは、スキーマのみを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1056">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span> <span data-ttu-id="b5f3c-1057">データとスキーマの両方を読み取るには、`XmlReadMode` パラメーターを含む `ReadXML` オーバーロードのいずれかを使用し、その値を `ReadSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1057">To read both data and schema, use one of the `ReadXML` overloads that include the `XmlReadMode` parameter, and set its value to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1058"><xref:System.Data.DataTable.WriteXml%2A> メソッドと <xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1058">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1059">XML データ、または `DataTable`のスキーマとデータの両方を書き込むには、`WriteXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1059">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="b5f3c-1060">スキーマだけを記述するには、`WriteXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1060">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1061">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1061">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXml" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1062">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1062">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.Stream -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b5f3c-1063"><see cref="T:System.IO.Stream" /> から派生するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1063">An object that derives from <see cref="T:System.IO.Stream" /></span></span></param>
        <summary><span data-ttu-id="b5f3c-1064">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマとデータを <see cref="T:System.IO.Stream" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1064">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1065">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1065">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1066">現在の <xref:System.Data.DataTable> とその子孫は、指定された <xref:System.IO.Stream>のデータと共に読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1066">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b5f3c-1067">このメソッドの動作は、<xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> メソッドの動作と同じですが、この場合は、現在のテーブルとその子孫に対してのみデータが読み込まれる点が異なります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1067">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="b5f3c-1068"><xref:System.Data.DataTable.ReadXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を XML ドキュメントから <xref:System.Data.DataTable> に読み取ることができます。一方、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドでは、スキーマのみを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1068">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="b5f3c-1069"><xref:System.Data.DataTable.WriteXml%2A> メソッドと <xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1069">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1070">XML データ、または `DataTable`のスキーマとデータの両方を書き込むには、`WriteXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1070">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="b5f3c-1071">スキーマだけを記述するには、`WriteXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1071">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1072">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1072">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="b5f3c-1073">インラインスキーマが指定されている場合は、データを読み込む前に、インラインスキーマを使用して既存のリレーショナル構造が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1073">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="b5f3c-1074">競合がある場合 (たとえば、同じテーブル内の同じ列が異なるデータ型で定義されている場合)、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1074">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="b5f3c-1075">インラインスキーマが指定されていない場合、XML ドキュメントの構造に従って、必要に応じて、推論によってリレーショナル構造が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1075">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="b5f3c-1076">すべてのデータを公開するために、推論によってスキーマを拡張できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1076">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1077">`DataSet` は、("_") のような有効な XML 文字がシリアル化された XML でエスケープされている場合に、XML 要素とそれに対応する `DataColumn` または `DataTable` を関連付けません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1077">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="b5f3c-1078">`DataSet` 自体は XML 要素名で無効な XML 文字をエスケープするだけであるため、同じを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1078">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="b5f3c-1079">XML 要素名に有効な文字がエスケープされている場合、要素は処理中に無視されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1079">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1080">次の例では、2つの列と10行を含む <xref:System.Data.DataTable> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1080">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="b5f3c-1081">この例では、<xref:System.Data.DataTable.WriteXml%2A> メソッドを呼び出すことによって、<xref:System.Data.DataTable> スキーマとデータをメモリストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1081">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="b5f3c-1082">この例では、2つ目の <xref:System.Data.DataTable> を作成し、<xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出して、スキーマとデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1082">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1083">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1083">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As TextReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.TextReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-1084">データを読み込むために使用する <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1084">The <see cref="T:System.IO.TextReader" /> that will be used to read the data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1085">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマとデータを <see cref="T:System.IO.TextReader" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1085">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1086">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1086">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1087">現在の <xref:System.Data.DataTable> とその子孫は、指定された <xref:System.IO.TextReader>のデータと共に読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1087">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="b5f3c-1088">このメソッドの動作は、<xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> メソッドの動作と同じですが、この場合は、現在のテーブルとその子孫に対してのみデータが読み込まれる点が異なります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1088">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="b5f3c-1089"><xref:System.Data.DataTable.ReadXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を XML ドキュメントから <xref:System.Data.DataTable> に読み取ることができます。一方、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドでは、スキーマのみを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1089">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="b5f3c-1090"><xref:System.Data.DataTable.WriteXml%2A> メソッドと <xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1090">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1091">XML データ、または `DataTable`のスキーマとデータの両方を書き込むには、`WriteXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1091">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="b5f3c-1092">スキーマだけを記述するには、`WriteXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1092">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1093">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1093">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="b5f3c-1094">インラインスキーマが指定されている場合は、データを読み込む前に、インラインスキーマを使用して既存のリレーショナル構造が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1094">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="b5f3c-1095">競合がある場合 (たとえば、同じテーブル内の同じ列が異なるデータ型で定義されている場合)、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1095">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="b5f3c-1096">インラインスキーマが指定されていない場合、XML ドキュメントの構造に従って、必要に応じて、推論によってリレーショナル構造が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1096">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="b5f3c-1097">すべてのデータを公開するために、推論によってスキーマを拡張できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1097">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1098">`DataSet` は、("_") のような有効な XML 文字がシリアル化された XML でエスケープされている場合に、XML 要素とそれに対応する `DataColumn` または `DataTable` を関連付けません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1098">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="b5f3c-1099">`DataSet` 自体は XML 要素名で無効な XML 文字をエスケープするだけであるため、同じを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1099">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="b5f3c-1100">XML 要素名に有効な文字がエスケープされている場合、要素は処理中に無視されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1100">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1101">次の例では、2つの列と10行を含む <xref:System.Data.DataTable> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1101">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="b5f3c-1102">この例では、<xref:System.Data.DataTable.WriteXml%2A> メソッドを呼び出すことによって、<xref:System.Data.DataTable> スキーマとデータをメモリストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1102">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="b5f3c-1103">この例では、2つ目の <xref:System.Data.DataTable> を作成し、<xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出して、スキーマとデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1103">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1104">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1104">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (fileName As String) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : string -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b5f3c-1105">データの読み取り元のファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1105">The name of the file from which to read the data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1106">指定したファイルから、XML スキーマとデータを <see cref="T:System.Data.DataTable" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1106">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> from the specified file.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1107">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1107">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1108">現在の <xref:System.Data.DataTable> とその子孫は、指定された <xref:System.String>のという名前のファイルのデータと共に読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1108">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.String>.</span></span> <span data-ttu-id="b5f3c-1109">このメソッドの動作は、<xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> メソッドの動作と同じですが、この場合は、現在のテーブルとその子孫に対してのみデータが読み込まれる点が異なります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1109">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="b5f3c-1110"><xref:System.Data.DataTable.ReadXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を XML ドキュメントから <xref:System.Data.DataTable> に読み取ることができます。一方、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドでは、スキーマのみを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1110">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="b5f3c-1111"><xref:System.Data.DataTable.WriteXml%2A> メソッドと <xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1111">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1112">XML データ、または `DataTable`のスキーマとデータの両方を書き込むには、`WriteXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1112">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="b5f3c-1113">スキーマだけを記述するには、`WriteXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1113">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1114">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1114">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="b5f3c-1115">インラインスキーマが指定されている場合は、データを読み込む前に、インラインスキーマを使用して既存のリレーショナル構造が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1115">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="b5f3c-1116">競合がある場合 (たとえば、同じテーブル内の同じ列が異なるデータ型で定義されている場合)、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1116">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="b5f3c-1117">インラインスキーマが指定されていない場合、XML ドキュメントの構造に従って、必要に応じて、推論によってリレーショナル構造が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1117">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="b5f3c-1118">すべてのデータを公開するために、推論によってスキーマを拡張できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1118">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1119">`DataSet` は、("_") のような有効な XML 文字がシリアル化された XML でエスケープされている場合に、XML 要素とそれに対応する `DataColumn` または `DataTable` を関連付けません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1119">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="b5f3c-1120">`DataSet` 自体は XML 要素名で無効な XML 文字をエスケープするだけであるため、同じを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1120">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="b5f3c-1121">XML 要素名に有効な文字がエスケープされている場合、要素は処理中に無視されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1121">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
```csharp  
using System.Data;  
public class A {  
   static void Main(string[] args) {  
      DataTable tabl = new DataTable("mytable");  
      tabl.Columns.Add(new DataColumn("id", typeof(int)));  
      for (int i = 0; i < 10; i++) {  
         DataRow row = tabl.NewRow();  
         row["id"] = i;  
         tabl.Rows.Add(row);  
      }  
      tabl.WriteXml("f.xml", XmlWriteMode.WriteSchema);  
      DataTable newt = new DataTable();  
      newt.ReadXml("f.xml");  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1122">次の例では、2つの列と10行を含む <xref:System.Data.DataTable> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1122">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="b5f3c-1123">この例では、<xref:System.Data.DataTable> スキーマとデータをディスクに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1123">The example writes the <xref:System.Data.DataTable> schema and data to disk.</span></span> <span data-ttu-id="b5f3c-1124">この例では、2つ目の <xref:System.Data.DataTable> を作成し、<xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出して、スキーマとデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1124">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1125">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1125">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As XmlReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.Xml.XmlReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-1126">データを読み込むために使用する <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1126">The <see cref="T:System.Xml.XmlReader" /> that will be used to read the data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1127">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマとデータを <see cref="T:System.Xml.XmlReader" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1127">Reads XML Schema and Data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1128">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1128">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1129">現在の <xref:System.Data.DataTable> とその子孫は、指定された <xref:System.Xml.XmlReader>のという名前のファイルのデータと共に読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1129">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="b5f3c-1130">このメソッドの動作は、<xref:System.Data.DataTable.ReadXml%2A> メソッドの動作と同じですが、この場合は、現在のテーブルとその子孫に対してのみデータが読み込まれる点が異なります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1130">The behavior of this method is identical to that of the <xref:System.Data.DataTable.ReadXml%2A> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="b5f3c-1131"><xref:System.Data.DataTable.ReadXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を XML ドキュメントから <xref:System.Data.DataTable> に読み取ることができます。一方、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドでは、スキーマのみを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1131">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="b5f3c-1132"><xref:System.Data.DataTable.WriteXml%2A> メソッドと <xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1132">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1133">XML データ、または `DataTable`のスキーマとデータの両方を書き込むには、`WriteXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1133">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="b5f3c-1134">スキーマだけを記述するには、`WriteXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1134">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1135">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1135">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="b5f3c-1136">インラインスキーマが指定されている場合は、データを読み込む前に、インラインスキーマを使用して既存のリレーショナル構造が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1136">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="b5f3c-1137">競合がある場合 (たとえば、同じテーブル内の同じ列が異なるデータ型で定義されている場合)、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1137">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="b5f3c-1138">インラインスキーマが指定されていない場合、XML ドキュメントの構造に従って、必要に応じて、推論によってリレーショナル構造が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1138">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="b5f3c-1139">すべてのデータを公開するために、推論によってスキーマを拡張できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1139">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1140">`DataSet` は、("_") のような有効な XML 文字がシリアル化された XML でエスケープされている場合に、XML 要素とそれに対応する `DataColumn` または `DataTable` を関連付けません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1140">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="b5f3c-1141">`DataSet` 自体は XML 要素名で無効な XML 文字をエスケープするだけであるため、同じを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1141">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="b5f3c-1142">XML 要素名に有効な文字がエスケープされている場合、要素は処理中に無視されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1142">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1143">次の例では、2つの列と10行を含む <xref:System.Data.DataTable> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1143">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="b5f3c-1144">この例では、<xref:System.Data.DataTable> スキーマとデータを <xref:System.Xml.XmlReader>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1144">The example writes the <xref:System.Data.DataTable> schema and data to an <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="b5f3c-1145">この例では、2つ目の <xref:System.Data.DataTable> を作成し、<xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出して、<xref:System.Xml.XmlReader> インスタンスのスキーマとデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1145">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data from the <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1146">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1146">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1147">XML スキーマを <see cref="T:System.Data.DataTable" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1147">Reads an XML schema into the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1148"><xref:System.Data.DataTable>のスキーマを作成するには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1148">Use the `ReadXmlSchema` method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-1149">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1149">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1150">スキーマを XML ドキュメントに書き込むには、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1150">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1151">XML スキーマは、XSD 標準に従って解釈されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1151">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1152">`ReadXmlSchema` メソッドは、通常、<xref:System.Data.DataTable>を埋めるために使用される <xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出す前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1152">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXmlSchema" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1153">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1153">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.ReadXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b5f3c-1154">スキーマを読み込むために使用するストリーム。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1154">The stream used to read the schema.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1155">指定したストリームを使用して、XML スキーマを <see cref="T:System.Data.DataTable" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1155">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1156"><xref:System.Data.DataTable>のスキーマを作成するには、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1156">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-1157">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1157">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1158">スキーマを XML ドキュメントに書き込むには、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1158">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1159">XML スキーマは、XSD 標準に従って解釈されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1159">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1160">データの破損は、msdata: DataType と xs: type の型が一致しない場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1160">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="b5f3c-1161">例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1161">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="b5f3c-1162">`ReadXmlSchema` メソッドは、通常、<xref:System.Data.DataTable>を埋めるために使用される <xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出す前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1162">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="b5f3c-1163">XML スキーマを使用して入れ子になったリレーションシップを作成するには、暗黙的な入れ子になった要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1163">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="b5f3c-1164">また、明示的な列名を使用するように入れ子になったリレーションシップを構成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1164">You can also configure the nested relation to use explicit column names.</span></span> <span data-ttu-id="b5f3c-1165">対応する Datatable を入れ子になったリレーションシップに含めるには、要素を暗黙的に入れ子にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1165">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1166">次のコンソールアプリケーションでは、新しい <xref:System.Data.DataTable>を作成し、そのテーブルのスキーマを <xref:System.IO.MemoryStream>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1166">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="b5f3c-1167">次に、この例では、新しい <xref:System.Data.DataTable> を作成し、保存された XML スキーマからそのスキーマを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1167">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1168">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1168">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.TextReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-1169">スキーマ情報を読み込むために使用する <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1169">The <see cref="T:System.IO.TextReader" /> used to read the schema information.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1170">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマを <see cref="T:System.IO.TextReader" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1170">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1171"><xref:System.Data.DataTable>のスキーマを作成するには、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1171">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-1172">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1172">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1173">スキーマを XML ドキュメントに書き込むには、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1173">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1174">XML スキーマは、XSD 標準に従って解釈されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1174">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1175">データの破損は、msdata: DataType と xs: type の型が一致しない場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1175">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="b5f3c-1176">例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1176">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="b5f3c-1177">`ReadXmlSchema` メソッドは、通常、<xref:System.Data.DataTable>を埋めるために使用される <xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出す前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1177">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="b5f3c-1178">XML スキーマを使用して入れ子になったリレーションシップを作成するには、暗黙的な入れ子になった要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1178">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="b5f3c-1179">また、明示的な列名を使用するように、入れ子になった関係を再構成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1179">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="b5f3c-1180">対応する Datatable を入れ子になったリレーションシップに含めるには、要素を暗黙的に入れ子にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1180">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1181">次のコンソールアプリケーションでは、新しい <xref:System.Data.DataTable>を作成し、そのテーブルのスキーマを <xref:System.IO.MemoryStream>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1181">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="b5f3c-1182">次に、この例では、新しい <xref:System.Data.DataTable> を作成し、<xref:System.IO.StreamReader> (<xref:System.IO.TextReader>から継承) をソースとして使用して、保存された XML スキーマからスキーマを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1182">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.IO.StreamReader> (which inherits from <xref:System.IO.TextReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1183">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1183">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : string -&gt; unit" Usage="dataTable.ReadXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b5f3c-1184">スキーマ情報の読み取り元のファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1184">The name of the file from which to read the schema information.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1185">指定したファイルから <see cref="T:System.Data.DataTable" /> に XML スキーマを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1185">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> from the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1186"><xref:System.Data.DataTable>のスキーマを作成するには、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1186">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-1187">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1187">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1188">スキーマを XML ドキュメントに書き込むには、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1188">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1189">XML スキーマは、XSD 標準に従って解釈されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1189">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1190">データの破損は、msdata: DataType と xs: type の型が一致しない場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1190">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="b5f3c-1191">例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1191">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="b5f3c-1192">`ReadXmlSchema` メソッドは、通常、`DataTable`を埋めるために使用される <xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出す前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1192">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the `DataTable`.</span></span>  
  
 <span data-ttu-id="b5f3c-1193">XML スキーマを使用して入れ子になったリレーションシップを作成するには、暗黙的な入れ子になった要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1193">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="b5f3c-1194">また、明示的な列名を使用するように、入れ子になった関係を再構成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1194">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="b5f3c-1195">対応する Datatable を入れ子になったリレーションシップに含めるには、要素を暗黙的に入れ子にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1195">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1196">次のコンソールアプリケーションでは、新しい <xref:System.Data.DataTable>を作成し、そのテーブルのスキーマをファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1196">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a file.</span></span> <span data-ttu-id="b5f3c-1197">次に、この例では、ファイルをソースとして使用して、新しい <xref:System.Data.DataTable> を作成し、保存された XML スキーマからそのスキーマを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1197">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using the file as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1198">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1198">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-1199">スキーマ情報を読み込むために使用する <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1199">The <see cref="T:System.Xml.XmlReader" /> used to read the schema information.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1200">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマを <see cref="T:System.Xml.XmlReader" /> に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1200">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1201"><xref:System.Data.DataTable>のスキーマを作成するには、<xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1201">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-1202">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1202">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1203">スキーマを XML ドキュメントに書き込むには、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1203">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1204">XML スキーマは、XSD 標準に従って解釈されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1204">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1205">データの破損は、msdata: DataType と xs: type の型が一致しない場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1205">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="b5f3c-1206">例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1206">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="b5f3c-1207">`ReadXmlSchema` メソッドは、通常、<xref:System.Data.DataTable>を埋めるために使用される <xref:System.Data.DataTable.ReadXml%2A> メソッドを呼び出す前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1207">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1208">XML スキーマを使用して入れ子になったリレーションシップを作成する方法は、暗黙的に入れ子になった要素を使用することです。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1208">The way to create a nested relation using XML schema is to have implicit nested elements.</span></span> <span data-ttu-id="b5f3c-1209">また、入れ子になった関係を再接続して、明示的な列名を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1209">Additionally, the nested relation could be re-wired, to use explicit column names.</span></span> <span data-ttu-id="b5f3c-1210">入れ子になったリレーションシップに参加するために、対応する Datatable に対して暗黙的に要素を入れ子にすることは必須です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1210">It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1211">次のコンソールアプリケーションでは、新しい <xref:System.Data.DataTable>を作成し、そのテーブルのスキーマを <xref:System.IO.MemoryStream>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1211">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="b5f3c-1212">次に、この例では、新しい <xref:System.Data.DataTable> を作成し、<xref:System.Xml.XmlTextReader> (<xref:System.Xml.XmlReader>から継承) をソースとして使用して、保存された XML スキーマからスキーマを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1212">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.Xml.XmlTextReader> (which inherits from <xref:System.Xml.XmlReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1213">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1213">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSerializable">
      <MemberSignature Language="C#" Value="protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadXmlSerializable(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadXmlSerializable (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadXmlSerializable(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXmlSerializable : System.Xml.XmlReader -&gt; unit&#xA;override this.ReadXmlSerializable : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSerializable reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-1214"><see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1214">A <see cref="T:System.Xml.XmlReader" /> object.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1215">XML ストリームから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1215">Reads from an XML stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataTable.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-1216">このテーブルを読み込むか、前回 <see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのテーブルに対して行われたすべての変更をロールバックします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1216">Rolls back all changes that have been made to the table since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1217"><xref:System.Data.DataTable.RejectChanges%2A> が呼び出されると、編集モードのままの <xref:System.Data.DataRow> オブジェクトは編集をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1217">When <xref:System.Data.DataTable.RejectChanges%2A> is called, any <xref:System.Data.DataRow> objects that are still in edit-mode cancel their edits.</span></span> <span data-ttu-id="b5f3c-1218">新しい行が削除されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1218">New rows are removed.</span></span> <span data-ttu-id="b5f3c-1219"><xref:System.Data.DataRowState> が `Modified` または `Deleted` に設定されている行は、元の状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1219">Rows with the <xref:System.Data.DataRowState> set to `Modified` or `Deleted` return back to their original state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1220">次の例では、<xref:System.Data.DataTable>に対していくつかの変更を行いますが、<xref:System.Data.DataTable.RejectChanges%2A> メソッドを呼び出して変更を拒否します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1220">The following example makes several changes to a <xref:System.Data.DataTable>, but rejects the changes by invoking the <xref:System.Data.DataTable.RejectChanges%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1221">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1221">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1222">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1222">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemotingFormat">
      <MemberSignature Language="C#" Value="public System.Data.SerializationFormat RemotingFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SerializationFormat RemotingFormat" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.RemotingFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property RemotingFormat As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SerializationFormat RemotingFormat { System::Data::SerializationFormat get(); void set(System::Data::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.RemotingFormat : System.Data.SerializationFormat with get, set" Usage="System.Data.DataTable.RemotingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1223">シリアル化形式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1223">Gets or sets the serialization format.</span></span></summary>
        <value><span data-ttu-id="b5f3c-1224"><see langword="Binary" /> シリアル化または <see langword="Xml" /> シリアル化を指定する <see cref="T:System.Data.SerializationFormat" /> 列挙体。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1224">A <see cref="T:System.Data.SerializationFormat" /> enumeration specifying either <see langword="Binary" /> or <see langword="Xml" /> serialization.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1225">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1225">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dataTable.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-1226"><see cref="T:System.Data.DataTable" /> を元の状態にリセットします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1226">Resets the <see cref="T:System.Data.DataTable" /> to its original state.</span></span> <span data-ttu-id="b5f3c-1227">テーブルのすべてのデータ、インデックス、リレーションシップ、および列の削除をリセットします。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1227">Reset removes all data, indexes, relations, and columns of the table.</span></span> <span data-ttu-id="b5f3c-1228">DataSet に DataTable が含まれている場合は、テーブルをリセットした後も、テーブルは DataSet の一部です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1228">If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1229">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1229">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1230">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1230">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanged As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanged;" />
      <MemberSignature Language="F#" Value="member this.RowChanged : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanged : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowChangedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1231"><see cref="T:System.Data.DataRow" /> が正常に変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1231">Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1232">詳細については、「 [DataTable イベントの処理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1232">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1233">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1233">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanging As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanging;" />
      <MemberSignature Language="F#" Value="member this.RowChanging : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanging : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowChangingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1234"><see cref="T:System.Data.DataRow" /> が変更されているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1234">Occurs when a <see cref="T:System.Data.DataRow" /> is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1235">詳細については、「 [DataTable イベントの処理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1235">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1236">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1236">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleted;" />
      <MemberSignature Language="F#" Value="member this.RowDeleted : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleted : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowDeletedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1237">テーブル内の行が削除された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1237">Occurs after a row in the table has been deleted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1238">詳細については、「 [DataTable イベントの処理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1238">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1239">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1239">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleting;" />
      <MemberSignature Language="F#" Value="member this.RowDeleting : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleting : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowDeletingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1240">テーブル内の行が削除される直前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1240">Occurs before a row in the table is about to be deleted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1241">詳細については、「 [DataTable イベントの処理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1241">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1242">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1242">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Data.DataRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowCollection ^ Rows { System::Data::DataRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Data.DataRowCollection" Usage="System.Data.DataTable.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1243">このテーブルに属する行のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1243">Gets the collection of rows that belong to this table.</span></span></summary>
        <value><span data-ttu-id="b5f3c-1244"><see cref="T:System.Data.DataRowCollection" /> オブジェクトが格納されている <see cref="T:System.Data.DataRow" />。<see cref="T:System.Data.DataRow" /> オブジェクトが存在しない場合は null 値。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1244">A <see cref="T:System.Data.DataRowCollection" /> that contains <see cref="T:System.Data.DataRow" /> objects; otherwise a null value if no <see cref="T:System.Data.DataRow" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1245">新しい <xref:System.Data.DataRow>を作成するには、<xref:System.Data.DataTable.NewRow%2A> メソッドを使用して新しいオブジェクトを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1245">To create a new <xref:System.Data.DataRow>, you must use the <xref:System.Data.DataTable.NewRow%2A> method to return a new object.</span></span> <span data-ttu-id="b5f3c-1246">このようなオブジェクトは、<xref:System.Data.DataColumn> オブジェクトのコレクションを通じて、<xref:System.Data.DataTable> に対して定義されたスキーマに従って自動的に構成されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1246">Such an object is automatically configured according to the schema defined for the <xref:System.Data.DataTable> through its collection of <xref:System.Data.DataColumn> objects.</span></span> <span data-ttu-id="b5f3c-1247">新しい行を作成し、行の各列の値を設定した後、`Add` メソッドを使用して <xref:System.Data.DataRowCollection> に行を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1247">After creating a new row and setting the values for each column in the row, add the row to the <xref:System.Data.DataRowCollection> using the `Add` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1248">コレクション内の各 <xref:System.Data.DataRow> は、テーブル内のデータの行を表します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1248">Each <xref:System.Data.DataRow> in the collection represents a row of data in the table.</span></span> <span data-ttu-id="b5f3c-1249">行の列の値に対する変更をコミットするには、<xref:System.Data.DataTable.AcceptChanges%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1249">To commit a change to the value of a column in the row, you must invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1250">次に、行の取得と設定の2つの例を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1250">The following shows two examples of returning and setting rows.</span></span> <span data-ttu-id="b5f3c-1251">最初の例では、<xref:System.Data.DataTable.Rows%2A> プロパティを使用して、各行の各列の値を出力します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1251">The first example uses the <xref:System.Data.DataTable.Rows%2A> property and prints the value of each column for every row.</span></span> <span data-ttu-id="b5f3c-1252">2番目の例では、<xref:System.Data.DataTable> オブジェクトの <xref:System.Data.DataTable.NewRow%2A> メソッドを使用して、<xref:System.Data.DataTable>のスキーマを使用して新しい <xref:System.Data.DataRow> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1252">The second example uses the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.NewRow%2A> method to create a new <xref:System.Data.DataRow> object with the schema of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b5f3c-1253">行の値を設定した後、行は `Add` メソッドを使用して <xref:System.Data.DataRowCollection> に追加されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1253">After setting the row values, the row is added to the <xref:System.Data.DataRowCollection> through the `Add` method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="T:System.Data.DataRowCollection" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1254">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1254">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1255"><see cref="T:System.Data.DataRow" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1255">Gets an array of <see cref="T:System.Data.DataRow" /> objects.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1256">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1256">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Data.DataRow[]" Usage="dataTable.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-1257">すべての <see cref="T:System.Data.DataRow" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1257">Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1258"><see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1258">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1259">適切な並べ替え順序を保証するには、<xref:System.Data.DataTable.Select(System.String,System.String)> または <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>で並べ替え条件を指定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1259">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select(System.String,System.String)> or <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1260">次の例では、<xref:System.Data.DataTable.Select%2A> メソッドを使用して <xref:System.Data.DataRow> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1260">The following example returns an array of <xref:System.Data.DataRow> objects through the <xref:System.Data.DataTable.Select%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1261">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1261">Creating and Using DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="b5f3c-1262">null 値</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1262">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression);" />
      <MemberSignature Language="F#" Value="member this.Select : string -&gt; System.Data.DataRow[]" Usage="dataTable.Select filterExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="b5f3c-1263">行にフィルターをかけるために使用する基準。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1263">The criteria to use to filter the rows.</span></span> <span data-ttu-id="b5f3c-1264">行をフィルター処理する方法の例については、「[DataView RowFilter の構文 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1264">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <summary><span data-ttu-id="b5f3c-1265">フィルター基準と一致するすべての <see cref="T:System.Data.DataRow" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1265">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1266"><see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1266">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1267">`filterExpression` 引数を作成するには、フィルターを作成するための <xref:System.Data.DataColumn> クラスの <xref:System.Data.DataColumn.Expression%2A> プロパティ値に適用されるのと同じ規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1267">To create the `filterExpression` argument, use the same rules that apply to the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value for creating filters.</span></span>  
  
<span data-ttu-id="b5f3c-1268">適切な並べ替え順序を保証するには、<xref:System.Data.DataTable.Select(System.String,System.String)> または <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>で並べ替え条件を指定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1268">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select(System.String,System.String)> or <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>.</span></span>
  
 <span data-ttu-id="b5f3c-1269">フィルターの列に null 値が含まれている場合、その列は結果に含まれません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1269">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1270">次の例では、フィルター式を使用して <xref:System.Data.DataRow> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1270">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1271">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1271">Creating and Using DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="b5f3c-1272">null 値</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1272">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="sort" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="b5f3c-1273">行にフィルターをかけるために使用する基準。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1273">The criteria to use to filter the rows.</span></span> <span data-ttu-id="b5f3c-1274">行をフィルター処理する方法の例については、「[DataView RowFilter の構文 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1274">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <param name="sort"><span data-ttu-id="b5f3c-1275">列と並べ替え方向を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1275">A string specifying the column and sort direction.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1276">フィルター基準と一致するすべての <see cref="T:System.Data.DataRow" /> オブジェクトの配列を、指定した並べ替え順で取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1276">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the specified sort order.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1277">フィルター式と一致する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1277">An array of <see cref="T:System.Data.DataRow" /> objects matching the filter expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1278">`filterExpression` 引数を形成するには、<xref:System.Data.DataColumn> クラスの <xref:System.Data.DataColumn.Expression%2A> プロパティ値を作成する場合と同じ規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1278">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="b5f3c-1279">`Sort` 引数は、クラスの <xref:System.Data.DataColumn.Expression%2A> 文字列の作成にも同じ規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1279">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="b5f3c-1280">フィルターの列に null 値が含まれている場合、その列は結果に含まれません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1280">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1281">次の例では、フィルター式を使用して <xref:System.Data.DataRow> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1281">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1282">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1282">Creating and Using DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="b5f3c-1283">null 値</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1283">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort, valuetype System.Data.DataViewRowState recordStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String, recordStates As DataViewRowState) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort, System::Data::DataViewRowState recordStates);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string * System.Data.DataViewRowState -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort, recordStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="sort" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="recordStates" Type="System.Data.DataViewRowState" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="b5f3c-1284">行にフィルターをかけるために使用する基準。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1284">The criteria to use to filter the rows.</span></span> <span data-ttu-id="b5f3c-1285">行をフィルター処理する方法の例については、「[DataView RowFilter の構文 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1285">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <param name="sort"><span data-ttu-id="b5f3c-1286">列と並べ替え方向を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1286">A string specifying the column and sort direction.</span></span></param>
        <param name="recordStates"><span data-ttu-id="b5f3c-1287"><see cref="T:System.Data.DataViewRowState" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1287">One of the <see cref="T:System.Data.DataViewRowState" /> values.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1288">フィルター基準と一致するすべての <see cref="T:System.Data.DataRow" /> オブジェクトの配列を、指定した状態と一致する並べ替え順に取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1288">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the sort that match the specified state.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1289"><see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1289">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1290">`filterExpression` 引数を形成するには、<xref:System.Data.DataColumn> クラスの <xref:System.Data.DataColumn.Expression%2A> プロパティ値を作成する場合と同じ規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1290">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="b5f3c-1291">`Sort` 引数は、クラスの <xref:System.Data.DataColumn.Expression%2A> 文字列の作成にも同じ規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1291">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="b5f3c-1292">フィルターの列に null 値が含まれている場合、その列は結果に含まれません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1292">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1293">次の例では、フィルター式とレコードの状態を使用して、<xref:System.Data.DataRow> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1293">The following example uses a filter expression and record state to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1294">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1294">Creating and Using DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="b5f3c-1295">null 値</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1295">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Data.DataTable.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1296"><see cref="T:System.ComponentModel.ISite" /> の <see cref="T:System.Data.DataTable" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1296">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="b5f3c-1297"><see cref="T:System.ComponentModel.ISite" /> の <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1297">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1298">サイトは、<xref:System.ComponentModel.Component> を <xref:System.ComponentModel.Container> にバインドし、それらの間の通信を可能にします。また、コンテナーがそのコンポーネントを管理する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1298">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1299">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1299">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1300">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1300">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span></span></summary>
        <value><span data-ttu-id="b5f3c-1301">コレクションが <see cref="T:System.Collections.IList" /> オブジェクトのコレクションである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1301"><see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1302">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1302">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b5f3c-1303">これは、<xref:System.Data.DataTable> のインスタンスが <xref:System.ComponentModel.IListSource> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1303">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-1304">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IListSource.GetList" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1304">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1305">オブジェクトからデータ ソースに連結できる <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1305">An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1306">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1306">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b5f3c-1307">これは、<xref:System.Data.DataTable> のインスタンスが <xref:System.ComponentModel.IListSource> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1307">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="b5f3c-1308"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1308">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="b5f3c-1309"><see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1309">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1310">シリアル化情報オブジェクトを、<see cref="T:System.Data.DataTable" /> のシリアル化に必要なデータで事前設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1310">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-1311">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1311">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1312"><see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> メソッドによって生成され <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> メソッドによって処理されるオブジェクトの XML 表現を記述する <see cref="T:System.Xml.Schema.XmlSchema" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1312">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1313">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1313">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b5f3c-1314">これは、<xref:System.Data.DataSet> のインスタンスが <xref:System.Xml.Serialization.IXmlSerializable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1314">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b5f3c-1315">XmlReader。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1315">An XmlReader.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1316">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1316">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1317">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b5f3c-1318">これは、<xref:System.Data.DataSet> のインスタンスが <xref:System.Xml.Serialization.IXmlSerializable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1318">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1319">XmlWriter。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1319">An XmlWriter.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1320">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1320">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1321">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1321">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b5f3c-1322">これは、<xref:System.Data.DataSet> のインスタンスが <xref:System.Xml.Serialization.IXmlSerializable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1322">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableCleared">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableCleared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableCleared" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableCleared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableCleared As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableCleared;" />
      <MemberSignature Language="F#" Value="member this.TableCleared : System.Data.DataTableClearEventHandler " Usage="member this.TableCleared : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1323"><see cref="T:System.Data.DataTable" /> が消去された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1323">Occurs after a <see cref="T:System.Data.DataTable" /> is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1324"><xref:System.Data.DataTable.TableCleared> イベントは、すべての行が正常にクリアされた後、<xref:System.Data.DataTable.Clear%2A> メソッドから呼び出し元に制御が戻される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1324">The <xref:System.Data.DataTable.TableCleared> event is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span> <span data-ttu-id="b5f3c-1325">クリア操作中に例外が発生した場合、<xref:System.Data.DataTable.TableCleared> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1325">The <xref:System.Data.DataTable.TableCleared> event is not fired if there are any exceptions during the clear operation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1326">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1326">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1327">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1327">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableClearing">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableClearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableClearing" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableClearing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableClearing As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableClearing;" />
      <MemberSignature Language="F#" Value="member this.TableClearing : System.Data.DataTableClearEventHandler " Usage="member this.TableClearing : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1328"><see cref="T:System.Data.DataTable" /> が削除されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1328">Occurs when a <see cref="T:System.Data.DataTable" /> is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1329"><xref:System.Data.DataTable.Clear%2A> 操作の処理が開始される前に、<xref:System.Data.DataTable.TableClearing> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1329">The <xref:System.Data.DataTable.TableClearing> event is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span> <span data-ttu-id="b5f3c-1330">このイベントは、テーブルに行が含まれていない場合でも、<xref:System.Data.DataTable.Clear%2A> メソッドが呼び出されたときに常に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1330">This event is always fired when the <xref:System.Data.DataTable.Clear%2A> method is invoked, even if the table contains zero rows.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1331">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1331">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1332">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1332">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Data.DataTable.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableTableNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1333"><see cref="T:System.Data.DataTable" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1333">Gets or sets the name of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="b5f3c-1334"><see cref="T:System.Data.DataTable" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1334">The name of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1335"><xref:System.Data.DataTable.TableName%2A> は、親 <xref:System.Data.DataSet> オブジェクトの <xref:System.Data.DataTableCollection> (<xref:System.Data.DataSet.Tables%2A> プロパティによって返される) からこのテーブルを返すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1335">The <xref:System.Data.DataTable.TableName%2A> is used to return this table from the parent <xref:System.Data.DataSet> object's <xref:System.Data.DataTableCollection> (returned by the <xref:System.Data.DataSet.Tables%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1336">次の例では、<xref:System.Data.DataTable> オブジェクトのコレクション内の各テーブルの <xref:System.Data.DataTable.TableName%2A> を出力します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1336">The following example prints the <xref:System.Data.DataTable.TableName%2A> for each table in a collection of <xref:System.Data.DataTable> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.TableName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.TableName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b5f3c-1337"><see langword="null" /> または空の文字列 ("") が渡され、このテーブルはコレクションに属します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1337"><see langword="null" /> or empty string ("") is passed in and this table belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="b5f3c-1338">テーブルが属しているコレクションに、同じ名前のテーブルが既に含まれています。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1338">The table belongs to a collection that already has a table with the same name.</span></span> <span data-ttu-id="b5f3c-1339">比較では、大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1339">(Comparison is case-sensitive).</span></span></exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Tables" />
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1340">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1340">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableNewRow">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableNewRowEventHandler TableNewRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableNewRowEventHandler TableNewRow" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableNewRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableNewRow As DataTableNewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableNewRowEventHandler ^ TableNewRow;" />
      <MemberSignature Language="F#" Value="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " Usage="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableNewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1341">新しい <see cref="T:System.Data.DataRow" /> が挿入されると発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1341">Occurs when a new <see cref="T:System.Data.DataRow" /> is inserted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1342"><xref:System.Data.DataTable.NewRow%2A>を使用して新しい <xref:System.Data.DataRow> が作成された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1342">Fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span> <span data-ttu-id="b5f3c-1343">このイベントは、呼び出された `NewRow` メソッドが返される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1343">This event is fired before the invoked `NewRow` method returns.</span></span> <span data-ttu-id="b5f3c-1344">新しい <xref:System.Data.DataRow> インスタンスはデタッチされます。コレクションに追加されていません。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1344">The new <xref:System.Data.DataRow> instance is detached; it has not been added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1345">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1345">Creating and Using DataTables</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f404a5-13ea-4b93-a29f-55b74a16c9d3"><span data-ttu-id="b5f3c-1346">DataTable イベントの操作</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1346">Working with DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5f3c-1347"><see cref="P:System.Data.DataTable.TableName" /> と <see cref="P:System.Data.DataTable.DisplayExpression" /> が連結された文字列として存在する場合は、これらを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1347">Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</span></span></summary>
        <returns><span data-ttu-id="b5f3c-1348"><see cref="P:System.Data.DataTable.TableName" /> と <see cref="P:System.Data.DataTable.DisplayExpression" /> 値で構成された文字列。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1348">A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1349"><xref:System.Data.DataTable>の <xref:System.Data.DataTable.TableName%2A> と <xref:System.Data.DataTable.DisplayExpression%2A> を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1349">Gets the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> for the <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1350">次の例では、<xref:System.Data.DataTable.ToString%2A> メソッドを使用して、<xref:System.Data.DataTable.TableName%2A> と <xref:System.Data.DataTable.DisplayExpression%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1350">The following example returns the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> using the <xref:System.Data.DataTable.ToString%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1351">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1351">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1352"><see cref="T:System.Data.DataTable" /> の現在の内容を XML として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1352">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1353"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1353">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1354">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1354">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1355"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1355">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1356">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1356">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1357">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1357">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1358">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1358">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1359">次のコンソールアプリケーションは、2つの <xref:System.Data.DataTable> インスタンスを作成し、それぞれを <xref:System.Data.DataSet>に追加して、2つのテーブルに関連する <xref:System.Data.DataRelation> を作成します。次に、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用して、親テーブルに含まれるデータを <xref:System.IO.TextWriter>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1359">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="b5f3c-1360">この例では、`writeHierarchy` パラメーターをそれぞれの値に設定するときの動作を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1360">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1361">この例では、WriteXml のオーバーロードされたバージョンのいずれかを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1361">This example shows how to use one of the overloaded versions of WriteXml.</span></span> <span data-ttu-id="b5f3c-1362">使用できるその他の例については、個々のオーバーロードに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1362">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="b5f3c-1363">この例では、次の出力がコンソール ウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1363">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1364">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1364">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b5f3c-1365">データが書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1365">The stream to which the data will be written.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1366"><see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.IO.Stream" /> を使用して XML として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1366">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1367"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1367">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1368">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1368">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1369"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1369">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1370">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1370">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1371">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1371">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1372">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1372">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1373">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1373">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1374">内容を書き込む対象の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1374">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1375"><see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.IO.TextWriter" /> を使用して XML として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1375">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1376"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1376">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1377">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1377">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1378"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1378">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1379">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1379">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1380">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1380">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1381">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1381">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1382">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1382">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string -&gt; unit" Usage="dataTable.WriteXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b5f3c-1383">XML データの書き込み先ファイル。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1383">The file to which to write the XML data.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1384">指定したファイルを使用して <see cref="T:System.Data.DataTable" /> の現在の内容を XML で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1384">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1385"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1385">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1386">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1386">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1387"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1387">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1388">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1388">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1389">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1389">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1390">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1390">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1391">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1391">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1392">内容の書き込みに使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1392">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1393"><see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.Xml.XmlWriter" /> を使用して XML として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1393">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1394"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1394">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1395">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1395">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1396"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1396">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1397">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1397">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1398">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1398">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1399">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1399">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1400">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1400">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXml (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b5f3c-1401">データが書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1401">The stream to which the data will be written.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1402"><see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1402">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1403"><see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1403">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1404"><see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.IO.Stream" /> を使用して XML として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1404">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="b5f3c-1405">テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1405">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1406"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1406">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1407">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1407">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1408">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1408">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1409">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1409">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1410">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1410">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="b5f3c-1411">現在のテーブルとそのすべての子孫の関連テーブルのデータを書き込むには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1411">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1412">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1412">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1413">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1413">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (stream, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b5f3c-1414">データが書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1414">The stream to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="b5f3c-1415"><see cref="T:System.Data.XmlWriteMode" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1415">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1416">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを、指定したファイルに書き込みます。オプションでスキーマを書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1416">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="b5f3c-1417">スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1417">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1418"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1418">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1419">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1419">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1420"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1420">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1421">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1421">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1422">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1422">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1423">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1423">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1424">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1424">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1425">内容を書き込む対象の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1425">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1426"><see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1426">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1427"><see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1427">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1428"><see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.IO.TextWriter" /> を使用して XML として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1428">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="b5f3c-1429">テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1429">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1430"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1430">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1431">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1431">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1432">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1432">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="b5f3c-1433">現在のテーブルとそのすべての子孫の関連テーブルのデータを書き込むには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1433">To write the data for the current table and all its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1434">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1434">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1435">次のコンソールアプリケーションは、2つの <xref:System.Data.DataTable> インスタンスを作成し、それぞれを <xref:System.Data.DataSet>に追加して、2つのテーブルに関連する <xref:System.Data.DataRelation> を作成します。次に、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用して、親テーブルに含まれるデータを <xref:System.IO.TextWriter>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1435">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="b5f3c-1436">この例では、`writeHierarchy` パラメーターを `true`に設定するときの動作を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1436">The example demonstrates the behavior when setting the `writeHierarchy` parameter to `true`.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1437">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1437">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1438">ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1438">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="b5f3c-1439"><see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1439">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1440">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.IO.TextWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1440">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="b5f3c-1441">スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1441">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1442"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1442">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1443">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1443">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1444"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1444">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1445">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1445">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1446">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1446">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1447">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1447">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1448">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1448">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b5f3c-1449">XML データの書き込み先ファイル。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1449">The file to which to write the XML data.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1450"><see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1450">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1451"><see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1451">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1452">指定したファイルを使用して <see cref="T:System.Data.DataTable" /> の現在の内容を XML で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1452">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span></span> <span data-ttu-id="b5f3c-1453">テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1453">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1454"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1454">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1455">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1455">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1456"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1456">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1457">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1457">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1458">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1458">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1459">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1459">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="b5f3c-1460">現在のテーブルとそのすべての子孫の関連テーブルのデータを書き込むには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1460">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1461">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1461">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1462">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1462">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (fileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b5f3c-1463">データが書き込まれるファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1463">The name of the file to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="b5f3c-1464"><see cref="T:System.Data.XmlWriteMode" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1464">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1465">指定したファイルと <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1465">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="b5f3c-1466">スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1466">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1467"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1467">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1468">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1468">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1469"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1469">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1470">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1470">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1471">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1471">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1472">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1472">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1473">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1473">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1474">内容の書き込みに使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1474">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1475"><see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1475">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1476"><see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1476">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1477"><see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.Xml.XmlWriter" /> を使用して XML として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1477">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1478"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1478">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1479">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1479">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1480"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1480">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1481">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1481">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1482">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1482">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1483">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1483">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="b5f3c-1484">現在のテーブルとその子孫のすべての関連テーブルのデータを書き込むには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1484">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1485">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1485">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1486">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1486">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1487">ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1487">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="b5f3c-1488"><see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1488">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1489">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.Xml.XmlWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1489">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="b5f3c-1490">スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1490">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1491"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1491">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1492">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1492">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1493"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1493">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1494">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1494">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1495">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1495">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1496">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1496">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1497">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1497">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (stream, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b5f3c-1498">データが書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1498">The stream to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="b5f3c-1499"><see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1499">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1500"><see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1500">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1501"><see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1501">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1502">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを、指定したファイルに書き込みます。オプションでスキーマを書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1502">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="b5f3c-1503">スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1503">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="b5f3c-1504">テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1504">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1505"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を `DataTable` から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1505">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1506">データとスキーマの両方を書き込むには、`XmlWriteMode` パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1506">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1507"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1507">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1508">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1508">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1509">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1509">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1510">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを保存します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1510">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="b5f3c-1511">`WriteXml` メソッドを使用すると、データのみ、またはデータとスキーマの両方を `DataTable` から XML ドキュメントに書き込むことができます。一方、`WriteXmlSchema` メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1511">The `WriteXml` method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the `WriteXmlSchema` method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1512">データとスキーマの両方を書き込むには、`XmlWriteMode` パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1512">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1513"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1513">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1514">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1514">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1515">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1515">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1516">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1516">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="b5f3c-1517">現在のテーブルとそのすべての子孫の関連テーブルのデータを書き込むには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1517">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1518">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1518">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1519">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1519">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1520">ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1520">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="b5f3c-1521"><see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1521">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1522"><see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1522">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1523"><see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1523">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1524">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.IO.TextWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1524">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="b5f3c-1525">スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1525">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="b5f3c-1526">テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1526">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1527"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1527">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1528">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1528">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1529"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1529">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1530">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1530">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1531">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1531">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1532">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを保存します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1532">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="b5f3c-1533"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1533">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1534">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1534">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1535"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1535">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1536">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1536">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1537">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1537">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1538">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1538">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="b5f3c-1539">現在のテーブルとそのすべての子孫の関連テーブルのデータを書き込むには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1539">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1540">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1540">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1541">次のコンソールアプリケーションは、2つの <xref:System.Data.DataTable> インスタンスを作成し、それぞれを <xref:System.Data.DataSet>に追加して、2つのテーブルに関連する <xref:System.Data.DataRelation> を作成します。次に、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用して、親テーブルに含まれるデータを <xref:System.IO.TextWriter>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1541">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="b5f3c-1542">この例では、`writeHierarchy` パラメーターをそれぞれの値に設定するときの動作を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1542">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/VB/source.vb#1)]  
  
 <span data-ttu-id="b5f3c-1543">この例では、次の出力がコンソール ウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1543">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1544">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1544">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b5f3c-1545">データが書き込まれるファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1545">The name of the file to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="b5f3c-1546"><see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1546">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1547"><see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1547">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1548"><see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1548">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1549">指定したファイルと <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1549">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="b5f3c-1550">スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1550">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="b5f3c-1551">テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1551">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1552"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1552">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1553">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1553">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1554"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1554">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1555">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1555">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1556">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1556">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1557">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを保存します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1557">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="b5f3c-1558">現在のテーブルとすべてのスキーマのデータを保存するには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用して、データのみ、または <xref:System.Data.DataTable> から XML ドキュメントへのデータとスキーマの両方を書き込む方法を提供します。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1558">If you want to save the data for the current table and all of schema, the <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1559">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1559">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1560"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1560">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1561">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1561">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1562">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1562">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1563">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1563">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="b5f3c-1564">現在のテーブルとすべての子孫の関連テーブルのデータを書き込むには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1564">To write the data for the current table and all descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1565">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1565">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1566">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1566">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1567">ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1567">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="b5f3c-1568"><see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1568">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1569"><see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1569">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1570"><see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1570">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1571">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.Xml.XmlWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1571">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="b5f3c-1572">スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1572">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="b5f3c-1573">テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1573">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1574"><xref:System.Data.DataTable.WriteXml%2A> メソッドを使用すると、データのみ、またはデータとスキーマの両方を <xref:System.Data.DataTable> から XML ドキュメントに書き込むことができます。一方、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドでは、スキーマのみが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1574">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="b5f3c-1575">データとスキーマの両方を書き込むには、<xref:System.Data.XmlWriteMode> パラメーターを含むオーバーロードのいずれかを使用し、その値を `WriteSchema`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1575">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="b5f3c-1576"><xref:System.Data.DataTable.ReadXml%2A> メソッドと <xref:System.Data.DataTable.ReadXmlSchema%2A> メソッドについても同様です。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1576">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="b5f3c-1577">XML データ、またはスキーマとデータの両方を `DataTable`に読み取るには、`ReadXml` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1577">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="b5f3c-1578">スキーマのみを読み取るには、`ReadXmlSchema` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1578">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="b5f3c-1579">通常、`WriteXml` メソッドは、現在のテーブルのデータのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1579">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="b5f3c-1580">現在のテーブルとその子孫のすべての関連テーブルのデータを書き込むには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1580">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1581">読み取りまたは書き込みを行う `DataRow` 内の列の型が <xref:System.Dynamic.IDynamicMetaObjectProvider> を実装していて、<xref:System.Xml.Serialization.IXmlSerializable>を実装していない場合、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1581">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1582">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1582">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5f3c-1583"><see cref="T:System.Data.DataTable" /> の現在のデータ構造体を XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1583">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1584"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1584">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1585">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1585">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1586">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1586">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1587">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1587">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1588">次のコンソールアプリケーションは、2つの <xref:System.Data.DataTable> インスタンスを作成し、それぞれを <xref:System.Data.DataSet>に追加して、2つのテーブルに関連する <xref:System.Data.DataRelation> を作成します。次に、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、親テーブルに含まれるデータを <xref:System.IO.TextWriter>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1588">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="b5f3c-1589">この例では、`writeHierarchy` パラメーターをそれぞれの値に設定するときの動作を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1589">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5f3c-1590">この例では、`WriteXmlSchema` のオーバーロードされたバージョンのいずれかを使用して、使用可能なその他の例を確認する方法を示します。個々のオーバーロードに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1590">This example shows how to use one of the overloaded versions of `WriteXmlSchema` For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="b5f3c-1591">この例では、次の出力がコンソール ウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1591">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1592">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1592">Creating and Using DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b5f3c-1593">XML スキーマが書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1593">The stream to which the XML schema will be written.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1594"><see cref="T:System.Data.DataTable" /> の現在のデータ構造体を指定されたストリームに XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1594">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1595"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1595">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1596">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1596">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1597">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1597">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1598">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1598">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1599">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1599">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1600">書き込みに使用する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1600">The <see cref="T:System.IO.TextWriter" /> with which to write.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1601">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.IO.TextWriter" /> の現在のデータ構造体を XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1601">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1602"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1602">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1603">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1603">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1604">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1604">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1605">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1605">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1606">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1606">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string -&gt; unit" Usage="dataTable.WriteXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b5f3c-1607">使用するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1607">The name of the file to use.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1608"><see cref="T:System.Data.DataTable" /> の現在のデータ構造体を指定されたファイルに XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1608">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1609"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1609">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1610">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1610">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1611">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1611">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1612">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1612">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1613">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1613">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1614">使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1614">The <see cref="T:System.Xml.XmlWriter" /> to use.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1615">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Xml.XmlWriter" /> の現在のデータ構造体を XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1615">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1616"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1616">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1617">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1617">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1618">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1618">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1619">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1619">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1620">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1620">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b5f3c-1621">XML スキーマが書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1621">The stream to which the XML schema will be written.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1622"><see langword="true" /> の場合は、現在のテーブルとその子孫のスキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1622">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1623"><see langword="false" /> (既定値) の場合は、現在のテーブルのスキーマのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1623">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1624"><see cref="T:System.Data.DataTable" /> の現在のデータ構造体を指定されたストリームに XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1624">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span></span> <span data-ttu-id="b5f3c-1625">テーブルのスキーマとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1625">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1626"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1626">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1627">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1627">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1628">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1628">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1629">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1629">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1630">通常、`WriteXmlSchema` メソッドは、現在のテーブルに対してのみスキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1630">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="b5f3c-1631">現在のテーブルとその子孫のすべての関連テーブルのスキーマを記述するには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1631">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1632">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1632">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1633">書き込みに使用する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1633">The <see cref="T:System.IO.TextWriter" /> with which to write.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1634"><see langword="true" /> の場合は、現在のテーブルとその子孫のスキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1634">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1635"><see langword="false" /> (既定値) の場合は、現在のテーブルのスキーマのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1635">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1636">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.IO.TextWriter" /> の現在のデータ構造体を XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1636">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="b5f3c-1637">テーブルのスキーマとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1637">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1638"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1638">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1639">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1639">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1640">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1640">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1641">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1641">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1642">通常、`WriteXmlSchema` メソッドは、現在のテーブルに対してのみスキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1642">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="b5f3c-1643">現在のテーブルとその子孫のすべての関連テーブルのスキーマを記述するには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1643">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5f3c-1644">次のコンソールアプリケーションは、2つの <xref:System.Data.DataTable> インスタンスを作成し、それぞれを <xref:System.Data.DataSet>に追加して、2つのテーブルに関連する <xref:System.Data.DataRelation> を作成します。次に、<xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、親テーブルに含まれるデータを <xref:System.IO.TextWriter>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1644">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="b5f3c-1645">この例では、`writeHierarchy` パラメーターをそれぞれの値に設定するときの動作を示します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1645">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/VB/source.vb#1)]  
  
 <span data-ttu-id="b5f3c-1646">この例では、次の出力がコンソール ウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1646">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1647">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1647">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b5f3c-1648">使用するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1648">The name of the file to use.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1649"><see langword="true" /> の場合は、現在のテーブルとその子孫のスキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1649">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1650"><see langword="false" /> (既定値) の場合は、現在のテーブルのスキーマのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1650">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1651"><see cref="T:System.Data.DataTable" /> の現在のデータ構造体を指定されたファイルに XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1651">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span></span> <span data-ttu-id="b5f3c-1652">テーブルのスキーマとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1652">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1653"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1653">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1654">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1654">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1655">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1655">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1656">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1656">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1657">通常、`WriteXmlSchema` メソッドは、現在のテーブルに対してのみスキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1657">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="b5f3c-1658">現在のテーブルとその子孫のすべての関連テーブルのスキーマを記述するには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1658">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1659">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1659">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b5f3c-1660">ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1660">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="b5f3c-1661"><see langword="true" /> の場合は、現在のテーブルとその子孫のスキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1661">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="b5f3c-1662"><see langword="false" /> (既定値) の場合は、現在のテーブルのスキーマのみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1662">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="b5f3c-1663">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Xml.XmlWriter" /> の現在のデータ構造体を XML スキーマとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1663">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="b5f3c-1664">テーブルのスキーマとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1664">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5f3c-1665"><xref:System.Data.DataTable.WriteXmlSchema%2A> メソッドを使用して、<xref:System.Data.DataTable> のスキーマを XML ドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1665">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="b5f3c-1666">スキーマには、テーブル、リレーションシップ、および制約の定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1666">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="b5f3c-1667">XML スキーマは、XSD 標準を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1667">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="b5f3c-1668">XML ドキュメントにデータを書き込むには、<xref:System.Data.DataTable.WriteXml%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1668">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="b5f3c-1669">通常、`WriteXmlSchema` メソッドは、現在のテーブルに対してのみスキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1669">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="b5f3c-1670">現在のテーブルとその子孫のすべての関連テーブルのスキーマを記述するには、`writeHierarchy` パラメーターを `true`に設定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1670">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/52ff0e32-3e5a-41de-9a3b-7b04ea52b83e"><span data-ttu-id="b5f3c-1671">Datatable の作成と使用</span><span class="sxs-lookup"><span data-stu-id="b5f3c-1671">Creating and Using DataTables</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
