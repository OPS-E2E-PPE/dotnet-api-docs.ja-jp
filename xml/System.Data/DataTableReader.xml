<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30b5e5a3271a0718ebdff25ae6e806b521ce8840" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78821832" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cb6d8-101"><see cref="T:System.Data.DataTableReader" /> は、1 つ以上の <see cref="T:System.Data.DataTable" /> オブジェクトの内容を、読み取り専用、前方参照専用の 1 つ以上の結果セットとして取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-101">The <see cref="T:System.Data.DataTableReader" /> obtains the contents of one or more <see cref="T:System.Data.DataTable" /> objects in the form of one or more read-only, forward-only result sets.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-102"><xref:System.Data.DataTableReader> は、<xref:System.Data.SqlClient.SqlDataReader>などの他のデータリーダーと同様に機能しますが、<xref:System.Data.DataTable>内の行を反復処理するために <xref:System.Data.DataTableReader> が提供する点が異なります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-102">The <xref:System.Data.DataTableReader> works much like any other data reader, such as the <xref:System.Data.SqlClient.SqlDataReader>, except that the <xref:System.Data.DataTableReader> provides for iterating over rows in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cb6d8-103">つまり、キャッシュ内の行を反復処理するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-103">In other words, it provides for iterating over rows in a cache.</span></span> <span data-ttu-id="cb6d8-104">キャッシュされたデータは、<xref:System.Data.DataTableReader> がアクティブになっている間は変更でき、リーダーはその位置を自動的に保持します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-104">The cached data can be modified while the <xref:System.Data.DataTableReader> is active, and the reader automatically maintains its position.</span></span>  
  
 <span data-ttu-id="cb6d8-105"><xref:System.Data.DataTable>から <xref:System.Data.DataTableReader> を作成する場合、結果として得られる <xref:System.Data.DataTableReader> オブジェクトには、削除済みとしてマークされている行を除いて、作成元のデータと同じ <xref:System.Data.DataTable> データを含む1つの結果セットが含まれます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-105">When you create a <xref:System.Data.DataTableReader> from a <xref:System.Data.DataTable>, the resulting <xref:System.Data.DataTableReader> object contains one result set with the same data as the <xref:System.Data.DataTable> from which it was created, except for any rows that have been marked as deleted.</span></span> <span data-ttu-id="cb6d8-106">列は、元の <xref:System.Data.DataTable>と同じ順序で表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-106">The columns appear in the same order as in the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cb6d8-107">返される結果の構造は、スキーマとデータで元の <xref:System.Data.DataTable>と同じになります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-107">The structure of the returned result is identical in schema and data to the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cb6d8-108"><xref:System.Data.DataSet> オブジェクトの <xref:System.Data.DataSet.CreateDataReader*> メソッドを呼び出すことによって作成された <xref:System.Data.DataTableReader> には、<xref:System.Data.DataSet> に複数のテーブルが含まれている場合、複数の結果セットが含まれます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-108">A <xref:System.Data.DataTableReader> that was created by calling the <xref:System.Data.DataSet.CreateDataReader*> method of a <xref:System.Data.DataSet> object contains multiple result sets if the <xref:System.Data.DataSet> contains more than one table.</span></span> <span data-ttu-id="cb6d8-109">結果は、<xref:System.Data.DataSet> オブジェクトの <xref:System.Data.DataTableCollection> 内の <xref:System.Data.DataTable> オブジェクトと同じ順序になります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-109">The results are in the same sequence as the <xref:System.Data.DataTable> objects in the <xref:System.Data.DataTableCollection> of the <xref:System.Data.DataSet> object.</span></span>  
  
 <span data-ttu-id="cb6d8-110">返される結果セットには、各 <xref:System.Data.DataRow>の現在のバージョンのみが含まれます。削除対象としてマークされている行はスキップされます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-110">The returned result set contains only the current version of each <xref:System.Data.DataRow>; rows that are marked for deletion are skipped.</span></span>  
  
 <span data-ttu-id="cb6d8-111">`DataTableReader` は、安定した反復子を提供します。つまり、基になるコレクションのサイズが反復処理中に変更された場合、`DataTableReader` の内容は無効になりません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-111">The `DataTableReader` provides a stable iterator; that is, the contents of the `DataTableReader` are not invalidated if the size of the underlying collection is modified during iteration.</span></span> <span data-ttu-id="cb6d8-112">たとえば、イテレーション中に <xref:System.Data.DataTable.Rows%2A> コレクション内の1つ以上の行が削除または削除された場合、`DataTableReader` 内の現在位置が適切に維持され、反復子を無効にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-112">For example, if one or more rows in the <xref:System.Data.DataTable.Rows%2A> collection are deleted or removed during iteration, the current position within the `DataTableReader` is maintained appropriately and it does not invalidate the iterator.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6d8-113"><see cref="T:System.Data.DataTableReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-113">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTable As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="cb6d8-114">新しい <see cref="T:System.Data.DataTable" /> が結果セットを取得する <see cref="T:System.Data.DataTableReader" />。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-114">The <see cref="T:System.Data.DataTable" /> from which the new <see cref="T:System.Data.DataTableReader" /> obtains its result set.</span></span></param>
        <summary><span data-ttu-id="cb6d8-115">指定された <see cref="T:System.Data.DataTableReader" /> のデータを使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-115">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class by using data from the supplied <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="cb6d8-116">新しい <see cref="T:System.Data.DataTable" /> オブジェクトの結果を提供する <see cref="T:System.Data.DataTableReader" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-116">The array of <see cref="T:System.Data.DataTable" /> objects that supplies the results for the new <see cref="T:System.Data.DataTableReader" /> object.</span></span></param>
        <summary><span data-ttu-id="cb6d8-117"><see cref="T:System.Data.DataTableReader" /> オブジェクトの指定した配列を使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-117">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class using the supplied array of <see cref="T:System.Data.DataTable" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-118">特定の <xref:System.Data.DataSet>内のテーブルのすべてまたは一部に基づいて <xref:System.Data.DataTableReader> を作成する必要がある場合は、`DataSet`の <xref:System.Data.DataSet.CreateDataReader*> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-118">If you must create a <xref:System.Data.DataTableReader> based on all or a subset of the tables within a specific <xref:System.Data.DataSet>, call the `DataSet`'s <xref:System.Data.DataSet.CreateDataReader*> method.</span></span> <span data-ttu-id="cb6d8-119">関連付けられていない `DataTable` インスタンスのグループに基づいて新しい <xref:System.Data.DataTableReader> インスタンスを作成する場合は、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-119">If you want to create a new <xref:System.Data.DataTableReader> instance based on a group of `DataTable` instances that are not otherwise related, use this constructor.</span></span> <span data-ttu-id="cb6d8-120">また、このコンストラクターを利用して、ソース `DataSet` 内での順序がニーズに合わない場合に、`DataTableReader`内の `DataTables` の順序を変更することもできます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-120">You can also take advantage of this constructor to rearrange the ordering of the `DataTables` within the `DataTableReader`, if their ordering within their source `DataSet` does not meet your needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-121">次の例では、TestConstructor メソッドによって、2つの <xref:System.Data.DataTable> インスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-121">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="cb6d8-122"><xref:System.Data.DataTableReader> クラスのこのコンストラクターをデモンストレーションするために、このサンプルでは、2つの `DataTables`を含む配列に基づいて新しい `DataTableReader` を作成し、単純な操作を実行して、最初のいくつかの列の内容をコンソールウィンドウに出力します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-122">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="cb6d8-123">このアプリケーションをテストするには、新しいコンソールアプリケーションを作成し、新しく作成したファイルにサンプルコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-123">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 <span data-ttu-id="cb6d8-124">コンソールウィンドウには、次の結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-124">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6d8-125">現在の <see cref="T:System.Data.DataTableReader" /> を閉じます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-125">Closes the current <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-126">Closed `DataTableReader` オブジェクトで `Close()` を呼び出すと、エラーは発生しません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-126">Calling `Close()` on a closed `DataTableReader` object does not raise an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6d8-127"><see cref="T:System.Data.DataTableReader" /> の現在の行の入れ子の深さ。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-127">The depth of nesting for the current row of the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <value><span data-ttu-id="cb6d8-128">現在の行の入れ子の深さ。常に 0 になります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-128">The depth of nesting for the current row; always zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-129">`DataTableReader` は入れ子をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-129">`DataTableReader` does not support nesting.</span></span> <span data-ttu-id="cb6d8-130">`Depth` プロパティは常に0を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-130">The `Depth` property always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6d8-131">現在の行の列数を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-131">Returns the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="cb6d8-132">有効なレコードセットに位置していない場合は 0。それ以外の場合は現在の行の列数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-132">When not positioned in a valid result set, 0; otherwise the number of columns in the current row.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-133">閉じている <see cref="T:System.Data.DataTableReader" /> 内のフィールド数を取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-133">An attempt was made to retrieve the field count in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-134">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-134">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-135">指定した列の値を <see cref="T:System.Boolean" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-135">Gets the value of the specified column as a <see cref="T:System.Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-136">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-136">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-137">変換は実行されません。したがって、取得するデータは、既にブール値であるか、ブール値に変換可能であるか、または例外が生成されたものである必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-137">No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="cb6d8-138"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-138">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-139">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-139">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-140">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-140">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-141">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-141">If the data within the column is not the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-142">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-142">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-143">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-143">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-144">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-144">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-145">指定した列には <see langword="Boolean" /> が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-145">The specified column does not contain a <see langword="Boolean" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-146">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-146">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-147">指定した列の値をバイトとして取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-147">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-148">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-148">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-149">変換は実行されません。したがって、取得されるデータは、既にバイトであるか、またはバイトに対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-149">No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.</span></span>  
  
 <span data-ttu-id="cb6d8-150"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-150">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-151">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-151">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-152">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-152">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-153">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-153">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-154">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-154">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-155">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-155">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-156">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-156">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-157">指定した列にバイトが含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-157">The specified column does not contain a byte.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-158">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-158">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="cb6d8-159">読み取り操作を開始する位置を示すフィールド内のインデックス。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-159">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="cb6d8-160">バイト ストリームを読み取るバッファーです。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-160">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="cb6d8-161">バッファー内でデータの配置を開始するインデックス。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-161">The index within the buffer at which to start placing the data.</span></span></param>
        <param name="length"><span data-ttu-id="cb6d8-162">バッファーにコピーする最大長です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-162">The maximum length to copy into the buffer.</span></span></param>
        <summary><span data-ttu-id="cb6d8-163">指定したバッファー オフセットを開始位置として、指定した列オフセットから始まる文字のストリームをバッファーに配列として読み込みます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-163">Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-164">実際に読み取ったバイト数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-164">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-165">`GetBytes` は、フィールドで使用可能なバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-165">`GetBytes` returns the number of available bytes in the field.</span></span> <span data-ttu-id="cb6d8-166">ほとんどの場合、フィールドの正確な長さです。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-166">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="cb6d8-167">ただし、フィールドからバイトを取得するために `GetBytes` が既に使用されている場合、返される値は、フィールドの実際の長さよりも小さくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-167">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="cb6d8-168">たとえば、<xref:System.Data.DataTableReader> が大きなデータ構造をバッファーに読み込んでいる場合などです。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-168">This may be the case, for example, when the <xref:System.Data.DataTableReader> is reading a large data structure into a buffer</span></span>  
  
 <span data-ttu-id="cb6d8-169">`null` (`Nothing` Visual Basic) のバッファーを渡した場合、`GetBytes` は、バッファーオフセットパラメーターに基づいて、残りのサイズではなく、フィールド全体の長さをバイト単位で返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-169">If you pass a buffer that is `null` (`Nothing` in Visual Basic), `GetBytes` returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="cb6d8-170">変換は実行されません。したがって、取得されるデータは、既にバイト配列であるか、またはバイト配列に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-170">No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-171">次の例では、AdventureWorks サンプルデータベースのデータに基づいて <xref:System.Data.DataTableReader> を作成し、取得した各イメージを C:\ の別のファイルに保存します。フォルダー.</span><span class="sxs-lookup"><span data-stu-id="cb6d8-171">The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\ folder.</span></span> <span data-ttu-id="cb6d8-172">このアプリケーションをテストするには、新しいコンソールアプリケーションを作成し、system.string アセンブリを参照して、新しく作成したファイルにサンプルコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-172">In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-173">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-173">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-174">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-174">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-175">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-175">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-176">指定した列にはバイト配列が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-176">The specified column does not contain a byte array.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-177">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-177">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-178">指定した列の値を文字として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-178">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-179">列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-179">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-180">変換は実行されません。したがって、取得されるデータは、既に文字であるか、または文字に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-180">No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.</span></span>  
  
 <span data-ttu-id="cb6d8-181"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-181">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-182">次の例では、渡された DataTableReader 内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-182">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="cb6d8-183">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-183">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-184">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-184">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-185">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-185">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-186">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-186">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-187">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-187">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-188">指定したフィールドに文字が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-188">The specified field does not contain a character.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-189">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-189">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="cb6d8-190">読み取り操作を開始する位置を示すフィールド内のインデックス。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-190">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="cb6d8-191">char のストリームの読み込み先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-191">The buffer into which to read the stream of chars.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="cb6d8-192">バッファー内でデータの配置を開始するインデックス。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-192">The index within the buffer at which to start placing the data.</span></span></param>
        <param name="length"><span data-ttu-id="cb6d8-193">バッファーにコピーする最大長です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-193">The maximum length to copy into the buffer.</span></span></param>
        <summary><span data-ttu-id="cb6d8-194">指定された列の値を 1 つの文字配列として返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-194">Returns the value of the specified column as a character array.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-195">実際に読み取った文字数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-195">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-196">`GetChars` は、フィールドで使用可能な文字数を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-196">`GetChars` returns the number of available characters in the field.</span></span> <span data-ttu-id="cb6d8-197">ほとんどの場合、フィールドの正確な長さです。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-197">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="cb6d8-198">ただし、既に `GetChars` を使用してフィールドから文字を取得している場合、返される文字数はフィールドの正しい長さよりも少なくなる場合があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-198">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span>  
  
 <span data-ttu-id="cb6d8-199">実際に読み取られた文字数は、フィールドの末尾に到達した場合、要求された長さよりも小さくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-199">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="cb6d8-200">Null (Visual Basic の`Nothing`) のバッファーを渡した場合、`GetChars` は、バッファーオフセットパラメーターに基づいて残りのサイズではなく、フィールド全体の長さを文字数で返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-200">If you pass a buffer that is null (`Nothing` in Visual Basic), `GetChars` returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="cb6d8-201">変換は実行されません。したがって、取得されるデータは、既に文字配列であるか、または文字配列に対して強制されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-201">No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-202">`GetChars`メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-202">The following example demonstrates the `GetChars` method.</span></span> <span data-ttu-id="cb6d8-203">`TestGetChars` メソッドには、2つのデータ列 (最初の列のファイル名) と2番目の列の文字配列を入力した `DataTableReader` が渡されることを想定しています。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-203">The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second.</span></span> <span data-ttu-id="cb6d8-204">また、`TestGetChars` では、`DataTableReader`の文字配列からデータを読み取るときに使用するバッファーサイズを指定できます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-204">In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`.</span></span> <span data-ttu-id="cb6d8-205">`TestGetChars` は、ファイル名として `DataTableReader` の最初の列に指定されたデータを使用して、`DataTableReader`内の各データ行に対応するファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-205">`TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.</span></span>  
  
 <span data-ttu-id="cb6d8-206">この手順では、`DataTable` に格納されていたデータを文字配列として読み取る `GetChars` メソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-206">This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array.</span></span> <span data-ttu-id="cb6d8-207">その他の種類のデータでは、`GetChars` メソッドによって `InvalidCastException`がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-207">Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-208">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-208">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-209">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-209">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-210">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-210">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-211">指定した列には文字配列が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-211">The specified column does not contain a character array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-212">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-212">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-213">指定した列のデータ型を示す文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-213">Gets a string representing the data type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-214">列のデータ型を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-214">A string representing the column's data type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-215"><xref:System.Data.DataTableReader.GetDataTypeName%2A> メソッドは、常に、プロバイダー固有の型ではなく、基になる <xref:System.Data.DataColumn> の型を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-215">The <xref:System.Data.DataTableReader.GetDataTypeName%2A> method always returns the type of the underlying <xref:System.Data.DataColumn> instead of a provider-specific type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-216">次のコンソールアプリケーションでは、単純 <xref:System.Data.DataTable>のフィールドとその型名の一覧が表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-216">The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 <span data-ttu-id="cb6d8-217">コンソールウィンドウには、次の結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-217">The Console window displays the following results:</span></span>  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-218">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-218">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-219">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-219">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-220">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-220">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-221">指定した列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-221">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-222">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-222">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-223">変換は実行されません。したがって、取得されるデータは、既に <xref:System.DateTime> であるか、`DataTime`に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-223">No conversions are performed; therefore the data retrieved must already be a <xref:System.DateTime> or coercible to a `DataTime`.</span></span>  
  
 <span data-ttu-id="cb6d8-224"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-224">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-225">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-225">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-226">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-226">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-227">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-227">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-228">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-228">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-229">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-229">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-230">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-230">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-231">指定した列に DateTime 値が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-231">The specified column does not contain a DateTime value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-232">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-232">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-233">指定した列の値を <see cref="T:System.Decimal" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-233">Gets the value of the specified column as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-234">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-234">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-235">変換は実行されません。したがって、取得されるデータは、既に <xref:System.Decimal> であるか、`Decimal`に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-235">No conversions are performed; therefore the data retrieved must already be a <xref:System.Decimal> or coercible to a `Decimal`.</span></span>  
  
 <span data-ttu-id="cb6d8-236"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-236">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-237">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-237">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-238">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-238">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-239">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-239">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-240">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-240">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-241">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-241">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-242">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-242">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-243">指定した列には <see langword="Decimal" /> 値が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-243">The specified column does not contain a <see langword="Decimal" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-244">列の 0 から始まる序数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-244">The zero-based ordinal of the column.</span></span></param>
        <summary><span data-ttu-id="cb6d8-245">列の値を倍精度浮動小数点数値として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-245">Gets the value of the column as a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-246">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-246">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-247">変換は実行されません。したがって、取得されるデータは、既に倍精度浮動小数点数であるか、倍精度浮動小数点数に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-247">No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="cb6d8-248"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-248">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-249">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-249">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-250">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-250">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-251">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-251">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-252">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-252">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-253">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-253">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-254">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-254">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-255">指定した列に倍精度浮動小数点数が格納されていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-255">The specified column does not contain a double-precision floating point number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6d8-256">項目のコレクションを反復処理するために使用できる列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-256">Returns an enumerator that can be used to iterate through the item collection.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-257">項目のコレクションを表す <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-257">An <see cref="T:System.Collections.IEnumerator" /> object that represents the item collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-258">列挙子は、<xref:System.Data.DataTableReader>内のデータの読み取りのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-258">Enumerators only allow for reading the data in the <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-259">列挙子を使用して、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-259">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="cb6d8-260">最初に、列挙子はコレクション内の最初の要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-260">At first, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="cb6d8-261">この位置で <xref:System.Collections.IEnumerator.Current%2A> を呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-261">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="cb6d8-262">したがって、`MoveNext` の値を読み取る前に、`Current` を呼び出して、列挙子をコレクションの先頭の要素に進めておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-262">Therefore, you must call `MoveNext` to advance the enumerator to the first element of the collection before reading the value of `Current`.</span></span>  
  
 <span data-ttu-id="cb6d8-263">`Current` は <xref:System.Data.Common.DbDataRecord>を返し、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまで同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-263">`Current` returns a <xref:System.Data.Common.DbDataRecord>, and returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="cb6d8-264">`MoveNext` は、`Current` を次の要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-264">`MoveNext` sets `Current` to the next element.</span></span>  
  
 <span data-ttu-id="cb6d8-265">コレクションの末尾が渡されると、列挙子はコレクションの最後の要素の後に配置され、`MoveNext` を呼び出すと false が返されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-265">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling `MoveNext` returns false.</span></span> <span data-ttu-id="cb6d8-266">前回 `MoveNext` を呼び出して `false` が返された場合に、`Current` を呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-266">If the last call to `MoveNext` returned `false`, calling `Current` throws an exception.</span></span> <span data-ttu-id="cb6d8-267">さらに、<xref:System.Data.DataTableReader> はデータへの順方向専用アクセスを提供するため、IEnumerator の <xref:System.Collections.IEnumerator.Reset%2A> メソッドを呼び出すと <xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-267">In addition, because the <xref:System.Data.DataTableReader> provides forward-only access to its data, calling the <xref:System.Collections.IEnumerator.Reset%2A> method of the IEnumerator throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="cb6d8-268"><xref:System.Data.DataTableReader> には、安定した列挙子が用意されています。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-268">The <xref:System.Data.DataTableReader> provides a stable enumerator.</span></span> <span data-ttu-id="cb6d8-269">これは、基になるデータ内で行の削除や追加が行われた場合でも、<xref:System.Data.DataTableReader.GetEnumerator%2A> の呼び出しによって返される列挙子が引き続き有効であることを意味します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-269">This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to <xref:System.Data.DataTableReader.GetEnumerator%2A> is still valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-270"><xref:System.Data.DataTableReader.GetEnumerator%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-270">The following example demonstrates the use of the <xref:System.Data.DataTableReader.GetEnumerator%2A> method.</span></span> <span data-ttu-id="cb6d8-271">これには、列挙子がアクティブであるときに、基になる <xref:System.Data.DataTable> から行が削除されるときの列挙子の動作が含まれます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-271">This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 <span data-ttu-id="cb6d8-272">この手順では、コンソールウィンドウに次のテキストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-272">The procedure displays the following text in the Console window:</span></span>  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-273">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-273">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-274">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-274">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-275">オブジェクトのデータ型である <see cref="T:System.Type" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-275">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-276">オブジェクトのデータ型である <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-276">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cb6d8-277">次のプロシージャを呼び出して、コンソールウィンドウの各型のすべてのフィールドと完全な名前の一覧を表示するために <xref:System.Data.DataTableReader> インスタンスを渡します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-277">Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-278">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-278">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-279">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-279">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-280">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-280">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-281">指定した列の値を単精度浮動小数点数として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-281">Gets the value of the specified column as a single-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-282">列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-282">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-283">変換は実行されません。したがって、取得されるデータは、既に単精度浮動小数点数であるか、単精度浮動小数点数に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-283">No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="cb6d8-284"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-284">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-285">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-285">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-286">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-286">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-287">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-287">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-288">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-288">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-289">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-289">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-290">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-290">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-291">指定した列に単精度浮動小数点数が格納されていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-291">The specified column does not contain a single-precision floating point number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-292">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-292">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-293">指定された列の値をグローバル一意識別子 (GUID) として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-293">Gets the value of the specified column as a globally-unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="cb6d8-294">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-294">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-295">変換は実行されません。したがって、取得されるデータは、既に <xref:System.Guid> であるか、`Guid`に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-295">No conversions are performed; therefore the data retrieved must already be a <xref:System.Guid> or coercible to a `Guid`.</span></span>  
  
 <span data-ttu-id="cb6d8-296"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-296">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-297">次の例では、渡された DataTableReader 内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-297">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="cb6d8-298">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-298">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-299">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-299">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-300">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-300">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-301">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-301">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-302">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-302">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-303">指定した列に GUID が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-303">The specified column does not contain a GUID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-304">0 から始まる列序数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-304">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="cb6d8-305">指定した列の値を 16 ビット符号付き整数として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-305">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-306">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-306">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-307">変換は実行されません。したがって、取得されるデータは、既に <xref:System.Int16> であるか、`Int16`に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-307">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int16> or coercible to an `Int16`.</span></span>  
  
 <span data-ttu-id="cb6d8-308"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-308">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-309">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-309">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-310">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-310">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-311">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-311">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-312">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-312">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-313">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-313">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-314">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-314">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-315">指定した列に 16 ビット符号付き整数が格納されていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-315">The specified column does not contain a 16-bit signed integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-316">0 から始まる列序数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-316">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="cb6d8-317">指定した列の値を 32 ビット符号付き整数として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-317">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-318">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-318">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-319">変換は実行されません。したがって、取得されるデータは、既に <xref:System.Int32> であるか、`Int32`に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-319">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int32> or coercible to an `Int32`.</span></span>  
  
 <span data-ttu-id="cb6d8-320"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-320">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-321">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-321">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-322">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-322">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-323">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-323">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-324">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-324">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-325">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-325">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-326">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-326">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-327">指定した列に 32 ビット符号付き整数値が格納されていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-327">The specified column does not contain a 32-bit signed integer value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-328">0 から始まる列序数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-328">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="cb6d8-329">指定した列の値を 64 ビット符号付き整数として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-329">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-330">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-330">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-331">変換は実行されません。したがって、取得されるデータは、既に <xref:System.Int64> であるか、`Int64`に対して強制可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-331">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int64> or coercible to an `Int64`.</span></span>  
  
 <span data-ttu-id="cb6d8-332"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-332">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-333">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-333">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-334">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-334">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-335">列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-335">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-336">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-336">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-337">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-337">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-338">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-338">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-339">指定した列に 64 ビット符号付き整数値が格納されていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-339">The specified column does not contain a 64-bit signed integer value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-340">0 から始まる列序数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-340">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="cb6d8-341">指定した列の値を <see cref="T:System.String" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-341">Gets the value of the specified column as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-342">指定した列の名前です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-342">The name of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-343">`GetName` メソッドと <xref:System.Data.DataTableReader.GetOrdinal%2A> メソッドでは、逆の機能が提供されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-343">The `GetName` and <xref:System.Data.DataTableReader.GetOrdinal%2A> methods provide inverse functionality.</span></span> <span data-ttu-id="cb6d8-344">つまり、`GetName` 呼び出しの戻り値に対して `GetOrdinal` を呼び出すと、`GetName`に渡された元のパラメーターが返されます。これは、プロシージャを逆の順序で呼び出す場合にも当てはまります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-344">That is, calling `GetOrdinal` on the return value of calling `GetName` should return the original parameter passed to `GetName`; the same applies to calling the procedures in the opposite order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-345">次の簡単な例には、指定された `DataTableReader`内のすべての列の名前と、列の序数位置をコンソールウィンドウに一覧表示するプロシージャが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-345">The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-346">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-346">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-347">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-347">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb6d8-348">列の名前です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-348">The name of the column.</span></span></param>
        <summary><span data-ttu-id="cb6d8-349">指定した列の名前から列の序数を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-349">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-350">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-350">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-351"><xref:System.Data.DataTableReader> クラスによって提供されるほとんどのメソッドには序数の列番号を指定する必要があるため、列の名前を指定して、`GetOrdinal` メソッドを使用して列番号を取得できます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-351">Because most of the methods provided by the <xref:System.Data.DataTableReader> class must be provided with an ordinal column number, you can use the `GetOrdinal` method to retrieve the column number, given the name of the column.</span></span>  
  
 <span data-ttu-id="cb6d8-352">`GetOrdinal` は、まず大文字と小文字を区別して参照を実行します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-352">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="cb6d8-353">失敗した場合、次に大文字と小文字を区別せずに検索が行われます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-353">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="cb6d8-354">列番号が見つからない場合は `IndexOutOfRangeException` がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-354">If the column number is not found an `IndexOutOfRangeException` is thrown.</span></span>  
  
 <span data-ttu-id="cb6d8-355">`GetOrdinal` では、カタカナの全角と半角が区別されません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-355">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="cb6d8-356">序数に基づく参照は名前による参照よりも効率的であるため、ループ内で `GetOrdinal` を呼び出すのは非効率的です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-356">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="cb6d8-357">`GetOrdinal` を一度呼び出し、ループ内で使用するために結果を整数変数に代入することによって時間を節約します</span><span class="sxs-lookup"><span data-stu-id="cb6d8-357">Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-358">列名のみを使用していて、列名が user によって指定されていて、列から情報を取得する必要がある場合は、次のようなプロシージャを使用して必要な情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-358">If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information.</span></span> <span data-ttu-id="cb6d8-359">この例では、プロシージャは列名を受け取り、<xref:System.Data.DataTableReader> の現在の行の列に含まれるデータを返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-359">In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-360">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-360">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6d8-361">指定された名前は、有効な列名ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-361">The name specified is not a valid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-362">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-362">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-363">指定した列の型をプロバイダー固有の形式で取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-363">Gets the type of the specified column in provider-specific format.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-364">オブジェクトのデータ型である <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-364">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-365"><xref:System.Data.DataTableReader> は常に基になる <xref:System.Data.DataColumn>内に格納されている型を返すので、<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> メソッドを呼び出すことによって返される値は、常に <xref:System.Data.DataTable>内に格納されている型と同じ型を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-365">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method always returns the same type as the type stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cb6d8-366"><xref:System.Data.DataTableReader> クラスを使用する場合、<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> メソッドを呼び出すと、<xref:System.Type.GetType%2A> メソッドを呼び出す場合と同じ型が返されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-366">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method returns the same type as calling the <xref:System.Type.GetType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-367">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-367">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-368">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-368">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-369">値を取得した列の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-369">The zero-based number of the column whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="cb6d8-370">指定した列の値をプロバイダー固有の形式で取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-370">Gets the value of the specified column in provider-specific format.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-371">プロバイダー固有の形式による、指定した列の値。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-371">The value of the specified column in provider-specific format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-372"><xref:System.Data.DataTableReader> は常に基になる <xref:System.Data.DataColumn>内に格納されている型を返すので、<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> メソッドを呼び出すことによって返される値は、常に <xref:System.Data.DataTable>内に格納されているデータと同じ型のデータを返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-372">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cb6d8-373"><xref:System.Data.DataTableReader> クラスを使用する場合、<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> メソッドを呼び出すと、<xref:System.Data.DataTableReader.GetValue%2A> メソッドを呼び出したときと同じ値と型が返されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-373">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-374">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-374">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-375">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-375">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-376">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-376">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /></span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="cb6d8-377"><see cref="T:System.Data.DataTableReader" /> の列の型情報を格納するオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-377">An array of objects to be filled in with type information for the columns in the <see cref="T:System.Data.DataTableReader" />.</span></span></param>
        <summary><span data-ttu-id="cb6d8-378">指定された配列に、<see cref="T:System.Data.DataTableReader" /> のすべての列に関するプロバイダー固有の型の情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-378">Fills the supplied array with provider-specific type information for all the columns in the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-379">配列にコピーされる列の値の数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-379">The number of column values copied into the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-380"><xref:System.Data.DataTableReader> は常に基になる <xref:System.Data.DataColumn>内に格納されている型のデータを返すため、<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> メソッドを呼び出すことによって返される値は、常に <xref:System.Data.DataTable>内に格納されているデータと同じ型になります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-380">Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method is always of the same types as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cb6d8-381"><xref:System.Data.DataTableReader> クラスを使用する場合、<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> メソッドを呼び出すと、<xref:System.Data.DataTableReader.GetValues%2A> メソッドを呼び出したときと同じ値と型が返されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-381">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-382">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-382">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-383">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-383">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6d8-384"><see cref="T:System.Data.DataTable" /> の列メタデータを表す <see cref="T:System.Data.DataTableReader" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-384">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-385">列メタデータを記述する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-385">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-386">GetSchemaTable メソッドは、各列に関するメタデータを次の順序で返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-386">The GetSchemaTable method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="cb6d8-387">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="cb6d8-387">DataReader column</span></span>|<span data-ttu-id="cb6d8-388">説明</span><span class="sxs-lookup"><span data-stu-id="cb6d8-388">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="cb6d8-389">ColumnName</span><span class="sxs-lookup"><span data-stu-id="cb6d8-389">ColumnName</span></span>|<span data-ttu-id="cb6d8-390"><xref:System.Data.DataTable>に表示される列の名前です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-390">The name of the column as it appears in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="cb6d8-391">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="cb6d8-391">ColumnOrdinal</span></span>|<span data-ttu-id="cb6d8-392">列の序数</span><span class="sxs-lookup"><span data-stu-id="cb6d8-392">The ordinal of the column</span></span>|  
|<span data-ttu-id="cb6d8-393">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="cb6d8-393">ColumnSize</span></span>|<span data-ttu-id="cb6d8-394"><xref:System.Data.DataColumn> の <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (または <xref:System.Data.DataColumn.MaxLength%2A>) プロパティを特定できないか、または関連性がない場合は-1。それ以外の場合は、0または `MaxLength` 値を含む正の整数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-394">-1 if the <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (or <xref:System.Data.DataColumn.MaxLength%2A>) property of the <xref:System.Data.DataColumn> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the `MaxLength` value.</span></span>|  
|<span data-ttu-id="cb6d8-395">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="cb6d8-395">NumericPrecision</span></span>|<span data-ttu-id="cb6d8-396">列の型が数値型の場合は、列の最大有効桁数になります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-396">If the column type is a numeric type, this is the maximum precision of the column.</span></span> <span data-ttu-id="cb6d8-397">列の型が数値データ型でない場合、これは null 値になります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-397">If the column type is not a numeric data type, this is a null value.</span></span>|  
|<span data-ttu-id="cb6d8-398">NumericScale</span><span class="sxs-lookup"><span data-stu-id="cb6d8-398">NumericScale</span></span>|<span data-ttu-id="cb6d8-399">列のデータ型にスケールコンポーネントがある場合は、小数点の右側の桁数を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-399">If column data type has a scale component, return the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="cb6d8-400">それ以外の場合は、null 値を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-400">Otherwise, return a null value.</span></span>|  
|<span data-ttu-id="cb6d8-401">DataType</span><span class="sxs-lookup"><span data-stu-id="cb6d8-401">DataType</span></span>|<span data-ttu-id="cb6d8-402">列の基になる型。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-402">The underlying type of the column.</span></span>|  
|<span data-ttu-id="cb6d8-403">ProviderType</span><span class="sxs-lookup"><span data-stu-id="cb6d8-403">ProviderType</span></span>|<span data-ttu-id="cb6d8-404">列のデータ型のインジケーターです。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-404">The indicator of the column's data type.</span></span> <span data-ttu-id="cb6d8-405">列のデータ型が行ごとに異なる場合、この値は <xref:System.Object>になります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-405">If the data type of the column varies from row to row, this value is <xref:System.Object>.</span></span> <span data-ttu-id="cb6d8-406">この列に NULL 値を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-406">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="cb6d8-407">IsLong</span><span class="sxs-lookup"><span data-stu-id="cb6d8-407">IsLong</span></span>|<span data-ttu-id="cb6d8-408">列のデータ型が <xref:System.String>、その <xref:System.Data.DataColumn.MaxLength%2A> プロパティが-1 の場合に `true` ます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-408">`true` if the data type of the column is <xref:System.String> and its <xref:System.Data.DataColumn.MaxLength%2A> property is -1.</span></span> <span data-ttu-id="cb6d8-409">それ以外の場合は、`false` になります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-409">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="cb6d8-410">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="cb6d8-410">AllowDBNull</span></span>|<span data-ttu-id="cb6d8-411">列に対して AllowDbNull 制約が true に設定されている場合は `true` します。それ以外の場合は、`false`ます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-411">`true` if the AllowDbNull constraint is set to true for the column; otherwise, `false`.</span></span>|  
|<span data-ttu-id="cb6d8-412">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="cb6d8-412">IsReadOnly</span></span>|<span data-ttu-id="cb6d8-413">列を変更できない場合は `true` します。それ以外の場合は `false`。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-413">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="cb6d8-414">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="cb6d8-414">IsRowVersion</span></span>|<span data-ttu-id="cb6d8-415">すべての列に対して `false`。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-415">`false`, for every column.</span></span>|  
|<span data-ttu-id="cb6d8-416">IsUnique</span><span class="sxs-lookup"><span data-stu-id="cb6d8-416">IsUnique</span></span>|<span data-ttu-id="cb6d8-417">`true`: この列では、<xref:System.Data.DataTable> 内の2つの行の値を同じにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-417">`true`: No two rows in the <xref:System.Data.DataTable> can have the same value in this column.</span></span> <span data-ttu-id="cb6d8-418">列がそれ自体によってキーを表している場合、またはこの列にのみ適用される UNIQUE 型の制約がある場合、`IsUnique` は必ず true になります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-418">`IsUnique` is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span> <span data-ttu-id="cb6d8-419">`false`: 列には、`DataTable`内の重複する値を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-419">`false`: The column can contain duplicate values in the `DataTable`.</span></span> <span data-ttu-id="cb6d8-420">この列の既定値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-420">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="cb6d8-421">IsKey</span><span class="sxs-lookup"><span data-stu-id="cb6d8-421">IsKey</span></span>|<span data-ttu-id="cb6d8-422">`true`: この列は、<xref:System.Data.DataTable>内の行を一意に識別するために使用される一連の列の1つです。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-422">`true`: The column is one of a set of columns that, taken together, uniquely identify the row in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cb6d8-423">`IsKey` が `true` に設定されている列のセットは、`DataTable`内の行を一意に識別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-423">The set of columns with `IsKey` set to `true` must uniquely identify a row in the `DataTable`.</span></span> <span data-ttu-id="cb6d8-424">この列のセットは列の最小セットである必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-424">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="cb6d8-425">この一連の列は、`DataTable` 主キー、一意の制約、または一意のインデックスから生成される場合があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-425">This set of columns may be generated from a `DataTable` primary key, a unique constraint or a unique index.</span></span> <span data-ttu-id="cb6d8-426">`false`: この列は、行を一意に識別するためには必要ありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-426">`false`: The column is not required to uniquely identify the row.</span></span> <span data-ttu-id="cb6d8-427">この値は、列が単一または複合主キーに参加している場合に `true` ます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-427">This value is `true` if the column participates in a single or composite primary key.</span></span> <span data-ttu-id="cb6d8-428">それ以外の場合、その値は `false`です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-428">Otherwise, its value is `false`.</span></span>|  
|<span data-ttu-id="cb6d8-429">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="cb6d8-429">IsAutoIncrement</span></span>|<span data-ttu-id="cb6d8-430">`true`: 列は、固定インクリメントで新しい行に値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-430">`true`: The column assigns values to new rows in fixed increments.</span></span> <span data-ttu-id="cb6d8-431">`false`: 列では、固定インクリメントで新しい行に値が割り当てられません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-431">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="cb6d8-432">この列の既定値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-432">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="cb6d8-433">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="cb6d8-433">BaseCatalogName</span></span>|<span data-ttu-id="cb6d8-434">列を含むデータ ストア内のカタログの名前です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-434">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="cb6d8-435">ベースカタログ名を特定できない場合は `Null` します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-435">`Null` if the base catalog name cannot be determined.</span></span> <span data-ttu-id="cb6d8-436">この列の既定値は `null` 値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-436">The default value for this column is a `null` value.</span></span>|  
|<span data-ttu-id="cb6d8-437">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="cb6d8-437">BaseSchemaName</span></span>|<span data-ttu-id="cb6d8-438">この値は常に `Null` です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-438">This value is always `Null`.</span></span>|  
|<span data-ttu-id="cb6d8-439">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="cb6d8-439">BaseTableName</span></span>|<span data-ttu-id="cb6d8-440"><xref:System.Data.DataTable> の名前。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-440">The name of the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="cb6d8-441">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="cb6d8-441">BaseColumnName</span></span>|<span data-ttu-id="cb6d8-442"><xref:System.Data.DataTable>内の列の名前。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-442">The name of the column in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="cb6d8-443">AutoIncrementSeed</span><span class="sxs-lookup"><span data-stu-id="cb6d8-443">AutoIncrementSeed</span></span>|<span data-ttu-id="cb6d8-444"><xref:System.Data.DataTable>の <xref:System.Data.DataColumn.AutoIncrementSeed%2A> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-444">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementSeed%2A> property.</span></span>|  
|<span data-ttu-id="cb6d8-445">AutoIncrementStep</span><span class="sxs-lookup"><span data-stu-id="cb6d8-445">AutoIncrementStep</span></span>|<span data-ttu-id="cb6d8-446"><xref:System.Data.DataTable>の <xref:System.Data.DataColumn.AutoIncrementStep%2A> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-446">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementStep%2A> property.</span></span>|  
|<span data-ttu-id="cb6d8-447">DefaultValue</span><span class="sxs-lookup"><span data-stu-id="cb6d8-447">DefaultValue</span></span>|<span data-ttu-id="cb6d8-448"><xref:System.Data.DataColumn>の <xref:System.Data.DataColumn.DefaultValue%2A> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-448">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.DefaultValue%2A> property.</span></span>|  
|<span data-ttu-id="cb6d8-449">式</span><span class="sxs-lookup"><span data-stu-id="cb6d8-449">Expression</span></span>|<span data-ttu-id="cb6d8-450">現在の列が式列で、式で使用されているすべての列が式列を含む同じ `T:System.Data.DataTable` に属している場合は、式の文字列。それ以外の場合は `null`。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-450">The expression string, if the current column is an expression column and all columns used in the expression belong to the same `T:System.Data.DataTable` that contains the expression column; otherwise `null`.</span></span>|  
|<span data-ttu-id="cb6d8-451">ColumnMapping</span><span class="sxs-lookup"><span data-stu-id="cb6d8-451">ColumnMapping</span></span>|<span data-ttu-id="cb6d8-452"><xref:System.Data.DataColumn>に関連付けられている <xref:System.Data.MappingType> 値。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-452">The <xref:System.Data.MappingType> value associated with the <xref:System.Data.DataColumn>.</span></span> <span data-ttu-id="cb6d8-453">型には、`Attribute`、`Element`、`Hidden`、または `SimpleContent`のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-453">The type can be one of `Attribute`, `Element`, `Hidden`, or `SimpleContent`.</span></span> <span data-ttu-id="cb6d8-454">既定値は `Element` です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-454">The default value is `Element`.</span></span>|  
|<span data-ttu-id="cb6d8-455">BaseTableNamespace</span><span class="sxs-lookup"><span data-stu-id="cb6d8-455">BaseTableNamespace</span></span>|<span data-ttu-id="cb6d8-456"><xref:System.Data.DataTable>の <xref:System.Data.DataTable.Namespace%2A> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-456">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataTable.Namespace%2A> property.</span></span>|  
|<span data-ttu-id="cb6d8-457">BaseColumnNamespace</span><span class="sxs-lookup"><span data-stu-id="cb6d8-457">BaseColumnNamespace</span></span>|<span data-ttu-id="cb6d8-458"><xref:System.Data.DataColumn>の <xref:System.Data.DataColumn.Namespace%2A> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-458">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.Namespace%2A> property.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-459">次のコンソールアプリケーションの例では、指定された列に関するスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-459">The following console application example retrieves schema information about the specified column.</span></span> <span data-ttu-id="cb6d8-460">`DisplaySchemaTableInfo` プロシージャに <xref:System.Data.DataTableReader> と、`DataTableReader`内の列の序数位置を表す整数を渡します。このプロシージャは、スキーマ情報をコンソールウィンドウに出力します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-460">Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-461"><see cref="T:System.Data.DataTableReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-461">The <see cref="T:System.Data.DataTableReader" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-462">0 から始まる列序数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-462">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="cb6d8-463">指定した列の値を文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-463">Gets the value of the specified column as a string.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-464">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-464">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-465"><xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-465">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-466">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-466">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-467">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-467">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-468">正しい型の列内のデータの場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-468">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-469">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-469">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-470">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-470">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-471">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-471">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6d8-472">指定した列に文字列が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-472">The specified column does not contain a string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-473">0 から始まる列序数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-473">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="cb6d8-474">指定した列の値をネイティブ形式で取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-474">Gets the value of the specified column in its native format.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-475">指定した列の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-475">The value of the specified column.</span></span> <span data-ttu-id="cb6d8-476">null 列の場合は、<see langword="DBNull" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-476">This method returns <see langword="DBNull" /> for null columns.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-477">このメソッドを呼び出す前に、<xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して null 値があるかどうかを確認することもできますが、この操作は必要ありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-477">Although you can call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method, you do not have to do this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-478">次の例では、<xref:System.Data.DataTableReader>内の現在の行のすべての列を反復処理し、各列の内容と列名を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-478">The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name.</span></span> <span data-ttu-id="cb6d8-479">一般に、<xref:System.Data.DataTableReader>によって取得された行のすべての列を使用する場合は、より効率的であるため、代わりに <xref:System.Data.DataTableReader.GetValues%2A> メソッドを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-479">Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-480">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-480">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-481">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-481">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-482">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-482">An attempt was made to read or access columns in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="cb6d8-483"><see cref="T:System.Object" /> の列の値のコピー先である <see cref="T:System.Data.DataTableReader" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-483">An array of <see cref="T:System.Object" /> into which to copy the column values from the <see cref="T:System.Data.DataTableReader" />.</span></span></param>
        <summary><span data-ttu-id="cb6d8-484">オブジェクトの配列に現在の行の列値を入力します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-484">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-485">配列にコピーされる列の値の数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-485">The number of column values copied into the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-486">ほとんどのアプリケーションでは、この方法により、各列を個別に取得するのではなく、すべての列を取得するための効率的な手段が提供されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-486">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span> <span data-ttu-id="cb6d8-487"><xref:System.Data.DataTableReader>内の行からすべての列の値を取得することが目的の場合、`GetValues` メソッドは最も効率的なソリューションを提供します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-487">If your intent is to retrieve all the column values from a row within the <xref:System.Data.DataTableReader>, the `GetValues` method provides the most efficient solution.</span></span>  
  
 <span data-ttu-id="cb6d8-488">結果として得られる行に含まれる列数よりも小さい <xref:System.Object> 配列を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-488">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="cb6d8-489">`Object` 配列に格納できるデータ量だけが配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-489">Only the amount of data the `Object` array can hold is copied to the array.</span></span> <span data-ttu-id="cb6d8-490">また、長さが結果の行に含まれる列数よりも長い `Object` 配列を渡すこともできます。この場合、追加の配列要素はメソッド呼び出しによって変更されません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-490">You can also pass an `Object` array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.</span></span>  
  
 <span data-ttu-id="cb6d8-491">このメソッドは、null 列の出力配列に `DBNull` を配置します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-491">This method places `DBNull` in the output array for null columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-492">次の例では、正しいサイズの配列を使用して、指定された <xref:System.Data.DataTableReader>の現在の行からすべての値を読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-492">The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-493">また、このサンプルでは、サイズの小さい、または使用可能な列数よりも大きいサイズの固定配列を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-493">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-494">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-494">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-495">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-495">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-496">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-496">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6d8-497"><see cref="T:System.Data.DataTableReader" /> に 1 行以上の行が格納されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-497">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> contains one or more rows.</span></span></summary>
        <value><span data-ttu-id="cb6d8-498">1 行以上の行が <see langword="true" /> に含まれている場合は <see cref="T:System.Data.DataTableReader" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-498"><see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-499">`HasRows` プロパティは、現在の結果セットに関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-499">The `HasRows` property returns information about the current result set.</span></span> <span data-ttu-id="cb6d8-500"><xref:System.Data.DataTableReader> に複数の結果セットが含まれている場合は、新しい結果セットに行が含まれているかどうかを判断するために、<xref:System.Data.DataTableReader.NextResult%2A> メソッドを呼び出した直後に `HasRows` プロパティの値を確認できます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-500">If the <xref:System.Data.DataTableReader> contains multiple result sets, you can examine the value of the `HasRows` property immediately after you call the <xref:System.Data.DataTableReader.NextResult%2A> method in order to determine whether the new result set contains rows.</span></span>  
  
 <span data-ttu-id="cb6d8-501">現在の結果セット内に行がない場合は、`HasRows` プロパティを使用して、<xref:System.Data.DataTableReader> の <xref:System.Data.DataTableReader.Read%2A> メソッドを呼び出す必要がないようにします。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-501">Use the `HasRows` property to avoid the requirement to call the <xref:System.Data.DataTableReader.Read%2A> method of the <xref:System.Data.DataTableReader> if there are no rows within the current result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-502">次の例では、2つの <xref:System.Data.DataTable> インスタンスにデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-502">The following example fills two <xref:System.Data.DataTable> instances with data.</span></span> <span data-ttu-id="cb6d8-503">最初の <xref:System.Data.DataTable> には1つの行が含まれ、2番目のには行が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-503">The first <xref:System.Data.DataTable> contains one row, and the second contains no rows.</span></span> <span data-ttu-id="cb6d8-504">次に、両方の <xref:System.Data.DataTable> オブジェクトを含む <xref:System.Data.DataTableReader> を作成し、PrintData メソッドを呼び出してそれぞれの内容を表示し、PrintData を呼び出す前にそれぞれの <xref:System.Data.DataTableReader.HasRows%2A> プロパティの値を確認します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-504">The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the <xref:System.Data.DataTableReader.HasRows%2A> property of each before it makes the call to PrintData.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-505">閉じられた <see cref="T:System.Data.DataTableReader" /> に関する情報を取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-505">An attempt was made to retrieve information about a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6d8-506"><see cref="T:System.Data.DataTableReader" /> が閉じているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-506">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> is closed.</span></span></summary>
        <value><span data-ttu-id="cb6d8-507"><see langword="true" /> が閉じている場合は <see cref="T:System.Data.DataTableReader" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-507"><see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-508"><xref:System.Data.DataTableReader.Close%2A> は、<xref:System.Data.DataTableReader> が閉じられた後にアクセスできる唯一のメソッドと `IsClosed` と <xref:System.Data.DataTableReader.RecordsAffected%2A> です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-508"><xref:System.Data.DataTableReader.Close%2A> is the only method and `IsClosed` and <xref:System.Data.DataTableReader.RecordsAffected%2A> are the only properties that can be accessed after the <xref:System.Data.DataTableReader> has been closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-509">0 から始まる列序数。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-509">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="cb6d8-510">列に格納されている値が存在しない値または欠損値かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-510">Gets a value that indicates whether the column contains non-existent or missing values.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-511">指定した列の値が <see langword="true" /> と等価である場合は <see cref="T:System.DBNull" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-511"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-512">このメソッドを呼び出して、型指定された get メソッド (たとえば、<xref:System.Data.DataTableReader.GetByte%2A>、<xref:System.Data.DataTableReader.GetChar%2A>など) を呼び出す前に、エラーが発生しないようにします。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-512">Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-513">次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-513">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-514">値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-514">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="cb6d8-515">正しい型の列内のデータの場合、この例では各行のエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-515">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6d8-516">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-516">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-517">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-517">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-518">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-518">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6d8-519">指定した列の値をネイティブ形式で取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-519">Gets the value of the specified column in its native format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="cb6d8-520">0 から始まる列序数です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-520">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="cb6d8-521">列序数を指定して、指定した列の値をネイティブ形式で取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-521">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="cb6d8-522">指定された列のネイティブ形式の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-522">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-523"><xref:System.Data.DataTableReader.Item%2A> のこのオーバーロードは、<xref:System.Data.DataTableReader.GetValue%2A> メソッドと同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-523">This overload for <xref:System.Data.DataTableReader.Item%2A> behaves identically to the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-524">次の例では、指定された <xref:System.Data.DataTableReader>のすべての行で、すべての列の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-524">The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="cb6d8-525">このコードでは、<xref:System.Data.DataTableReader.Item%2A> メソッド (Microsoft C#ではインデクサー) を使用して、各列に含まれる値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-525">The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb6d8-526">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-526">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb6d8-527">列の名前です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-527">The name of the column.</span></span></param>
        <summary><span data-ttu-id="cb6d8-528">列の名前を指定して、指定した列の値をネイティブ形式で取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-528">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="cb6d8-529">指定された列のネイティブ形式の値です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-529">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-530">大文字と小文字を区別する検索が最初に実行されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-530">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="cb6d8-531">失敗した場合、次に大文字と小文字を区別せずに検索が行われます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-531">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="cb6d8-532">この方法では、かなの文字幅を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-532">This method is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="cb6d8-533">このオーバーロードされたバージョンの <xref:System.Data.DataTableReader.Item%2A> は、<xref:System.Data.DataTableReader.GetOrdinal%2A> メソッドを呼び出し、その後 <xref:System.Data.DataTableReader.GetValue%2A> メソッドを呼び出すことに対応しています。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-533">This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-534"><xref:System.Data.DataTableReader> と列名を指定した場合、GetValueByName プロシージャは、指定された列の値を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-534">Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column.</span></span> <span data-ttu-id="cb6d8-535">このプロシージャを呼び出す前に、新しい <xref:System.Data.DataTableReader> インスタンスを作成し、その Read メソッドを少なくとも1回呼び出す必要があります。これにより、行ポインターがデータ行に配置されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-535">Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6d8-536">指定された名前は、有効な列名ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-536">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="cb6d8-537">削除した行からデータを取得しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-537">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-538">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-538">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6d8-539"><see cref="T:System.Data.DataTableReader" /> を次の結果に進めます (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-539">Advances the <see cref="T:System.Data.DataTableReader" /> to the next result set, if any.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-540">別の結果セットがあった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-540"><see langword="true" /> if there was another result set; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-541">複数のテーブルを含む <xref:System.Data.DataSet> に対して <xref:System.Data.DataTableReader> を作成するか、2つ以上の <xref:System.Data.DataTable> インスタンスを含む配列を作成することによって生成される複数の結果を処理するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-541">Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances.</span></span>  
  
 <span data-ttu-id="cb6d8-542">最初の結果に新しい <xref:System.Data.DataTableReader> が配置されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-542">A new <xref:System.Data.DataTableReader> is positioned on the first result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-543">次の例では、TestConstructor メソッドによって、2つの <xref:System.Data.DataTable> インスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-543">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="cb6d8-544"><xref:System.Data.DataTableReader> クラスのこのコンストラクターをデモンストレーションするために、このサンプルでは、2つの `DataTables`を含む配列に基づいて新しい `DataTableReader` を作成し、単純な操作を実行して、最初のいくつかの列の内容をコンソールウィンドウに出力します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-544">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="cb6d8-545">このアプリケーションをテストするには、新しいコンソールアプリケーションを作成し、新しく作成したファイルにサンプルコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-545">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 <span data-ttu-id="cb6d8-546">コンソールウィンドウには、次の結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-546">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-547">閉じられた <see cref="T:System.Data.DataTableReader" /> 内を移動しようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-547">An attempt was made to navigate within a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6d8-548">次のレコードに <see cref="T:System.Data.DataTableReader" /> を進めます。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-548">Advances the <see cref="T:System.Data.DataTableReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="cb6d8-549">読み取る行が他にもあった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-549"><see langword="true" /> if there was another row to read; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6d8-550"><xref:System.Data.DataTableReader> の既定の位置は、最初のレコードの前です。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-550">The default position of the <xref:System.Data.DataTableReader> is before the first record.</span></span> <span data-ttu-id="cb6d8-551">したがって、すべてのデータへのアクセスを開始するには、`Read` を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-551">Therefore, you must call `Read` to start accessing any data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6d8-552">PrintColumns プロシージャは、<xref:System.Data.DataTableReader>内のすべての行をループし、コンソールウィンドウの各列の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-552">The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6d8-553">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-553">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6d8-554">SQL ステートメントを実行したことで挿入、変更、または削除された行数を取得します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-554">Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="cb6d8-555"><see cref="T:System.Data.DataTableReader" /> はこのプロパティをサポートしません。常に 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="cb6d8-555">The <see cref="T:System.Data.DataTableReader" /> does not support this property and always returns 0.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
