<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa131b45a383de3b642a0c4312d3f215d311c514" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75140578" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Data.DataTableReader" /> は、1 つ以上の <see cref="T:System.Data.DataTable" /> オブジェクトの内容を、読み取り専用、前方参照専用の 1 つ以上の結果セットとして取得します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader> は、<xref:System.Data.SqlClient.SqlDataReader>などの他のデータリーダーと同様に機能しますが、<xref:System.Data.DataTable>内の行を反復処理するために <xref:System.Data.DataTableReader> が提供する点が異なります。 つまり、キャッシュ内の行を反復処理するために用意されています。 キャッシュされたデータは、<xref:System.Data.DataTableReader> がアクティブになっている間は変更でき、リーダーはその位置を自動的に保持します。  
  
 <xref:System.Data.DataTable>から <xref:System.Data.DataTableReader> を作成する場合、結果として得られる <xref:System.Data.DataTableReader> オブジェクトには、削除済みとしてマークされている行を除いて、作成元のデータと同じ <xref:System.Data.DataTable> データを含む1つの結果セットが含まれます。 列は、元の <xref:System.Data.DataTable>と同じ順序で表示されます。 返される結果の構造は、スキーマとデータで元の <xref:System.Data.DataTable>と同じになります。 <xref:System.Data.DataSet> オブジェクトの <xref:System.Data.DataSet.CreateDataReader*> メソッドを呼び出すことによって作成された <xref:System.Data.DataTableReader> には、<xref:System.Data.DataSet> に複数のテーブルが含まれている場合、複数の結果セットが含まれます。 結果は、<xref:System.Data.DataSet> オブジェクトの <xref:System.Data.DataTableCollection> 内の <xref:System.Data.DataTable> オブジェクトと同じ順序になります。  
  
 返される結果セットには、各 <xref:System.Data.DataRow>の現在のバージョンのみが含まれます。削除対象としてマークされている行はスキップされます。  
  
 `DataTableReader` は、安定した反復子を提供します。つまり、基になるコレクションのサイズが反復処理中に変更された場合、`DataTableReader` の内容は無効になりません。 たとえば、イテレーション中に <xref:System.Data.DataTable.Rows%2A> コレクション内の1つ以上の行が削除または削除された場合、`DataTableReader` 内の現在位置が適切に維持され、反復子を無効にすることはできません。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">新しい <see cref="T:System.Data.DataTable" /> が結果セットを取得する <see cref="T:System.Data.DataTableReader" />。</param>
        <summary>指定された <see cref="T:System.Data.DataTableReader" /> のデータを使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables">新しい <see cref="T:System.Data.DataTable" /> オブジェクトの結果を提供する <see cref="T:System.Data.DataTableReader" /> オブジェクトの配列。</param>
        <summary><see cref="T:System.Data.DataTableReader" /> オブジェクトの指定した配列を使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定の <xref:System.Data.DataSet>内のテーブルのすべてまたは一部に基づいて <xref:System.Data.DataTableReader> を作成する必要がある場合は、`DataSet`の <xref:System.Data.DataSet.CreateDataReader*> メソッドを呼び出します。 関連付けられていない `DataTable` インスタンスのグループに基づいて新しい <xref:System.Data.DataTableReader> インスタンスを作成する場合は、このコンストラクターを使用します。 また、このコンストラクターを利用して、ソース `DataSet` 内での順序がニーズに合わない場合に、`DataTableReader`内の `DataTables` の順序を変更することもできます。  
  
   
  
## Examples  
 次の例では、TestConstructor メソッドによって、2つの <xref:System.Data.DataTable> インスタンスが作成されます。 <xref:System.Data.DataTableReader> クラスのこのコンストラクターをデモンストレーションするために、このサンプルでは、2つの `DataTables`を含む配列に基づいて新しい `DataTableReader` を作成し、単純な操作を実行して、最初のいくつかの列の内容をコンソールウィンドウに出力します。 このアプリケーションをテストするには、新しいコンソールアプリケーションを作成し、新しく作成したファイルにサンプルコードを貼り付けます。  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 コンソールウィンドウには、次の結果が表示されます。  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Data.DataTableReader" /> を閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Closed `DataTableReader` オブジェクトで `Close()` を呼び出すと、エラーは発生しません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" /> の現在の行の入れ子の深さ。</summary>
        <value>現在の行の入れ子の深さ。常に 0 になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DataTableReader` は入れ子をサポートしていません。 `Depth` プロパティは常に0を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の行の列数を返します。</summary>
        <value>有効なレコードセットに位置していない場合は 0。それ以外の場合は現在の行の列数。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> 内のフィールド数を取得しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を <see cref="T:System.Boolean" /> として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得するデータは、既にブール値であるか、ブール値に変換可能であるか、または例外が生成されたものである必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列には <see langword="Boolean" /> が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値をバイトとして取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既にバイトであるか、またはバイトに対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列にバイトが含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <param name="dataIndex">読み取り操作を開始する位置を示すフィールド内のインデックス。</param>
        <param name="buffer">バイトのストリームを読み込むバッファー。</param>
        <param name="bufferIndex">バッファー内でデータの配置を開始するインデックス。</param>
        <param name="length">バッファーにコピーする最大長。</param>
        <summary>指定したバッファー オフセットを開始位置として、指定した列オフセットから始まる文字のストリームをバッファーに配列として読み込みます。</summary>
        <returns>実際に読み取られたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetBytes` は、フィールドで使用可能なバイト数を返します。 ほとんどの場合、フィールドの正確な長さです。 ただし、フィールドからバイトを取得するために `GetBytes` が既に使用されている場合、返される値は、フィールドの実際の長さよりも小さくなることがあります。 たとえば、<xref:System.Data.DataTableReader> が大きなデータ構造をバッファーに読み込んでいる場合などです。  
  
 `null` (`Nothing` Visual Basic) のバッファーを渡した場合、`GetBytes` は、バッファーオフセットパラメーターに基づいて、残りのサイズではなく、フィールド全体の長さをバイト単位で返します。  
  
 変換は実行されません。したがって、取得されるデータは、既にバイト配列であるか、またはバイト配列に対して強制可能である必要があります。  
  
   
  
## Examples  
 次の例では、AdventureWorks サンプルデータベースのデータに基づいて <xref:System.Data.DataTableReader> を作成し、取得した各イメージを C:\ の別のファイルに保存します。フォルダー. このアプリケーションをテストするには、新しいコンソールアプリケーションを作成し、system.string アセンブリを参照して、新しく作成したファイルにサンプルコードを貼り付けます。  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列にはバイト配列が含まれていません。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を文字として取得します。</summary>
        <returns>列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に文字であるか、または文字に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された DataTableReader 内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定したフィールドに文字が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <param name="dataIndex">読み取り操作を開始する位置を示すフィールド内のインデックス。</param>
        <param name="buffer">char のストリームの読み込み先のバッファー。</param>
        <param name="bufferIndex">バッファー内でデータの配置を開始するインデックス。</param>
        <param name="length">バッファーにコピーする最大長。</param>
        <summary>指定された列の値を 1 つの文字配列として返します。</summary>
        <returns>実際に読み取られた文字数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetChars` は、フィールドで使用可能な文字数を返します。 ほとんどの場合、フィールドの正確な長さです。 ただし、フィールドから文字を取得するために `GetChars` が既に使用されている場合、返される値は、フィールドの実際の長さよりも小さくなることがあります。  
  
 実際に読み取られた文字数は、フィールドの末尾に到達した場合、要求された長さよりも小さくなることがあります。 Null (Visual Basic の`Nothing`) のバッファーを渡した場合、`GetChars` は、バッファーオフセットパラメーターに基づいて残りのサイズではなく、フィールド全体の長さを文字数で返します。  
  
 変換は実行されません。したがって、取得されるデータは、既に文字配列であるか、または文字配列に対して強制されている必要があります。  
  
   
  
## Examples  
 `GetChars`メソッドの例を次に示します。 `TestGetChars` メソッドには、2つのデータ列 (最初の列のファイル名) と2番目の列の文字配列を入力した `DataTableReader` が渡されることを想定しています。 また、`TestGetChars` では、`DataTableReader`の文字配列からデータを読み取るときに使用するバッファーサイズを指定できます。 `TestGetChars` は、ファイル名として `DataTableReader` の最初の列に指定されたデータを使用して、`DataTableReader`内の各データ行に対応するファイルを作成します。  
  
 この手順では、`DataTable` に格納されていたデータを文字配列として読み取る `GetChars` メソッドを使用する方法を示します。 その他の種類のデータでは、`GetChars` メソッドによって `InvalidCastException`がスローされます。  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列には文字配列が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列のデータ型を示す文字列を取得します。</summary>
        <returns>列のデータ型を示す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.GetDataTypeName%2A> メソッドは、常に、プロバイダー固有の型ではなく、基になる <xref:System.Data.DataColumn> の型を返します。  
  
   
  
## Examples  
 次のコンソールアプリケーションでは、単純 <xref:System.Data.DataTable>のフィールドとその型名の一覧が表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 コンソールウィンドウには、次の結果が表示されます。  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に <xref:System.DateTime> であるか、`DataTime`に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に DateTime 値が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を <see cref="T:System.Decimal" /> として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に <xref:System.Decimal> であるか、`Decimal`に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列には <see langword="Decimal" /> 値が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">列の 0 から始まる序数。</param>
        <summary>列の値を倍精度浮動小数点数値として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に倍精度浮動小数点数であるか、倍精度浮動小数点数に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に倍精度浮動小数点数が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>項目のコレクションを反復処理するために使用できる列挙子を返します。</summary>
        <returns>項目のコレクションを表す <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子は、<xref:System.Data.DataTableReader>内のデータの読み取りのみを許可します。 列挙子を使用して、基になるコレクションを変更することはできません。  
  
 最初に、列挙子はコレクション内の最初の要素の前に配置されます。 この位置で <xref:System.Collections.IEnumerator.Current%2A> を呼び出すと、例外がスローされます。 そのため、`MoveNext` の値を読み取る前に、`Current` を呼び出して列挙子をコレクションの最初の要素に進める必要があります。  
  
 `Current` は <xref:System.Data.Common.DbDataRecord>を返し、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまで同じオブジェクトを返します。 `MoveNext` は、`Current` を次の要素に設定します。  
  
 コレクションの末尾が渡されると、列挙子はコレクションの最後の要素の後に配置され、`MoveNext` を呼び出すと false が返されます。 `MoveNext` の最後の呼び出しが `false`返された場合、`Current` を呼び出すと例外がスローされます。 さらに、<xref:System.Data.DataTableReader> はデータへの順方向専用アクセスを提供するため、IEnumerator の <xref:System.Collections.IEnumerator.Reset%2A> メソッドを呼び出すと <xref:System.NotSupportedException>がスローされます。  
  
 <xref:System.Data.DataTableReader> には、安定した列挙子が用意されています。 これは、基になるデータ内で行の削除や追加が行われた場合でも、<xref:System.Data.DataTableReader.GetEnumerator%2A> の呼び出しによって返される列挙子が引き続き有効であることを意味します。  
  
   
  
## Examples  
 <xref:System.Data.DataTableReader.GetEnumerator%2A> メソッドの使用例を次に示します。 これには、列挙子がアクティブであるときに、基になる <xref:System.Data.DataTable> から行が削除されるときの列挙子の動作が含まれます。  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 この手順では、コンソールウィンドウに次のテキストが表示されます。  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>オブジェクトのデータ型である <see cref="T:System.Type" /> を取得します。</summary>
        <returns>オブジェクトのデータ型である <see cref="T:System.Type" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のプロシージャを呼び出して、コンソールウィンドウの各型のすべてのフィールドと完全な名前の一覧を表示するために <xref:System.Data.DataTableReader> インスタンスを渡します。  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値を単精度浮動小数点値として取得します。</summary>
        <returns>列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に単精度浮動小数点数であるか、単精度浮動小数点数に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に単精度浮動小数点数が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値をグローバル一意識別子 (GUID) として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に <xref:System.Guid> であるか、`Guid`に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された DataTableReader 内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に GUID が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を 16 ビット符号付き整数として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に <xref:System.Int16> であるか、`Int16`に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に 16 ビット符号付き整数が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値を 32 ビット符号付き整数として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に <xref:System.Int32> であるか、`Int32`に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に 32 ビット符号付き整数値が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値を 64 ビット符号付き整数として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、取得されるデータは、既に <xref:System.Int64> であるか、`Int64`に対して強制可能である必要があります。  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 列内のデータが正しい型ではない場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に 64 ビット符号付き整数値が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を <see cref="T:System.String" /> として取得します。</summary>
        <returns>指定された列の名前。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetName` メソッドと <xref:System.Data.DataTableReader.GetOrdinal%2A> メソッドでは、逆の機能が提供されます。 つまり、`GetName` 呼び出しの戻り値に対して `GetOrdinal` を呼び出すと、`GetName`に渡された元のパラメーターが返されます。これは、プロシージャを逆の順序で呼び出す場合にも当てはまります。  
  
   
  
## Examples  
 次の簡単な例には、指定された `DataTableReader`内のすべての列の名前と、列の序数位置をコンソールウィンドウに一覧表示するプロシージャが含まれています。  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">列の名前。</param>
        <summary>列の名前を指定して、列の序数を取得します。</summary>
        <returns>0 から始まる列序数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader> クラスによって提供されるほとんどのメソッドには序数の列番号を指定する必要があるため、列の名前を指定して、`GetOrdinal` メソッドを使用して列番号を取得できます。  
  
 `GetOrdinal` では、最初に大文字と小文字を区別する検索を実行します。 失敗した場合、次に大文字と小文字を区別せずに検索が行われます。 列番号が見つからない場合は `IndexOutOfRangeException` がスローされます。  
  
 `GetOrdinal` はかなを区別しません。  
  
 序数ベースの参照は名前付き参照よりも効率的であるため、ループ内で `GetOrdinal` を呼び出すことは効率的ではありません。 `GetOrdinal` を一度呼び出し、ループ内で使用するために結果を整数変数に代入することによって時間を節約します  
  
   
  
## Examples  
 列名のみを使用していて、列名が user によって指定されていて、列から情報を取得する必要がある場合は、次のようなプロシージャを使用して必要な情報を抽出できます。 この例では、プロシージャは列名を受け取り、<xref:System.Data.DataTableReader> の現在の行の列に含まれるデータを返します。  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.ArgumentException">指定された名前は、有効な列名ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の型をプロバイダー固有の形式で取得します。</summary>
        <returns>オブジェクトのデータ型である <see cref="T:System.Type" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader> は常に基になる <xref:System.Data.DataColumn>内に格納されている型を返すので、<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> メソッドを呼び出すことによって返される値は、常に <xref:System.Data.DataTable>内に格納されている型と同じ型を返します。 <xref:System.Data.DataTableReader> クラスを使用する場合、<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> メソッドを呼び出すと、<xref:System.Type.GetType%2A> メソッドを呼び出す場合と同じ型が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">値を取得した列の、0 から始まるインデックス番号。</param>
        <summary>指定した列の値をプロバイダー固有の形式で取得します。</summary>
        <returns>プロバイダー固有の形式による、指定した列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader> は常に基になる <xref:System.Data.DataColumn>内に格納されている型を返すので、<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> メソッドを呼び出すことによって返される値は、常に <xref:System.Data.DataTable>内に格納されているデータと同じ型のデータを返します。 <xref:System.Data.DataTableReader> クラスを使用する場合、<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> メソッドを呼び出すと、<xref:System.Data.DataTableReader.GetValue%2A> メソッドを呼び出したときと同じ値と型が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Data.DataTableReader" /> の列の型情報を格納するオブジェクトの配列。</param>
        <summary>指定された配列に、<see cref="T:System.Data.DataTableReader" /> のすべての列に関するプロバイダー固有の型の情報を格納します。</summary>
        <returns>配列にコピーされる列の値の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader> は常に基になる <xref:System.Data.DataColumn>内に格納されている型のデータを返すため、<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> メソッドを呼び出すことによって返される値は、常に <xref:System.Data.DataTable>内に格納されているデータと同じ型になります。 <xref:System.Data.DataTableReader> クラスを使用する場合、<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> メソッドを呼び出すと、<xref:System.Data.DataTableReader.GetValues%2A> メソッドを呼び出したときと同じ値と型が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.DataTable" /> の列メタデータを記述する <see cref="T:System.Data.DataTableReader" /> を返します。</summary>
        <returns>列メタデータを記述する <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GetSchemaTable メソッドは、各列に関するメタデータを次の順序で返します。  
  
|DataReader 列|説明|  
|-----------------------|-----------------|  
|ColumnName|<xref:System.Data.DataTable>に表示される列の名前です。|  
|ColumnOrdinal|列の序数|  
|ColumnSize|<xref:System.Data.DataColumn> の <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (または <xref:System.Data.DataColumn.MaxLength%2A>) プロパティを特定できないか、または関連性がない場合は-1。それ以外の場合は、0または `MaxLength` 値を含む正の整数。|  
|NumericPrecision|列の型が数値型の場合は、列の最大有効桁数になります。 列の型が数値データ型でない場合、これは null 値になります。|  
|NumericScale|列のデータ型にスケールコンポーネントがある場合は、小数点の右側の桁数を返します。 それ以外の場合は、null 値を返します。|  
|DataType|列の基になる型。|  
|ProviderType|列のデータ型のインジケーターです。 列のデータ型が行ごとに異なる場合、この値は <xref:System.Object>になります。 この列に NULL 値を含めることはできません。|  
|IsLong|列のデータ型が <xref:System.String>、その <xref:System.Data.DataColumn.MaxLength%2A> プロパティが-1 の場合に `true` ます。 それ以外の場合は `false`。|  
|AllowDBNull|列に対して AllowDbNull 制約が true に設定されている場合は `true` します。それ以外の場合は、`false`ます。|  
|IsReadOnly|列を変更できない場合は `true` します。それ以外の場合は `false`。|  
|IsRowVersion|すべての列に対して `false`。|  
|IsUnique|`true`: この列では、<xref:System.Data.DataTable> 内の2つの行の値を同じにすることはできません。 列がそれ自体によってキーを表している場合、またはこの列にのみ適用される UNIQUE 型の制約がある場合、`IsUnique` は必ず true になります。 `false`: 列には、`DataTable`内の重複する値を含めることができます。 この列の既定値は `false`です。|  
|IsKey|`true`: この列は、<xref:System.Data.DataTable>内の行を一意に識別するために使用される一連の列の1つです。 `IsKey` が `true` に設定されている列のセットは、`DataTable`内の行を一意に識別する必要があります。 この列のセットは列の最小セットである必要はありません。 この一連の列は、`DataTable` 主キー、一意の制約、または一意のインデックスから生成される場合があります。 `false`: この列は、行を一意に識別するためには必要ありません。 この値は、列が単一または複合主キーに参加している場合に `true` ます。 それ以外の場合、その値は `false`です。|  
|IsAutoIncrement|`true`: 列は、固定インクリメントで新しい行に値を割り当てます。 `false`: 列では、固定インクリメントで新しい行に値が割り当てられません。 この列の既定値は `false`です。|  
|BaseCatalogName|列を含むデータ ストア内のカタログの名前です。 ベースカタログ名を特定できない場合は `Null` します。 この列の既定値は `null` 値です。|  
|BaseSchemaName|この値は常に `Null` です。|  
|BaseTableName|<xref:System.Data.DataTable> の名前。|  
|BaseColumnName|<xref:System.Data.DataTable>内の列の名前。|  
|AutoIncrementSeed|<xref:System.Data.DataTable>の <xref:System.Data.DataColumn.AutoIncrementSeed%2A> プロパティの値。|  
|AutoIncrementStep|<xref:System.Data.DataTable>の <xref:System.Data.DataColumn.AutoIncrementStep%2A> プロパティの値。|  
|DefaultValue|<xref:System.Data.DataColumn>の <xref:System.Data.DataColumn.DefaultValue%2A> プロパティの値。|  
|正規表現|現在の列が式列で、式で使用されているすべての列が式列を含む同じ `T:System.Data.DataTable` に属している場合は、式の文字列。それ以外の場合は `null`。|  
|ColumnMapping|<xref:System.Data.DataColumn>に関連付けられている <xref:System.Data.MappingType> 値。 型には、`Attribute`、`Element`、`Hidden`、または `SimpleContent`のいずれかを指定できます。 既定値は `Element`です。|  
|BaseTableNamespace|<xref:System.Data.DataTable>の <xref:System.Data.DataTable.Namespace%2A> プロパティの値。|  
|BaseColumnNamespace|<xref:System.Data.DataColumn>の <xref:System.Data.DataColumn.Namespace%2A> プロパティの値。|  
  
   
  
## Examples  
 次のコンソールアプリケーションの例では、指定された列に関するスキーマ情報を取得します。 `DisplaySchemaTableInfo` プロシージャに <xref:System.Data.DataTableReader> と、`DataTableReader`内の列の序数位置を表す整数を渡します。このプロシージャは、スキーマ情報をコンソールウィンドウに出力します。  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.DataTableReader" /> が閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を文字列として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して、このメソッドを呼び出す前に null 値があるかどうかを確認します。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 正しい型の列内のデータの場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に文字列が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値をネイティブ形式で取得します。</summary>
        <returns>指定された列の値。 null 列の場合は、<see langword="DBNull" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出す前に、<xref:System.Data.DataTableReader.IsDBNull%2A> を呼び出して null 値があるかどうかを確認することもできますが、この操作は必要ありません。  
  
   
  
## Examples  
 次の例では、<xref:System.Data.DataTableReader>内の現在の行のすべての列を反復処理し、各列の内容と列名を表示します。 一般に、<xref:System.Data.DataTableReader>によって取得された行のすべての列を使用する場合は、より効率的であるため、代わりに <xref:System.Data.DataTableReader.GetValues%2A> メソッドを使用することを検討してください。  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Object" /> の列の値のコピー先である <see cref="T:System.Data.DataTableReader" /> の配列。</param>
        <summary>オブジェクトの配列に現在行の列値を設定します。</summary>
        <returns>配列にコピーされる列の値の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ほとんどのアプリケーションでは、この方法により、各列を個別に取得するのではなく、すべての列を取得するための効率的な手段が提供されます。 <xref:System.Data.DataTableReader>内の行からすべての列の値を取得することが目的の場合、`GetValues` メソッドは最も効率的なソリューションを提供します。  
  
 結果として得られる行に含まれる列数よりも小さい <xref:System.Object> 配列を渡すことができます。 `Object` 配列に格納できるデータ量だけが配列にコピーされます。 また、長さが結果の行に含まれる列数よりも長い `Object` 配列を渡すこともできます。この場合、追加の配列要素はメソッド呼び出しによって変更されません。  
  
 このメソッドは、null 列の出力配列に `DBNull` を配置します。  
  
   
  
## Examples  
 次の例では、正しいサイズの配列を使用して、指定された <xref:System.Data.DataTableReader>の現在の行からすべての値を読み取る方法を示します。 また、このサンプルでは、サイズの小さい、または使用可能な列数よりも大きいサイズの固定配列を使用する方法を示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" /> に 1 行以上の行が格納されているかどうかを示す値を取得します。</summary>
        <value>1 行以上の行が <see langword="true" /> に含まれている場合は <see cref="T:System.Data.DataTableReader" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasRows` プロパティは、現在の結果セットに関する情報を返します。 <xref:System.Data.DataTableReader> に複数の結果セットが含まれている場合は、新しい結果セットに行が含まれているかどうかを判断するために、<xref:System.Data.DataTableReader.NextResult%2A> メソッドを呼び出した直後に `HasRows` プロパティの値を確認できます。  
  
 現在の結果セット内に行がない場合は、`HasRows` プロパティを使用して、<xref:System.Data.DataTableReader> の <xref:System.Data.DataTableReader.Read%2A> メソッドを呼び出す必要がないようにします。  
  
   
  
## Examples  
 次の例では、2つの <xref:System.Data.DataTable> インスタンスにデータを格納します。 最初の <xref:System.Data.DataTable> には1つの行が含まれ、2番目のには行が含まれていません。 次に、両方の <xref:System.Data.DataTable> オブジェクトを含む <xref:System.Data.DataTableReader> を作成し、PrintData メソッドを呼び出してそれぞれの内容を表示し、PrintData を呼び出す前にそれぞれの <xref:System.Data.DataTableReader.HasRows%2A> プロパティの値を確認します。  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じられた <see cref="T:System.Data.DataTableReader" /> に関する情報を取得しようとしました。</exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" /> が閉じられているかどうかを示す値を取得します。</summary>
        <value><see langword="true" /> が閉じている場合は <see cref="T:System.Data.DataTableReader" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.Close%2A> は、<xref:System.Data.DataTableReader> が閉じられた後にアクセスできる唯一のメソッドと `IsClosed` と <xref:System.Data.DataTableReader.RecordsAffected%2A> です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>列に格納されている値が存在しない値または欠損値かどうかを示す値を取得します。</summary>
        <returns>指定した列の値が <see langword="true" /> と等価である場合は <see cref="T:System.DBNull" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出して、型指定された get メソッド (たとえば、<xref:System.Data.DataTableReader.GetByte%2A>、<xref:System.Data.DataTableReader.GetChar%2A>など) を呼び出す前に、エラーが発生しないようにします。  
  
   
  
## Examples  
 次の例では、渡された <xref:System.Data.DataTableReader>内の列番号2の内容を表示します。 値が特定の行の列が null の場合、テキスト \<NULL > として表示されます。 正しい型の列内のデータの場合、この例では各行のエラーメッセージが表示されます。  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した列の値をネイティブ形式で取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>列の序数によって指定した列の値をネイティブ形式で取得します。</summary>
        <value>指定した列のネイティブ形式での値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.Item%2A> のこのオーバーロードは、<xref:System.Data.DataTableReader.GetValue%2A> メソッドと同じように動作します。  
  
   
  
## Examples  
 次の例では、指定された <xref:System.Data.DataTableReader>のすべての行で、すべての列の内容を表示します。 このコードでは、<xref:System.Data.DataTableReader.Item%2A> メソッド (Microsoft C#ではインデクサー) を使用して、各列に含まれる値を取得します。  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">列の名前。</param>
        <summary>列名によって指定した列の値をネイティブ形式で取得します。</summary>
        <value>指定した列のネイティブ形式での値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 大文字と小文字を区別する検索が最初に実行されます。 失敗した場合、次に大文字と小文字を区別せずに検索が行われます。  
  
 この方法では、かなの文字幅を区別しません。  
  
 このオーバーロードされたバージョンの <xref:System.Data.DataTableReader.Item%2A> は、<xref:System.Data.DataTableReader.GetOrdinal%2A> メソッドを呼び出し、その後 <xref:System.Data.DataTableReader.GetValue%2A> メソッドを呼び出すことに対応しています。  
  
   
  
## Examples  
 <xref:System.Data.DataTableReader> と列名を指定した場合、GetValueByName プロシージャは、指定された列の値を返します。 このプロシージャを呼び出す前に、新しい <xref:System.Data.DataTableReader> インスタンスを作成し、その Read メソッドを少なくとも1回呼び出す必要があります。これにより、行ポインターがデータ行に配置されます。  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された名前は、有効な列名ではありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" /> を次の結果に進めます (存在する場合)。</summary>
        <returns>別の結果セットがあった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数のテーブルを含む <xref:System.Data.DataSet> に対して <xref:System.Data.DataTableReader> を作成するか、2つ以上の <xref:System.Data.DataTable> インスタンスを含む配列を作成することによって生成される複数の結果を処理するために使用されます。  
  
 最初の結果に新しい <xref:System.Data.DataTableReader> が配置されます。  
  
   
  
## Examples  
 次の例では、TestConstructor メソッドによって、2つの <xref:System.Data.DataTable> インスタンスが作成されます。 <xref:System.Data.DataTableReader> クラスのこのコンストラクターをデモンストレーションするために、このサンプルでは、2つの `DataTables`を含む配列に基づいて新しい `DataTableReader` を作成し、単純な操作を実行して、最初のいくつかの列の内容をコンソールウィンドウに出力します。 このアプリケーションをテストするには、新しいコンソールアプリケーションを作成し、新しく作成したファイルにサンプルコードを貼り付けます。  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 コンソールウィンドウには、次の結果が表示されます。  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じられた <see cref="T:System.Data.DataTableReader" /> 内を移動しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" /> を次のレコードに進めます。</summary>
        <returns>読み取る行が他にもあった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader> の既定の位置は、最初のレコードの前です。 したがって、すべてのデータへのアクセスを開始するには、`Read` を呼び出す必要があります。  
  
   
  
## Examples  
 PrintColumns プロシージャは、<xref:System.Data.DataTableReader>内のすべての行をループし、コンソールウィンドウの各列の内容を表示します。  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL ステートメントを実行したことで挿入、変更、または削除された行数を取得します。</summary>
        <value><see cref="T:System.Data.DataTableReader" /> はこのプロパティをサポートしません。常に 0 を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
