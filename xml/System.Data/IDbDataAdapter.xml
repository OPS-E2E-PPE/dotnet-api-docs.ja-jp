<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2033ab9b567d2a37b4ce9e9f00f72d1117c66a4" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83458863" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="76d2f-101"><see cref="T:System.Data.DataSet" /> にデータを格納し、データ ソースを更新するために使用するコマンド関連プロパティのセットを表します。リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d2f-102"><xref:System.Data.IDbDataAdapter> インターフェイスは、<xref:System.Data.IDataAdapter> インターフェイスから継承され、オブジェクトがリレーショナルデータベースで使用するように設計された DataAdapter を作成できるようにします。</span><span class="sxs-lookup"><span data-stu-id="76d2f-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="76d2f-103"><xref:System.Data.IDbDataAdapter> インターフェイスと、必要に応じてユーティリティクラス <xref:System.Data.Common.DbDataAdapter>を使用すると、継承するクラスは、データソースと <xref:System.Data.DataSet>間のブリッジを表す DataAdapter クラスを実装できます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="76d2f-104">DataAdapter クラスの詳細については、「 [dataadapter からのデータセットの読み込み](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d2f-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="76d2f-105">.NET Framework データプロバイダーの実装の詳細については、「 [.NET Framework Data Provider の実装](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d2f-105">For more information about implementing .NET Framework data providers, see [Implementing a .NET Framework Data Provider](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71)).</span></span>  
  
 <span data-ttu-id="76d2f-106">アプリケーションは <xref:System.Data.IDbDataAdapter> インターフェイスのインスタンスを直接作成しませんが、<xref:System.Data.IDbDataAdapter> と <xref:System.Data.Common.DbDataAdapter>を継承するクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="76d2f-107"><xref:System.Data.IDbDataAdapter> を継承するクラスは、継承されたメンバーを実装し、通常は、プロバイダー固有の機能を追加するための追加メンバーを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="76d2f-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="76d2f-108">たとえば、<xref:System.Data.IDbDataAdapter> インターフェイスは <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティを定義し、<xref:System.Data.Common.DbDataAdapter> インターフェイスは、パラメーターとして <xref:System.Data.DataTable> を受け取る <xref:System.Data.IDataAdapter.Fill%2A> メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="76d2f-109">次に、<xref:System.Data.OleDb.OleDbDataAdapter> クラスは <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを継承します。また、ADO レコードセットオブジェクトをパラメーターとして受け取る <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> メソッドの2つの追加のオーバーロードも定義します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76d2f-110">次の例では、派生クラス、<xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlDataAdapter> と <xref:System.Data.SqlClient.SqlConnection>を使用して、データソースからレコードを選択します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="76d2f-111">次に、塗りつぶされた <xref:System.Data.DataSet> が返されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="76d2f-112">これを実現するために、メソッドには初期化された <xref:System.Data.DataSet>、接続文字列、および Transact-sql SELECT ステートメントであるクエリ文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="76d2f-113">.NET Framework データプロバイダー間の一貫性を高めるには、<paramref name="Prv" /> DataAdapter の形式で継承クラスに名前を付けます。 <paramref name="Prv" /> は、特定の .NET Framework データプロバイダーの名前空間のすべてのクラスに指定された均一なプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="76d2f-113">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="76d2f-114">たとえば、<paramref name="Sql" /> は <see langword="System.Data.SqlClient" /> 名前空間の <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラスのプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="76d2f-114">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="76d2f-115"><see cref="T:System.Data.IDbDataAdapter" /> インターフェイスから継承する場合は、次のコンストラクターを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="76d2f-115">When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="76d2f-116">アイテム</span><span class="sxs-lookup"><span data-stu-id="76d2f-116">Item</span></span> 
 </term><description> <span data-ttu-id="76d2f-117">説明</span><span class="sxs-lookup"><span data-stu-id="76d2f-117">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="76d2f-118">PrvDataAdapter()</span><span class="sxs-lookup"><span data-stu-id="76d2f-118">PrvDataAdapter()</span></span> 
 </term><description> <span data-ttu-id="76d2f-119">PrvDataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-119">Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="76d2f-120">PrvDataAdapter (PrvCommand selectCommand)</span><span class="sxs-lookup"><span data-stu-id="76d2f-120">PrvDataAdapter(PrvCommand selectCommand)</span></span> 
 </term><description> <span data-ttu-id="76d2f-121">指定した SQL SELECT ステートメントを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-121">Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="76d2f-122">PrvDataAdapter (string selectCommandText、string Selectcommandtext)</span><span class="sxs-lookup"><span data-stu-id="76d2f-122">PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span> 
 </term><description> <span data-ttu-id="76d2f-123">SQL SELECT ステートメントと接続文字列を使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-123">Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="76d2f-124">PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span><span class="sxs-lookup"><span data-stu-id="76d2f-124">PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span> 
 </term><description> <span data-ttu-id="76d2f-125">SQL SELECT ステートメントと PrvConnection オブジェクトを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-125">Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76d2f-126">データ セットからレコードを削除するために使用する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-126">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="76d2f-127"><see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="76d2f-127">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d2f-128"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合、.NET Framework データプロバイダーの `SelectCommand` プロパティを設定すると、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A> が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-128">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="76d2f-129">その後、設定していない追加のコマンドは、CommandBuilder によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-129">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="76d2f-130">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="76d2f-130">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="76d2f-131">詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d2f-131">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="76d2f-132">以前に作成した <xref:System.Data.IDbCommand>に <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> が割り当てられている場合、<xref:System.Data.IDbCommand> は複製されません。</span><span class="sxs-lookup"><span data-stu-id="76d2f-132">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="76d2f-133"><xref:System.Data.IDbDataAdapter.DeleteCommand%2A> は、以前に作成した <xref:System.Data.IDbCommand> オブジェクトへの参照を保持します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-133">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76d2f-134">次の例では、継承された <xref:System.Data.OleDb.OleDbDataAdapter> クラスのインスタンスを作成し、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-134">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="76d2f-135"><xref:System.Data.OleDb.OleDbConnection> オブジェクトが既に作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="76d2f-135">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76d2f-136">データ ソースに新しいレコードを挿入するために使用する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-136">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="76d2f-137">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="76d2f-137">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d2f-138"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合、.NET Framework データプロバイダーの `SelectCommand` プロパティを設定すると、<xref:System.Data.IDbDataAdapter.InsertCommand%2A> が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-138">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="76d2f-139">その後、設定していない追加のコマンドは、CommandBuilder によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-139">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="76d2f-140">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="76d2f-140">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="76d2f-141">詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d2f-141">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="76d2f-142">以前に作成した <xref:System.Data.IDbCommand>に <xref:System.Data.IDbDataAdapter.InsertCommand%2A> が割り当てられている場合、<xref:System.Data.IDbCommand> は複製されません。</span><span class="sxs-lookup"><span data-stu-id="76d2f-142">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="76d2f-143"><xref:System.Data.IDbDataAdapter.InsertCommand%2A> は、以前に作成した <xref:System.Data.IDbCommand> オブジェクトへの参照を保持します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-143">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76d2f-144">このコマンドの実行によって行が返される場合、<xref:System.Data.IDbCommand> オブジェクトの <xref:System.Data.IDbCommand.UpdatedRowSource%2A> プロパティの設定方法によっては、これらの行が <xref:System.Data.DataSet> に追加されることがあります。</span><span class="sxs-lookup"><span data-stu-id="76d2f-144">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76d2f-145">次の例では、継承された <xref:System.Data.OleDb.OleDbDataAdapter> クラスのインスタンスを作成し、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-145">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="76d2f-146"><xref:System.Data.OleDb.OleDbConnection> オブジェクトが既に作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="76d2f-146">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76d2f-147">データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-147">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="76d2f-148">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="76d2f-148">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d2f-149">以前に作成した <xref:System.Data.IDbCommand>に <xref:System.Data.IDbDataAdapter.SelectCommand%2A> が割り当てられている場合、<xref:System.Data.IDbCommand> は複製されません。</span><span class="sxs-lookup"><span data-stu-id="76d2f-149">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="76d2f-150"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> は、以前に作成した <xref:System.Data.IDbCommand> オブジェクトへの参照を保持します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-150">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="76d2f-151"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> が行を返さない場合、<xref:System.Data.DataSet>にテーブルは追加されず、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="76d2f-151">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76d2f-152">次の例では、継承された <xref:System.Data.OleDb.OleDbDataAdapter> クラスのインスタンスを作成し、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-152">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="76d2f-153"><xref:System.Data.OleDb.OleDbConnection> オブジェクトが既に作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="76d2f-153">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76d2f-154">データ ソースのレコードを更新するために使用する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-154">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="76d2f-155">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="76d2f-155">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d2f-156"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合、.NET Framework データプロバイダーの `SelectCommand` プロパティを設定すると、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A> が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-156">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="76d2f-157">その後、設定していない追加のコマンドは、CommandBuilder によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-157">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="76d2f-158">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="76d2f-158">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="76d2f-159">詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d2f-159">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="76d2f-160">以前に作成した <xref:System.Data.IDbCommand>に <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> が割り当てられている場合、<xref:System.Data.IDbCommand> は複製されません。</span><span class="sxs-lookup"><span data-stu-id="76d2f-160">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="76d2f-161"><xref:System.Data.IDbDataAdapter.UpdateCommand%2A> は、以前に作成した <xref:System.Data.IDbCommand> オブジェクトへの参照を保持します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-161">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76d2f-162">このコマンドの実行によって行が返された場合、これらの行は <xref:System.Data.DataSet>に追加されます。</span><span class="sxs-lookup"><span data-stu-id="76d2f-162">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76d2f-163">次の例では、継承された <xref:System.Data.OleDb.OleDbDataAdapter> クラスのインスタンスを作成し、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="76d2f-163">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="76d2f-164"><xref:System.Data.OleDb.OleDbConnection> オブジェクトが既に作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="76d2f-164">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
