<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cd1d263f70bab9bc5972789896afc84a6836a56" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75141072" /></Metadata><TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type DataColumn = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="420f7-101"><see cref="T:System.Data.DataTable" /> の列のスキーマを表します。</span><span class="sxs-lookup"><span data-stu-id="420f7-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-102"><xref:System.Data.DataColumn> は、<xref:System.Data.DataTable>のスキーマを作成するための基本的な構成要素です。</span><span class="sxs-lookup"><span data-stu-id="420f7-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="420f7-103">スキーマを作成するには、<xref:System.Data.DataColumnCollection>に1つ以上の <xref:System.Data.DataColumn> オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="420f7-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="420f7-104">詳細については、「 [DataTable への列の追加](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="420f7-105">各 <xref:System.Data.DataColumn> には、<xref:System.Data.DataColumn> に含まれるデータの種類を決定する <xref:System.Data.DataColumn.DataType%2A> プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="420f7-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="420f7-106">たとえば、データ型を整数、文字列、または10進数に制限できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="420f7-107"><xref:System.Data.DataTable> に含まれるデータは通常、元のデータソースにマージされるため、データ型をデータソース内のデータ型と一致させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="420f7-108">詳細については、「 [ADO.NET でのデータ型のマッピング](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="420f7-109"><xref:System.Data.DataColumn.AllowDBNull%2A>、<xref:System.Data.DataColumn.Unique%2A>、<xref:System.Data.DataColumn.ReadOnly%2A> などのプロパティは、データの入力と更新に制限があるため、データの整合性を保証するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="420f7-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="420f7-110">また、<xref:System.Data.DataColumn.AutoIncrement%2A>、<xref:System.Data.DataColumn.AutoIncrementSeed%2A>、および <xref:System.Data.DataColumn.AutoIncrementStep%2A> の各プロパティを使用して、自動データ生成を制御することもできます。</span><span class="sxs-lookup"><span data-stu-id="420f7-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="420f7-111"><xref:System.Data.DataColumn.AutoIncrement%2A> 列の詳細については、「自動[インクリメント列の作成](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="420f7-112">詳細については、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="420f7-113">また、<xref:System.Data.UniqueConstraint> を作成し、<xref:System.Data.DataColumn> が所属する <xref:System.Data.DataTable> の <xref:System.Data.ConstraintCollection> に追加することによって、<xref:System.Data.DataColumn> 内の値が一意であることを確認することもできます。</span><span class="sxs-lookup"><span data-stu-id="420f7-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="420f7-114">詳細については、「 [DataTable の制約](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="420f7-115"><xref:System.Data.DataColumn> オブジェクト間のリレーションシップを作成するには、<xref:System.Data.DataRelation> オブジェクトを作成し、<xref:System.Data.DataSet>の <xref:System.Data.DataRelationCollection> に追加します。</span><span class="sxs-lookup"><span data-stu-id="420f7-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="420f7-116"><xref:System.Data.DataColumn> オブジェクトの <xref:System.Data.DataColumn.Expression%2A> プロパティを使用して、列の値を計算したり、集計列を作成したりできます。</span><span class="sxs-lookup"><span data-stu-id="420f7-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="420f7-117">詳細については、「[式列の作成](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-118">次の例では、複数の <xref:System.Data.DataColumn> オブジェクトを含む <xref:System.Data.DataTable> を作成します。</span><span class="sxs-lookup"><span data-stu-id="420f7-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="420f7-119">この型は、マルチスレッドの読み取り操作に対して安全です。</span><span class="sxs-lookup"><span data-stu-id="420f7-119">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="420f7-120">書き込み操作はすべて同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-120">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-121">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-121">Using DataSets in ADO.NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="420f7-122"><see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="420f7-122">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="420f7-123"><see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを文字列型として初期化します。</span><span class="sxs-lookup"><span data-stu-id="420f7-123">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-124">作成時に、<xref:System.Data.DataColumn> オブジェクトに既定の <xref:System.Data.DataColumn.ColumnName%2A> または <xref:System.Data.DataColumn.Caption%2A>がありません。</span><span class="sxs-lookup"><span data-stu-id="420f7-124">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="420f7-125"><xref:System.Data.DataColumnCollection>に追加すると、名前が <xref:System.Data.DataColumn.ColumnName%2A>に割り当てられていない場合は、既定の名前 ("Column1"、"Column2" など) が生成されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-125">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-126">次の例では、新しい <xref:System.Data.DataColumn>を作成し、さまざまなプロパティを設定して、<xref:System.Data.DataTable> オブジェクトの <xref:System.Data.DataColumnCollection> に追加します。</span><span class="sxs-lookup"><span data-stu-id="420f7-126">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-127">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-127">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn columnName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="420f7-128">作成する列の名前を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="420f7-128">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="420f7-129"><see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-129">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <summary><span data-ttu-id="420f7-130">指定した列名を使用して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを文字列型として初期化します。</span><span class="sxs-lookup"><span data-stu-id="420f7-130">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-131">既定では、列に固有の名前が <xref:System.Data.DataColumn.Caption%2A> プロパティ値になります。</span><span class="sxs-lookup"><span data-stu-id="420f7-131">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-132">次の例では、指定された <xref:System.Data.DataColumn.ColumnName%2A>を持つ新しい <xref:System.Data.DataColumn> を作成します。</span><span class="sxs-lookup"><span data-stu-id="420f7-132">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-133">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-133">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="420f7-134">作成する列の名前を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="420f7-134">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="420f7-135"><see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-135">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="420f7-136">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-136">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <summary><span data-ttu-id="420f7-137">指定した列名とデータ型を使用して <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="420f7-137">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-138">次の例では、指定した <xref:System.Data.DataColumn.ColumnName%2A> と <xref:System.Data.DataColumn.DataType%2A>を使用して、新しい <xref:System.Data.DataColumn> を作成します。</span><span class="sxs-lookup"><span data-stu-id="420f7-138">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="420f7-139"><paramref name="dataType" /> が指定されませんでした。</span><span class="sxs-lookup"><span data-stu-id="420f7-139">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-140">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-140">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="420f7-141">作成する列の名前を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="420f7-141">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="420f7-142"><see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-142">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="420f7-143">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-143">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="420f7-144">この列の作成に使用される式。</span><span class="sxs-lookup"><span data-stu-id="420f7-144">The expression used to create this column.</span></span> <span data-ttu-id="420f7-145">詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-145">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <summary><span data-ttu-id="420f7-146">指定した名前、データ型、および式を使用して <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="420f7-146">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-147">次の例では、計算列を作成します。</span><span class="sxs-lookup"><span data-stu-id="420f7-147">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="420f7-148"><paramref name="dataType" /> が指定されませんでした。</span><span class="sxs-lookup"><span data-stu-id="420f7-148">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-149">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-149">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string * System.Data.MappingType -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="420f7-150">作成する列の名前を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="420f7-150">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="420f7-151"><see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-151">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="420f7-152">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-152">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="420f7-153">この列の作成に使用される式。</span><span class="sxs-lookup"><span data-stu-id="420f7-153">The expression used to create this column.</span></span> <span data-ttu-id="420f7-154">詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-154">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <param name="type"><span data-ttu-id="420f7-155"><see cref="T:System.Data.MappingType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="420f7-155">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></param>
        <summary><span data-ttu-id="420f7-156">指定した名前、データ型、式、およびこの列が属性かどうかを決定する値を使用して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="420f7-156">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-157">`type` 引数は、<xref:System.Data.DataColumn.ColumnMapping%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-157">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="420f7-158">プロパティは、<xref:System.Data.DataSet> が XML ドキュメントに変換されるときに、<xref:System.Data.DataColumn> をどのようにマップするかを指定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-158">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="420f7-159">たとえば、列の名前が "fName" で、それに含まれる値が "Bob" で、`type` が `MappingType.Attribute`に設定されている場合、XML 要素は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="420f7-159">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="420f7-160">\<名前 fName = ' Bob '/></span><span class="sxs-lookup"><span data-stu-id="420f7-160">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="420f7-161">列を要素または属性にマップする方法の詳細については、「<xref:System.Data.DataColumn.ColumnMapping%2A> プロパティ」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-161">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-162">次の例では、計算列を構築します。</span><span class="sxs-lookup"><span data-stu-id="420f7-162">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="420f7-163"><paramref name="dataType" /> が指定されませんでした。</span><span class="sxs-lookup"><span data-stu-id="420f7-163">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-164">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-164">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDBNull : bool with get, set" Usage="System.Data.DataColumn.AllowDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAllowNullDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-165">このテーブルに属する行のこの列に null 値を格納できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-165">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span></span></summary>
        <value><span data-ttu-id="420f7-166">null 値が許可される場合は <see langword="true" />。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="420f7-166"><see langword="true" /> if null values are allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="420f7-167">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="420f7-167">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-168">次の例では、新しい <xref:System.Data.DataColumn> を作成し、その <xref:System.Data.DataColumn.AllowDBNull%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-168">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-169">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-169">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrement : bool with get, set" Usage="System.Data.DataColumn.AutoIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-170">このテーブルに追加される新しい行でこの列の値を自動的にインクリメントするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-170">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span></span></summary>
        <value><span data-ttu-id="420f7-171">この列の値を自動的にインクリメントする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-171"><see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="420f7-172">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="420f7-172">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-173">このプロパティが設定されている場合、この列の型が Int16、Int32、または Int64 でない場合、<xref:System.Data.DataColumn.DataType%2A> プロパティは Int32 に強制変換されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-173">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="420f7-174">これが計算列である場合は、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-174">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="420f7-175"><xref:System.Data.DataColumn.Expression%2A> プロパティが設定されています。</span><span class="sxs-lookup"><span data-stu-id="420f7-175">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="420f7-176">インクリメントされた値は、列コレクションに追加されたときに、この列の行の値が既定値と等しい場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-176">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="420f7-177"><xref:System.Data.DataRow> クラスの <xref:System.Data.DataRow.ItemArray%2A> プロパティを使用して新しい行を作成し、値の配列を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="420f7-177">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="420f7-178">この問題は、その値が自動的に生成されるため、<xref:System.Data.DataColumn.AutoIncrement%2A> が `true`に設定されている列で発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-178">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="420f7-179"><xref:System.Data.DataRow.ItemArray%2A> プロパティを使用するには、配列内の列の位置に `null` を配置します。</span><span class="sxs-lookup"><span data-stu-id="420f7-179">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="420f7-180">詳細については、<xref:System.Data.DataRow> クラスの <xref:System.Data.DataRow.ItemArray%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-180">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="420f7-181">列の型が <xref:System.Data.SqlTypes.SqlInt16> または <xref:System.Data.SqlTypes.SqlInt32>の場合、<xref:System.Data.DataColumn.AutoIncrement%2A> は機能しません。</span><span class="sxs-lookup"><span data-stu-id="420f7-181">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="420f7-182">代わりに Int16 または Int32 を使用してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-182">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="420f7-183">列の型が <xref:System.Data.SqlTypes.SqlInt64> または <xref:System.Data.SqlTypes.SqlDecimal>の場合、<xref:System.Data.DataColumn.AutoIncrement%2A> は部分的にしか機能しません。</span><span class="sxs-lookup"><span data-stu-id="420f7-183">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="420f7-184">代わりに、Int64 または Decimal を使用してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-184">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="420f7-185"><xref:System.Data.DataColumn.AutoIncrementStep%2A> 値が現在の値に追加されると、オーバーフローチェックは抑制されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-185">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-186">次の例では、<xref:System.Data.DataColumn.AutoIncrement%2A>、<xref:System.Data.DataColumn.AutoIncrementSeed%2A>、および <xref:System.Data.DataColumn.AutoIncrementStep%2A> の各プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-186">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="420f7-187">この列は計算列です。</span><span class="sxs-lookup"><span data-stu-id="420f7-187">The column is a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-188">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-188">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementSeed : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementSeedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-189"><see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティが <see langword="true" /> に設定されている列の開始値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-189">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span> <span data-ttu-id="420f7-190">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="420f7-190">The default is 0.</span></span></summary>
        <value><span data-ttu-id="420f7-191"><see cref="P:System.Data.DataColumn.AutoIncrement" /> 機能の開始値。</span><span class="sxs-lookup"><span data-stu-id="420f7-191">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-192">次の例では、<xref:System.Data.DataColumn.AutoIncrement%2A>、<xref:System.Data.DataColumn.AutoIncrementSeed%2A>、および <xref:System.Data.DataColumn.AutoIncrementStep%2A> の各プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-192">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-193">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-193">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementStep : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementStepDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-194"><see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティが <see langword="true" /> に設定されている列で使用するインクリメント値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-194">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="420f7-195">列の値を自動的にインクリメントする数値。</span><span class="sxs-lookup"><span data-stu-id="420f7-195">The number by which the value of the column is automatically incremented.</span></span> <span data-ttu-id="420f7-196">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="420f7-196">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-197">次の例では、<xref:System.Data.DataColumn.AutoIncrement%2A>、<xref:System.Data.DataColumn.AutoIncrementSeed%2A>、および <xref:System.Data.DataColumn.AutoIncrementStep%2A> の各プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-197">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="420f7-198">値が 0 に設定されています。</span><span class="sxs-lookup"><span data-stu-id="420f7-198">The value set is zero.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-199">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-199">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Data.DataColumn.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnCaptionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-200">列のキャプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-200">Gets or sets the caption for the column.</span></span></summary>
        <value><span data-ttu-id="420f7-201">列のキャプション。</span><span class="sxs-lookup"><span data-stu-id="420f7-201">The caption of the column.</span></span> <span data-ttu-id="420f7-202">キャプションが設定されていない場合は、<see cref="P:System.Data.DataColumn.ColumnName" /> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="420f7-202">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-203"><xref:System.Data.DataColumn.Caption%2A> のプロパティを使用すると、<xref:System.Data.DataColumn>のわかりやすい名前を表示できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-203">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-204">次の例では、新しい <xref:System.Data.DataTable>を作成します。</span><span class="sxs-lookup"><span data-stu-id="420f7-204">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="420f7-205">次に、3つの <xref:System.Data.DataColumn> オブジェクトを <xref:System.Data.DataColumnCollection> に追加し、各 <xref:System.Data.DataColumn>の <xref:System.Data.DataColumn.Caption%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-205">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-206">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-206">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberSignature Language="F#" Value="member this.CheckNotAllowNull : unit -&gt; unit" Usage="dataColumn.CheckNotAllowNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="420f7-207">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="420f7-207">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberSignature Language="F#" Value="member this.CheckUnique : unit -&gt; unit" Usage="dataColumn.CheckUnique " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="420f7-208">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="420f7-208">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMapping : System.Data.MappingType with get, set" Usage="System.Data.DataColumn.ColumnMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMappingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-209">列の <see cref="T:System.Data.MappingType" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-209">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span></span></summary>
        <value><span data-ttu-id="420f7-210"><see cref="T:System.Data.MappingType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="420f7-210">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-211"><xref:System.Data.DataSet> が <xref:System.Data.DataSet.WriteXml%2A> メソッドを使用して XML ドキュメントとして保存されている場合、<xref:System.Data.DataColumn.ColumnMapping%2A> プロパティによって <xref:System.Data.DataColumn> がどのようにマップされるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="420f7-211">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="420f7-212">たとえば、<xref:System.Data.DataColumn> の名前が "customerID" で、その <xref:System.Data.DataColumn.ColumnMapping%2A> プロパティが `MappingType.Element`に設定されている場合、列の値によって次の XML が生成されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-212">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="420f7-213">ただし、同じ列が `MappingType.Attribute`にマップされている場合は、次の XML が生成されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-213">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="420f7-214">`type` 引数を含む <xref:System.Data.DataColumn.%23ctor%2A> コンストラクターを使用して、<xref:System.Data.DataSet> を XML ドキュメントに変換するときの <xref:System.Data.DataColumn> のマップ方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-214">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specify how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="420f7-215"><xref:System.Data.DataColumn.ColumnMapping%2A> プロパティは、コンストラクターの引数 `type`に対応します。</span><span class="sxs-lookup"><span data-stu-id="420f7-215">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-216">次の例では、new <xref:System.Data.DataColumn>の <xref:System.Data.DataColumn.ColumnMapping%2A> type プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-216">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-217">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-217">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Data.DataColumn.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnColumnNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-218"><see cref="T:System.Data.DataColumnCollection" /> 内の列名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-218">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <value><span data-ttu-id="420f7-219">列の名前。</span><span class="sxs-lookup"><span data-stu-id="420f7-219">The name of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-220"><xref:System.Data.DataColumn> が作成されると、<xref:System.Data.DataColumn.ColumnName%2A> 値はありません。</span><span class="sxs-lookup"><span data-stu-id="420f7-220">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="420f7-221">ただし、<xref:System.Data.DataColumn> が <xref:System.Data.DataTable> オブジェクトの <xref:System.Data.DataColumnCollection> に追加されると、既定の名前 ("Column1"、"Column2" など) が与えられます。</span><span class="sxs-lookup"><span data-stu-id="420f7-221">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="420f7-222">既定では、<xref:System.Data.DataColumn.Caption%2A> の値は <xref:System.Data.DataColumn.ColumnName%2A> 値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-222">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-223">次の例では、<xref:System.Data.DataSet>内のすべてのテーブルのすべての列の <xref:System.Data.DataColumn.ColumnName%2A> を取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-223">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="420f7-224">この例では、新しい <xref:System.Data.DataColumn.ColumnName%2A>で <xref:System.Data.DataColumn> を作成する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="420f7-224">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="420f7-225">このプロパティは <see langword="null" /> または空の文字列に設定され、列がコレクションに属しています。</span><span class="sxs-lookup"><span data-stu-id="420f7-225">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="420f7-226">同じ名前の列がコレクション内に既に存在します。</span><span class="sxs-lookup"><span data-stu-id="420f7-226">A column with the same name already exists in the collection.</span></span> <span data-ttu-id="420f7-227">名前の比較では、大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="420f7-227">The name comparison is not case sensitive.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-228">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-228">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : Type with get, set" Usage="System.Data.DataColumn.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTypeDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-229">列に格納されているデータの型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-229">Gets or sets the type of data stored in the column.</span></span></summary>
        <value><span data-ttu-id="420f7-230">列のデータ型を表す <see cref="T:System.Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="420f7-230">A <see cref="T:System.Type" /> object that represents the column data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-231"><xref:System.Data.DataColumn.DataType%2A> 値を設定することは、データソース内のデータの作成と更新を適切に行うために非常に重要です。</span><span class="sxs-lookup"><span data-stu-id="420f7-231">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="420f7-232"><xref:System.Data.DataColumn.DataType%2A> プロパティは、次の基本 .NET Framework データ型をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="420f7-232">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="420f7-233">また、次の配列型も同様です。</span><span class="sxs-lookup"><span data-stu-id="420f7-233">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="420f7-234">列でデータの格納が開始された後にこのプロパティを変更すると、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-234">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="420f7-235"><xref:System.Data.DataColumn.DataType%2A> プロパティを設定する前に <xref:System.Data.DataColumn.AutoIncrement%2A> が `true` に設定されていて、整数型以外の任意の型に設定しようとすると、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-235">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="420f7-236">データ型 `Byte[]` の列では、基本 .NET Framework データ型とは異なり、参照データ型であるため、特別な処理が必要になります。</span><span class="sxs-lookup"><span data-stu-id="420f7-236">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="420f7-237">`Byte[]` データ型の列が <xref:System.Data.DataTable.PrimaryKey%2A>として使用されている場合、または <xref:System.Data.DataView>の <xref:System.Data.DataView.Sort%2A> または <xref:System.Data.DataView.RowFilter%2A> キーとして使用される場合、列の値を変更するには、個別にインスタンス化された `Byte[]` オブジェクトに `Byte[]` 列の値を割り当てる必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-237">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="420f7-238">この割り当ては、並べ替え、フィルター処理、および主キー操作によって使用される内部インデックスの更新をトリガーするために必要です。</span><span class="sxs-lookup"><span data-stu-id="420f7-238">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="420f7-239">この例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="420f7-239">This is illustrated by the following example:</span></span>  
  
```csharp  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="420f7-240">列を基本 .NET Framework データ型および `Byte[]`以外のデータ型として定義することもできますが、このような列は、次の使用制限に従って、ユーザー定義型として扱われます。</span><span class="sxs-lookup"><span data-stu-id="420f7-240">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="420f7-241">(ユーザー定義型の詳細については、「[ユーザー定義型の作成と使用](https://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="420f7-241">(For more information on user-defined types, see [Creating and Using User-Defined Types](https://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="420f7-242">列を <xref:System.Data.DataView.RowFilter%2A> または <xref:System.Data.DataTable.Select%2A> 式の一部にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="420f7-242">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="420f7-243">列が <xref:System.Data.DataTable.PrimaryKey%2A>として、または <xref:System.Data.DataView.Sort%2A> または <xref:System.Data.DataView>として使用されている場合は、変更できないフィールドとして処理する必要があります。列データは、テーブルに追加された後に変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="420f7-243">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="420f7-244">この <xref:System.Data.DataColumn.ColumnMapping%2A> は、`MappingType.Element`にのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-244">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="420f7-245">列のデータ型を実装するクラスは、<xref:System.SerializableAttribute>でマークする必要があり、必要に応じて <xref:System.Runtime.Serialization.ISerializable> または <xref:System.Xml.Serialization.IXmlSerializable> インターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-245">The class that implements the column's data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="420f7-246">変更の追跡のサポートは限られています。</span><span class="sxs-lookup"><span data-stu-id="420f7-246">Support for change tracking is limited.</span></span> <span data-ttu-id="420f7-247"><xref:System.Data.DataTable> クラスの変更追跡メカニズムを利用するには、列のデータ型を実装するクラスで <xref:System.ComponentModel.IChangeTracking> インターフェイスを実装するか、列の値が変更されたときに <xref:System.Data.DataRow> に通知する責任を受ける必要があります。そのためには、行で <xref:System.Data.DataRow.SetModified%2A> を呼び出すか、列の値オブジェクトを個別にインスタンス化した列値オブジェクトに割り当てます</span><span class="sxs-lookup"><span data-stu-id="420f7-247">To utilize the <xref:System.Data.DataTable> class' change tracking mechanism, the class that implements the column's data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-248">次の例では、複数のデータ型の列を <xref:System.Data.DataTable>に追加し、テーブルに1行追加します。</span><span class="sxs-lookup"><span data-stu-id="420f7-248">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="420f7-249">この列には既にデータが格納されています。</span><span class="sxs-lookup"><span data-stu-id="420f7-249">The column already has data stored.</span></span></exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-250">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-250">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeMode : System.Data.DataSetDateTime with get, set" Usage="System.Data.DataColumn.DateTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-251">列の <see langword="DateTimeMode" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-251">Gets or sets the <see langword="DateTimeMode" /> for the column.</span></span></summary>
        <value><span data-ttu-id="420f7-252">指定した列の <see cref="T:System.Data.DataSetDateTime" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-252">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-253"><xref:System.Data.DataColumn.DateTimeMode%2A> は、行が <xref:System.Data.DataColumn>に追加された後に変更することはできません。ただし、<xref:System.Data.DataSetDateTime.Unspecified> および <xref:System.Data.DataSetDateTime.UnspecifiedLocal> から変更したり、その逆の変更を行ったりすることはできません。</span><span class="sxs-lookup"><span data-stu-id="420f7-253">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="420f7-254">これら2つのオプションの違いはシリアル化時にのみ行われ、ストレージには影響しないため、`UnspecifiedLocal` から `Unspecified` に変更したり、その逆の変更を行ったりすることができます。</span><span class="sxs-lookup"><span data-stu-id="420f7-254">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-255">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-255">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj with get, set" Usage="System.Data.DataColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDefaultValueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-256">新しい行を作成するときに使用されるこの列の既定値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-256">Gets or sets the default value for the column when you are creating new rows.</span></span></summary>
        <value><span data-ttu-id="420f7-257">この列の <see cref="P:System.Data.DataColumn.DataType" /> に適切な値。</span><span class="sxs-lookup"><span data-stu-id="420f7-257">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-258">既定値は、<xref:System.Data.DataRow> (<xref:System.Data.DataRow> が作成された日時など) が作成されたときに自動的に列に割り当てられる値です。</span><span class="sxs-lookup"><span data-stu-id="420f7-258">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="420f7-259"><xref:System.Data.DataColumn.AutoIncrement%2A> が true に設定されている場合、既定値は使用できません。</span><span class="sxs-lookup"><span data-stu-id="420f7-259">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="420f7-260"><xref:System.Data.DataRow> クラスの <xref:System.Data.DataRow.ItemArray%2A> プロパティを使用して新しい行を作成し、メソッドに値の配列を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="420f7-260">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="420f7-261">これは、値が自動的に生成されるため、列に既定値が含まれている場合に発生する可能性がある問題です。</span><span class="sxs-lookup"><span data-stu-id="420f7-261">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="420f7-262">このような列で <xref:System.Data.DataRow.ItemArray%2A> プロパティを使用するには、配列内の列の位置に `null` を配置します。</span><span class="sxs-lookup"><span data-stu-id="420f7-262">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="420f7-263">詳細については、<xref:System.Data.DataRow.ItemArray%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-263">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-264">次の例では、さまざまなデータ型を持つ複数の <xref:System.Data.DataColumn> オブジェクトを作成し、適切な既定値を各列に設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-264">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="420f7-265">行を追加する場合、既定値はこの列のデータ型のインスタンスではありません。</span><span class="sxs-lookup"><span data-stu-id="420f7-265">When you are adding a row, the default value is not an instance of the column's data type.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-266">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-266">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.DataColumn.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-267">行のフィルター処理、列内の値の計算、または集約列の作成に使用する式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-267">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span></span></summary>
        <value><span data-ttu-id="420f7-268">集約列内の値の計算または集約列の作成に使用する式。</span><span class="sxs-lookup"><span data-stu-id="420f7-268">An expression to calculate the value of a column, or create an aggregate column.</span></span> <span data-ttu-id="420f7-269">式の戻り型は列の <see cref="P:System.Data.DataColumn.DataType" /> によって決定されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-269">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-270"><xref:System.Data.DataColumn.Expression%2A> プロパティの使用方法の1つは、計算列を作成することです。</span><span class="sxs-lookup"><span data-stu-id="420f7-270">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="420f7-271">たとえば、税の値を計算する場合、単価には特定の地域の税率が乗算されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-271">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="420f7-272">税率は地域によって異なるため、1つの列に1つの税率を設定することはできません。代わりに、次のセクションの Visual Basic コードに示すように、<xref:System.Data.DataColumn.Expression%2A> プロパティを使用して値が計算されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-272">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="420f7-273">DataSet1. Tables ("Products")。列 ("tax")。Expression = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="420f7-273">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="420f7-274">もう1つの用途は、集計列を作成することです。</span><span class="sxs-lookup"><span data-stu-id="420f7-274">A second use is to create an aggregate column.</span></span> <span data-ttu-id="420f7-275">集計値と同様に、集計は、<xref:System.Data.DataTable>内の行の完全なセットに基づいて操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="420f7-275">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="420f7-276">単純な例として、セットで返される行の数をカウントします。</span><span class="sxs-lookup"><span data-stu-id="420f7-276">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="420f7-277">これは、次の Visual Basic コードに示すように、特定の販売員によって完了したトランザクションの数をカウントするために使用する方法です。</span><span class="sxs-lookup"><span data-stu-id="420f7-277">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```vb  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="420f7-278">式の構文</span><span class="sxs-lookup"><span data-stu-id="420f7-278">Expression Syntax</span></span>  
 <span data-ttu-id="420f7-279">式を作成する場合は、<xref:System.Data.DataColumn.ColumnName%2A> プロパティを使用して列を参照します。</span><span class="sxs-lookup"><span data-stu-id="420f7-279">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="420f7-280">たとえば、ある列の <xref:System.Data.DataColumn.ColumnName%2A> が "UnitPrice"、もう1つの "Quantity" の場合、式は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="420f7-280">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="420f7-281">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="420f7-281">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="420f7-282">列が式で使用されている場合、式はその列に依存していると言います。</span><span class="sxs-lookup"><span data-stu-id="420f7-282">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="420f7-283">依存列の名前が変更または削除された場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="420f7-283">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="420f7-284">現在、破損した式列にアクセスすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="420f7-284">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="420f7-285">フィルターの式を作成する場合は、文字列を単一引用符で囲みます。</span><span class="sxs-lookup"><span data-stu-id="420f7-285">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="420f7-286">"LastName = ' Jones '"</span><span class="sxs-lookup"><span data-stu-id="420f7-286">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="420f7-287">列名に英数字以外の文字が含まれている場合、または次の予約語のいずれかに該当する場合は、次の段落に記載されているように、特別な処理が必要になります。</span><span class="sxs-lookup"><span data-stu-id="420f7-287">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="420f7-288">と</span><span class="sxs-lookup"><span data-stu-id="420f7-288">And</span></span>  
  
 <span data-ttu-id="420f7-289">次の値の間</span><span class="sxs-lookup"><span data-stu-id="420f7-289">Between</span></span>  
  
 <span data-ttu-id="420f7-290">子</span><span class="sxs-lookup"><span data-stu-id="420f7-290">Child</span></span>  
  
 <span data-ttu-id="420f7-291">False</span><span class="sxs-lookup"><span data-stu-id="420f7-291">False</span></span>  
  
 <span data-ttu-id="420f7-292">イン</span><span class="sxs-lookup"><span data-stu-id="420f7-292">In</span></span>  
  
 <span data-ttu-id="420f7-293">Is</span><span class="sxs-lookup"><span data-stu-id="420f7-293">Is</span></span>  
  
 <span data-ttu-id="420f7-294">Like</span><span class="sxs-lookup"><span data-stu-id="420f7-294">Like</span></span>  
  
 <span data-ttu-id="420f7-295">Not</span><span class="sxs-lookup"><span data-stu-id="420f7-295">Not</span></span>  
  
 <span data-ttu-id="420f7-296">Null</span><span class="sxs-lookup"><span data-stu-id="420f7-296">Null</span></span>  
  
 <span data-ttu-id="420f7-297">or</span><span class="sxs-lookup"><span data-stu-id="420f7-297">Or</span></span>  
  
 <span data-ttu-id="420f7-298">親</span><span class="sxs-lookup"><span data-stu-id="420f7-298">Parent</span></span>  
  
 <span data-ttu-id="420f7-299">True</span><span class="sxs-lookup"><span data-stu-id="420f7-299">True</span></span>  
  
 <span data-ttu-id="420f7-300">列名が上記のいずれかの条件を満たす場合は、角かっこまたは "'" (アクサングラーブ) 引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-300">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="420f7-301">たとえば、式で "Column #" という名前の列を使用するには、"[Column #]" と記述します。</span><span class="sxs-lookup"><span data-stu-id="420f7-301">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="420f7-302">合計 \* [列 #]</span><span class="sxs-lookup"><span data-stu-id="420f7-302">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="420f7-303">または "\`列 # '":</span><span class="sxs-lookup"><span data-stu-id="420f7-303">or "\`Column#\`":</span></span>  
  
 <span data-ttu-id="420f7-304">Total \* \`列 # '</span><span class="sxs-lookup"><span data-stu-id="420f7-304">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="420f7-305">列名が角かっこで囲まれている場合、任意の '] ' 文字と '\\' 文字 (他の文字は含まれません) は、円記号 ("\\") 文字を前に付加することによってエスケープする必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-305">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="420f7-306">列名がアクサングラーブ文字で囲まれている場合は、その列にアクサングラーブ文字を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="420f7-306">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="420f7-307">たとえば、"Column []\\" という名前の列が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="420f7-307">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="420f7-308">合計 \* [列 [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="420f7-308">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="420f7-309">、または</span><span class="sxs-lookup"><span data-stu-id="420f7-309">or</span></span>  
  
 <span data-ttu-id="420f7-310">合計 \* \`列 []\\`</span><span class="sxs-lookup"><span data-stu-id="420f7-310">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="420f7-311">ユーザー定義の値</span><span class="sxs-lookup"><span data-stu-id="420f7-311">User-Defined Values</span></span>  
 <span data-ttu-id="420f7-312">ユーザー定義の値は、式の中で列の値と比較するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-312">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="420f7-313">文字列値は単一引用符で囲む必要があります (つまり、文字列値の各単一引用符文字を、別の単一引用符で囲んでエスケープする必要があります)。</span><span class="sxs-lookup"><span data-stu-id="420f7-313">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="420f7-314">日付の値は、データプロバイダーに基づくシャープ記号 (#) または単一引用符 (') で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-314">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="420f7-315">数値には、小数点と指数表記を使用できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-315">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="420f7-316">例:</span><span class="sxs-lookup"><span data-stu-id="420f7-316">For example:</span></span>  
  
 <span data-ttu-id="420f7-317">"FirstName = ' John '"</span><span class="sxs-lookup"><span data-stu-id="420f7-317">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="420f7-318">"Price < = 50.00"</span><span class="sxs-lookup"><span data-stu-id="420f7-318">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="420f7-319">"誕生日 < #1/31/82 #"</span><span class="sxs-lookup"><span data-stu-id="420f7-319">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="420f7-320">列挙値を含む列の場合は、整数データ型に値をキャストします。</span><span class="sxs-lookup"><span data-stu-id="420f7-320">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="420f7-321">例:</span><span class="sxs-lookup"><span data-stu-id="420f7-321">For example:</span></span>  
  
 <span data-ttu-id="420f7-322">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="420f7-322">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="420f7-323">リテラル式の解析</span><span class="sxs-lookup"><span data-stu-id="420f7-323">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="420f7-324">すべてのリテラル式は、インバリアントカルチャロケールで表現する必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-324">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="420f7-325">`DataSet` がリテラル式を解析して変換するときは、現在のカルチャではなく、常にインバリアントカルチャを使用します。</span><span class="sxs-lookup"><span data-stu-id="420f7-325">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="420f7-326">文字列リテラルは、値を囲む単一引用符がある場合に識別されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-326">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="420f7-327">例:</span><span class="sxs-lookup"><span data-stu-id="420f7-327">For example:</span></span>  
  
 <span data-ttu-id="420f7-328">John</span><span class="sxs-lookup"><span data-stu-id="420f7-328">'John'</span></span>  
  
 <span data-ttu-id="420f7-329">`Boolean` リテラルは true と false です。式では引用符で囲まれていません。</span><span class="sxs-lookup"><span data-stu-id="420f7-329">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="420f7-330">`Integer` リテラル [+-]?[0-9] + は `System.Int32`、`System.Int64` または `System.Double`として扱われます。</span><span class="sxs-lookup"><span data-stu-id="420f7-330">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="420f7-331">数値の大きさによっては、`System.Double` の精度が失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-331">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="420f7-332">たとえば、リテラルの数値が2147483650の場合、`DataSet` はまず、`Int32`として数値を解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="420f7-332">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="420f7-333">数値が大きすぎるため、この操作は成功しません。</span><span class="sxs-lookup"><span data-stu-id="420f7-333">This will not succeed because the number is too large.</span></span> <span data-ttu-id="420f7-334">この場合、`DataSet` は数値を `Int64`として解析します。これは成功します。</span><span class="sxs-lookup"><span data-stu-id="420f7-334">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="420f7-335">リテラルが Int64 の最大値よりも大きい数値の場合、`DataSet` は `Double`を使用してリテラルを解析します。</span><span class="sxs-lookup"><span data-stu-id="420f7-335">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="420f7-336">4.42372 E-30 など、科学的表記法を使用した実数リテラルは `System.Double`を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-336">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="420f7-337">指数表記のない実数リテラルは、小数点を使用して、`System.Decimal`として扱われます。</span><span class="sxs-lookup"><span data-stu-id="420f7-337">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="420f7-338">数値が `System.Decimal`でサポートされている最大値または最小値を超えた場合、`System.Double`として解析されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-338">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="420f7-339">例:</span><span class="sxs-lookup"><span data-stu-id="420f7-339">For example:</span></span>  
  
 <span data-ttu-id="420f7-340">142526.144524 は `Decimal`に変換されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-340">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="420f7-341">345262.78036719560925667 は `Double`として扱われます。</span><span class="sxs-lookup"><span data-stu-id="420f7-341">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="420f7-342">演算子</span><span class="sxs-lookup"><span data-stu-id="420f7-342">Operators</span></span>  
 <span data-ttu-id="420f7-343">連結は、ブール型の AND、OR、および NOT 演算子を使用して許可されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-343">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="420f7-344">かっこを使用して句をグループ化し、優先順位を強制することができます。</span><span class="sxs-lookup"><span data-stu-id="420f7-344">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="420f7-345">AND 演算子は、他の演算子よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-345">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="420f7-346">例:</span><span class="sxs-lookup"><span data-stu-id="420f7-346">For example:</span></span>  
  
 <span data-ttu-id="420f7-347">(LastName = ' Smith ' または LastName = ' Jones ')および FirstName = ' John '</span><span class="sxs-lookup"><span data-stu-id="420f7-347">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="420f7-348">比較式を作成する場合は、次の演算子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-348">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 \>  
  
 \<=  
  
 \>=  
  
 <>  
  
 =  
  
 <span data-ttu-id="420f7-349">IN</span><span class="sxs-lookup"><span data-stu-id="420f7-349">IN</span></span>  
  
 <span data-ttu-id="420f7-350">LIKE</span><span class="sxs-lookup"><span data-stu-id="420f7-350">LIKE</span></span>  
  
 <span data-ttu-id="420f7-351">式では、次の算術演算子もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="420f7-351">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="420f7-352">\+ (追加)</span><span class="sxs-lookup"><span data-stu-id="420f7-352">\+ (addition)</span></span>  
  
 <span data-ttu-id="420f7-353">\- (減算)</span><span class="sxs-lookup"><span data-stu-id="420f7-353">\- (subtraction)</span></span>  
  
 <span data-ttu-id="420f7-354">\* (乗算)</span><span class="sxs-lookup"><span data-stu-id="420f7-354">\* (multiplication)</span></span>  
  
 <span data-ttu-id="420f7-355">/(除算)</span><span class="sxs-lookup"><span data-stu-id="420f7-355">/ (division)</span></span>  
  
 <span data-ttu-id="420f7-356">% (剰余)</span><span class="sxs-lookup"><span data-stu-id="420f7-356">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="420f7-357">文字列演算子</span><span class="sxs-lookup"><span data-stu-id="420f7-357">String Operators</span></span>  
 <span data-ttu-id="420f7-358">文字列を連結するには、+ 文字を使用します。</span><span class="sxs-lookup"><span data-stu-id="420f7-358">To concatenate a string, use the + character.</span></span> <span data-ttu-id="420f7-359"><xref:System.Data.DataSet> クラスの <xref:System.Data.DataSet.CaseSensitive%2A> プロパティの値は、文字列比較で大文字と小文字を区別するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-359">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="420f7-360">ただし、この値は、<xref:System.Data.DataTable> クラスの <xref:System.Data.DataTable.CaseSensitive%2A> プロパティを使用してオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="420f7-360">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="420f7-361">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="420f7-361">Wildcard Characters</span></span>  
 <span data-ttu-id="420f7-362">LIKE 比較では、\* と% の両方をワイルドカード文字と同じ意味で使用できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-362">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="420f7-363">LIKE 句の文字列に \* または% が含まれている場合、それらの文字は角かっこ ([]) で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-363">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="420f7-364">かっこが句に含まれている場合は、各角かっこ文字を角かっこで囲む必要があります (たとえば [[] または []])。</span><span class="sxs-lookup"><span data-stu-id="420f7-364">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="420f7-365">ワイルドカードは、パターンの先頭と末尾、パターンの末尾、またはパターンの先頭で使用できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-365">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="420f7-366">例:</span><span class="sxs-lookup"><span data-stu-id="420f7-366">For example:</span></span>  
  
 <span data-ttu-id="420f7-367">"ItemName LIKE ' \* product\*'"</span><span class="sxs-lookup"><span data-stu-id="420f7-367">"ItemName LIKE '\*product\*'"</span></span>  
  
 <span data-ttu-id="420f7-368">"ItemName LIKE '\*product'"</span><span class="sxs-lookup"><span data-stu-id="420f7-368">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="420f7-369">"ItemName LIKE 'product\*'"</span><span class="sxs-lookup"><span data-stu-id="420f7-369">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="420f7-370">文字列の途中では、ワイルドカード文字は使用できません。</span><span class="sxs-lookup"><span data-stu-id="420f7-370">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="420f7-371">たとえば、' te \* xt ' は使用できません。</span><span class="sxs-lookup"><span data-stu-id="420f7-371">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="420f7-372">親/子のリレーションシップを参照しています</span><span class="sxs-lookup"><span data-stu-id="420f7-372">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="420f7-373">親テーブルを式で参照するには、`Parent`で列名を前に付加します。</span><span class="sxs-lookup"><span data-stu-id="420f7-373">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="420f7-374">たとえば、`Parent.Price` は `Price`という親テーブルの列を参照します。</span><span class="sxs-lookup"><span data-stu-id="420f7-374">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="420f7-375">子に複数の親行がある場合は、Parent (RelationName) を使用します。ColumnName.</span><span class="sxs-lookup"><span data-stu-id="420f7-375">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="420f7-376">たとえば、親 (RelationName) のようになります。Price は、親テーブルの Price という名前の列を参照します。</span><span class="sxs-lookup"><span data-stu-id="420f7-376">For example, the Parent(RelationName).Price references the parent table's column named Price via the relation.</span></span>  
  
 <span data-ttu-id="420f7-377">子テーブル内の列は、`Child`で列名を付加することによって、式内で参照できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-377">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="420f7-378">ただし、子リレーションシップは複数の行を返す可能性があるため、集計関数の子列への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-378">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="420f7-379">たとえば、`Sum(Child.Price)` は、子テーブル内の `Price` という名前の列の合計を返します。</span><span class="sxs-lookup"><span data-stu-id="420f7-379">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="420f7-380">テーブルに複数の子がある場合、構文は `Child(RelationName)`になります。</span><span class="sxs-lookup"><span data-stu-id="420f7-380">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="420f7-381">たとえば、テーブルに `Customers` と `Orders`という名前の2つの子テーブルがあり、<xref:System.Data.DataRelation> オブジェクトの名前が `Customers2Orders`の場合、参照は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="420f7-381">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="420f7-382">Avg (Child (Customers2Orders)。済</span><span class="sxs-lookup"><span data-stu-id="420f7-382">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="420f7-383">集計</span><span class="sxs-lookup"><span data-stu-id="420f7-383">Aggregates</span></span>  
 <span data-ttu-id="420f7-384">次の集計の種類がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="420f7-384">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="420f7-385">合計 (合計)</span><span class="sxs-lookup"><span data-stu-id="420f7-385">Sum (Sum)</span></span>  
  
 <span data-ttu-id="420f7-386">平均 (平均)</span><span class="sxs-lookup"><span data-stu-id="420f7-386">Avg (Average)</span></span>  
  
 <span data-ttu-id="420f7-387">最小 (最小)</span><span class="sxs-lookup"><span data-stu-id="420f7-387">Min (Minimum)</span></span>  
  
 <span data-ttu-id="420f7-388">最大 (最大)</span><span class="sxs-lookup"><span data-stu-id="420f7-388">Max (Maximum)</span></span>  
  
 <span data-ttu-id="420f7-389">カウント (カウント)</span><span class="sxs-lookup"><span data-stu-id="420f7-389">Count (Count)</span></span>  
  
 <span data-ttu-id="420f7-390">StDev (統計的標準偏差)</span><span class="sxs-lookup"><span data-stu-id="420f7-390">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="420f7-391">Var (統計的分散)。</span><span class="sxs-lookup"><span data-stu-id="420f7-391">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="420f7-392">通常、集計はリレーションシップに沿って実行されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-392">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="420f7-393">前に説明した「親子関係」で説明したように、前に示した関数のいずれかを使用して集計式を作成します。</span><span class="sxs-lookup"><span data-stu-id="420f7-393">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="420f7-394">例:</span><span class="sxs-lookup"><span data-stu-id="420f7-394">For example:</span></span>  
  
 <span data-ttu-id="420f7-395">Avg (Child. Price)</span><span class="sxs-lookup"><span data-stu-id="420f7-395">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="420f7-396">Avg (Child (Orders2Details)。標準</span><span class="sxs-lookup"><span data-stu-id="420f7-396">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="420f7-397">1つのテーブルに対して集計を実行することもできます。</span><span class="sxs-lookup"><span data-stu-id="420f7-397">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="420f7-398">たとえば、"Price" という名前の列に数値の概要を作成するには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="420f7-398">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="420f7-399">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="420f7-399">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="420f7-400">1つのテーブルを使用して集計を作成する場合は、グループ化の機能はありません。</span><span class="sxs-lookup"><span data-stu-id="420f7-400">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="420f7-401">代わりに、すべての行で同じ値が列に表示されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-401">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="420f7-402">テーブルに行がない場合、集計関数は `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="420f7-402">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="420f7-403">データ型は、常に列の <xref:System.Data.DataColumn.DataType%2A> プロパティを調べることによって決定できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-403">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="420f7-404">次のセクションに示すように、Convert 関数を使用してデータ型を変換することもできます。</span><span class="sxs-lookup"><span data-stu-id="420f7-404">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="420f7-405">集計は1つの列にのみ適用でき、集計内で他の式を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="420f7-405">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="420f7-406">関数</span><span class="sxs-lookup"><span data-stu-id="420f7-406">Functions</span></span>  
 <span data-ttu-id="420f7-407">次の関数もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="420f7-407">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="420f7-408">説明</span><span class="sxs-lookup"><span data-stu-id="420f7-408">Description</span></span>|<span data-ttu-id="420f7-409">特定の式を指定した .NET Framework 型に変換します。</span><span class="sxs-lookup"><span data-stu-id="420f7-409">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="420f7-410">構文</span><span class="sxs-lookup"><span data-stu-id="420f7-410">Syntax</span></span>|<span data-ttu-id="420f7-411">Convert (`expression`、`type`)</span><span class="sxs-lookup"><span data-stu-id="420f7-411">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="420f7-412">引数</span><span class="sxs-lookup"><span data-stu-id="420f7-412">Arguments</span></span>|<span data-ttu-id="420f7-413">`expression`-変換する式。</span><span class="sxs-lookup"><span data-stu-id="420f7-413">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="420f7-414">`type`-値が変換される .NET Framework 型。</span><span class="sxs-lookup"><span data-stu-id="420f7-414">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="420f7-415">例: myDataColumn. Expression = "Convert (total, ' system.string ')"</span><span class="sxs-lookup"><span data-stu-id="420f7-415">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="420f7-416">すべての変換は、次の例外で有効です。 `Boolean` は、`Byte`、`SByte`、`Int16`、`Int32`、`Int64`、`UInt16`、`UInt32`、`UInt64`、`String` のみに強制的に変換できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-416">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="420f7-417">`Char` は、`Int32`、`UInt32`、`String`、およびそれ自体との間で強制的に変換することができます。</span><span class="sxs-lookup"><span data-stu-id="420f7-417">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="420f7-418">`DateTime` は、`String` だけに強制的に変換できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-418">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="420f7-419">`TimeSpan` は、`String` だけに強制的に変換できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-419">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="420f7-420">説明</span><span class="sxs-lookup"><span data-stu-id="420f7-420">Description</span></span>|<span data-ttu-id="420f7-421">文字列の長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-421">Gets the length of a string</span></span>|  
|<span data-ttu-id="420f7-422">構文</span><span class="sxs-lookup"><span data-stu-id="420f7-422">Syntax</span></span>|<span data-ttu-id="420f7-423">LEN (`expression`)</span><span class="sxs-lookup"><span data-stu-id="420f7-423">LEN(`expression`)</span></span>|  
|<span data-ttu-id="420f7-424">引数</span><span class="sxs-lookup"><span data-stu-id="420f7-424">Arguments</span></span>|<span data-ttu-id="420f7-425">`expression`-評価される文字列。</span><span class="sxs-lookup"><span data-stu-id="420f7-425">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="420f7-426">例: myDataColumn. Expression = "Len (ItemName)"</span><span class="sxs-lookup"><span data-stu-id="420f7-426">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="420f7-427">説明</span><span class="sxs-lookup"><span data-stu-id="420f7-427">Description</span></span>|<span data-ttu-id="420f7-428">式を確認し、チェックされた式または置換値を返します。</span><span class="sxs-lookup"><span data-stu-id="420f7-428">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="420f7-429">構文</span><span class="sxs-lookup"><span data-stu-id="420f7-429">Syntax</span></span>|<span data-ttu-id="420f7-430">ISNULL (`expression`、`replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="420f7-430">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="420f7-431">引数</span><span class="sxs-lookup"><span data-stu-id="420f7-431">Arguments</span></span>|<span data-ttu-id="420f7-432">`expression`--チェックする式。</span><span class="sxs-lookup"><span data-stu-id="420f7-432">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="420f7-433">`replacementvalue`--expression が `null`場合、`replacementvalue` が返されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-433">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="420f7-434">例: myDataColumn. Expression = "IsNull (price,-1)"</span><span class="sxs-lookup"><span data-stu-id="420f7-434">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="420f7-435">説明</span><span class="sxs-lookup"><span data-stu-id="420f7-435">Description</span></span>|<span data-ttu-id="420f7-436">論理式の結果に応じて、2つの値のいずれかを取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-436">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="420f7-437">構文</span><span class="sxs-lookup"><span data-stu-id="420f7-437">Syntax</span></span>|<span data-ttu-id="420f7-438">IIF (`expr`、`truepart`、`falsepart`)</span><span class="sxs-lookup"><span data-stu-id="420f7-438">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="420f7-439">引数</span><span class="sxs-lookup"><span data-stu-id="420f7-439">Arguments</span></span>|<span data-ttu-id="420f7-440">`expr`-評価する式。</span><span class="sxs-lookup"><span data-stu-id="420f7-440">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="420f7-441">`truepart`-式が true の場合に返される値。</span><span class="sxs-lookup"><span data-stu-id="420f7-441">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="420f7-442">`falsepart`-式が false の場合に返す値。</span><span class="sxs-lookup"><span data-stu-id="420f7-442">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="420f7-443">例: myDataColumn. Expression = "IIF (合計 > 1000, ' 高額 ', ' 各位 ')</span><span class="sxs-lookup"><span data-stu-id="420f7-443">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="420f7-444">説明</span><span class="sxs-lookup"><span data-stu-id="420f7-444">Description</span></span>|<span data-ttu-id="420f7-445">先頭と末尾の空白文字 (\r、\n、\t、' ' など) をすべて削除します。</span><span class="sxs-lookup"><span data-stu-id="420f7-445">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="420f7-446">構文</span><span class="sxs-lookup"><span data-stu-id="420f7-446">Syntax</span></span>|<span data-ttu-id="420f7-447">TRIM (`expression`)</span><span class="sxs-lookup"><span data-stu-id="420f7-447">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="420f7-448">引数</span><span class="sxs-lookup"><span data-stu-id="420f7-448">Arguments</span></span>|<span data-ttu-id="420f7-449">`expression`--トリムする式。</span><span class="sxs-lookup"><span data-stu-id="420f7-449">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="420f7-450">説明</span><span class="sxs-lookup"><span data-stu-id="420f7-450">Description</span></span>|<span data-ttu-id="420f7-451">文字列内の指定した位置を開始位置として、指定した長さのサブ文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-451">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="420f7-452">構文</span><span class="sxs-lookup"><span data-stu-id="420f7-452">Syntax</span></span>|<span data-ttu-id="420f7-453">SUBSTRING (`expression`、`start`、`length`)</span><span class="sxs-lookup"><span data-stu-id="420f7-453">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="420f7-454">引数</span><span class="sxs-lookup"><span data-stu-id="420f7-454">Arguments</span></span>|<span data-ttu-id="420f7-455">`expression`--部分文字列のソース文字列。</span><span class="sxs-lookup"><span data-stu-id="420f7-455">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="420f7-456">`start`--部分文字列の開始位置を指定する整数。</span><span class="sxs-lookup"><span data-stu-id="420f7-456">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="420f7-457">`length`--部分文字列の長さを指定する整数。</span><span class="sxs-lookup"><span data-stu-id="420f7-457">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="420f7-458">例: myDataColumn. Expression = "SUBSTRING (phone, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="420f7-458">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="420f7-459"><xref:System.Data.DataColumn.Expression%2A> プロパティをリセットするには、null 値または空の文字列を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="420f7-459">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="420f7-460">[式] 列に既定値が設定されている場合は、[<xref:System.Data.DataColumn.Expression%2A>] プロパティがリセットされた後に、以前に入力したすべての行に既定値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="420f7-460">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-461">次の例では、<xref:System.Data.DataTable>に3つの列を作成します。</span><span class="sxs-lookup"><span data-stu-id="420f7-461">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="420f7-462">2番目と3番目の列には式が含まれています。2番目の例では、税額を使用して税金を計算し、3番目の計算結果を1番目の列の値に加算します。</span><span class="sxs-lookup"><span data-stu-id="420f7-462">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="420f7-463">結果のテーブルが <xref:System.Windows.Forms.DataGrid> コントロールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-463">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="420f7-464"><see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティまたは <see cref="P:System.Data.DataColumn.Unique" /> プロパティが <see langword="true" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-464">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="420f7-465">CONVERT 関数を使用すると式が文字列と評価されますが、その文字列には型パラメーターに変換できる形式は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="420f7-465">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="420f7-466">CONVERT 関数を使用する場合は、要求したキャストを実行できません。</span><span class="sxs-lookup"><span data-stu-id="420f7-466">When you are using the CONVERT function, the requested cast is not possible.</span></span> <span data-ttu-id="420f7-467">実行できるキャストの詳細については、以降のセクションで変換関数に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="420f7-467">See the Conversion function in the following section for detailed information about possible casts.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="420f7-468">SUBSTRING 関数を使用する場合は、開始引数が範囲外にあります。</span><span class="sxs-lookup"><span data-stu-id="420f7-468">When you use the SUBSTRING function, the start argument is out of range.</span></span>  
  
 <span data-ttu-id="420f7-469">- または -</span><span class="sxs-lookup"><span data-stu-id="420f7-469">-Or-</span></span>  
  
 <span data-ttu-id="420f7-470">SUBSTRING 関数を使用する場合は、長さ引数が範囲外にあります。</span><span class="sxs-lookup"><span data-stu-id="420f7-470">When you use the SUBSTRING function, the length argument is out of range.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="420f7-471">LEN 関数または TRIM 関数を使用する場合は、式が文字列と評価されません。</span><span class="sxs-lookup"><span data-stu-id="420f7-471">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span></span> <span data-ttu-id="420f7-472">これには <see cref="T:System.Char" /> と評価される式も含まれます。</span><span class="sxs-lookup"><span data-stu-id="420f7-472">This includes expressions that evaluate to <see cref="T:System.Char" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-473">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-473">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataColumn.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-474"><see cref="T:System.Data.DataColumn" /> に関連付けられているカスタム ユーザー情報のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-474">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="420f7-475">カスタム情報の <see cref="T:System.Data.PropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-475">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-476"><xref:System.Data.DataColumn.ExtendedProperties%2A> プロパティを使用すると、オブジェクトと共にカスタム情報を格納できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-476">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="420f7-477">たとえば、データを更新する必要がある時間を格納できます。</span><span class="sxs-lookup"><span data-stu-id="420f7-477">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="420f7-478">拡張プロパティの型は <xref:System.String>である必要があります。</span><span class="sxs-lookup"><span data-stu-id="420f7-478">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="420f7-479"><xref:System.String> 型ではないプロパティは、<xref:System.Data.DataColumn> が XML として書き込まれるときに保持されません。</span><span class="sxs-lookup"><span data-stu-id="420f7-479">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-480">次の例では、<xref:System.Data.DataColumn.ExtendedProperties%2A> プロパティによって返される <xref:System.Data.PropertyCollection> にカスタムプロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="420f7-480">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="420f7-481">2番目の例では、カスタムプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-481">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-482">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-482">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Data.DataColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMaxLengthDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-483">テキスト列の最大長を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-483">Gets or sets the maximum length of a text column.</span></span></summary>
        <value><span data-ttu-id="420f7-484">文字単位で表した列の最大長。</span><span class="sxs-lookup"><span data-stu-id="420f7-484">The maximum length of the column in characters.</span></span> <span data-ttu-id="420f7-485">列の最大長が指定されていない場合、値は-1 (既定値) になります。</span><span class="sxs-lookup"><span data-stu-id="420f7-485">If the column has no maximum length, the value is -1 (default).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-486"><xref:System.Data.DataColumn.MaxLength%2A> プロパティは、テキスト以外の列に対しては無視されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-486">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="420f7-487">文字列以外の列に <xref:System.Data.DataColumn.MaxLength%2A> を割り当てると、<xref:System.ArgumentException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="420f7-487">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-488">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-488">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataColumn.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-489"><see cref="T:System.Data.DataColumn" /> の名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-489">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="420f7-490"><see cref="T:System.Data.DataColumn" /> の名前空間。</span><span class="sxs-lookup"><span data-stu-id="420f7-490">The namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-491"><xref:System.Data.DataColumn.Namespace%2A> プロパティは、<xref:System.Data.DataSet.ReadXml%2A>、<xref:System.Data.DataSet.WriteXml%2A>、<xref:System.Data.DataSet.ReadXmlSchema%2A>、または <xref:System.Data.DataSet.WriteXmlSchema%2A> の各メソッドを使用して、XML ドキュメントを読み取り、<xref:System.Data.DataSet> 内の <xref:System.Data.DataTable> に書き込むときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-491">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="420f7-492">XML ドキュメントの名前空間は、<xref:System.Data.DataSet>に読み取るときに XML 属性と要素のスコープを限定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-492">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="420f7-493">たとえば、<xref:System.Data.DataSet> には、"myCompany" という名前空間を持つドキュメントから読み取られたスキーマが含まれています。また、名前空間 "the Company" を含むドキュメントから (<xref:System.Data.DataSet.ReadXml%2A> メソッドを使用して) データを読み取ろうとしました。</span><span class="sxs-lookup"><span data-stu-id="420f7-493">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="420f7-494">既存のスキーマに対応していないデータは無視されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-494">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="420f7-495">この名前空間には既にデータが格納されています。</span><span class="sxs-lookup"><span data-stu-id="420f7-495">The namespace already has data.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-496">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-496">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataColumn.OnPropertyChanging pcevent" />
      <MemberSignature Language="C#" Value="protected internal virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="420f7-497">パラメーターの参照。</span><span class="sxs-lookup"><span data-stu-id="420f7-497">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="420f7-498">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="420f7-498">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.DataColumn.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnOrdinalDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-499"><see cref="T:System.Data.DataColumnCollection" /> コレクション内の 0 から始まる列の位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-499">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="420f7-500">列の位置。</span><span class="sxs-lookup"><span data-stu-id="420f7-500">The position of the column.</span></span> <span data-ttu-id="420f7-501">列がコレクションのメンバーでない場合は、-1 を取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-501">Gets -1 if the column is not a member of a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-502">次の例では、列の名前、序数、およびデータ型を返します。</span><span class="sxs-lookup"><span data-stu-id="420f7-502">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-503">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-503">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataColumn.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnPrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-504"><see cref="T:System.Data.DataTable" /> の名前空間に別名を付ける XML プリフィックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-504">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="420f7-505"><see cref="T:System.Data.DataTable" /> 名前空間の XML プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="420f7-505">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-506"><xref:System.Data.DataTable.Prefix%2A> は、<xref:System.Data.DataSet.Namespace%2A> プロパティによって設定されるように、<xref:System.Data.DataSet> オブジェクトの名前空間に属する要素を識別するために、XML ドキュメント全体で使用されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-506">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-507">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-507">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RaisePropertyChanging : string -&gt; unit" Usage="dataColumn.RaisePropertyChanging name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="420f7-508">パラメーターの参照。</span><span class="sxs-lookup"><span data-stu-id="420f7-508">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="420f7-509">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="420f7-509">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Data.DataColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnReadOnlyDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-510">行がテーブルに追加された直後にこの列を変更できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-510">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span></span></summary>
        <value><span data-ttu-id="420f7-511">列が読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-511"><see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="420f7-512">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="420f7-512">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-513">次の例では、<xref:System.Data.DataColumn> を作成し、その <xref:System.Data.DataColumn.ReadOnly%2A> プロパティ `true`を設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-513">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="420f7-514">このプロパティは計算列に対して <see langword="false" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-514">The property is set to <see langword="false" /> on a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-515">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-515">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SetOrdinal : int -&gt; unit" Usage="dataColumn.SetOrdinal ordinal" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="420f7-516">指定する序数。</span><span class="sxs-lookup"><span data-stu-id="420f7-516">The specified ordinal.</span></span></param>
        <summary><span data-ttu-id="420f7-517"><see cref="T:System.Data.DataColumn" /> の序数または位置を、指定された序数または位置に変更します。</span><span class="sxs-lookup"><span data-stu-id="420f7-517">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-518"><xref:System.Data.DataColumn> の序数または位置を、指定された序数または位置に変更します。</span><span class="sxs-lookup"><span data-stu-id="420f7-518">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="420f7-519">序数が0より小さいか、または既存の列数 (最後の列の序数を超える) を超える場合は、無効な <xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="420f7-519">If ordinal is less than 0 or greater than the existing number of columns - 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="420f7-520">列の序数を変更すると、列は列のコレクション内の新しい位置に移動します。</span><span class="sxs-lookup"><span data-stu-id="420f7-520">When you change a column's ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="420f7-521">前の序数と新しい序数の間にある列は、列の新しい序数に合わせて調整されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-521">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-522">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-522">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTableDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-523">列が属する <see cref="T:System.Data.DataTable" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-523">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span></span></summary>
        <value><span data-ttu-id="420f7-524"><see cref="T:System.Data.DataTable" /> が属する <see cref="T:System.Data.DataColumn" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-524">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-525">次の例では、<xref:System.Data.DataColumn.Table%2A> プロパティを使用して、<xref:System.Data.DataColumn> の親テーブルを返します。</span><span class="sxs-lookup"><span data-stu-id="420f7-525">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-526">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-526">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="420f7-527">列の <see cref="P:System.Data.DataColumn.Expression" /> がある場合は、その式を取得します。</span><span class="sxs-lookup"><span data-stu-id="420f7-527">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span></span></summary>
        <returns><span data-ttu-id="420f7-528"><see cref="P:System.Data.DataColumn.Expression" /> プロパティが設定されている場合はその値。それ以外の場合は <see cref="P:System.Data.DataColumn.ColumnName" /> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="420f7-528">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420f7-529">次の例では、<xref:System.Data.DataColumn.ToString%2A> プロパティを使用して、<xref:System.Data.DataColumn> オブジェクトのコレクションの各メンバーの既定の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="420f7-529">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-530">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-530">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Unique : bool with get, set" Usage="System.Data.DataColumn.Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnUniqueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="420f7-531">列の各行の値が一意である必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="420f7-531">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span></span></summary>
        <value><span data-ttu-id="420f7-532">値が一意である必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="420f7-532"><see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="420f7-533">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="420f7-533">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420f7-534">このプロパティが false から true に変更されるとすぐに、値が一意になるように、この列に unique 制約が作成されます。</span><span class="sxs-lookup"><span data-stu-id="420f7-534">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420f7-535">次の例では、新しい <xref:System.Data.DataColumn>を作成し、そのプロパティを設定して、テーブルの columns コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="420f7-535">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="420f7-536">この列は計算列です。</span><span class="sxs-lookup"><span data-stu-id="420f7-536">The column is a calculated column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="420f7-537">ADO.NET でのデータセットの使用</span><span class="sxs-lookup"><span data-stu-id="420f7-537">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
