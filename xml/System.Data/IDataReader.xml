<Type Name="IDataReader" FullName="System.Data.IDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="578d95dfa2b76aebdbfd9ef437aeda5c7ace41d1" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75140305" /></Metadata><TypeSignature Language="C#" Value="public interface IDataReader : IDisposable, System.Data.IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataReader implements class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataReader&#xA;Implements IDataRecord, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataReader : IDisposable, System::Data::IDataRecord" />
  <TypeSignature Language="F#" Value="type IDataReader = interface&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b4e67-101">データ ソースでのコマンド実行により取得された結果セットの 1 つ以上の順方向専用ストリームを読み取る手段を提供し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-101">Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e67-102"><xref:System.Data.IDataReader> インターフェイスと <xref:System.Data.IDataRecord> インターフェイスにより、継承クラスは `DataReader` クラスを実装できます。これにより、結果セットの1つ以上の順方向専用ストリームを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-102">The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets.</span></span> <span data-ttu-id="b4e67-103">`DataReader` クラスの詳細については、「 [DataReader を使用したデータの取得](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b4e67-103">For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span></span>  
  
 <span data-ttu-id="b4e67-104">アプリケーションでは、<xref:System.Data.IDataReader> インターフェイスのインスタンスは直接作成されませんが、<xref:System.Data.IDataReader>を継承するクラスのインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-104">An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="b4e67-105"><xref:System.Data.IDataReader> を継承するクラスは、継承されたメンバーを実装する必要があり、通常は、プロバイダー固有の機能を追加するための追加メンバーを定義します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-105">Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span>  
  
 <span data-ttu-id="b4e67-106">データの読み取り中に別のプロセスまたはスレッドによって結果セットに加えられた変更は、`IDataReader`を実装するクラスのユーザーに表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b4e67-106">Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`.</span></span> <span data-ttu-id="b4e67-107">正確な動作は、プロバイダーとタイミングに応じて変わります。</span><span class="sxs-lookup"><span data-stu-id="b4e67-107">However, the precise behavior is both provider and timing dependent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e67-108">次の例では、派生クラス、<xref:System.Data.SqlClient.SqlConnection>、<xref:System.Data.SqlClient.SqlCommand>、および <xref:System.Data.SqlClient.SqlDataReader>のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b4e67-109">この例では、データを読み取り、コンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-109">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="b4e67-110">最後に、この例では、<xref:System.Data.SqlClient.SqlDataReader>、<xref:System.Data.SqlClient.SqlConnection>を閉じます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="b4e67-111">.NET Framework データプロバイダー間の一貫性を高めるには、<paramref name="Prv" /> コマンドに継承クラスの名前を付けます。ここで <paramref name="Prv" /> は、特定の .NET Framework データプロバイダーの名前空間のすべてのクラスに指定された一様なプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="b4e67-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Command where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="b4e67-112">たとえば、<paramref name="Sql" /> は <see langword="System.Data.SqlClient" /> 名前空間の <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラスのプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="b4e67-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="b4e67-113">ユーザーは、<see langword="DataReader" /> クラスのインスタンスを直接作成しません。</span><span class="sxs-lookup"><span data-stu-id="b4e67-113">Users do not create an instance of a <see langword="DataReader" /> class directly.</span></span> <span data-ttu-id="b4e67-114">代わりに、<see langword="Command" /> オブジェクトの <see langword="ExecuteReader" /> メソッドを使用して <see langword="DataReader" /> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-114">Instead, they obtain the <see langword="DataReader" /> instance through the <see langword="ExecuteReader" /> method of the <see langword="Command" /> object.</span></span> <span data-ttu-id="b4e67-115">したがって、<see langword="DataReader" /> コンストラクターを内部としてマークする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b4e67-115">Therefore, you should mark <see langword="DataReader" /> constructors as internal.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4e67-116"><see cref="T:System.Data.IDataReader" /> オブジェクトを閉じます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-116">Closes the <see cref="T:System.Data.IDataReader" /> Object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e67-117"><xref:System.Data.IDataReader> を使用して、関連付けられている <xref:System.Data.IDbConnection> を他の目的で使用する場合は、<xref:System.Data.IDataReader.Close%2A> メソッドを明示的に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b4e67-117">You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.IDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4e67-118">現在の行の入れ子の深さを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-118">Gets a value indicating the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="b4e67-119">入れ子のレベル。</span><span class="sxs-lookup"><span data-stu-id="b4e67-119">The level of nesting.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e67-120">最も外側のテーブルは深さ 0 です。</span><span class="sxs-lookup"><span data-stu-id="b4e67-120">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="iDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4e67-121"><see cref="T:System.Data.DataTable" /> の列メタデータを記述する <see cref="T:System.Data.IDataReader" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-121">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="b4e67-122">列メタデータを記述する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b4e67-122">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e67-123">OLE DB の .NET Framework Data Provider の <xref:System.Data.IDataReader.GetSchemaTable%2A> メソッドの実装は OLE DB IColumnsRowset:: GetColumnsRowset メソッドにマップされますが、他の .NET Framework データプロバイダーの実装は OLE DB プロバイダーレイヤーを使用しません。</span><span class="sxs-lookup"><span data-stu-id="b4e67-123">The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.</span></span> <span data-ttu-id="b4e67-124"><xref:System.Data.IDataReader.GetSchemaTable%2A> がテーブル内の各列に関するメタデータを返す順序、および返される DataReader 列は、使用するデータプロバイダーによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b4e67-124">The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.</span></span> <span data-ttu-id="b4e67-125">次の表に、<xref:System.Data.IDataReader.GetSchemaTable%2A>を実装するデータプロバイダーとメンバーを示します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-125">The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.</span></span>  
  
|<span data-ttu-id="b4e67-126">Data Provider</span><span class="sxs-lookup"><span data-stu-id="b4e67-126">Data Provider</span></span>|<span data-ttu-id="b4e67-127">メンバー</span><span class="sxs-lookup"><span data-stu-id="b4e67-127">Member</span></span>|  
|-------------------|------------|  
|<span data-ttu-id="b4e67-128">ODBC 用 .NET Data Provider</span><span class="sxs-lookup"><span data-stu-id="b4e67-128">.NET Data Provider for ODBC</span></span>|<span data-ttu-id="b4e67-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="b4e67-130">OLE DB 用の .NET Data Provider</span><span class="sxs-lookup"><span data-stu-id="b4e67-130">.NET Data Provider for OLE DB</span></span>|<span data-ttu-id="b4e67-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="b4e67-132">Oracle 用 .NET Data Provider</span><span class="sxs-lookup"><span data-stu-id="b4e67-132">.NET Data Provider for Oracle</span></span>|<span data-ttu-id="b4e67-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="b4e67-134">.NET Data Provider for SQL Server</span><span class="sxs-lookup"><span data-stu-id="b4e67-134">.NET Data Provider for SQL Server</span></span>|<span data-ttu-id="b4e67-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b4e67-136"><see cref="T:System.Data.IDataReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="b4e67-136">The <see cref="T:System.Data.IDataReader" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.IDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4e67-137">データ リーダーが閉じているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-137">Gets a value indicating whether the data reader is closed.</span></span></summary>
        <value><span data-ttu-id="b4e67-138">データ リーダーが閉じている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b4e67-138"><see langword="true" /> if the data reader is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e67-139"><xref:System.Data.IDataReader> を閉じた後に呼び出すことができるプロパティは、<xref:System.Data.IDataReader.IsClosed%2A> と <xref:System.Data.IDataReader.RecordsAffected%2A> だけです。</span><span class="sxs-lookup"><span data-stu-id="b4e67-139"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="iDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4e67-140">バッチ SQL ステートメントの結果を読み取っているときに、次の結果にデータ リーダーを進めます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-140">Advances the data reader to the next result, when reading the results of batch SQL statements.</span></span></summary>
        <returns><span data-ttu-id="b4e67-141">次の行が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b4e67-141"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e67-142">複数の結果を処理するために使用されます。これは、バッチ SQL ステートメントを実行することで取得できます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-142">Used to process multiple results, which can be obtained by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="b4e67-143">既定では、データリーダーは最初の結果に配置されます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-143">By default, the data reader is positioned on the first result.</span></span>  
  
 [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]
 [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="iDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4e67-144"><see cref="T:System.Data.IDataReader" /> を次のレコードに進めます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-144">Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="b4e67-145">次の行が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b4e67-145"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e67-146"><xref:System.Data.IDataReader> の既定の位置は、最初のレコードよりも前です。</span><span class="sxs-lookup"><span data-stu-id="b4e67-146">The default position of the <xref:System.Data.IDataReader> is prior to the first record.</span></span> <span data-ttu-id="b4e67-147">したがって、すべてのデータへのアクセスを開始するには、<xref:System.Data.IDataReader.Read%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b4e67-147">Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="b4e67-148">データリーダーが使用されている間、関連付けられている接続は <xref:System.Data.IDataReader>を提供しています。</span><span class="sxs-lookup"><span data-stu-id="b4e67-148">While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="b4e67-149">これは <xref:System.Data.IDataReader.Close%2A> が呼び出されるまでのケースです。</span><span class="sxs-lookup"><span data-stu-id="b4e67-149">This is the case until <xref:System.Data.IDataReader.Close%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e67-150">次の例では、<xref:System.Data.OleDb.OleDbConnection>、<xref:System.Data.OleDb.OleDbCommand>、および <xref:System.Data.OleDb.OleDbDataReader>の3つの派生クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-150">The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="b4e67-151">この例では、データを読み取り、コンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-151">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="b4e67-152">最後に、この例では、<xref:System.Data.OleDb.OleDbDataReader>、<xref:System.Data.OleDb.OleDbConnection>を閉じます。</span><span class="sxs-lookup"><span data-stu-id="b4e67-152">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.IDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4e67-153">SQL ステートメントの実行によって変更、挿入、または削除された行の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="b4e67-153">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="b4e67-154">変更、挿入、または削除された行の数。影響を受けた行がない、またはステートメントが失敗した場合は 0。SELECT ステートメントの場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b4e67-154">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e67-155"><xref:System.Data.IDataReader.RecordsAffected%2A> プロパティは、すべての行が読み取られ、<xref:System.Data.IDataReader>を閉じるまで設定されません。</span><span class="sxs-lookup"><span data-stu-id="b4e67-155">The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="b4e67-156"><xref:System.Data.IDataReader> を閉じた後に呼び出すことができるプロパティは、<xref:System.Data.IDataReader.IsClosed%2A> と <xref:System.Data.IDataReader.RecordsAffected%2A> だけです。</span><span class="sxs-lookup"><span data-stu-id="b4e67-156"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
