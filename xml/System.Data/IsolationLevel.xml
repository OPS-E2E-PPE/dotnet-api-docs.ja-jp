<Type Name="IsolationLevel" FullName="System.Data.IsolationLevel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ff781f8f99ed52756545fac71181f8dd68666cb" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75140279" /></Metadata><TypeSignature Language="C#" Value="public enum IsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.IsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum IsolationLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class IsolationLevel" />
  <TypeSignature Language="F#" Value="type IsolationLevel = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>接続のトランザクション ロック動作を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

`IsolationLevel` 値は、トランザクションの実行時に .NET データプロバイダーによって使用されます。

`IsolationLevel` は、明示的に変更されるまで有効ですが、いつでも変更できます。 新しい値は、解析時間ではなく、実行時に使用されます。 トランザクション中に変更された場合、サーバーの予期される動作は、残りのすべてのステートメントに新しいロックレベルを適用することです。  
  
<xref:System.Data.Odbc.OdbcTransaction>を使用する場合、<xref:System.Data.Odbc.OdbcTransaction.IsolationLevel?displayProperty=nameWithType> を設定しなかった場合、または `Unspecified`に設定した場合、トランザクションは使用中のドライバーによって決定された分離レベルに従って実行されます。  

## Examples  
 このアプリケーションでは、<xref:System.Data.Common.DbTransaction>で <xref:System.Data.IsolationLevel> を使用する方法を示します。 このサンプルでは、さまざまな分離レベルで許可されている次の動作を示します。  
  
-   ダーティリード。  
  
-   反復不可能な読み取り。  
  
-   幻.  
  
 このアプリケーションは、次の分離レベルで実行されます。  
  
-   ReadUncommitted  
  
-   ReadCommitted  
  
-   RepeatableRead  
  
-   SERIALIZABLE  
  
-   スナップショット  
  
 PhantomReadThreads クラスは、特定のトランザクションでファントム読み取り動作が許可されているかどうかを示します。 トランザクションで動作が許可されている場合、スレッドは次の順序で動作します。  
  
-   最初のスレッドで、製品 (すべて) を選択します。  
  
-   2番目のスレッドで、新しい製品を挿入します。  
  
-   2番目のスレッドでトランザクションをコミットします。  
  
-   製品をもう一度選択します。  
  
-   最初のスレッドでトランザクションをコミットします。  
  
 トランザクションで動作が許可される場合、2つの Select 操作で異なる結果が得られます。  
  
 NonrepeatableReadThreads クラスは、特定のトランザクションで反復不可能な読み取り動作が許可されているかどうかを示します。 トランザクションで動作が許可されている場合、スレッドは次の順序で動作します。  
  
-   最初のスレッドで、製品 (ProductId = 1) を選択します。  
  
-   2番目のスレッドで、Quantity 値 (ProductId = 1) を更新します。  
  
-   2番目のスレッドでトランザクションをコミットします。  
  
-   もう一度製品を選択します。  
  
-   最初のスレッドでトランザクションをコミットします。  
  
 トランザクションで動作が許可される場合、2つの Select 操作で異なる結果が得られます。  
  
 ExchangeValuesThreads クラスは、シリアル化可能なトランザクションとスナップショットトランザクションの違いを示しています。 シリアル化可能なトランザクションの場合、スレッドは次の順序で動作します。  
  
-   最初のスレッドで、製品の価格 (ProductId = 2) を取得し、変数に格納します。  
  
-   最初のスレッドで、製品の価格 (ProductId = 1) を製品の価格 (ProductId = 2) で更新します。  
  
-   最初のスレッドでトランザクションをコミットします。  
  
-   2番目のスレッドで、製品の価格 (ProductId = 1) を取得し、変数に格納します。  
  
-   2番目のスレッドで、製品の価格 (ProductId = 2) を製品の価格 (ProductId = 1) で更新します。  
  
-   2番目のスレッドでトランザクションをコミットします。  
  
 価格の値 (ProductId = 1 および ProductId = 2) は、製品の元の価格 (ProductId = 2) と同じになります。  
  
 スナップショットトランザクションの場合、スレッドは次の順序で動作します。  
  
-   最初のスレッドで、製品の価格 (ProductId = 2) を取得し、変数に格納します。  
  
-   最初のスレッドで、製品の価格 (ProductId = 1) を製品の価格 (ProductId = 2) で更新します。  
  
-   2番目のスレッドでは、スナップショットから製品の価格 (ProductId = 1) を取得し、変数に格納します。  
  
-   2番目のスレッドで、製品の価格 (ProductId = 2) を製品の価格 (ProductId = 1) で更新します。  
  
-   2番目のスレッドでトランザクションをコミットします。  
  
-   最初のスレッドでトランザクションをコミットします。  
  
 次に、製品の価格を交換します (ProductId = 1、ProductId = 2)。  
  
 DirtyReadThreads クラスは、特定のトランザクションでダーティ読み取り動作が許可されているかどうかを示します。 トランザクションで動作が許可されている場合、スレッドは次の順序で動作します。  
  
-   最初のスレッドで、トランザクションを開始し、Quantity 値 (ProductId = 1) を追加します。  
  
-   2番目のスレッドで、Quantity 値を読み取り、値を再び追加します。  
  
-   2番目のスレッドでトランザクションをコミットします。  
  
-   最初のスレッドでトランザクションをロールバックします。  
  
 トランザクションで動作が許可されている場合、Quantity 値は2回追加されます。  
  
 C#このコードサンプルを含むプロジェクト Visual Basic は、[開発者コードサンプル](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4)を参照してください。  
  
 [!code-csharp[system_data_IsolationLevel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/system_data_isolationlevel/cs/source.cs#1)]
 [!code-vb[system_data_IsolationLevel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/system_data_isolationlevel/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Chaos">
      <MemberSignature Language="C#" Value="Chaos" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Chaos = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Chaos" />
      <MemberSignature Language="VB.NET" Value="Chaos" />
      <MemberSignature Language="C++ CLI" Value="Chaos" />
      <MemberSignature Language="F#" Value="Chaos = 16" Usage="System.Data.IsolationLevel.Chaos" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>これより分離性の高いトランザクションからの保留中の変更に対しては上書きできません。</summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadCommitted = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberSignature Language="F#" Value="ReadCommitted = 4096" Usage="System.Data.IsolationLevel.ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>データの読み取り中は、ダーティ リードを避けるために、共有ロックが設定されます。しかし、トランザクションの終了前にデータが変更されることもあるため、繰り返し不能な読み取りやファントム データが発生する可能性があります。</summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadUncommitted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberSignature Language="F#" Value="ReadUncommitted = 256" Usage="System.Data.IsolationLevel.ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>ダーティ読み込みができます。つまり、共有ロックが発行されておらず、排他ロックが有効ではありません。</summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel RepeatableRead = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberSignature Language="F#" Value="RepeatableRead = 65536" Usage="System.Data.IsolationLevel.RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>他のユーザーがデータを更新できないようにするために、クエリで使用するすべてのデータをロックします。 繰り返し不能読み込みはできませんが、実際には存在しない行を生成できます。</summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Serializable = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberSignature Language="F#" Value="Serializable = 1048576" Usage="System.Data.IsolationLevel.Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><see cref="T:System.Data.DataSet" /> にレンジ ロックがかけられ、トランザクションが完了するまで、他のユーザーは行を更新したりデータセットに行を挿入できません。</summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Snapshot = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="C++ CLI" Value="Snapshot" />
      <MemberSignature Language="F#" Value="Snapshot = 16777216" Usage="System.Data.IsolationLevel.Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>あるアプリケーションで変更中のデータを他のアプリケーションから読み取ることができるように、そのデータのバージョンを保存して、ブロッキングを減らします。 この場合、クエリを再実行しても、あるトランザクションで加えられた変更を、他のトランザクションで表示できません。</summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Unspecified = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Unspecified" />
      <MemberSignature Language="VB.NET" Value="Unspecified" />
      <MemberSignature Language="C++ CLI" Value="Unspecified" />
      <MemberSignature Language="F#" Value="Unspecified = -1" Usage="System.Data.IsolationLevel.Unspecified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>指定した分離レベルとは異なる分離レベルが使用されていますが、レベルを確認できません。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
