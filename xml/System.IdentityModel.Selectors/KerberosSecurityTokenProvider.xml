<Type Name="KerberosSecurityTokenProvider" FullName="System.IdentityModel.Selectors.KerberosSecurityTokenProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b0a59e693274104210426e71ae174f9f4d59945" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78702866" /></Metadata><TypeSignature Language="C#" Value="public class KerberosSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KerberosSecurityTokenProvider extends System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class KerberosSecurityTokenProvider&#xA;Inherits SecurityTokenProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class KerberosSecurityTokenProvider : System::IdentityModel::Selectors::SecurityTokenProvider" />
  <TypeSignature Language="F#" Value="type KerberosSecurityTokenProvider = class&#xA;    inherit SecurityTokenProvider" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>SOAP メッセージ送信者の <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンを提供するセキュリティ トークン プロバイダーを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 大半の場合、<xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider> クラスを直接呼び出す必要はありません。このクラスはクライアントが <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> セキュリティ トークンを必要とする SOAP メッセージを送信するときに呼び出されます。 特に、クライアントは <xref:System.ServiceModel.Description.ClientCredentials> クラスを使用して必要なセキュリティ トークンの種類を指定し、<xref:System.ServiceModel.Description.ClientCredentials> クラスはセキュリティ トークンを取得するために <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> メソッドを呼び出します。 必要なセキュリティ トークンが <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> セキュリティ トークンである場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> メソッドは <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%28System.TimeSpan%29> メソッドを呼び出します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d892973-1558-4115-a9e1-696777776125">方法: カスタムトークンを作成する</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KerberosSecurityTokenProvider (string servicePrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string servicePrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (servicePrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KerberosSecurityTokenProvider(System::String ^ servicePrincipalName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider : string -&gt; System.IdentityModel.Selectors.KerberosSecurityTokenProvider" Usage="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider servicePrincipalName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="servicePrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="servicePrincipalName"><see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンを取得する対象のサービス プリンシパル名。</param>
        <summary>サービス プリンシパル名を指定して、<see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、クライアントで許可される偽装レベルを <xref:System.Security.Principal.TokenImpersonationLevel>`Identification` に設定します。 呼び出し元のスレッドの現在のコンテキスト (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) がクライアント ID として使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="servicePrincipalName" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string servicePrincipalName, valuetype System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (servicePrincipalName As String, tokenImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KerberosSecurityTokenProvider(System::String ^ servicePrincipalName, System::Security::Principal::TokenImpersonationLevel tokenImpersonationLevel);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider : string * System.Security.Principal.TokenImpersonationLevel -&gt; System.IdentityModel.Selectors.KerberosSecurityTokenProvider" Usage="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider (servicePrincipalName, tokenImpersonationLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="servicePrincipalName" Type="System.String" />
        <Parameter Name="tokenImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="servicePrincipalName"><see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンを取得する対象のサービス プリンシパル名。</param>
        <param name="tokenImpersonationLevel">クライアントの代わりに <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> セキュリティ トークンの受信者が操作できるレベルを指定する <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />。</param>
        <summary>サービス プリンシパル名と、クライアントが  <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> セキュリティ トークンの受信者にクライアントの資格情報の偽装を許可するかどうかを指定して、<see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出し元のスレッドの現在のコンテキスト (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) がクライアント ID として使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="tokenImpersonationLevel" /> が、<see langword="Identification" /> でも <see langword="Impersonation" /> でもありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="servicePrincipalName" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string servicePrincipalName, valuetype System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, class System.Net.NetworkCredential networkCredential) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (servicePrincipalName As String, tokenImpersonationLevel As TokenImpersonationLevel, networkCredential As NetworkCredential)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KerberosSecurityTokenProvider(System::String ^ servicePrincipalName, System::Security::Principal::TokenImpersonationLevel tokenImpersonationLevel, System::Net::NetworkCredential ^ networkCredential);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider : string * System.Security.Principal.TokenImpersonationLevel * System.Net.NetworkCredential -&gt; System.IdentityModel.Selectors.KerberosSecurityTokenProvider" Usage="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider (servicePrincipalName, tokenImpersonationLevel, networkCredential)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential credential);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string servicePrincipalName, valuetype System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, class System.Net.NetworkCredential credential) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (servicePrincipalName As String, tokenImpersonationLevel As TokenImpersonationLevel, credential As NetworkCredential)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KerberosSecurityTokenProvider(System::String ^ servicePrincipalName, System::Security::Principal::TokenImpersonationLevel tokenImpersonationLevel, System::Net::NetworkCredential ^ credential);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider : string * System.Security.Principal.TokenImpersonationLevel * System.Net.NetworkCredential -&gt; System.IdentityModel.Selectors.KerberosSecurityTokenProvider" Usage="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider (servicePrincipalName, tokenImpersonationLevel, credential)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="servicePrincipalName" Type="System.String" Index="0" />
        <Parameter Name="tokenImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="1" />
        <Parameter Name="networkCredential" Type="System.Net.NetworkCredential" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="servicePrincipalName"><see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンを取得する対象のサービス プリンシパル名。</param>
        <param name="tokenImpersonationLevel">クライアント プロセスの代わりに <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> セキュリティ トークンの受信者が操作できるレベルを指定する <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />。</param>
        <param name="networkCredential"><see cref="T:System.Net.NetworkCredential" /> の ID を表す <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />。</param>
        <param name="credential"><see cref="T:System.Net.NetworkCredential" /> の ID を表す <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />。</param>
        <summary>サービス プリンシパル名、クライアント ID、およびクライアントが <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> セキュリティ トークンの受信者にクライアントの資格情報の偽装を許可するかどうかを指定して、<see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="tokenImpersonationLevel" /> が、<see langword="Identification" /> でも <see langword="Impersonation" /> でもありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="servicePrincipalName" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTokenCore (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ GetTokenCore(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.GetTokenCore : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="kerberosSecurityTokenProvider.GetTokenCore timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <summary><see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンを取得します。</summary>
        <returns>取得するセキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クライアントが SOAP メッセージを送信し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> セキュリティ トークンが要求される場合、<xref:System.ServiceModel.Description.ClientCredentials> メソッドが <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> クラスにより呼び出されます。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> メソッドは <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential NetworkCredential { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential NetworkCredential" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ NetworkCredential { System::Net::NetworkCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NetworkCredential : System.Net.NetworkCredential" Usage="System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンの ID を取得します。</summary>
        <value><see cref="T:System.Net.NetworkCredential" /> の ID を表す <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential%2A> プロパティの値が `null` のときに <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A> メソッドを呼び出すと、呼び出し元のスレッドの現在のコンテキスト (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) がクライアント ID として使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePrincipalName">
      <MemberSignature Language="C#" Value="public string ServicePrincipalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServicePrincipalName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePrincipalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServicePrincipalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePrincipalName : string" Usage="System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得する <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンのサービス プリンシパル名を取得します。</summary>
        <value>取得する <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンのサービス プリンシパル名。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel TokenImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel TokenImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel TokenImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントの代わりに <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> セキュリティ トークンの受信者が操作できるレベルを指定する値を取得します。</summary>
        <value>クライアントの代わりに <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> セキュリティ トークンの受信者が操作できるレベルを指定する <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel%2A> プロパティは、`Identification` または `Impersonation` のどちらかにする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
