<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ed31c6051b76a1d4eed7b0f233edb7a71ec561a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75151836" /></Metadata><TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">比較するオブジェクトの型。</typeparam>
    <summary>オブジェクトの等価比較をサポートするメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスを使用すると、コレクションに対してカスタマイズされた等値比較を実装できます。 つまり、`T`型に対して独自の等価定義を作成し、この定義を <xref:System.Collections.Generic.IEqualityComparer%601> ジェネリックインターフェイスを受け入れるコレクション型と共に使用するように指定できます。 .NET Framework では、<xref:System.Collections.Generic.Dictionary%602> ジェネリックコレクション型のコンストラクターがこのインターフェイスを受け入れます。  
  
 このインターフェイスの既定の実装は、<xref:System.Collections.Generic.EqualityComparer%601> ジェネリッククラスの <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> プロパティによって提供されます。 <xref:System.StringComparer> クラスは <xref:System.String>型の <xref:System.Collections.Generic.IEqualityComparer%601> を実装します。  
  
 このインターフェイスでは、等価比較のみがサポートされます。 並べ替えと順序付けの比較のカスタマイズは、<xref:System.Collections.Generic.IComparer%601> ジェネリックインターフェイスによって提供されます。  
  
 <xref:System.Collections.Generic.EqualityComparer%601> クラスは、<xref:System.Object.Equals%2A?displayProperty=nameWithType> メソッドではなく <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> メソッドを使用して等しいかどうかをテストするため、<xref:System.Collections.Generic.IEqualityComparer%601> インターフェイスを実装するのではなく、<xref:System.Collections.Generic.EqualityComparer%601> クラスから派生させることをお勧めします。 これは、<xref:System.Collections.Generic.Dictionary%602> クラスおよびその他のジェネリックコレクションの `Contains`、`IndexOf`、`LastIndexOf`、および `Remove` メソッドと一致します。  
  
   
  
## Examples  
 次の例では、カスタム `Box` オブジェクトをディクショナリコレクションに追加します。 ディメンションが同じである場合、`Box` オブジェクトは等しいと見なされます。  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">比較対象の <paramref name="T" /> 型の第 1 オブジェクト。</param>
        <param name="y">比較対象の <paramref name="T" /> 型の第 2 オブジェクト。</param>
        <summary>指定したオブジェクトが等しいかどうかを判断します。</summary>
        <returns>指定したオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `T`型に対してカスタマイズされた等値比較を提供するには、このメソッドを実装します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>実装する場合に必要な<see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />メソッドを返します<see langword="true" />2 つのオブジェクトの<paramref name="x" />と<paramref name="y" />、によって返される値、<see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />メソッド<paramref name="x" />に対して返された値を等しくする必要があります<paramref name="y" />。  
  
<see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> メソッドは、再帰、対称、および推移です。 つまり、オブジェクトをそれ自体と比較するために使用される場合は <see langword="true" /> が返されます。2つのオブジェクトの <see langword="true" /> <paramref name="x" /> と <paramref name="y" /> <paramref name="y" /> と <paramref name="x" />に対して <see langword="true" /> されます。とは、2つのオブジェクトに対して、<paramref name="x" /> と <paramref name="y" /> に対して <see langword="true" /> され、<see langword="true" /> と <paramref name="y" /> に <paramref name="z" />する場合に <paramref name="x" /> と <paramref name="z" /> <see langword="true" /> ます。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">ハッシュ コードが返される対象の <see cref="T:System.Object" />。</param>
        <summary>指定したオブジェクトのハッシュ コードを返します。</summary>
        <returns>指定したオブジェクトのハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを実装して、<xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> メソッドによって提供されるカスタマイズされた等値比較に対応する `T`型のカスタマイズされたハッシュコードを提供します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="obj" /> の型が参照型で、<paramref name="obj" /> が <see langword="null" /> です。</exception>
        <block subset="none" type="overrides"><para>実装する場合に必要な<see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />メソッドを返します<see langword="true" />2 つのオブジェクトの<paramref name="x" />と<paramref name="y" />、によって返される値、<see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />メソッド<paramref name="x" />に対して返された値を等しくする必要があります<paramref name="y" />。</para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>
