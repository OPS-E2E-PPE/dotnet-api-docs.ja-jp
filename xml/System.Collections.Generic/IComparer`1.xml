<Type Name="IComparer&lt;T&gt;" FullName="System.Collections.Generic.IComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ab7c81f1934630970262843b47a83b24d28624b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75151888" /></Metadata><TypeSignature Language="C#" Value="public interface IComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparer" />
  <TypeSignature Language="F#" Value="type IComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">比較するオブジェクトの型。</typeparam>
    <summary>2 つのオブジェクトを比較するために型が実装するメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスは、<xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> および <xref:System.Collections.Generic.List%601.BinarySearch%2A?displayProperty=nameWithType> メソッドと共に使用されます。 コレクションの並べ替え順序をカスタマイズする方法を提供します。 このインターフェイスを実装するクラスには、<xref:System.Collections.Generic.SortedDictionary%602> および <xref:System.Collections.Generic.SortedList%602> ジェネリッククラスが含まれます。  
  
 このインターフェイスの既定の実装は <xref:System.Collections.Generic.Comparer%601> クラスです。 <xref:System.StringComparer> クラスは、型 <xref:System.String>に対してこのインターフェイスを実装します。  
  
 このインターフェイスは、順序の比較をサポートしています。 つまり、<xref:System.Collections.Generic.Comparer%601.Compare%2A> メソッドが0を返した場合、2つのオブジェクトが同じで並べ替えられることを意味します。 厳密な等価比較の実装は、<xref:System.Collections.Generic.IEqualityComparer%601> ジェネリックインターフェイスによって提供されます。  
  
 <xref:System.Collections.Generic.Comparer%601> クラスは <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> メソッドの明示的なインターフェイス実装と、オブジェクトの既定の比較子を取得する <xref:System.Collections.Generic.Comparer%601.Default%2A> プロパティを提供するため、<xref:System.Collections.Generic.IComparer%601> インターフェイスを実装するのではなく、<xref:System.Collections.Generic.Comparer%601> クラスから派生させることをお勧めします。  
  
   
  
## Examples  
 次の例では、<xref:System.Collections.Generic.IComparer%601> インターフェイスを実装して、`Box` 型のオブジェクトをそのディメンションに従って比較します。 この例は、<xref:System.Collections.Generic.Comparer%601> クラス用に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#7)]
 [!code-vb[System.Collections.Generic.BoxCompare#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.Comparer`1" />
    <altmember cref="N:System.Collections" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="iComparer.Compare (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Compare(T x, T y);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">比較する最初のオブジェクト。</param>
        <param name="y">比較する 2 番目のオブジェクト。</param>
        <summary>2 つのオブジェクトを比較して、一方が他方より小さいか、同じか、または大きいかを示す値を返します。</summary>
        <returns><paramref name="x" /> と <paramref name="y" /> の相対値を示す符号付き整数。次の表を参照してください。  
  
 <list type="table"><listheader><term> 値 
 </term><description> 意味 
 </description></listheader><item><term> ゼロより小さい 
 </term><description><paramref name="x" /> は <paramref name="y" /> より小さい値です。  
  
 </description></item><item><term> 0 
 </term><description><paramref name="x" /> と <paramref name="y" /> は等しい。  
  
 </description></item><item><term> ゼロより大きい 
 </term><description><paramref name="x" /> が <paramref name="y" /> より大きくなっています。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `T`型に対してカスタマイズされた並べ替え順序の比較を提供するには、このメソッドを実装します。  
  
 参照型と `null` を比較することはできますが、例外は生成されません。 Null 参照は、null 以外の参照よりも小さいと見なされます。  
  
   
  
## Examples  
 次の例では、<xref:System.Collections.Generic.IComparer%601> インターフェイスを実装して、`Box` 型のオブジェクトをそのディメンションに従って比較します。 この例は、<xref:System.Collections.Generic.Comparer%601> クラス用に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#7)]
 [!code-vb[System.Collections.Generic.BoxCompare#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
