<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60886f1721f0c7d9a7be6797d470721055199974" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83537741" /></Metadata><TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&lt;'T&gt;&#xA;    interface IComparer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&#xA;    interface IComparer&lt;'T&gt;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Collections" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="1b19d-101">比較するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="1b19d-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="1b19d-102"><see cref="T:System.Collections.Generic.IComparer`1" /> ジェネリック インターフェイスの実装のための基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b19d-103">このクラスから派生させて、<xref:System.Collections.Generic.SortedList%602> や <xref:System.Collections.Generic.SortedDictionary%602> ジェネリッククラスなどのコレクションクラスで使用する <xref:System.Collections.Generic.IComparer%601> インターフェイスのカスタム実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="1b19d-104"><xref:System.Collections.Generic.Comparer%601> クラスからの派生と、<xref:System.IComparable?displayProperty=nameWithType> インターフェイスの実装の違いは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="1b19d-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="1b19d-105">2つのオブジェクトを既定で比較する方法を指定するには、クラスに <xref:System.IComparable?displayProperty=nameWithType> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="1b19d-106">これにより、指定した既定の比較コードが並べ替え操作で使用されます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="1b19d-107">既定の比較子の代わりに使用する比較子を定義するには、<xref:System.Collections.Generic.Comparer%601> クラスから派生させます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="1b19d-108">この比較子は、比較子をパラメーターとして受け取る並べ替え操作で使用できます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="1b19d-109"><xref:System.Collections.Generic.Comparer%601.Default%2A> プロパティによって返されるオブジェクトは、<xref:System.IComparable%601?displayProperty=nameWithType> ジェネリックインターフェイス (でC#は`IComparable<T>`、Visual Basic では `IComparable(Of T)`) を使用して2つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="1b19d-110">型 `T` が <xref:System.IComparable%601?displayProperty=nameWithType> ジェネリックインターフェイスを実装していない場合、<xref:System.Collections.Generic.Comparer%601.Default%2A> プロパティは、<xref:System.IComparable?displayProperty=nameWithType> インターフェイスを使用する <xref:System.Collections.Generic.Comparer%601> を返します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b19d-111">次の例では、<xref:System.Collections.Generic.Comparer%601> クラスから `BoxLengthFirst`クラスを派生させることができます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="1b19d-112">この比較子は、`Box`型の2つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="1b19d-113">これらの値は、まず長さ、次に高さ、次に幅で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="1b19d-114">`Box` クラスは、<xref:System.IComparable%601> インターフェイスを実装して、2つの `Box` オブジェクト間の既定の比較を制御します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="1b19d-115">この既定の実装では、最初に高さ、次に長さ、次に幅で並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="1b19d-116">この例では、最初に `BoxLengthFirst` 比較子を使用して `Box` オブジェクトの一覧を並べ替え、次に既定の比較子を使用して、2つの比較の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="1b19d-117">
        <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> と <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,\`0)" /> の動作は、カルチャによって区別され、大文字と小文字が区別される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="1b19d-117">
        <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,\`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,\`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.</span></span>  
  
<span data-ttu-id="1b19d-118">文字列比較の場合は、<c>比較子&lt;文字列&gt;</c>より <see cref="T:System.StringComparer" /> クラスを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="1b19d-118">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.</span></span>  <span data-ttu-id="1b19d-119"><see cref="T:System.StringComparer" /> クラスのプロパティは、カルチャの区別と大文字と小文字の区別の組み合わせが異なる文字列比較を実行する定義済みのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-119">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="1b19d-120">大文字と小文字の区別およびカルチャの区別は、同じ <see cref="T:System.StringComparer" /> インスタンスのメンバー間で一貫しています。</span><span class="sxs-lookup"><span data-stu-id="1b19d-120">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
<span data-ttu-id="1b19d-121">カルチャ固有の比較の詳細については、<see cref="N:System.Globalization" /> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b19d-121">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span></para></block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b19d-122"><see cref="T:System.Collections.Generic.Comparer`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-122">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="comparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1b19d-123">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b19d-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="1b19d-124">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b19d-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="1b19d-125">派生クラスでオーバーライドされると、同じ型の 2 つのオブジェクトに対する比較を実行し、一方のオブジェクトが他方よりも小さいか、等しいか、大きいかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-125">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="1b19d-126"><paramref name="x" /> と <paramref name="y" /> の相対値を示す符号付き整数。次の表を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b19d-126">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="1b19d-127">値</span><span class="sxs-lookup"><span data-stu-id="1b19d-127">Value</span></span> 
 </term><description> <span data-ttu-id="1b19d-128">意味</span><span class="sxs-lookup"><span data-stu-id="1b19d-128">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1b19d-129">ゼロより小さい</span><span class="sxs-lookup"><span data-stu-id="1b19d-129">Less than zero</span></span> 
 </term><description><span data-ttu-id="1b19d-130"><paramref name="x" /> は <paramref name="y" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="1b19d-130"><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1b19d-131">ゼロ</span><span class="sxs-lookup"><span data-stu-id="1b19d-131">Zero</span></span> 
 </term><description><span data-ttu-id="1b19d-132"><paramref name="x" /> と <paramref name="y" /> は等しい。</span><span class="sxs-lookup"><span data-stu-id="1b19d-132"><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1b19d-133">ゼロより大きい</span><span class="sxs-lookup"><span data-stu-id="1b19d-133">Greater than zero</span></span> 
 </term><description><span data-ttu-id="1b19d-134"><paramref name="x" /> が <paramref name="y" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="1b19d-134"><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b19d-135">`T`型に対してカスタマイズされた並べ替え順序の比較を提供するには、このメソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-135">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b19d-136">次の例では、既定の比較子の代わりに使用できる `Box` オブジェクトの比較子を定義します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-136">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="1b19d-137">この例は、<xref:System.Collections.Generic.Comparer%601> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1b19d-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b19d-138"><paramref name="T" /> 型が、<see cref="T:System.IComparable`1" /> ジェネリック インターフェイスと <see cref="T:System.IComparable" /> インターフェイスのいずれも実装していません。</span><span class="sxs-lookup"><span data-stu-id="1b19d-138">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1b19d-139">参照型と <see langword="null" /> を比較することはできますが、例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="1b19d-139">Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="1b19d-140">Null 参照は、null 以外の参照よりも小さいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-140">A null reference is considered to be less than any reference that is not null.</span></span>  
  
<span data-ttu-id="1b19d-141">カルチャ固有の比較の詳細については、<see cref="N:System.Globalization" /> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b19d-141">For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span></para></block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Create : Comparison&lt;'T&gt; -&gt; System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Create comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="comparison"><span data-ttu-id="1b19d-142">使用する比較。</span><span class="sxs-lookup"><span data-stu-id="1b19d-142">The comparison to use.</span></span></param>
        <summary><span data-ttu-id="1b19d-143">指定した比較を使用して比較子を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-143">Creates a comparer by using the specified comparison.</span></span></summary>
        <returns><span data-ttu-id="1b19d-144">新しい比較子。</span><span class="sxs-lookup"><span data-stu-id="1b19d-144">The new comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b19d-145">汎用引数で指定された型に対して、既定の並べ替え順序比較子を返します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-145">Returns a default sort order comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="1b19d-146"><see cref="T:System.Collections.Generic.Comparer`1" /> を継承し、<paramref name="T" /> 型の並べ替え順序の比較子として機能するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b19d-146">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b19d-147">このプロパティによって返される <xref:System.Collections.Generic.Comparer%601> は、<xref:System.IComparable%601?displayProperty=nameWithType> ジェネリックインターフェイス ( C#`IComparable(Of T)` では`IComparable<T>`、Visual Basic) を使用して2つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-147">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="1b19d-148">型 `T` が <xref:System.IComparable%601?displayProperty=nameWithType> ジェネリックインターフェイスを実装していない場合、このプロパティは <xref:System.IComparable?displayProperty=nameWithType> インターフェイスを使用する <xref:System.Collections.Generic.Comparer%601> を返します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-148">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b19d-149">次の例では、<xref:System.Collections.Generic.Comparer%601.Default%2A> プロパティを使用して、既定の比較を実行するオブジェクトを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-149">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="1b19d-150">この例は、<xref:System.Collections.Generic.Comparer%601> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1b19d-150">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="1b19d-151">文字列比較の場合、<see cref="T:System.StringComparer" /> クラスは、<c>比較子&lt;文字列&gt;</c> (Visual Basic の<c>比較子 (Of string)</c> ) よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-151">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).</span></span>  <span data-ttu-id="1b19d-152"><see cref="T:System.StringComparer" /> クラスのプロパティは、カルチャの区別と大文字と小文字の区別の組み合わせが異なる文字列比較を実行する定義済みのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-152">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="1b19d-153">大文字と小文字の区別およびカルチャの区別は、同じ <see cref="T:System.StringComparer" /> インスタンスのメンバー間で一貫しています。</span><span class="sxs-lookup"><span data-stu-id="1b19d-153">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
<span data-ttu-id="1b19d-154">カルチャ固有の比較の詳細については、<see cref="N:System.Globalization" /> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b19d-154">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span></para></block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IComparer.Compare : obj * obj -&gt; int&#xA;override this.System.Collections.IComparer.Compare : obj * obj -&gt; int" Usage="comparer.System.Collections.IComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1b19d-155">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b19d-155">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="1b19d-156">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b19d-156">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="1b19d-157">2 つのオブジェクトを比較して、一方が他方より小さいか、同じか、または大きいかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-157">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="1b19d-158"><paramref name="x" /> と <paramref name="y" /> の相対値を示す符号付き整数。次の表を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b19d-158">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="1b19d-159">値</span><span class="sxs-lookup"><span data-stu-id="1b19d-159">Value</span></span> 
 </term><description> <span data-ttu-id="1b19d-160">意味</span><span class="sxs-lookup"><span data-stu-id="1b19d-160">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1b19d-161">ゼロより小さい</span><span class="sxs-lookup"><span data-stu-id="1b19d-161">Less than zero</span></span> 
 </term><description><span data-ttu-id="1b19d-162"><paramref name="x" /> は <paramref name="y" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="1b19d-162"><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1b19d-163">ゼロ</span><span class="sxs-lookup"><span data-stu-id="1b19d-163">Zero</span></span> 
 </term><description><span data-ttu-id="1b19d-164"><paramref name="x" /> と <paramref name="y" /> は等しい。</span><span class="sxs-lookup"><span data-stu-id="1b19d-164"><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1b19d-165">ゼロより大きい</span><span class="sxs-lookup"><span data-stu-id="1b19d-165">Greater than zero</span></span> 
 </term><description><span data-ttu-id="1b19d-166"><paramref name="x" /> が <paramref name="y" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="1b19d-166"><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b19d-167">このメソッドは <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> メソッドのラッパーであるため、`obj` は現在のインスタンスのジェネリック引数 `T` によって指定された型にキャストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b19d-167">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="1b19d-168">`T`にキャストできない場合は、<xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-168">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="1b19d-169">参照型と `null` を比較することはできますが、例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="1b19d-169">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="1b19d-170">並べ替えを行う場合、`null` は他のオブジェクトより小さいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="1b19d-170">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b19d-171">次の例は、<xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> メソッドを使用して2つのオブジェクトを比較する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1b19d-171">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="1b19d-172">この例は、<xref:System.Collections.Generic.Comparer%601> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1b19d-172">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b19d-173"><paramref name="x" /> または <paramref name="y" /> が、<paramref name="T" /> 型にキャストできない型です。</span><span class="sxs-lookup"><span data-stu-id="1b19d-173"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span></span>  
  
<span data-ttu-id="1b19d-174">または</span><span class="sxs-lookup"><span data-stu-id="1b19d-174">-or-</span></span> 
 <span data-ttu-id="1b19d-175"><paramref name="x" /> および <paramref name="y" /> が、<see cref="T:System.IComparable`1" /> ジェネリック インターフェイスと <see cref="T:System.IComparable" /> インターフェイスのいずれも実装していません。</span><span class="sxs-lookup"><span data-stu-id="1b19d-175"><paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="1b19d-176">
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> と <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(\`0,\`0)" /> の動作は、カルチャの区別と大文字小文字の区別の点で異なります。</span><span class="sxs-lookup"><span data-stu-id="1b19d-176">
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(\`0,\`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.</span></span>  
  
<span data-ttu-id="1b19d-177">文字列比較の場合は、<c>比較子&lt;文字列&gt;</c>より <see cref="T:System.StringComparer" /> クラスを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="1b19d-177">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.</span></span>  <span data-ttu-id="1b19d-178"><see cref="T:System.StringComparer" /> クラスのプロパティは、カルチャの区別と大文字と小文字の区別の組み合わせが異なる文字列比較を実行する定義済みのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="1b19d-178">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="1b19d-179">大文字と小文字の区別およびカルチャの区別は、同じ <see cref="T:System.StringComparer" /> インスタンスのメンバー間で一貫しています。</span><span class="sxs-lookup"><span data-stu-id="1b19d-179">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
<span data-ttu-id="1b19d-180">カルチャ固有の比較の詳細については、<see cref="N:System.Globalization" /> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b19d-180">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span></para></block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
