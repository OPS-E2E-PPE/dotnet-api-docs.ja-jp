<Type Name="FirstChanceExceptionEventArgs" FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b9f662d5d1e03c6bcbd2d3a3d2d60850fde3e76" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78816931" /></Metadata><TypeSignature Language="C#" Value="public class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FirstChanceExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FirstChanceExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FirstChanceExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>マネージド例外が最初に発生したときに発生する通知イベントのデータを、共通言語ランタイムによるイベント ハンドラーの検索が開始される前に提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、例外にアクセスする <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> イベントの例外ハンドラーを提供します。  
  
   
  
## Examples  
 次の例では、`Child_3`を通じて `Child_0` という名前の一連のアプリケーションドメインを作成し、各アプリケーションドメインに `Worker` オブジェクトを作成します。 各 `Worker` オブジェクトには、最後のアプリケーションドメインの `Worker` を除き、次のアプリケーションドメインの `Worker` オブジェクトへの参照があります。 <xref:System.AppDomain.FirstChanceException> イベントは、`Child_1`を除くすべてのアプリケーションドメインで処理されます。  
  
 アプリケーションドメインが作成されると、既定のアプリケーションドメインは、最初の子アプリケーションドメインに対して `TestException` メソッドを呼び出します。 各 `Worker` オブジェクトは、最後の `Worker` が処理または処理されない例外をスローするまで、次の `TestException` メソッドを呼び出します。 したがって、現在のスレッドはすべてのアプリケーションドメインを通過し、`TestException` が各アプリケーションドメインのスタックに追加されます。  
  
 最後の `Worker` オブジェクトが例外を処理するとき、<xref:System.AppDomain.FirstChanceException> イベントは最後のアプリケーションドメインでのみ発生します。 他のアプリケーションドメインは例外を処理する機会を得られないため、イベントは発生しません。  
  
 最後の `Worker` オブジェクトが例外を処理しない場合、イベントハンドラーを持つ各アプリケーションドメインで <xref:System.AppDomain.FirstChanceException> イベントが発生します。 各イベントハンドラーが完了すると、既定のアプリケーションドメインによって例外がキャッチされるまで、スタックは引き続きアンワインドされます。  
  
> [!NOTE]
>  イベントが発生したときにスタックの表示がどのように拡大し、既定のアプリケーションドメインの近くにあるかを確認するには、`e.Exception.Message` を `FirstChanceHandler` イベントハンドラーの `e.Exception` に変更します。 `TestException` がアプリケーションドメインの境界を越えて呼び出されると、2回表示されることに注意してください。1回はプロキシ用、もう1回はスタブ用です。  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.FirstChanceException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FirstChanceExceptionEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FirstChanceExceptionEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs : Exception -&gt; System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" Usage="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">マネージド コードによってスローされ、<see cref="E:System.AppDomain.UnhandledException" /> イベントによって調べられることになる例外。</param>
        <summary>指定した例外を使用して、<see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、アプリケーションコードではなく、共通言語ランタイムによって呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マネージド コードによってスローされる例外に対応するマネージド例外オブジェクト。</summary>
        <value>新しくスローされた例外。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> イベントを処理するメソッドは、例外を調べて、適切なログ記録やその他の通知サービスを実行できます。  
  
 コード例については、「 <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
