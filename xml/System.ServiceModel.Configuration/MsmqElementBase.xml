<Type Name="MsmqElementBase" FullName="System.ServiceModel.Configuration.MsmqElementBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbe96efb06da7a43f02553aa8cf58008a2533dbe" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78752620" /></Metadata><TypeSignature Language="C#" Value="public abstract class MsmqElementBase : System.ServiceModel.Configuration.TransportElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqElementBase extends System.ServiceModel.Configuration.TransportElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.MsmqElementBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqElementBase&#xA;Inherits TransportElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqElementBase abstract : System::ServiceModel::Configuration::TransportElement" />
  <TypeSignature Language="F#" Value="type MsmqElementBase = class&#xA;    inherit TransportElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.TransportElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="db8f1-101"><see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" />および <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" /> に共通のメンバーを持つ基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-101">Provides the base class with members common to the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> and <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqElementBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqElementBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db8f1-102"><see cref="T:System.ServiceModel.Configuration.MsmqElementBase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqElementBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyConfiguration(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ApplyConfiguration (bindingElement As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyConfiguration(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.ApplyConfiguration : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="msmqElementBase.ApplyConfiguration bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement"><span data-ttu-id="db8f1-103">適用する設定を格納するバインド要素。</span><span class="sxs-lookup"><span data-stu-id="db8f1-103">A binding element that contains the settings to be applied.</span></span></param>
        <summary><span data-ttu-id="db8f1-104">このバインド要素の設定を指定したバインド要素に適用します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-104">Applies the settings of this binding element to a specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.ServiceModel.Configuration.ServiceModelExtensionElement from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFrom (from As ServiceModelExtensionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::ServiceModel::Configuration::ServiceModelExtensionElement ^ from);" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.ServiceModel.Configuration.ServiceModelExtensionElement -&gt; unit" Usage="msmqElementBase.CopyFrom from" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.ServiceModel.Configuration.ServiceModelExtensionElement" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="db8f1-105">コピーする値を格納している <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-105">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> that contains the values to be copied.</span></span></param>
        <summary><span data-ttu-id="db8f1-106">指定した <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> からこのバインディング要素に設定をコピーします。</span><span class="sxs-lookup"><span data-stu-id="db8f1-106">Copies settings from a specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to this binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomDeadLetterQueue : Uri with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customDeadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-107">アプリケーションごとの配信不能キューの場所が含まれている URI を取得または設定します。この URI には、期限切れのメッセージや、転送または配信に失敗したメッセージが配置されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-107">Gets or sets a URI that contains the location of the per-application dead-letter queue, where messages that have expired or that have failed transfer or delivery are placed.</span></span></summary>
        <value><span data-ttu-id="db8f1-108">アプリケーションごとの配信不能キューの位置を格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-108">The <see cref="T:System.Uri" /> that contains the location of the per-application dead-letter queue.</span></span> <span data-ttu-id="db8f1-109">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-109">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-110">配信不能キューは、配信に失敗した期限切れメッセージに対する送信元アプリケーションのキュー マネージャーのキューです。</span><span class="sxs-lookup"><span data-stu-id="db8f1-110">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</span></span>  
  
 <span data-ttu-id="db8f1-111"><xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> によって指定される URI は、Net.msmq スキームを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-111">The URI that is specified by <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must use the Net.msmq scheme.</span></span>  
  
 <span data-ttu-id="db8f1-112"><xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> が <xref:System.ServiceModel.DeadLetterQueue.None> または <xref:System.ServiceModel.DeadLetterQueue.System> に設定されている場合は、<xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> を `null` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-112">If <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue.None> or <xref:System.ServiceModel.DeadLetterQueue.System>, then <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must be set to `null`.</span></span> <span data-ttu-id="db8f1-113"><xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> が `null` ではない場合は、<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> を <xref:System.ServiceModel.DeadLetterQueue.Custom> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-113">If <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is not `null`, then <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue.Custom>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberSignature Language="F#" Value="member this.DeadLetterQueue : System.ServiceModel.DeadLetterQueue with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("deadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-114">使用する配信不能キューの型を指定する列挙値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-114">Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</span></span></summary>
        <value><span data-ttu-id="db8f1-115">使用する配信不能キューの型を指定する <see cref="T:System.ServiceModel.DeadLetterQueue" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="db8f1-115">A <see cref="T:System.ServiceModel.DeadLetterQueue" /> enumeration value that indicates the type of dead-letter queue to use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-116">配信不能キューは、配信に失敗した期限切れメッセージに対する送信元アプリケーションのキュー マネージャーのキューです。</span><span class="sxs-lookup"><span data-stu-id="db8f1-116">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</span></span> <span data-ttu-id="db8f1-117">使用する配信不能キューの型を指定する配信不能キュー列挙体。</span><span class="sxs-lookup"><span data-stu-id="db8f1-117">The dead-letter queue enumeration specifies the type of dead-letter queue to use.</span></span> <span data-ttu-id="db8f1-118">値は、次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="db8f1-118">The values are:</span></span>  
  
-   <span data-ttu-id="db8f1-119">None: 配信不能キューが必要でない場合。</span><span class="sxs-lookup"><span data-stu-id="db8f1-119">None: If no dead-letter queue is required.</span></span> <span data-ttu-id="db8f1-120">したがって、メッセージの配信に失敗した場合、そのメッセージのレコードは配信不能キュー内では維持されません。</span><span class="sxs-lookup"><span data-stu-id="db8f1-120">Thus, if a message were to fail delivery, no record of it would be maintained in the dead-letter queue.</span></span> <span data-ttu-id="db8f1-121">これは、<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> を `false` に設定した場合の既定値です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-121">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="db8f1-122">System: 配信に失敗したメッセージの記録に、システム全体をスコープとする配信不能キューが使用されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-122">System: The system-wide dead-letter queue would be used to record messages that fail delivery.</span></span> <span data-ttu-id="db8f1-123">メッセージ キュー (MSMQ とも呼ばれる) にはトランザクション システム配信不能キューおよび非トランザクション システム配信不能キューがあり、それぞれトランザクション キューからの配信に失敗したメッセージおよび非トランザクション キューからの配信に失敗したメッセージを記録します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-123">Message Queuing (also known as MSMQ) has a transactional system dead-letter queue and a nontransactional system dead-letter queue to record messages that failed delivery from transactional and nontransactional queues, respectively.</span></span> <span data-ttu-id="db8f1-124">これは、<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> を `true` に設定した場合の既定値です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-124">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="db8f1-125">Custom: <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> で指定されたキューが、配信に失敗したメッセージの記録に使用されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-125">Custom: The queue specified in the <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is used to record messages that fail delivery.</span></span>  
  
 <span data-ttu-id="db8f1-126">メッセージが受信側のアプリケーションに到達できなかった理由としては、次のようなものがあります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-126">The reasons that a message can fail to reach the receiving application include:</span></span>  
  
-   <span data-ttu-id="db8f1-127">トランザクション メッセージが、非トランザクション キューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-127">A transactional message is sent to a nontransactional queue.</span></span>  
  
-   <span data-ttu-id="db8f1-128">非トランザクション メッセージが、トランザクション キューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-128">A nontransactional message is sent to a transactional queue.</span></span>  
  
-   <span data-ttu-id="db8f1-129">認証されていないメッセージが、認証されたメッセージだけを受け取るキューに送信されています。</span><span class="sxs-lookup"><span data-stu-id="db8f1-129">An unauthenticated message is sent to a queue that accepts only authenticated messages.</span></span>  
  
-   <span data-ttu-id="db8f1-130">暗号化されていないメッセージが、暗号化されているメッセージだけを受け入れるキューに送信されている。</span><span class="sxs-lookup"><span data-stu-id="db8f1-130">An unencrypted message is sent to a queue that accepts only encrypted messages.</span></span>  
  
-   <span data-ttu-id="db8f1-131">受信側に配信される前にメッセージの期限が切れました。</span><span class="sxs-lookup"><span data-stu-id="db8f1-131">The message expires before the message is delivered to a receiver.</span></span>  
  
-   <span data-ttu-id="db8f1-132">ターゲット コンピューターのメッセージ ストレージ クォータ、または送信先のキューのストレージ クォータを超えているか、メッセージが到達したときにターゲット コンピューターに使用可能なストレージ スペースがありませんでした。</span><span class="sxs-lookup"><span data-stu-id="db8f1-132">The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</span></span>  
  
-   <span data-ttu-id="db8f1-133">送信者には、送信先のキューにメッセージを配置するために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="db8f1-133">The sender does not have the access rights needed to place the message in the destination queue.</span></span>  
  
-   <span data-ttu-id="db8f1-134">メッセージに結び付けられているデジタル署名が無効です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-134">The digital signature attached to the message is not valid.</span></span>  
  
-   <span data-ttu-id="db8f1-135">暗号化されたメッセージを送信先キュー マネージャーが解読できない。</span><span class="sxs-lookup"><span data-stu-id="db8f1-135">An encrypted message cannot be decrypted by the destination queue manager.</span></span>  
  
-   <span data-ttu-id="db8f1-136">送信先のキューは、メッセージが取得される前に完全削除または削除されています。</span><span class="sxs-lookup"><span data-stu-id="db8f1-136">The destination queue is purged or deleted before the message is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Durable : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.Durable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("durable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-137">このバインディングによって処理されるメッセージが永続的なものか不安定なものかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-137">Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</span></span></summary>
        <value><span data-ttu-id="db8f1-138">このバインディングによって処理されたメッセージが非揮発性の場合は <see langword="true" />。揮発性の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-138"><see langword="true" /> if the messages processed by this binding are durable; <see langword="false" /> if they are volatile.</span></span> <span data-ttu-id="db8f1-139">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-139">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-140">非揮発性メッセージは、キュー マネージャーがクラッシュしても残り、揮発性メッセージは失われます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-140">A durable message survives a queue manager crash, while a volatile message does not.</span></span> <span data-ttu-id="db8f1-141">揮発性メッセージは、アプリケーションで、ときにはメッセージが失われてもかまわない場合に適しています。</span><span class="sxs-lookup"><span data-stu-id="db8f1-141">Volatile messages are useful when applications can tolerate occasional lost messages.</span></span>  
  
 <span data-ttu-id="db8f1-142"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> が `true` に設定されている場合、メッセージは非揮発性である必要があります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-142">If <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`, the messages must be durable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExactlyOnce : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("exactlyOnce", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-143">このバインディングで処理されるメッセージが正確に 1 回だけ受信されるかどうかを示すブール値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-143">Gets or sets a Boolean value that indicates whether messages processed by this binding will be received exactly once.</span></span></summary>
        <value><span data-ttu-id="db8f1-144">このバインディングによって処理されるメッセージが 1 回だけ受信される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-144"><see langword="true" /> if messages processed by this binding will be received exactly once; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="db8f1-145">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-145">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-146">メッセージは、保証付きまたは保証なしで送信できます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-146">A message can be sent with or without assurances.</span></span> <span data-ttu-id="db8f1-147">保証により、アプリケーションは、送信したメッセージが受信メッセージ キューに到達したことを確認できます。到達しなかった場合、アプリケーションは、配信不能キューを読み取ることでそれを判断できます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-147">An assurance enables an application to ensure that a sent message reached the receiving message queue, or if it did not, the application can determine this by reading the dead-letter queue.</span></span>  
  
 <span data-ttu-id="db8f1-148"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> を `true` に設定して送信されるメッセージを、トランザクション キューだけに送信する必要があります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-148">Messages sent with <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> set to `true` must be sent only to a transactional queue.</span></span>  
  
 <span data-ttu-id="db8f1-149"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>、`true`に設定すると、メッセージキュー (MSMQ とも呼ばれます) は、送信されたメッセージが受信メッセージキューに1回だけ配信されることを確認します。配信に失敗すると、メッセージは配信不能キューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-149"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>, when set to `true`, indicates that Message Queuing (also known as MSMQ) will ensure that a sent message is delivered to the receiving message queue once and only once, and if delivery fails, the message is sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="db8f1-150"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> を `false` に設定する必要があるメッセージの場合、<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> プロパティは既定で `null` になります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-150">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `false`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to `null`.</span></span>  
  
 <span data-ttu-id="db8f1-151"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> を `true`する必要があるメッセージの場合、<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> プロパティの既定値は、メッセージキューのトランザクションシステム全体の配信不能キューです。</span><span class="sxs-lookup"><span data-stu-id="db8f1-151">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `true`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to a transactional system-wide dead-letter queue in Message Queuing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub InitializeFrom (bindingElement As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.InitializeFrom : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="msmqElementBase.InitializeFrom bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement"><span data-ttu-id="db8f1-152">このバインド要素の初期化に使用される設定を格納しているバインド要素。</span><span class="sxs-lookup"><span data-stu-id="db8f1-152">A binding element that contains the settings to be used to initialize this binding element.</span></span></param>
        <summary><span data-ttu-id="db8f1-153">このバインド要素を、指定されたバインド要素の内容で初期化します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-153">Initializes this binding element with the content from the specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRetryCycles : int with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxRetryCycles", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-154">受信アプリケーションにメッセージを配信する再試行サイクルの最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-154">Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</span></span></summary>
        <value><span data-ttu-id="db8f1-155">アプリケーションにメッセージを配信する再試行サイクルの最大数を指定する整数。</span><span class="sxs-lookup"><span data-stu-id="db8f1-155">An integer that indicates the maximum number of retry cycles to attempt delivery of messages to the application.</span></span> <span data-ttu-id="db8f1-156">既定値は 2 です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-156">The default value is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-157">1 回の再試行サイクルで、アプリケーションに、指定された回数のメッセージ配信を試みます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-157">A single retry cycle attempts to deliver a message to an application a specified number of times.</span></span> <span data-ttu-id="db8f1-158">試行回数は、<xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> プロパティで設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-158">The number of attempts made is set by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="db8f1-159">配信を指定された回数試行してもアプリケーションがメッセージを処理できない場合、メッセージは、再試行キューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-159">If the application fails to consume the message after the attempts at delivery have been exhausted, the message is sent to a retry queue.</span></span> <span data-ttu-id="db8f1-160">その後の再試行サイクルでは、<xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> プロパティで指定された遅延時間が経過した後、メッセージが再試行キューからアプリケーション キューに戻され、再度アプリケーションへの配信が試行されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-160">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property.</span></span> <span data-ttu-id="db8f1-161"><xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> プロパティは、アプリケーションがメッセージ配信に使用する再試行サイクル数を指定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-161">The <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property specifies the number of retry cycles that the application uses to attempt to deliver the message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MsmqTransportSecurity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MsmqTransportSecurity As MsmqTransportSecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::MsmqTransportSecurityElement ^ MsmqTransportSecurity { System::ServiceModel::Configuration::MsmqTransportSecurityElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MsmqTransportSecurity : System.ServiceModel.Configuration.MsmqTransportSecurityElement" Usage="System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("msmqTransportSecurity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.MsmqTransportSecurityElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-162">バインディングのトランスポートのセキュリティ設定をカプセル化する <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-162">Gets an <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> instance that encapsulates the transport security settings for a binding.</span></span></summary>
        <value><span data-ttu-id="db8f1-163">バインディングのトランスポートのセキュリティ設定をカプセル化する <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="db8f1-163">An <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> instance that encapsulates the transport security settings for a binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Configuration.MsmqElementBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-164"><see cref="T:System.Configuration.ConfigurationPropertyCollection" /> オブジェクトのコレクションが格納されている <see cref="T:System.Configuration.ConfigurationProperty" /> インスタンスを取得します。オブジェクトは、この構成要素の属性または <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="db8f1-164">Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></summary>
        <value><span data-ttu-id="db8f1-165"><see cref="T:System.Configuration.ConfigurationPropertyCollection" /> オブジェクトのコレクションが格納されている <see cref="T:System.Configuration.ConfigurationProperty" /> インスタンス。オブジェクトは、このバインド構成要素の属性または <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="db8f1-165">A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this binding configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("receiveContextEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-166">キュー内のメッセージを処理するための受信コンテキストが有効になっているかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-166">Gets or sets a value that specifies if receive context for processing messages in queues is enabled.</span></span></summary>
        <value><span data-ttu-id="db8f1-167">キュー内のメッセージを処理するための受信コンテキストが有効になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-167"><see langword="true" /> if receive context for processing messages in queues is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-168">これを `true`すると、サービスはキューにあるメッセージを "ピーク" して処理を開始することができます。問題が発生して例外がスローされた場合は、キューに残ります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-168">When this is `true`, a service can "peek" a message on the queue to begin processing it, and, if anything goes wrong and an exception is thrown, it remains on the queue.</span></span> <span data-ttu-id="db8f1-169">また、サービスは、後で処理を再試行するためにメッセージを "ロック" することもできます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-169">Services can also "lock" messages in order to retry processing at a later point in time.</span></span> <span data-ttu-id="db8f1-170">ReceiveContext には、処理されたメッセージを "完了" してキューから削除できるようにするメカニズムが用意されています。</span><span class="sxs-lookup"><span data-stu-id="db8f1-170">ReceiveContext provides a mechanism for "completing" the message once processed so it can be removed from the queue.</span></span> <span data-ttu-id="db8f1-171">ネットワーク上のキューへのメッセージの読み取りと再書き込みは行われなくなり、個々のメッセージは処理中に異なるサービスインスタンス間でバウンスされることはありません。</span><span class="sxs-lookup"><span data-stu-id="db8f1-171">Messages are no longer being read and re-written to queues over the network, and individual messages aren't bouncing across different service instances during processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveErrorHandling : System.ServiceModel.ReceiveErrorHandling with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveErrorHandling", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-172">有害メッセージおよびディスパッチ不能メッセージの処理方法を指定する列挙値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-172">Gets or sets an enumeration value that specifies how poison and nondispatchable messages are handled.</span></span></summary>
        <value><span data-ttu-id="db8f1-173">有害メッセージおよびディスパッチ不能メッセージの処理方法を指定する <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 値。</span><span class="sxs-lookup"><span data-stu-id="db8f1-173">A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and nondispatchable messages are handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-174">このプロパティが <xref:System.ServiceModel.ReceiveErrorHandling.Fault> に設定されている場合、チャネル リスナーでエラーが発生し、<xref:System.ServiceModel.ProtocolException> (<xref:System.ServiceModel.MsmqPoisonMessageException> をラップ) がトレースおよびスローされます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-174">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, the channel listener is faulted and a <xref:System.ServiceModel.ProtocolException> (wrapping a <xref:System.ServiceModel.MsmqPoisonMessageException>) is traced and thrown.</span></span> <span data-ttu-id="db8f1-175">害のあるメッセージはキューに残されるので、手動で削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-175">The offending message is left in the queue and needs to be removed by some manual method.</span></span> <span data-ttu-id="db8f1-176"><xref:System.ServiceModel.MsmqPoisonMessageException> は、<xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> を格納します。これを使用して、害のあるメッセージを識別し、それを有害メッセージ キューから手動で削除できます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-176">The <xref:System.ServiceModel.MsmqPoisonMessageException> contains a <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> that can be used to identify and manually remove the offending message from the poison-message queue.</span></span>  
  
 <span data-ttu-id="db8f1-177">このプロパティが <xref:System.ServiceModel.ReceiveErrorHandling.Drop> に設定されている場合、害のあるメッセージは、単に削除されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-177">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, the offending message is simply dropped.</span></span>  
  
 <span data-ttu-id="db8f1-178">このプロパティが <xref:System.ServiceModel.ReceiveErrorHandling.Reject> に設定されている場合は、否定応答がクライアントに送信され、害のあるメッセージが有害メッセージ キューから削除されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-178">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, a negative acknowledgment is sent to the client and the offending message is removed from the poison-message queue.</span></span> <span data-ttu-id="db8f1-179">このオプションは、メッセージ キュー (MSMQ とも呼ばれる) 4.0 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-179">This option is available only on Message Queuing (also known as MSMQ) 4.0.</span></span>  
  
 <span data-ttu-id="db8f1-180"><xref:System.ServiceModel.ReceiveErrorHandling.Move> に設定されている場合、害のあるメッセージは、最後に存在する有害サブキューに移動されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-180">When set to <xref:System.ServiceModel.ReceiveErrorHandling.Move>, the offending message is moved to the final poison subqueue.</span></span> <span data-ttu-id="db8f1-181">このオプションは、メッセージ キュー 4.0 でのみ利用できます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-181">This option is available only on Message Queuing 4.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveRetryCount : int with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveRetryCount", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-182">キュー マネージャーがメッセージを再試行キューに転送する前にメッセージ送信を試行する最大回数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-182">Gets or sets the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue.</span></span></summary>
        <value><span data-ttu-id="db8f1-183">キュー マネージャーがメッセージを再試行キューに転送する前にメッセージ送信を試行する必要がある場合に最大回数を指定する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="db8f1-183">A 32-bit signed integer that specifies the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-184">配信試行を最大回数実行してもアプリケーションでメッセージを利用できない場合、メッセージは、後で再配信するために再試行キューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-184">If the maximum number of delivery attempts is reached and the message is not consumed by the application, then the message is sent to a retry queue for redelivery at some later point in time.</span></span> <span data-ttu-id="db8f1-185">メッセージが送信キューに戻されるまでの時間は、<xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A> で制御されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-185">The amount of time before the message is transferred back to the sending queue is controlled by <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span> <span data-ttu-id="db8f1-186">再試行サイクルが <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 値に達した場合は、メッセージが有害メッセージ キューに送信されるか、送信者に否定応答が返されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-186">If retry cycles reach the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> value, then either the message is sent to the poison-message queue, or a negative acknowledgment is sent back to the sender.</span></span>  
  
 <span data-ttu-id="db8f1-187">詳細については、「<xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A>」および「<xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="db8f1-187">For more information, see <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RetryCycleDelay : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("retryCycleDelay", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-188">すぐに配信できなかったメッセージを配信しようとするときの、再試行サイクルの時間遅延を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-188">Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that could not be delivered immediately.</span></span></summary>
        <value><span data-ttu-id="db8f1-189">受信アプリケーションへの次の配信試行サイクルを開始するまでの待機期間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-189">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</span></span> <span data-ttu-id="db8f1-190">既定値は "00:10:00" です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-190">The default value is "00:10:00".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-191">1 回の再試行サイクルで、受信アプリケーションに、メッセージ配信を指定回試みます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-191">A single retry cycle attempts to deliver a message to a receiving application a specified number of times.</span></span> <span data-ttu-id="db8f1-192">試行回数は、<xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> プロパティで指定されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-192">The number of attempts made is specified by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="db8f1-193">即時試行を指定された回数実行してもアプリケーションがメッセージを処理できない場合、メッセージは再試行キューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-193">If the application fails to consume the message after the specified number of immediate retries, the message is sent to a retry queue.</span></span> <span data-ttu-id="db8f1-194">その後の再試行サイクルでは、<xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> プロパティで指定された遅延時間が経過した後、メッセージが再試行キューからアプリケーション キューに戻され、再度アプリケーションへの配信が試行されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-194">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property.</span></span> <span data-ttu-id="db8f1-195">再試行サイクル数は、<xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-195">The number of retry cycles is specified by the <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeToLive", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-196">このバインドで処理されるメッセージの期限が切れるまで、キュー内で保持する期間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-196">Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</span></span></summary>
        <value><span data-ttu-id="db8f1-197">メッセージの期限が切れるまでのキュー内での保持期間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-197">The <see cref="T:System.TimeSpan" /> that indicates how long the messages can be in the queue before they expire.</span></span> <span data-ttu-id="db8f1-198">既定値は 1 日 (01:00:00:00) です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-198">The default value is one day (01:00:00:00).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-199"><xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> プロパティは、時間が重要なメッセージが、受信アプリケーションで処理される前に期限切れにならないように設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-199">The <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> property is set to ensure that time-sensitive messages do not become stale before they are processed by the receiving applications.</span></span> <span data-ttu-id="db8f1-200">キュー内のメッセージのうち、指定された期間内に受信アプリケーションで処理されなかったメッセージは、期限切れと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-200">A message in a queue that is not consumed by the receiving application within the time interval specified is said to be expired.</span></span> <span data-ttu-id="db8f1-201">期限切れのメッセージは、配信不能キューと呼ばれる特別なキューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-201">Expired messages are sent to a special queue called the dead-letter queue.</span></span> <span data-ttu-id="db8f1-202">配信不能キューの場所は、<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> プロパティで設定されるか、保証に基づく適切な既定値となります。</span><span class="sxs-lookup"><span data-stu-id="db8f1-202">The location of the dead-letter queue is set with the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property or to the appropriate default, based on assurances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMsmqTracing : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useMsmqTracing", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-203">このバインディングにより処理されるメッセージをトレースするかどうかを示すブール値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-203">Gets or sets a Boolean value that indicates whether messages processed by this binding should be traced.</span></span></summary>
        <value><span data-ttu-id="db8f1-204">このバインディングによって処理されるメッセージをトレースする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-204"><see langword="true" /> if messages processed by this binding should be traced; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="db8f1-205">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-205">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-206">トレースが有効な場合、メッセージ キュー (MSMQ とも呼ばれる) を実行しているコンピューターでメッセージが送受信されるたびに、レポート メッセージが作成され、レポート キューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-206">When tracing is enabled, report messages are created and sent to the report queue each time the message leaves or arrives at a computer running Message Queuing (also known as MSMQ).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSourceJournal : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useSourceJournal", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-207">このバインディングにより処理されるメッセージのコピーをソース ジャーナル キューに保存するかどうかを示すブール値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-207">Gets or sets a Boolean value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</span></span></summary>
        <value><span data-ttu-id="db8f1-208">このバインディングによって処理されるメッセージのコピーをソース ジャーナル キューに格納する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="db8f1-208"><see langword="true" /> if copies of messages processed by this binding should be stored in the source journal queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="db8f1-209">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="db8f1-209">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8f1-210">キューに置かれたアプリケーションでは、コンピューターの発信キューから送信されたメッセージの記録を残す場合、メッセージをジャーナル キューにコピーできます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-210">Queued applications that must keep a record of messages that have left the computer's outgoing queue can copy the messages to a journal queue.</span></span> <span data-ttu-id="db8f1-211">メッセージが発信キューから送信され、送信先のコンピューターで受信されたという応答を受け取ると、メッセージのコピーが送信元のコンピューターのシステム ジャーナル キューに保持されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-211">Once a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ValidityDuration : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("validityDuration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8f1-212">キューに置かれたチャネルで使用する接続タイムアウトを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="db8f1-212">Gets or sets a value that specifies a connection time-out when used with queued channels.</span></span></summary>
        <value><span data-ttu-id="db8f1-213">キューに置かれたチャネルで使用された場合の接続タイムアウト。</span><span class="sxs-lookup"><span data-stu-id="db8f1-213">A connection time-out when used with queued channels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="db8f1-214">メッセージについて <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> が期限切れになった場合、トランザクション中に期限切れが発生すると、ワークフロー インスタンスと共に、メッセージの処理に使用される可能性があるトランザクションが中止されます。</span><span class="sxs-lookup"><span data-stu-id="db8f1-214">If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
