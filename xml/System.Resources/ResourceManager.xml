<Type Name="ResourceManager" FullName="System.Resources.ResourceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4541c51c7959eb7d8042a8f4e66345f49f62bc15" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76945352" /></Metadata><TypeSignature Language="C#" Value="public class ResourceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceManager" />
  <TypeSignature Language="F#" Value="type ResourceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-1.0;netstandard-1.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netcore-3.1;netcore-1.0;netcore-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="086cf-101">実行時にカルチャ固有のリソースにアクセスする便利な手段を提供するリソース マネージャーを表します。</span><span class="sxs-lookup"><span data-stu-id="086cf-101">Represents a resource manager that provides convenient access to culture-specific resources at run time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="086cf-102"><xref:System.Resources.ResourceManager> クラスは、アセンブリに埋め込まれているバイナリ .resources ファイル、または、スタンドアロンの .resources ファイルからリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-102">The <xref:System.Resources.ResourceManager> class retrieves resources from a binary .resources file that is embedded in an assembly or from a standalone .resources file.</span></span> <span data-ttu-id="086cf-103">アプリがローカライズされ、ローカライズされたリソースが[サテライト アセンブリ](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md)に配置されているなら、アプリは、カルチャ固有のリソースを検索し、ローカライズされたリソースが存在しない場合は、リソース フォールバックを提供します。また、リソースのシリアル化をサポートします。</span><span class="sxs-lookup"><span data-stu-id="086cf-103">If an app has been localized and localized resources have been deployed in [satellite assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), it looks up culture-specific resources, provides resource fallback when a localized resource does not exist, and supports resource serialization.</span></span>  
  
 <span data-ttu-id="086cf-104">デスクトップ アプリや [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでのリソース作成および管理の詳細については、次のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-104">For more information about creating and managing resources in desktop apps and [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, see the following sections:</span></span>  
  
-   [<span data-ttu-id="086cf-105">デスクトップアプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-105">Desktop Apps</span></span>](#desktop)  
  
    -   [<span data-ttu-id="086cf-106">リソースの作成</span><span class="sxs-lookup"><span data-stu-id="086cf-106">Creating Resources</span></span>](#creating_resources)  
  
    -   [<span data-ttu-id="086cf-107">ResourceManager オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="086cf-107">Instantiating a ResourceManager Object</span></span>](#instantiating)  
  
    -   [<span data-ttu-id="086cf-108">ResourceManager とカルチャ固有のリソース</span><span class="sxs-lookup"><span data-stu-id="086cf-108">ResourceManager and Culture-Specific Resources</span></span>](#CultureSpecific)  
  
    -   [<span data-ttu-id="086cf-109">リソースの取得</span><span class="sxs-lookup"><span data-stu-id="086cf-109">Retrieving Resources</span></span>](#retrieving)  
  
    -   [<span data-ttu-id="086cf-110">MissingManifestResourceException と MissingSatelliteAssemblyException の例外の処理</span><span class="sxs-lookup"><span data-stu-id="086cf-110">Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions</span></span>](#exception)  
  
    -   [<span data-ttu-id="086cf-111">リソースのバージョン管理</span><span class="sxs-lookup"><span data-stu-id="086cf-111">Resource Versioning</span></span>](#versioning)  
  
    -   [<span data-ttu-id="086cf-112">\<satelliteassemblies> 構成ファイルのノード</span><span class="sxs-lookup"><span data-stu-id="086cf-112">\<satelliteassemblies> Configuration File Node</span></span>](#config)  
  
-   [<span data-ttu-id="086cf-113">Windows ストアアプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-113">Windows Store Apps</span></span>](#ws)  
  
<a name="desktop"></a>   
## <a name="desktop-apps"></a><span data-ttu-id="086cf-114">デスクトップアプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-114">Desktop Apps</span></span>  
 <span data-ttu-id="086cf-115">デスクトップ アプリの場合、<xref:System.Resources.ResourceManager> クラスは、バイナリ リソース (.resources) ファイルからリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-115">For desktop apps, the <xref:System.Resources.ResourceManager> class retrieves resources from binary resource (.resources) files.</span></span> <span data-ttu-id="086cf-116">通常は、言語コンパイラか[アセンブリ リンカー (AL.exe)](~/docs/framework/tools/al-exe-assembly-linker.md) がアセンブリにこれらのリソース ファイルを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-116">Typically, a language compiler or the  [Assembly Linker (AL.exe)](~/docs/framework/tools/al-exe-assembly-linker.md) embeds these resource files in an assembly.</span></span> <span data-ttu-id="086cf-117"><xref:System.Resources.ResourceManager> メソッドを呼び出すことによって、<xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> オブジェクトを使用して、アセンブリに埋め込まれていない .resources ファイルからリソースを直接取得できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-117">You can also use a <xref:System.Resources.ResourceManager> object to retrieve resources directly from a .resources file that is not embedded in an assembly, by calling the <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086cf-118">ASP.NET アプリでスタンドアロン .resources ファイルを使用すると、XCOPY による配置が中断されます。<xref:System.Resources.ResourceManager.ReleaseAllResources%2A> メソッドによって明示的に解放されるまで、リソースがロックされたままになるためです。</span><span class="sxs-lookup"><span data-stu-id="086cf-118">Using standalone .resources files in an ASP.NET app will break XCOPY deployment, because the resources remain locked until they are explicitly released by the <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> method.</span></span> <span data-ttu-id="086cf-119">ASP.NET アプリでリソースを配置する場合は、サテライト アセンブリに .resources ファイルをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-119">If you want to deploy resources with your ASP.NET apps, you should compile your .resources files into satellite assemblies.</span></span>  
  
 <span data-ttu-id="086cf-120">リソース ベースのアプリでは、1 つの .resources ファイルは既定のカルチャのリソースを含んでいます。そのリソースは、カルチャ固有のリソースが見つからない場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-120">In a resource-based app, one .resources file contains the resources of the default culture whose resources are used if no culture-specific resources can be found.</span></span> <span data-ttu-id="086cf-121">たとえば、アプリの既定のカルチャが英語 (en) の場合は、英語 (米国) (en-US) やフランス語 (フランス) (fr-FR) などの、特定のカルチャに対してローカライズされたリソースが見つからないときに、英語の言語リソースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-121">For example, if an app's default culture is English (en), the English language resources are used whenever localized resources cannot be found for a specific culture, such as English (United States) (en-US) or French (France) (fr-FR).</span></span> <span data-ttu-id="086cf-122">通常は、既定のカルチャのリソースはメイン アプリ アセンブリに埋め込まれ、他のローカライズされたリソースはサテライト アセンブリに埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="086cf-122">Typically, the resources for the default culture are embedded in the main app assembly, and resources for other localized cultures are embedded in satellite assemblies.</span></span> <span data-ttu-id="086cf-123">サテライト アセンブリはリソースのみを含みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-123">Satellite assemblies contain only resources.</span></span> <span data-ttu-id="086cf-124">サテライト アセンブリは、メイン アセンブリと同じルート ファイル名と、resources.dll の拡張子を持ちます。</span><span class="sxs-lookup"><span data-stu-id="086cf-124">They have the same root file name as the main assembly and an extension of .resources.dll.</span></span> <span data-ttu-id="086cf-125">アプリのアセンブリがグローバル アセンブリ キャッシュに登録されていない場合は、サテライト アセンブリは、アセンブリのカルチャに対応する名前を持つ、アプリのサブディレクトリに格納されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-125">For apps whose assemblies are not registered in the global assembly cache, satellite assemblies are stored in an app subdirectory whose name corresponds to the assembly's culture.</span></span>  
  
<a name="creating_resources"></a>   
### <a name="creating-resources"></a><span data-ttu-id="086cf-126">リソースの作成</span><span class="sxs-lookup"><span data-stu-id="086cf-126">Creating Resources</span></span>  
 <span data-ttu-id="086cf-127">リソース ベースのアプリを開発する際は、テキスト ファイル (.txt か .restext 拡張子を持つファイル) または XML ファイル (.resx 拡張子を持つファイル) にリソース情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="086cf-127">When you develop a resource-based app, you store resource information in text files (files that have a .txt or .restext extension) or XML files (files that have a .resx extension).</span></span> <span data-ttu-id="086cf-128">それから[リソース ファイル ジェネレーター (Resgen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) を使用して、テキスト ファイルまたは XML ファイルをコンパイルし、バイナリ .resources ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-128">You then compile the text or XML files with the  [Resource File Generator (Resgen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) to create a binary .resources file.</span></span> <span data-ttu-id="086cf-129">C# や Visual Basic コンパイラにおける `/resources` のようなコンパイラ オプションを使用して、作成した .resources ファイルを実行可能ファイルまたはライブラリに埋め込むことができます。または、アセンブリ リンカー (Al.exe) を使用して、サテライト アセンブリに埋め込むことができます。</span><span class="sxs-lookup"><span data-stu-id="086cf-129">You can then embed the resulting .resources file in an executable or library by using a compiler option such as `/resources` for the C# and Visual Basic compilers, or you can embed it in a satellite assembly by using the .</span></span> <span data-ttu-id="086cf-130">Visual Studio プロジェクトに .resx ファイルを含めると、Visual Studio はビルド プロセスの一部として、既定のリソースとローカライズされたリソースのコンパイルおよび埋め込みを自動的に処理します。</span><span class="sxs-lookup"><span data-stu-id="086cf-130">If you include a .resx file in your Visual Studio project, Visual Studio handles the compilation and embedding of default and localized resources automatically as part of the build process.</span></span>  
  
 <span data-ttu-id="086cf-131">理想的には、アプリがサポートするすべての言語か、少なくとも各言語で意味をなすサブセットに対して、リソースを作成してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-131">Ideally, you should create resources for every language your app supports, or at least for a meaningful subset of each language.</span></span> <span data-ttu-id="086cf-132">バイナリ .resources ファイルの名前は、*basename*.*cultureName*.resources の名前付け規則に従います。ここで *basename* は、必要な詳細のレベルに応じて、アプリの名前またはクラスの名前になります。</span><span class="sxs-lookup"><span data-stu-id="086cf-132">The binary .resources file names follow the naming convention *basename*.*cultureName*.resources, where *basename* is the name of the app or the name of a class, depending on the level of detail you want.</span></span> <span data-ttu-id="086cf-133"><xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>cultureName *を判断するには、* プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-133">The <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> property is used to determine *cultureName*.</span></span> <span data-ttu-id="086cf-134">アプリの既定のカルチャのリソースには、*basename*.resources の名前をつけてください。</span><span class="sxs-lookup"><span data-stu-id="086cf-134">A resource for the app's default culture should be named *basename*.resources.</span></span>  
  
 <span data-ttu-id="086cf-135">たとえば、ベースの名前に MyResources を持つリソース ファイルにいくつかのリソースが含まれているアセンブリを想定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-135">For example, suppose that an assembly has several resources in a resource file that has the base name MyResources.</span></span> <span data-ttu-id="086cf-136">これらのリソース ファイルは、日本 (日本語) のカルチャには MyResources.ja-JP.resources、ドイツのカルチャには MyResources.de.resources、簡体中国語のカルチャには MyResources.zh-CHS.resources、フランス語 (ベルギー) のカルチャには MyResources.fr-BE.resources、などの名前を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-136">These resource files should have names such as MyResources.ja-JP.resources for the Japan (Japanese) culture, MyResources.de.resources for the German culture, MyResources.zh-CHS.resources for the simplified Chinese culture, and MyResources.fr-BE.resources for the French (Belgium) culture.</span></span> <span data-ttu-id="086cf-137">既定のリソース ファイルは MyResources.resources の名前を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-137">The default resource file should be named MyResources.resources.</span></span> <span data-ttu-id="086cf-138">通常は、カルチャ固有のリソース ファイルは、カルチャごとにサテライト アセンブリにパッケージ化されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-138">The culture-specific resource files are commonly packaged in satellite assemblies for each culture.</span></span> <span data-ttu-id="086cf-139">既定のリソース ファイルは、アプリのメイン アセンブリに埋め込まれる必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-139">The default resource file should be embedded in the app's main assembly.</span></span>  
  
 <span data-ttu-id="086cf-140">[アセンブリリンカー](~/docs/framework/tools/al-exe-assembly-linker.md)では、リソースをプライベートとしてマークすることができますが、他のアセンブリからアクセスできるようにするには、常にパブリックとしてマークする必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-140">Note that [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) allows resources to be marked as private, but you should always mark them as public so they can be accessed by other assemblies.</span></span> <span data-ttu-id="086cf-141">(サテライト アセンブリはコードを含まないため、プライベートとしてマークされたリソースは、どんな方法を使ってもアプリで使用できません。)</span><span class="sxs-lookup"><span data-stu-id="086cf-141">(Because a satellite assembly contains no code, resources that are marked as private are unavailable to your app through any mechanism.)</span></span>  
  
 <span data-ttu-id="086cf-142">リソースの作成、パッケージ化、および、配置の詳細については、[リソース ファイルの作成](~/docs/framework/resources/creating-resource-files-for-desktop-apps.md)、[サテライト アセンブリの作成](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md)、[リソースのパッケージ化と配置](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)の記事を参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-142">For more information about creating, packaging, and deploying resources, see the articles [Creating Resource Files](~/docs/framework/resources/creating-resource-files-for-desktop-apps.md), [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
<a name="instantiating"></a>   
### <a name="instantiating-a-resourcemanager-object"></a><span data-ttu-id="086cf-143">ResourceManager オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="086cf-143">Instantiating a ResourceManager Object</span></span>  
 <span data-ttu-id="086cf-144">埋め込まれた .resources ファイルからリソースを取得する <xref:System.Resources.ResourceManager> オブジェクトのインスタンス化は、それのクラス コンストラクターのオーバーロードの 1 つを呼び出すことによって行います。</span><span class="sxs-lookup"><span data-stu-id="086cf-144">You instantiate a <xref:System.Resources.ResourceManager> object that retrieves resources from an embedded .resources file by calling one of its class constructor overloads.</span></span> <span data-ttu-id="086cf-145">これは、<xref:System.Resources.ResourceManager> オブジェクトを、特定の .resources ファイルや、サテライト アセンブリにあり関連するローカライズされた .resources ファイルとを密に結びつけます。</span><span class="sxs-lookup"><span data-stu-id="086cf-145">This tightly couples a <xref:System.Resources.ResourceManager> object with a particular .resources file and with any associated localized .resources files in satellite assemblies.</span></span>  
  
 <span data-ttu-id="086cf-146">最もよく呼び出されるコンストラクターは次の 2 つです。</span><span class="sxs-lookup"><span data-stu-id="086cf-146">The two most commonly called constructors are:</span></span>  
  
-   <span data-ttu-id="086cf-147"><xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> は、指定した 2 つの情報に基づいてリソースを検索します。それらは .resources ファイルのベース名と、既定の .resources ファイルが存在するアセンブリです。</span><span class="sxs-lookup"><span data-stu-id="086cf-147"><xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> looks up resources based on two pieces of information that you supply: the base name of the .resources file, and the assembly in which the default .resources file resides.</span></span> <span data-ttu-id="086cf-148">ベース名は、.resources ファイルの名前空間とルート名を含み、それのカルチャや拡張子を含みません。</span><span class="sxs-lookup"><span data-stu-id="086cf-148">The base name includes the namespace and root name of the .resources file, without its culture or extension.</span></span> <span data-ttu-id="086cf-149">コマンド ラインからコンパイルされた .resources ファイルは、通常は名前空間の名前を含みませんが、Visual Studio 環境で作成した .resources ファイルはそれを含むことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-149">Note that .resources files that are compiled from the command line typically do not include a namespace name, whereas .resources files that are created in the Visual Studio environment do.</span></span> <span data-ttu-id="086cf-150">たとえば、リソース ファイルの名前が MyCompany.StringResources.resources であり、<xref:System.Resources.ResourceManager> という名前の静的メソッドから `Example.Main` コンストラクターを呼び出す場合、次のコードが .resources ファイルからリソースを取得できる <xref:System.Resources.ResourceManager> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-150">For example, if a resource file is named MyCompany.StringResources.resources and the <xref:System.Resources.ResourceManager> constructor is called from a static method named `Example.Main`, the following code instantiates a <xref:System.Resources.ResourceManager> object that can retrieve resources from the .resources file:</span></span>  
  
     [!code-csharp[Conceptual.Resources.Retrieving#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#1)]
     [!code-vb[Conceptual.Resources.Retrieving#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#1)]  
  
-   <span data-ttu-id="086cf-151"><xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> は、型オブジェクトからの情報に基づいて、サテライト アセンブリにあるリソースを検索します。</span><span class="sxs-lookup"><span data-stu-id="086cf-151"><xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> looks up resources in satellite assemblies based on information from a type object.</span></span> <span data-ttu-id="086cf-152">型の完全修飾名は、ファイル名の拡張子を含まない .resources ファイルのベース名に対応します。</span><span class="sxs-lookup"><span data-stu-id="086cf-152">The type's fully qualified name corresponds to the base name of the .resources file without its file name extension.</span></span> <span data-ttu-id="086cf-153">Visual Studio リソース デザイナーを使用して作成されたデスクトップ アプリでは、Visual Studio は .resources ファイルのルート名と同じ完全修飾名を持つラッパー クラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-153">In desktop apps that are created by using the Visual Studio Resource Designer, Visual Studio creates a wrapper class whose fully qualified name is the same as the root name of the .resources file.</span></span> <span data-ttu-id="086cf-154">たとえば、リソース ファイルの名前が MyCompany.StringResources.resources であり、`MyCompany.StringResources` という名前のラッパー クラスがある場合、次のコードが .resources ファイルからリソースを取得できる <xref:System.Resources.ResourceManager> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-154">For example, if a resource file is named MyCompany.StringResources.resources and there is a wrapper class named `MyCompany.StringResources`, the following code instantiates a <xref:System.Resources.ResourceManager> object that can retrieve resources from the .resources file:</span></span>  
  
     [!code-csharp[Conceptual.Resources.Retrieving#2](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#2)]
     [!code-vb[Conceptual.Resources.Retrieving#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="086cf-155">適切なリソースが見つからない場合、コンストラクターの呼び出しは有効な <xref:System.Resources.ResourceManager> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-155">If the appropriate resources cannot be found, the constructor call creates a valid <xref:System.Resources.ResourceManager> object.</span></span> <span data-ttu-id="086cf-156">ただし、リソースを取得しようとすると、<xref:System.Resources.MissingManifestResourceException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-156">However, the attempt to retrieve a resource throws a <xref:System.Resources.MissingManifestResourceException> exception.</span></span> <span data-ttu-id="086cf-157">例外に対処する方法については、この記事で後述する [MissingManifestResourceException および MissingSatelliteAssemblyException 例外の処理](#exception)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-157">For information about dealing with the exception, see the [Handling MissingManifestResourceException and MissingSatelliteAssembly Exceptions](#exception) section later in this article.</span></span>  
  
 <span data-ttu-id="086cf-158">次の例は、<xref:System.Resources.ResourceManager> オブジェクトをインスタンス化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="086cf-158">The following example shows how to instantiate a <xref:System.Resources.ResourceManager> object.</span></span> <span data-ttu-id="086cf-159">それには ShowTime.exe という名前の実行可能ファイルのソース コードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-159">It contains the source code for an executable named ShowTime.exe.</span></span> <span data-ttu-id="086cf-160">また、次に示す `TimeHeader` という唯一の文字列リソースを含む、Strings.txt という名前のテキスト ファイルも含まれます。</span><span class="sxs-lookup"><span data-stu-id="086cf-160">It also includes the following text file named Strings.txt that contains a single string resource, `TimeHeader`:</span></span>  
  
```  
TimeHeader=The current time is  
```  
  
 <span data-ttu-id="086cf-161">バッチ ファイルを使用して、リソース ファイルを生成し、実行可能ファイルに埋め込むことができます。</span><span class="sxs-lookup"><span data-stu-id="086cf-161">You can use a batch file to generate the resource file and embed it into the executable.</span></span> <span data-ttu-id="086cf-162">C# コンパイラを使用して、実行可能ファイルを生成するバッチ ファイルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-162">Here's the batch file to generate an executable by using the C# compiler:</span></span>  
  
```  
  
resgen strings.txt  
csc ShowTime.cs /resource:strings.resources  
  
```  
  
 <span data-ttu-id="086cf-163">Visual Basic コンパイラでは、次のバッチファイルを使用できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-163">For the Visual Basic compiler, you can use the following batch file:</span></span>  
  
```  
  
resgen strings.txt  
vbc ShowTime.vb /resource:strings.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showtime.cs#1)]
 [!code-vb[System.Resources.ResourceManager.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showtime.vb#1)]  
  
<a name="CultureSpecific"></a>   
### <a name="resourcemanager-and-culture-specific-resources"></a><span data-ttu-id="086cf-164">ResourceManager とカルチャ固有のリソース</span><span class="sxs-lookup"><span data-stu-id="086cf-164">ResourceManager and Culture-Specific Resources</span></span>  
 <span data-ttu-id="086cf-165">[リソースのパッケージ化と配置](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)の記事で説明したように、ローカライズされたアプリはリソースを配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-165">A localized app requires resources to be deployed, as discussed in the article [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span> <span data-ttu-id="086cf-166">アセンブリが正しく構成されているなら、リソース マネージャーは、現在のスレッドの <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティに基づいて、どのリソースを取得するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-166">If the assemblies are properly configured, the resource manager determines which resources to retrieve based on the current thread's <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="086cf-167">(そのプロパティは現在のスレッドの UI カルチャを返します。) たとえば、メイン アセンブリに既定の英語の言語リソースがあり、2 つのサテライト アセンブリにフランス語とロシア語の言語リソースがあるようにアプリがコンパイルされていて、<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティが fr-FR に設定されている場合、リソース マネージャーはフランス語のリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-167">(That property also returns the current thread's UI culture.) For example, if an app is compiled with default English language resources in the main assembly and with French and Russian language resources in two satellite assemblies, and the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property is set to fr-FR, the resource manager retrieves the French resources.</span></span>  
  
 <span data-ttu-id="086cf-168"><xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティは明示的または暗黙的に設定できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-168">You can set the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property explicitly or implicitly.</span></span> <span data-ttu-id="086cf-169">それを設定する方法によって、<xref:System.Resources.ResourceManager> オブジェクトがカルチャに基づいてリソースを取得する方法が決定されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-169">The way you set it determines how the <xref:System.Resources.ResourceManager> object retrieves resources based on culture:</span></span>  
  
-   <span data-ttu-id="086cf-170">明示的に <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティに特定のカルチャを設定する場合、リソース マネージャーは常に、ユーザーのブラウザーまたはオペレーティング システムの言語に関係なく、そのカルチャのリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-170">If you explicitly set the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property to a specific culture, the resource manager always retrieves the resources for that culture, regardless of the user's browser or operating system language.</span></span> <span data-ttu-id="086cf-171">既定の英語の言語リソースと、英語 (米国)、フランス語 (フランス)、およびロシア語 (ロシア) のリソースを含む 3 つのサテライト アセンブリとともにコンパイルされているアプリを考えます。</span><span class="sxs-lookup"><span data-stu-id="086cf-171">Consider an app that is compiled with default English language resources and three satellite assemblies that contain resources for English (United States), French (France), and Russian (Russia).</span></span> <span data-ttu-id="086cf-172"><xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティが fr-FR に設定されている場合、たとえユーザーのオペレーティング システムの言語がフランス語ではないとしても、<xref:System.Resources.ResourceManager> オブジェクトは常にフランス語 (フランス) のリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-172">If the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property is set to fr-FR, the <xref:System.Resources.ResourceManager> object always retrieves the French (France) resources, even if the user's operating system language is not French.</span></span> <span data-ttu-id="086cf-173">プロパティを明示的に設定する前に、これが目的の動作であることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-173">Make sure that this is the desired behavior before you set the property explicitly.</span></span>  
  
     <span data-ttu-id="086cf-174">ASP.NET アプリでは、サーバーの設定が受信したクライアント要求と一致しない可能性があるため、<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティを明示的に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-174">In ASP.NET apps, you must set the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property explicitly, because it is unlikely that the setting on the server will match incoming client requests.</span></span> <span data-ttu-id="086cf-175">ASP.NET アプリは <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティをユーザーのブラウザーが受け入れ可能な言語に明示的に設定できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-175">An ASP.NET app can set the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property explicitly to the user's browser accept language.</span></span>  
  
     <span data-ttu-id="086cf-176"><xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティを明示的に設定することによって、そのスレッドの現在の UI カルチャが定義されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-176">Explicitly setting the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property defines the current UI culture for that thread.</span></span> <span data-ttu-id="086cf-177">これは、アプリの他のスレッドの現在の UI カルチャには影響しません。</span><span class="sxs-lookup"><span data-stu-id="086cf-177">It does not affect the current UI culture of any other threads in an app.</span></span>  
  
-   <span data-ttu-id="086cf-178"><xref:System.Globalization.CultureInfo> 静的プロパティに UI カルチャを表す <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> オブジェクトを割り当てることで、アプリ ドメイン内のすべてのスレッドの UI カルチャを設定できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-178">You can set the UI culture of all threads in an app domain by assigning a <xref:System.Globalization.CultureInfo> object that represents that culture to the static <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="086cf-179">現在の UI カルチャを明示的に設定せず、現在のアプリ ドメインに既定のカルチャを定義しない場合、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティは Windows の `GetUserDefaultUILanguage` 関数によって暗黙的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-179">If you do not explicitly set the current UI culture and you do not define a default culture for the current app domain, the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property is set implicitly by the Windows `GetUserDefaultUILanguage` function.</span></span> <span data-ttu-id="086cf-180">この関数は Multilingual User Interface (MUI) によって提供されます。MUI は、ユーザーが既定の言語を設定できるようにします。</span><span class="sxs-lookup"><span data-stu-id="086cf-180">This function is provided by the Multilingual User Interface (MUI), which enables the user to set the default language.</span></span> <span data-ttu-id="086cf-181">UI 言語がユーザーによって設定されていない場合、その既定値はシステムによってインストールされた言語になります。これはオペレーティング システムのリソースの言語です。</span><span class="sxs-lookup"><span data-stu-id="086cf-181">If the UI language is not set by the user, it defaults to the system-installed language, which is the language of operating system resources.</span></span>  
  
 <span data-ttu-id="086cf-182">次の単純な "Hello world" の例では、現在の UI カルチャを明示的に設定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-182">The following simple "Hello world" example sets the current UI culture explicitly.</span></span> <span data-ttu-id="086cf-183">これには、英語 (米国) (en-US)、フランス語 (フランス) (fr-FR)、およびロシア語 (ロシア) (ru-RU) の 3 つのカルチャのリソースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-183">It contains resources for three cultures: English (United States) or en-US, French (France) or fr-FR, and Russian (Russia) or ru-RU.</span></span> <span data-ttu-id="086cf-184">en-US のリソースは、Greetings.txt という名前のテキスト ファイルに含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-184">The en-US resources are contained in a text file named Greetings.txt:</span></span>  
  
```  
HelloString=Hello world!  
```  
  
 <span data-ttu-id="086cf-185">fr-FR のリソースは、Greetings.fr-FR.txt という名前のテキスト ファイルに含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-185">The fr-FR resources are contained in a text file named Greetings.fr-FR.txt:</span></span>  
  
```  
HelloString=Salut tout le monde!  
```  
  
 <span data-ttu-id="086cf-186">ru-RU のリソースは、Greetings.ru-RU.txt という名前のテキスト ファイルに含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-186">The ru-RU resources are contained in a text file named Greetings.ru-RU.txt:</span></span>  
  
```  
HelloString=Всем привет!  
```  
  
 <span data-ttu-id="086cf-187">次に、この例のソース コード (Visual Basic バージョンの Example.vb または C# バージョンの Example.cs) を示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-187">Here's the source code for the example (Example.vb for the Visual Basic version or Example.cs for the C# version):</span></span>  
  
 [!code-csharp[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.currentculture/cs/example.cs#1)]
 [!code-vb[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.currentculture/vb/example.vb#1)]  
  
 <span data-ttu-id="086cf-188">この例をコンパイルするには、次のコマンドを含むバッチ (.bat) ファイルを作成し、コマンド プロンプトからそれを実行します。</span><span class="sxs-lookup"><span data-stu-id="086cf-188">To compile this example, create a batch (.bat) file that contains the following commands and run it from the command prompt.</span></span> <span data-ttu-id="086cf-189">C# を使用している場合は、`csc` の代わりに `vbc` を指定し、`Example.cs` の代わりに `Example.vb` を指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-189">If you're using C#, specify `csc` instead of `vbc` and `Example.cs` instead of `Example.vb`.</span></span>  
  
```  
resgen Greetings.txt   
vbc Example.vb /resource:Greetings.resources  
  
resgen Greetings.fr-FR.txt  
Md fr-FR  
al /embed:Greetings.fr-FR.resources /culture:fr-FR /out:fr-FR\Example.resources.dll  
  
resgen Greetings.ru-RU.txt  
Md ru-RU  
al /embed:Greetings.ru-RU.resources /culture:ru-RU /out:ru-RU\Example.resources.dll  
```  
  
<a name="retrieving"></a>   
### <a name="retrieving-resources"></a><span data-ttu-id="086cf-190">リソースの取得</span><span class="sxs-lookup"><span data-stu-id="086cf-190">Retrieving Resources</span></span>  
 <span data-ttu-id="086cf-191">特定のリソースにアクセスするには、<xref:System.Resources.ResourceManager.GetObject%28System.String%29> と <xref:System.Resources.ResourceManager.GetString%28System.String%29> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="086cf-191">You call the <xref:System.Resources.ResourceManager.GetObject%28System.String%29> and <xref:System.Resources.ResourceManager.GetString%28System.String%29> methods to access a specific resource.</span></span> <span data-ttu-id="086cf-192"><xref:System.Resources.ResourceManager.GetStream%28System.String%29> メソッドを呼び出して、文字列以外のリソースをバイト配列として取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="086cf-192">You can also call the <xref:System.Resources.ResourceManager.GetStream%28System.String%29> method to retrieve non-string resources as a byte array.</span></span> <span data-ttu-id="086cf-193">既定では、リソースがローカライズされているアプリでは、これらのメソッドは、呼び出しを行ったスレッドの現在の UI カルチャによって決定されるカルチャのリソースを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-193">By default, in an app that has localized resources, these methods return the resource for the culture determined by the current UI culture of the thread that made the call.</span></span> <span data-ttu-id="086cf-194">スレッドの現在の UI カルチャを定義する方法の詳細については、前のセクションの [ResourceManager とカルチャ固有のリソース](#CultureSpecific)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-194">See the previous section, [ResourceManager and Culture-Specific Resources](#CultureSpecific), for more information about how the current UI culture of a thread is defined.</span></span> <span data-ttu-id="086cf-195">リソース マネージャーが現在のスレッドの UI カルチャのリソースを見つけられない場合は、フォールバック プロセスを使用して、指定したリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-195">If the resource manager cannot find the resource for the current thread's UI culture, it uses a fallback process to retrieve the specified resource.</span></span> <span data-ttu-id="086cf-196">リソース マネージャーがローカライズされたリソースを何も見つけられない場合は、既定のカルチャのリソースを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-196">If the resource manager cannot find any localized resources, it uses the resources of the default culture.</span></span> <span data-ttu-id="086cf-197">リソース フォールバック規則の詳細については、[リソースのパッケージ化と配置](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)の記事内の「リソース フォールバック プロセス」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-197">For more information about resource fallback rules, see the "Resource Fallback Process" section of the article [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086cf-198"><xref:System.Resources.ResourceManager> クラスのコンストラクターで指定された .resources ファイルが見つからない場合、リソースを取得しようとすると、<xref:System.Resources.MissingManifestResourceException> または <xref:System.Resources.MissingSatelliteAssemblyException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-198">If the .resources file specified in the <xref:System.Resources.ResourceManager> class constructor cannot be found, the attempt to retrieve a resource throws a <xref:System.Resources.MissingManifestResourceException> or <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="086cf-199">例外に対処する方法については、この記事で後述する [MissingManifestResourceException および MissingSatelliteAssemblyException 例外の処理](#exception)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-199">For information about dealing with the exception, see the [Handling  MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions](#exception) section later in this topic.</span></span>  
  
 <span data-ttu-id="086cf-200">次の例では、<xref:System.Resources.ResourceManager.GetString%2A> メソッドを使用して、カルチャ固有のリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-200">The following example uses the <xref:System.Resources.ResourceManager.GetString%2A> method to retrieve culture-specific resources.</span></span> <span data-ttu-id="086cf-201">これは、英語 (en)、フランス語 (フランス) (fr-FR)、およびロシア語 (ロシア) (ru-RU) の .txt ファイルからコンパイルされたリソースで構成されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-201">It consists of resources compiled from .txt files for the English (en), French (France) (fr-FR), and Russian (Russia) (ru-RU) cultures.</span></span> <span data-ttu-id="086cf-202">例では、現在のカルチャと現在の UI カルチャを、英語 (米国)、フランス語 (フランス)、ロシア語 (ロシア)、およびスウェーデン語 (スウェーデン) に変更します。</span><span class="sxs-lookup"><span data-stu-id="086cf-202">The example changes the current culture and current UI culture to English (United States), French (France), Russian (Russia), and Swedish (Sweden).</span></span> <span data-ttu-id="086cf-203">それから、<xref:System.Resources.ResourceManager.GetString%2A> メソッドを呼び出して、ローカライズされた文字列を取得します。この文字列は現在の日付と月と一緒に表示されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-203">It then calls the <xref:System.Resources.ResourceManager.GetString%2A> method to retrieve the localized string, which it displays along with the current day and month.</span></span> <span data-ttu-id="086cf-204">現在の UI カルチャがスウェーデン語 (スウェーデン) である場合を除き、適切なローカライズされた文字列が出力に表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-204">Notice that the output displays the appropriate localized string except when the current UI culture is Swedish (Sweden).</span></span> <span data-ttu-id="086cf-205">スウェーデン語の言語リソースが利用できないため、アプリは代わりに既定のカルチャである英語のリソースを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-205">Because Swedish language resources are unavailable, the app instead uses the resources of the default culture, which is English.</span></span>  
  
 <span data-ttu-id="086cf-206">例には、次の表に記載されたテキスト ベースのリソース ファイルが必要です。</span><span class="sxs-lookup"><span data-stu-id="086cf-206">The example requires the text-based resource files listed in following table.</span></span> <span data-ttu-id="086cf-207">それぞれには `DateStart` という名前の唯一の文字列リソースがあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-207">Each has a single string resource named `DateStart`.</span></span>  
  
|<span data-ttu-id="086cf-208">カルチャ</span><span class="sxs-lookup"><span data-stu-id="086cf-208">Culture</span></span>|<span data-ttu-id="086cf-209">ファイル名</span><span class="sxs-lookup"><span data-stu-id="086cf-209">File name</span></span>|<span data-ttu-id="086cf-210">リソース名</span><span class="sxs-lookup"><span data-stu-id="086cf-210">Resource name</span></span>|<span data-ttu-id="086cf-211">リソースの値</span><span class="sxs-lookup"><span data-stu-id="086cf-211">Resource value</span></span>|  
|-------------|---------------|-------------------|--------------------|  
|<span data-ttu-id="086cf-212">en-US</span><span class="sxs-lookup"><span data-stu-id="086cf-212">en-US</span></span>|<span data-ttu-id="086cf-213">DateStrings.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-213">DateStrings.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-214">Today is</span><span class="sxs-lookup"><span data-stu-id="086cf-214">Today is</span></span>|  
|<span data-ttu-id="086cf-215">fr-FR</span><span class="sxs-lookup"><span data-stu-id="086cf-215">fr-FR</span></span>|<span data-ttu-id="086cf-216">DateStrings.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-216">DateStrings.fr-FR.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-217">Aujourd'hui、c' est le</span><span class="sxs-lookup"><span data-stu-id="086cf-217">Aujourd'hui, c'est le</span></span>|  
|<span data-ttu-id="086cf-218">ru-RU</span><span class="sxs-lookup"><span data-stu-id="086cf-218">ru-RU</span></span>|<span data-ttu-id="086cf-219">DateStrings.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-219">DateStrings.ru-RU.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-220">Сегодня</span><span class="sxs-lookup"><span data-stu-id="086cf-220">Сегодня</span></span>|  
  
 <span data-ttu-id="086cf-221">次に、この例のソース コード (Visual Basic バージョンの ShowDate.vb または C# バージョンの ShowDate.cs) を示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-221">Here's the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version of the code).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 <span data-ttu-id="086cf-222">この例をコンパイルするには、次のコマンドを含むバッチ ファイルを作成し、コマンド プロンプトからそれを実行します。</span><span class="sxs-lookup"><span data-stu-id="086cf-222">To compile this example, create a batch file that contains the following commands and run it from the command prompt.</span></span> <span data-ttu-id="086cf-223">C# を使用している場合は、`csc` の代わりに `vbc` を指定し、`showdate.cs` の代わりに `showdate.vb` を指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-223">If you're using C#, specify `csc` instead of `vbc` and `showdate.cs` instead of `showdate.vb`.</span></span>  
  
```  
  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
  
```  
  
 <span data-ttu-id="086cf-224">現在の UI カルチャ以外の特定のカルチャのリソースを取得する方法は 2 つあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-224">There are two ways to retrieve the resources of a specific culture other than the current UI culture:</span></span>  
  
-   <span data-ttu-id="086cf-225"><xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>、<xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>、または<xref:System.Resources.ResourceManager.GetStream%28System.String%2CSystem.Globalization.CultureInfo%29> メソッドを呼び出して、指定したカルチャのリソースを取得できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-225">You can call the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>,  <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>, or <xref:System.Resources.ResourceManager.GetStream%28System.String%2CSystem.Globalization.CultureInfo%29> method to retrieve a resource for a specific culture.</span></span> <span data-ttu-id="086cf-226">ローカライズされたリソースが見つからない場合、リソース マネージャーはリソース フォールバック プロセスを使用して、適切なリソースを見つけます。</span><span class="sxs-lookup"><span data-stu-id="086cf-226">If a localized resource cannot be found, the resource manager uses the resource fallback process to locate an appropriate resource.</span></span>  
  
-   <span data-ttu-id="086cf-227"><xref:System.Resources.ResourceManager.GetResourceSet%2A> メソッドを呼び出して、特定のカルチャのリソースを表す <xref:System.Resources.ResourceSet> オブジェクトを取得できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-227">You can call the <xref:System.Resources.ResourceManager.GetResourceSet%2A> method to obtain a <xref:System.Resources.ResourceSet> object that represents the resources for a particular culture.</span></span> <span data-ttu-id="086cf-228">メソッドの呼び出しでは、ローカライズされたリソースが見つからない場合に、親カルチャのリソース マネージャーのプローブを作成するかどうかや、単純に既定のカルチャのリソースにフォールバックするかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-228">In the method call, you can determine whether the resource manager probes for parent cultures if it is unable to find localized resources, or whether it simply falls back to the resources of the default culture.</span></span> <span data-ttu-id="086cf-229">その後、<xref:System.Resources.ResourceSet> のメソッドを使用して、(そのカルチャに向けてローカライズされた) リソースに名前でアクセスしたり、または、セット内のリソースを列挙したりできます。</span><span class="sxs-lookup"><span data-stu-id="086cf-229">You can then use the <xref:System.Resources.ResourceSet> methods to access the resources (localized for that culture) by name, or to enumerate the resources in the set.</span></span>  
  
<a name="exception"></a>   
### <a name="handling-missingmanifestresourceexception-and-missingsatelliteassemblyexception-exceptions"></a><span data-ttu-id="086cf-230">MissingManifestResourceException と MissingSatelliteAssemblyException の例外の処理</span><span class="sxs-lookup"><span data-stu-id="086cf-230">Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions</span></span>  
 <span data-ttu-id="086cf-231">特定のリソースを取得しようとしても、リソース マネージャーがそのリソースを見つけられないときに、既定のカルチャが定義されていないか、または既定のカルチャのリソースが見つからない場合、リソース マネージャーは、メイン アセンブリにリソースを探しているなら、<xref:System.Resources.MissingManifestResourceException> 例外をスローし、サテライト アセンブリにリソースを探しているなら、<xref:System.Resources.MissingSatelliteAssemblyException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="086cf-231">If you try to retrieve a specific resource, but the resource manager cannot find that resource and either no default culture has been defined or the resources of the default culture cannot be located, the resource manager throws a <xref:System.Resources.MissingManifestResourceException> exception if it expects to find the resources in the main assembly or a <xref:System.Resources.MissingSatelliteAssemblyException> if it expects to find the resources in a satellite assembly.</span></span> <span data-ttu-id="086cf-232">例外がスローされるのは、<xref:System.Resources.ResourceManager.GetString%2A> や <xref:System.Resources.ResourceManager.GetObject%2A> などのリソース取得メソッドを呼び出すときであり、<xref:System.Resources.ResourceManager> オブジェクトをインスタンス化するときではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-232">Note that the exception is thrown when you call a resource retrieval method such as <xref:System.Resources.ResourceManager.GetString%2A> or <xref:System.Resources.ResourceManager.GetObject%2A>, and not when you instantiate a <xref:System.Resources.ResourceManager> object.</span></span>  
  
 <span data-ttu-id="086cf-233">この例外は、通常、次のような状況でスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-233">The exception is typically thrown under the following conditions:</span></span>  
  
-   <span data-ttu-id="086cf-234">適切なリソース ファイルまたはサテライト アセンブリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="086cf-234">The appropriate resource file or satellite assembly does not exist.</span></span> <span data-ttu-id="086cf-235">リソース マネージャーによって、アプリの既定のリソースがメイン アプリ アセンブリに埋め込まれていることが期待される場合に、それらが存在しません。</span><span class="sxs-lookup"><span data-stu-id="086cf-235">If the resource manager expects the app's default resources to be embedded in the main app assembly, they are absent.</span></span> <span data-ttu-id="086cf-236"><xref:System.Resources.NeutralResourcesLanguageAttribute> 属性によって、アプリの既定のリソースがサテライト アセンブリに存在することが指示されている場合に、そのアセンブリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="086cf-236">If the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute indicates that the app's default resources reside in a satellite assembly, that assembly cannot be found.</span></span> <span data-ttu-id="086cf-237">アプリをコンパイルするときに、リソースがメイン アセンブリに埋め込まれているか、あるいは必要なサテライト アセンブリが生成され、適切な名前がついていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="086cf-237">When you compile your app, make sure that resources are embedded in the main assembly or that the necessary satellite assembly is generated and is named appropriately.</span></span> <span data-ttu-id="086cf-238">その名前は *appName*.resources.dll の形式をとる必要があります。また、含まれているリソースのカルチャに基づいて名前をつけたディレクトリに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-238">Its name should take the form *appName*.resources.dll, and it should be located in a directory named after the culture whose resources it contains.</span></span>  
  
-   <span data-ttu-id="086cf-239">アプリに既定のカルチャ、あるいはニュートラル カルチャがありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-239">Your app doesn't have a default or neutral culture defined.</span></span> <span data-ttu-id="086cf-240">ソース コード ファイルまたはプロジェクトの情報ファイル (Visual Basic アプリでは AssemblyInfo.vb、C# アプリでは AssemblyInfo.cs) に <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="086cf-240">Add the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute to a source code file or to the project information file (AssemblyInfo.vb for a Visual Basic app or AssemblyInfo.cs for a C# app) file.</span></span>  
  
-   <span data-ttu-id="086cf-241">`baseName` コンストラクターの <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> パラメーターに .resources ファイルの名前が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="086cf-241">The `baseName` parameter in the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor does not specify the name of a .resources file.</span></span> <span data-ttu-id="086cf-242">名前には、リソース ファイルの完全修飾名前空間を含める必要がありますが、そのファイル名拡張子は不要です。</span><span class="sxs-lookup"><span data-stu-id="086cf-242">The name should include the resource file's fully qualified namespace but not its file name extension.</span></span> <span data-ttu-id="086cf-243">通常、Visual Studio で作成されるリソース ファイルは名前空間の名前を含みますが、コマンド プロンプトで作成されコンパイルされたリソース ファイルはそれを含みません。</span><span class="sxs-lookup"><span data-stu-id="086cf-243">Typically, resource files that are created in Visual Studio include namespace names, but resource files that are created and compiled at the command prompt do not.</span></span> <span data-ttu-id="086cf-244">次のユーティリティをコンパイルして実行すると、埋め込まれた .resources ファイルの名前を判断できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-244">You can determine the names of embedded .resources files by compiling and running the following utility.</span></span> <span data-ttu-id="086cf-245">これは、メイン アセンブリまたはサテライト アセンブリの名前をコマンド ライン パラメーターとして指定するコンソール アプリです。</span><span class="sxs-lookup"><span data-stu-id="086cf-245">This is a console app that accepts the name of a main assembly or satellite assembly as a command-line parameter.</span></span> <span data-ttu-id="086cf-246">これは、リソース マネージャーがリソースを正しく特定できるように、`baseName` パラメーターに指定するべき文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-246">It displays the strings that should be provided as the `baseName` parameter so that the resource manager can correctly identify the resource.</span></span>  
  
     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 <span data-ttu-id="086cf-247">アプリケーションの現在のカルチャを明示的に変更する場合、リソース マネージャーは <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティではなく <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティの値に基づいてリソース セットを取得することも覚えておいてください。</span><span class="sxs-lookup"><span data-stu-id="086cf-247">If you are changing the current culture of your application explicitly, you should also remember that the resource manager retrieves a resource set based on the value of the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property, and not the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="086cf-248">通常は、一方の値を変更するなら、もう一方も変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-248">Typically, if you change one value, you should also change the other.</span></span>  
  
<a name="versioning"></a>   
### <a name="resource-versioning"></a><span data-ttu-id="086cf-249">リソースのバージョン管理</span><span class="sxs-lookup"><span data-stu-id="086cf-249">Resource Versioning</span></span>  
 <span data-ttu-id="086cf-250">アプリの既定のリソースを含むメイン アセンブリは、アプリのサテライト アセンブリから切り離されているため、サテライト アセンブリを再配置せずに、メイン アセンブリの新しいバージョンをリリースできます。</span><span class="sxs-lookup"><span data-stu-id="086cf-250">Because the main assembly that contains an app's default resources is separate from the app's satellite assemblies, you can release a new version of your main assembly without redeploying the satellite assemblies.</span></span> <span data-ttu-id="086cf-251">既存のサテライト アセンブリを使用し、メイン アセンブリの新しいバージョンと一緒にそれらを再配置しないようにリソース マネージャーに指示するためには、<xref:System.Resources.SatelliteContractVersionAttribute> 属性を使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-251">You use the <xref:System.Resources.SatelliteContractVersionAttribute> attribute to use existing satellite assemblies and instruct the resource manager not to redeploy them with a new version of your main assembly,</span></span>  
  
 <span data-ttu-id="086cf-252">サテライト アセンブリのバージョン管理サポートの詳細については、[リソースの取得](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md)の記事を参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-252">For more information about versioning support for satellite assemblies, see the article [Retrieving Resources](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md).</span></span>  
  
<a name="config"></a>   
### <a name="satelliteassemblies-configuration-file-node"></a><span data-ttu-id="086cf-253">\<satelliteassemblies> 構成ファイルのノード</span><span class="sxs-lookup"><span data-stu-id="086cf-253">\<satelliteassemblies> Configuration File Node</span></span>  
 <span data-ttu-id="086cf-254">Web サイト (HREF .exe ファイル) から展開と実行がされる実行可能ファイルの場合、<xref:System.Resources.ResourceManager> オブジェクトは Web 経由でサテライト アセンブリのプローブを作成する可能性があり、アプリのパフォーマンスが低下することがあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-254">For executables that are deployed and run from a website (HREF .exe files), the <xref:System.Resources.ResourceManager> object may probe for satellite assemblies over the web, which can hurt your app's performance.</span></span> <span data-ttu-id="086cf-255">パフォーマンスの問題を排除するために、アプリと一緒に配置したサテライト アセンブリへのプローブを制限できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-255">To eliminate the performance problem, you can limit this probing to the satellite assemblies that you have deployed with your app.</span></span> <span data-ttu-id="086cf-256">これを行うには、アプリの構成ファイル内に `<satelliteassemblies>` ノードを作成し、アプリの特定のカルチャのセットを配置したことと、<xref:System.Resources.ResourceManager> オブジェクトがそのノードに示されていないカルチャのプローブを作成するべきではないことを指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-256">To do this, you create a `<satelliteassemblies>` node in your app's configuration file to specify that you have deployed a specific set of cultures for your app, and that the <xref:System.Resources.ResourceManager> object should not try to probe for any culture that is not listed in that node.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086cf-257">`<satelliteassemblies>` ノードの作成より推奨される方法は、[ClickOnce 配置マニフェスト](https://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)の機能を使用することです。</span><span class="sxs-lookup"><span data-stu-id="086cf-257">The preferred alternative to creating a `<satelliteassemblies>` node is to use the [ClickOnce Deployment Manifest](https://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b) feature.</span></span>  
  
 <span data-ttu-id="086cf-258">アプリの構成ファイルで、次のようなセクションを作成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-258">In your app's configuration file, create a section similar to the following:</span></span>  
  
```  
<?xml version ="1.0"?>  
<configuration>  
    <satelliteassemblies>  
        <assembly name="MainAssemblyName, Version=versionNumber, Culture=neutral, PublicKeyToken=null|yourPublicKeyToken">  
            <culture>cultureName1</culture>  
            <culture>cultureName2</culture>  
            <culture>cultureName3</culture>  
        </assembly>  
    </satelliteassemblies>  
</configuration>  
```  
  
 <span data-ttu-id="086cf-259">この構成情報は次のように編集します。</span><span class="sxs-lookup"><span data-stu-id="086cf-259">Edit this configuration information as follows:</span></span>  
  
-   <span data-ttu-id="086cf-260">配置するメイン アセンブリごとに `<assembly>` ノードを 1 つ以上指定し、各ノードで完全修飾アセンブリ名を指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-260">Specify one or more `<assembly>` nodes for each main assembly that you deploy, where each node specifies a fully qualified assembly name.</span></span> <span data-ttu-id="086cf-261">*MainAssemblyName* の場所にメイン アセンブリの名前を指定し、メイン アセンブリに対応する `Version`、`PublicKeyToken`、および `Culture` 属性の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-261">Specify the name of your main assembly in place of *MainAssemblyName*, and specify the `Version`, `PublicKeyToken`, and `Culture` attribute values that correspond to your main assembly.</span></span>  
  
     <span data-ttu-id="086cf-262">`Version` 属性には、アセンブリのバージョン番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-262">For the `Version` attribute, specify the version number of your assembly.</span></span> <span data-ttu-id="086cf-263">たとえば、アセンブリの最初のリリースでは、バージョン番号は 1.0.0.0 になるでしょう。</span><span class="sxs-lookup"><span data-stu-id="086cf-263">For example, the first release of your assembly might be version number 1.0.0.0.</span></span>  
  
     <span data-ttu-id="086cf-264">`PublicKeyToken` 属性には、厳密な名前でアセンブリに署名していない場合は、キーワード `null` を指定し、アセンブリに署名した場合は、公開キー トークンを指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-264">For the `PublicKeyToken` attribute, specify the keyword `null` if you have not signed your assembly with a strong name, or specify your public key token if you have signed your assembly.</span></span>  
  
     <span data-ttu-id="086cf-265">`Culture` 属性には、メイン アセンブリを指定するためにキーワード `neutral` を指定し、<xref:System.Resources.ResourceManager> クラスが `<culture>` ノードに示されているカルチャに対してのみプローブを作成するようにします。</span><span class="sxs-lookup"><span data-stu-id="086cf-265">For the `Culture` attribute, specify the keyword `neutral` to designate the main assembly and cause the <xref:System.Resources.ResourceManager> class to probe only for the cultures listed in the `<culture>` nodes.</span></span>  
  
     <span data-ttu-id="086cf-266">完全修飾アセンブリ名の詳細については、[アセンブリ名](~/docs/standard/assembly/names.md)の記事を参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-266">For more information about fully qualified assembly names, see the article [Assembly Names](~/docs/standard/assembly/names.md).</span></span> <span data-ttu-id="086cf-267">厳密な名前付きアセンブリの詳細については、[厳密な名前付きアセンブリの作成と使用](~/docs/standard/assembly/create-use-strong-named.md)の記事を参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-267">For more information about strong-named assemblies, see the article [Creating and Using Strong-Named Assemblies](~/docs/standard/assembly/create-use-strong-named.md).</span></span>  
  
-   <span data-ttu-id="086cf-268">"fr-FR" などの特定のカルチャ名、または "fr" などのニュートラル カルチャ名を持つ `<culture>` ノードを 1 つ以上指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-268">Specify one or more `<culture>` nodes with a specific culture name, such as "fr-FR", or a neutral culture name, such as "fr".</span></span>  
  
 <span data-ttu-id="086cf-269">`<satelliteassemblies>` ノード下に示されていないアセンブリにリソースが必要な場合、<xref:System.Resources.ResourceManager> クラスは標準のプローブ規則を使用してカルチャにプローブを作成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-269">If resources are needed for any assembly not listed under the `<satelliteassemblies>` node, the <xref:System.Resources.ResourceManager> class probes for cultures using standard probing rules.</span></span>  
  
<a name="ws"></a>   
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] <span data-ttu-id="086cf-270">アプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-270">Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086cf-271"><xref:System.Resources.ResourceManager> クラスは [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでサポートされていますが、その使用は推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="086cf-271">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="086cf-272">[!INCLUDE[net_portable](~/includes/net-portable-md.md)] アプリで使用できる[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]を開発する場合にのみ、このクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-272">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="086cf-273">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリのリソースを取得するには、[Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) クラスを代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-273">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="086cf-274">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでは、<xref:System.Resources.ResourceManager> クラスはパッケージ リソース インデックス (PRI) ファイルからリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-274">For [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, the <xref:System.Resources.ResourceManager> class retrieves resources from package resource index (PRI) files.</span></span> <span data-ttu-id="086cf-275">単一の PRI ファイル (アプリケーション パッケージの PRI ファイル) には、既定のカルチャとすべてのローカライズされたリソースの両方が含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-275">A single PRI file (the application package PRI file) contains the resources for both the default culture and any localized cultures.</span></span> <span data-ttu-id="086cf-276">1 つ以上の XML リソース (.resw) 形式のリソース ファイルから PRI ファイルを作成するには、MakePRI ユーティリティを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-276">You use the MakePRI utility to create a PRI file from one or more resource files that are in XML resource (.resw) format.</span></span> <span data-ttu-id="086cf-277">Visual Studio プロジェクトに含まれているリソースは、Visual Studio が自動的に PRI ファイルの作成とパッケージ化のプロセスを処理します。</span><span class="sxs-lookup"><span data-stu-id="086cf-277">For resources that are included in a Visual Studio project, Visual Studio handles the process of creating and packaging the PRI file automatically.</span></span> <span data-ttu-id="086cf-278">その後、.NET Framework の <xref:System.Resources.ResourceManager> クラスを使用して、アプリやライブラリのリソースにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="086cf-278">You can then use the .NET Framework <xref:System.Resources.ResourceManager> class to access the app's or library's resources.</span></span>  
  
 <span data-ttu-id="086cf-279"><xref:System.Resources.ResourceManager> アプリでは、デスクトップ アプリの場合と同じ方法で [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] オブジェクトのインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-279">You can instantiate a <xref:System.Resources.ResourceManager> object for a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app in the same way that you do for a desktop app.</span></span>  
  
 <span data-ttu-id="086cf-280">それから、<xref:System.Resources.ResourceManager.GetString%28System.String%29> メソッドに取得するリソースの名前を渡すことによって、特定のカルチャのリソースにアクセスすることができます。</span><span class="sxs-lookup"><span data-stu-id="086cf-280">You can then access the resources for a particular culture by passing the name of the resource to be retrieved to the <xref:System.Resources.ResourceManager.GetString%28System.String%29> method.</span></span> <span data-ttu-id="086cf-281">既定では、このメソッドは、呼び出しを行ったスレッドの現在の UI カルチャによって決定されるカルチャのリソースを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-281">By default, this method returns the resource for the culture determined by the current UI culture of the thread that made the call.</span></span> <span data-ttu-id="086cf-282">リソースの名前と、取得するリソースのカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> メソッドに渡すことによって、特定のカルチャのリソースも取得できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-282">You can also retrieve the resources for a specific culture by passing the name of the resource and a <xref:System.Globalization.CultureInfo> object that represents the culture whose resource is to be retrieved to the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> method.</span></span> <span data-ttu-id="086cf-283">現在の UI カルチャまたは指定したカルチャのリソースが見つからない場合、リソース マネージャーは UI 言語フォールバック リストを使用して、適切なリソースを見つけます。</span><span class="sxs-lookup"><span data-stu-id="086cf-283">If the resource for the current UI culture or the specified culture cannot be found, the resource manager uses a UI language fallback list to locate a suitable resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-284">次の例では、明示的なカルチャおよび暗黙的な現在の UI カルチャを使用して、メイン アセンブリとサテライト アセンブリから文字列リソースを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-284">The following example demonstrates how to use an explicit culture and the implicit current UI culture to obtain string resources from a main assembly and a satellite assembly.</span></span> <span data-ttu-id="086cf-285">詳細については、[サテライト アセンブリの作成](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md)の記事内の「グローバル アセンブリ キャッシュにインストールされていないサテライト アセンブリのディレクトリの場所」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-285">For more information, see the "Directory Locations for Satellite Assemblies Not Installed in the Global Assembly Cache" section of the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) topic.</span></span>  
  
 <span data-ttu-id="086cf-286">この例を実行するには、</span><span class="sxs-lookup"><span data-stu-id="086cf-286">To run this example:</span></span>  
  
1.  <span data-ttu-id="086cf-287">アプリ ディレクトリで、次のリソース文字列を含む rmc.txt という名前のファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-287">In the app directory, create a file named rmc.txt that contains the following resource strings:</span></span>  
  
    ```  
  
    day=Friday  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
2.  <span data-ttu-id="086cf-288">次のように、[リソース ファイル ジェネレーター](~/docs/framework/tools/resgen-exe-resource-file-generator.md) を使用して、入力ファイル rmc.txt からリソース ファイル rmc.resources を生成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-288">Use the  [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) to generate the rmc.resources resource file from the rmc.txt input file as follows:</span></span>  
  
    ```  
    resgen rmc.txt  
    ```  
  
3.  <span data-ttu-id="086cf-289">アプリ ディレクトリのサブディレクトリを作成し、"es-MX" という名前をつけます。</span><span class="sxs-lookup"><span data-stu-id="086cf-289">Create a subdirectory of the app directory and name it "es-MX".</span></span> <span data-ttu-id="086cf-290">これは、続く 3 つの手順で作成するサテライト アセンブリのカルチャ名です。</span><span class="sxs-lookup"><span data-stu-id="086cf-290">This is the culture name of the satellite assembly that you will create in the next three steps.</span></span>  
  
4.  <span data-ttu-id="086cf-291">次のリソース文字列を含む rmc.es-MX.txt という名前のファイルを es-MX のディレクトリに作成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-291">Create a file named rmc.es-MX.txt in the es-MX directory that contains the following resource strings:</span></span>  
  
    ```  
  
    day=Viernes  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
5.  <span data-ttu-id="086cf-292">次のように、[リソース ファイル ジェネレーター](~/docs/framework/tools/resgen-exe-resource-file-generator.md) を使用して、入力ファイル rmc.es-MX.txt からリソース ファイル rmc.es-MX.resources を生成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-292">Use the  [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) to generate the rmc.es-MX.resources resource file from the rmc.es-MX.txt input file as follows:</span></span>  
  
    ```  
    resgen rmc.es-MX.txt  
    ```  
  
6.  <span data-ttu-id="086cf-293">この例のファイル名が rmc.vb または rmc.cs のどちらかであると仮定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-293">Assume that the filename for this example is rmc.vb or rmc.cs.</span></span> <span data-ttu-id="086cf-294">下記のソース コードをファイルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="086cf-294">Copy the following source code into a file.</span></span> <span data-ttu-id="086cf-295">それをコンパイルし、メイン アセンブリのリソース ファイルである rmc.resources を実行可能アセンブリに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-295">Then compile it and embed the main assembly resource file, rmc.resources, in the executable assembly.</span></span> <span data-ttu-id="086cf-296">Visual Basic コンパイラを使用している場合、構文は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="086cf-296">If you are using the Visual Basic compiler, the syntax is:</span></span>  
  
    ```  
    vbc rmc.vb /resource:rmc.resources  
    ```  
  
     <span data-ttu-id="086cf-297">これは C# コンパイラの対応する構文です。</span><span class="sxs-lookup"><span data-stu-id="086cf-297">The corresponding syntax for the C# compiler is:</span></span>  
  
    ```  
    csc /resource:rmc.resources rmc.cs  
    ```  
  
7.  <span data-ttu-id="086cf-298">[アセンブリ リンカー](~/docs/framework/tools/al-exe-assembly-linker.md) を使用して、サテライト アセンブリを作成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-298">Use the  [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) to create a satellite assembly.</span></span> <span data-ttu-id="086cf-299">アプリのベース名が rmc なら、サテライト アセンブリの名前は rmc.resources.dll である必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-299">If the base name of the app is rmc, the satellite assembly name must be rmc.resources.dll.</span></span> <span data-ttu-id="086cf-300">サテライト アセンブリは es-MX ディレクトリに作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-300">The satellite assembly should be created in the es-MX directory.</span></span> <span data-ttu-id="086cf-301">es-MX が現在のディレクトリの場合は、このコマンドを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-301">If es-MX is the current directory, use this command:</span></span>  
  
    ```  
    al /embed:rmc.es-MX.resources /c:es-MX /out:rmc.resources.dll   
    ```  
  
8.  <span data-ttu-id="086cf-302">rmc.exe を実行して、埋め込まれたリソース文字列の取得と表示を行います。</span><span class="sxs-lookup"><span data-stu-id="086cf-302">Run rmc.exe to obtain and display the embedded resource strings.</span></span>  
  
 [!code-csharp[ResourceManager_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourceManager_Class/cs/rmc.cs#1)]
 [!code-vb[ResourceManager_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourceManager_Class/vb/rmc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="086cf-303">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="086cf-303">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
    <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890"><span data-ttu-id="086cf-304">アプリケーション内のリソース</span><span class="sxs-lookup"><span data-stu-id="086cf-304">Resources in Applications</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086cf-305"><see cref="T:System.Resources.ResourceManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-305">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086cf-306">既定値を使用して <see cref="T:System.Resources.ResourceManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-306">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-307">このコンストラクターは、<xref:System.Resources.ResourceManager> クラスから派生した独自のクラスを記述する場合にのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="086cf-307">This constructor is useful only if you write your own class that derives from  the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (Type resourceSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type resourceSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceSource As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(Type ^ resourceSource);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager resourceSource" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceSource" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="resourceSource"><span data-ttu-id="086cf-308">リソース マネージャーが .resources ファイルを検索するために必要なすべての情報を取得する元となる種類。</span><span class="sxs-lookup"><span data-stu-id="086cf-308">A type from which the resource manager derives all information for finding .resources files.</span></span></param>
        <summary><span data-ttu-id="086cf-309">指定した型オブジェクトの情報に基づいて、サテライト アセンブリでリソースを検索する <see cref="T:System.Resources.ResourceManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-309">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that looks up resources in satellite assemblies based on information from the specified type object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a><span data-ttu-id="086cf-310">デスクトップアプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-310">Desktop Apps</span></span>  
 <span data-ttu-id="086cf-311">デスクトップアプリでは、リソースマネージャーは `resourceSource` パラメーターを使用して、次のように特定のリソースファイルを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-311">In desktop apps, the resource manager uses the `resourceSource` parameter to load a particular resource file as follows:</span></span>  
  
-   <span data-ttu-id="086cf-312">既定のカルチャのリソースがサテライトアセンブリに存在することを示すために <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性が使用されていない場合、リソースマネージャーは、既定のカルチャのリソースファイルが、`resourceSource` パラメーターで指定された型と同じアセンブリに存在するものと見なします。</span><span class="sxs-lookup"><span data-stu-id="086cf-312">If the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute is not used to indicate that the resources of the default culture reside in a satellite assembly, the resource manager assumes that the resource file for the default culture is found in the same assembly as the type specified by the `resourceSource` parameter.</span></span>  
  
-   <span data-ttu-id="086cf-313">リソースマネージャーでは、既定のリソースファイルの基本名が `resourceSource` パラメーターで指定された型と同じであることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="086cf-313">The resource manager assumes that the default resource file has the same base name as the type specified by the `resourceSource` parameter.</span></span>  
  
-   <span data-ttu-id="086cf-314">リソースマネージャーは、既定の <xref:System.Resources.ResourceSet> クラスを使用して、リソースファイルを操作します。</span><span class="sxs-lookup"><span data-stu-id="086cf-314">The resource manager uses the default <xref:System.Resources.ResourceSet> class to manipulate the resource file.</span></span>  
  
 <span data-ttu-id="086cf-315">たとえば、MyCompany という名前の型が指定されている場合、リソースマネージャーは、MyType を定義するアセンブリで MyCompany という名前の .resources ファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="086cf-315">For example, given a type named MyCompany.MyProduct.MyType, the resource manager looks for a .resources file named MyCompany.MyProduct.MyType.resources in the assembly that defines MyType.</span></span>  
  
 <span data-ttu-id="086cf-316">Visual Studio では、リソースデザイナーは、既定のカルチャの .resources ファイルのC#基本名と同じ名前を持つ `internal` (では) または `Friend` (Visual Basic) クラスを定義するコードを自動的に生成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-316">In Visual Studio, the Resource Designer automatically generates code that defines an `internal` (in C#) or `Friend` (in Visual Basic) class whose name is the same as the base name of the .resources file for the default culture.</span></span> <span data-ttu-id="086cf-317">これにより、リソースの名前に対応する名前を持つ型オブジェクトを取得することによって、<xref:System.Resources.ResourceManager> オブジェクトをインスタンス化し、特定のリソースのセットと組み合わせることができます。これは、クラスがコンパイラから参照できる限り、リソースが必要であるためです。</span><span class="sxs-lookup"><span data-stu-id="086cf-317">This makes it possible to instantiate a <xref:System.Resources.ResourceManager> object and couple it with a particular set of resources by getting a type object whose name corresponds to the name of the resource, because as long as the class is visible to the compiler, the resources must be as well.</span></span> <span data-ttu-id="086cf-318">たとえば、.resources ファイルに Resource1.resx という名前が付けられている場合、次のステートメントは、Resource1.resx という名前の .resources ファイルを管理するために <xref:System.Resources.ResourceManager> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-318">For example, if a .resources file is named Resource1, the following statement instantiates a <xref:System.Resources.ResourceManager> object to manage the .resources file named Resource1:</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/ctor1.cs#2)]  
  
 <span data-ttu-id="086cf-319">Visual Studio を使用していない場合は、名前空間と名前が既定の .resources ファイルと同じであるメンバーを持たないクラスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-319">If you're not using Visual Studio, you can create a class with no members whose namespace and name are the same as that of the default .resources file.</span></span> <span data-ttu-id="086cf-320">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-320">The example provides an illustration.</span></span>  
  
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] <span data-ttu-id="086cf-321">アプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-321">Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086cf-322"><xref:System.Resources.ResourceManager> クラスは [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでサポートされていますが、その使用は推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="086cf-322">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="086cf-323">[!INCLUDE[net_portable](~/includes/net-portable-md.md)] アプリで使用できる[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]を開発する場合にのみ、このクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-323">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="086cf-324">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリのリソースを取得するには、[Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) クラスを代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-324">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="086cf-325">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリの場合、<xref:System.Resources.ResourceManager> は `resourceSource` パラメーターを使用して、アセンブリ、基本名、およびリソース項目をアプリのパッケージリソースインデックス (PRI) ファイル内に配置できる名前空間を推論します。</span><span class="sxs-lookup"><span data-stu-id="086cf-325">In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, <xref:System.Resources.ResourceManager> uses the `resourceSource` parameter to infer the assembly, base name, and the namespace where the resource items can be located within the app's package resource index (PRI) file.</span></span> <span data-ttu-id="086cf-326">たとえば、`MyAssembly`で定義されている MyCompany という名前の型が指定されている場合、リソースマネージャーは、MyAssembly という名前のリソースセット識別子を検索し、そのリソースセット内でスコープ MyCompany MyType を検索します。</span><span class="sxs-lookup"><span data-stu-id="086cf-326">For example, given a type named MyCompany.MyProduct.MyType that is defined in `MyAssembly`, the resource manager looks for a resource set identifier named MyAssembly and looks for a scope MyCompany.MyProduct.MyType within that resource set.</span></span> <span data-ttu-id="086cf-327">リソースマネージャーは、このスコープ内で、既定のコンテキスト (現在のカルチャ、現在のハイコントラストの設定など) の下にあるリソース項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="086cf-327">The resource manager searches for resource items under the default context (current culture, current high contrast setting, and so on) within this scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-328">次の例では、<xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> コンストラクターを使用して、<xref:System.Resources.ResourceManager> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-328">The following example uses the <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> constructor to instantiate a <xref:System.Resources.ResourceManager> object.</span></span> <span data-ttu-id="086cf-329">これは、英語 (en)、フランス語 (フランス) (fr-FR)、およびロシア語 (ロシア) (ru-RU) の .txt ファイルからコンパイルされたリソースで構成されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-329">It consists of resources compiled from .txt files for the English (en), French (France) (fr-FR), and Russian (Russia) (ru-RU) cultures.</span></span> <span data-ttu-id="086cf-330">例では、現在のカルチャと現在の UI カルチャを、英語 (米国)、フランス語 (フランス)、ロシア語 (ロシア)、およびスウェーデン語 (スウェーデン) に変更します。</span><span class="sxs-lookup"><span data-stu-id="086cf-330">The example changes the current culture and current UI culture to English (United States), French (France), Russian (Russia), and Swedish (Sweden).</span></span> <span data-ttu-id="086cf-331">次に、<xref:System.Resources.ResourceManager.GetString%28System.String%29> メソッドを呼び出して、ローカライズされた文字列を取得します。これにより、時刻に依存するあいさつ文が表示されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-331">It then calls the <xref:System.Resources.ResourceManager.GetString%28System.String%29> method to retrieve the localized string, which displays a greeting that depends on the time of day.</span></span>  
  
 <span data-ttu-id="086cf-332">この例では、次の表に示すように、3つのテキストベースのリソースファイルが必要です。</span><span class="sxs-lookup"><span data-stu-id="086cf-332">The example requires three text-based resource files, as listed in the following table.</span></span> <span data-ttu-id="086cf-333">各ファイルには、`Morning`、`Afternoon`、および `Evening`という名前の文字列リソースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-333">Each file includes string resources named `Morning`, `Afternoon`, and `Evening`.</span></span>  
  
|<span data-ttu-id="086cf-334">カルチャ</span><span class="sxs-lookup"><span data-stu-id="086cf-334">Culture</span></span>|<span data-ttu-id="086cf-335">ファイル名</span><span class="sxs-lookup"><span data-stu-id="086cf-335">File name</span></span>|<span data-ttu-id="086cf-336">リソース名</span><span class="sxs-lookup"><span data-stu-id="086cf-336">Resource name</span></span>|<span data-ttu-id="086cf-337">リソースの値</span><span class="sxs-lookup"><span data-stu-id="086cf-337">Resource value</span></span>|  
|-------------|---------------|-------------------|--------------------|  
|<span data-ttu-id="086cf-338">en-US</span><span class="sxs-lookup"><span data-stu-id="086cf-338">en-US</span></span>|<span data-ttu-id="086cf-339">GreetingResources.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-339">GreetingResources.txt</span></span>|`Morning`|<span data-ttu-id="086cf-340">おはようございます</span><span class="sxs-lookup"><span data-stu-id="086cf-340">Good morning</span></span>|  
|<span data-ttu-id="086cf-341">en-US</span><span class="sxs-lookup"><span data-stu-id="086cf-341">en-US</span></span>|<span data-ttu-id="086cf-342">GreetingResources.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-342">GreetingResources.txt</span></span>|`Afternoon`|<span data-ttu-id="086cf-343">こんにちは</span><span class="sxs-lookup"><span data-stu-id="086cf-343">Good afternoon</span></span>|  
|<span data-ttu-id="086cf-344">en-US</span><span class="sxs-lookup"><span data-stu-id="086cf-344">en-US</span></span>|<span data-ttu-id="086cf-345">GreetingResources.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-345">GreetingResources.txt</span></span>|`Evening`|<span data-ttu-id="086cf-346">こんばんは</span><span class="sxs-lookup"><span data-stu-id="086cf-346">Good evening</span></span>|  
|<span data-ttu-id="086cf-347">fr-FR</span><span class="sxs-lookup"><span data-stu-id="086cf-347">fr-FR</span></span>|<span data-ttu-id="086cf-348">GreetingResources.fr</span><span class="sxs-lookup"><span data-stu-id="086cf-348">GreetingResources.fr-FR.txt</span></span>|`Morning`|<span data-ttu-id="086cf-349">Bonjour</span><span class="sxs-lookup"><span data-stu-id="086cf-349">Bonjour</span></span>|  
|<span data-ttu-id="086cf-350">fr-FR</span><span class="sxs-lookup"><span data-stu-id="086cf-350">fr-FR</span></span>|<span data-ttu-id="086cf-351">GreetingResources.fr</span><span class="sxs-lookup"><span data-stu-id="086cf-351">GreetingResources.fr-FR.txt</span></span>|`Afternoon`|<span data-ttu-id="086cf-352">Bonjour</span><span class="sxs-lookup"><span data-stu-id="086cf-352">Bonjour</span></span>|  
|<span data-ttu-id="086cf-353">fr-FR</span><span class="sxs-lookup"><span data-stu-id="086cf-353">fr-FR</span></span>|<span data-ttu-id="086cf-354">GreetingResources.fr</span><span class="sxs-lookup"><span data-stu-id="086cf-354">GreetingResources.fr-FR.txt</span></span>|`Evening`|<span data-ttu-id="086cf-355">Bonsoir</span><span class="sxs-lookup"><span data-stu-id="086cf-355">Bonsoir</span></span>|  
|<span data-ttu-id="086cf-356">ru-RU</span><span class="sxs-lookup"><span data-stu-id="086cf-356">ru-RU</span></span>|<span data-ttu-id="086cf-357">GreetingResources.ru</span><span class="sxs-lookup"><span data-stu-id="086cf-357">GreetingResources.ru-RU.txt</span></span>|`Morning`|<span data-ttu-id="086cf-358">Доброе утро</span><span class="sxs-lookup"><span data-stu-id="086cf-358">Доброе утро</span></span>|  
|<span data-ttu-id="086cf-359">ru-RU</span><span class="sxs-lookup"><span data-stu-id="086cf-359">ru-RU</span></span>|<span data-ttu-id="086cf-360">GreetingResources.ru</span><span class="sxs-lookup"><span data-stu-id="086cf-360">GreetingResources.ru-RU.txt</span></span>|`Afternoon`|<span data-ttu-id="086cf-361">Добрый день</span><span class="sxs-lookup"><span data-stu-id="086cf-361">Добрый день</span></span>|  
|<span data-ttu-id="086cf-362">ru-RU</span><span class="sxs-lookup"><span data-stu-id="086cf-362">ru-RU</span></span>|<span data-ttu-id="086cf-363">GreetingResources.ru</span><span class="sxs-lookup"><span data-stu-id="086cf-363">GreetingResources.ru-RU.txt</span></span>|`Evening`|<span data-ttu-id="086cf-364">Добрый вечер</span><span class="sxs-lookup"><span data-stu-id="086cf-364">Добрый вечер</span></span>|  
  
 <span data-ttu-id="086cf-365">次のバッチファイルを使用して Visual Basic の例をコンパイルし、あいさつという名前の実行可能ファイルを作成できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-365">You can use the following batch file to compile the Visual Basic example and create an executable named Greet.exe.</span></span> <span data-ttu-id="086cf-366">でC#コンパイルするには、コンパイラ名を `vbc` から `csc` に変更し、ファイル拡張子を `.vb` から `.cs`に変更します。</span><span class="sxs-lookup"><span data-stu-id="086cf-366">To compile with C#, change the compiler name from `vbc` to `csc` and the file extension from `.vb` to `.cs`.</span></span>  
  
```  
  
resgen GreetingResources.txt  
vbc Greet.vb /resource: GreetingResources.resources  
  
md fr-FR  
resgen GreetingResources.fr-FR.txt  
al /out:fr-FR\Greet.resources.dll /culture:fr-FR /embed: GreetingResources.fr-FR.resources   
  
md ru-RU  
resgen GreetingResources.ru-RU.txt  
al /out:ru-RU\Greet.resources.dll /culture:ru-RU /embed: GreetingResources.ru-RU.resources  
  
```  
  
 <span data-ttu-id="086cf-367">次に、この例のソース コード (Visual Basic バージョンの ShowDate.vb または C# バージョンの ShowDate.cs) を示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-367">Here's the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version of the code).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/greet.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/greet.vb#3)]  
  
 <span data-ttu-id="086cf-368">ソースコードでは、`Example`という名前のアプリクラスを定義するだけでなく、リソースファイルの基本名と同じ名前の `GreetingResources`を持つ内部クラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="086cf-368">In addition to defining an app class named `Example`, the source code defines an internal class whose name, `GreetingResources`, is the same as the base name of the resource files.</span></span> <span data-ttu-id="086cf-369">これにより、<xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> コンストラクターを呼び出すことによって、<xref:System.Resources.ResourceManager> オブジェクトを正常にインスタンス化できるようになります。</span><span class="sxs-lookup"><span data-stu-id="086cf-369">This makes it possible to successfully instantiate a <xref:System.Resources.ResourceManager> object by calling the <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> constructor.</span></span>  
  
 <span data-ttu-id="086cf-370">現在の UI カルチャがスウェーデン語 (スウェーデン) の場合を除き、出力には適切なローカライズされた文字列が表示されることに注意してください。この場合、英語の言語リソースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-370">Notice that the output displays the appropriate localized string except when the current UI culture is Swedish (Sweden), in which case it uses English language resources.</span></span> <span data-ttu-id="086cf-371">スウェーデン語の言語リソースは使用できないため、アプリは、代わりに <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性で定義されている既定のカルチャのリソースを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-371">Because Swedish language resources are unavailable, the app uses the resources of the default culture, as defined by the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute, instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-372"><paramref name="resourceSource" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-372">The <paramref name="resourceSource" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="baseName"><span data-ttu-id="086cf-373">拡張子はないが、完全修飾名前空間名を含んだ、リソース ファイルのルート名。</span><span class="sxs-lookup"><span data-stu-id="086cf-373">The root name of the resource file without its extension but including any fully qualified namespace name.</span></span> <span data-ttu-id="086cf-374">たとえば、"MyApplication.MyResource.en-US.resources" というリソース ファイルのルート名は "MyApplication.MyResource" です。</span><span class="sxs-lookup"><span data-stu-id="086cf-374">For example, the root name for the resource file named MyApplication.MyResource.en-US.resources is MyApplication.MyResource.</span></span></param>
        <param name="assembly"><span data-ttu-id="086cf-375">リソースのメイン アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="086cf-375">The main assembly for the resources.</span></span></param>
        <summary><span data-ttu-id="086cf-376">指定したアセンブリ内で指定したルート名を持つファイルに含まれているリソースを検索する <see cref="T:System.Resources.ResourceManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-376">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that looks up resources contained in files with the specified root name in the given assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a><span data-ttu-id="086cf-377">デスクトップアプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-377">Desktop Apps</span></span>  
 <span data-ttu-id="086cf-378">デスクトップアプリでは、個々のカルチャ固有のリソースファイルがサテライトアセンブリに含まれている必要があり、既定のカルチャのリソースファイルはメインアセンブリに含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-378">In desktop apps, the individual culture-specific resource files should be contained in satellite assemblies, and the default culture's resource file should be contained in the main assembly.</span></span> <span data-ttu-id="086cf-379">サテライトアセンブリは、そのアセンブリのマニフェストで指定された1つのカルチャのリソースを格納し、必要に応じて読み込まれることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="086cf-379">A satellite assembly is assumed to contain resources for a single culture specified in that assembly's manifest, and is loaded as necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086cf-380">リソースをアセンブリから取得するのではなく、.resources ファイルから直接取得するには、<xref:System.Resources.ResourceManager> オブジェクトをインスタンス化するために、代わりに <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-380">To retrieve resources from .resources files directly instead of retrieving them from assemblies, you must call the <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> method instead to instantiate a <xref:System.Resources.ResourceManager> object.</span></span>  
  
 <span data-ttu-id="086cf-381">`baseName` によって識別されるリソースファイルが `assembly`に見つからない場合、メソッドは <xref:System.Resources.ResourceManager> オブジェクトをインスタンス化しますが、特定のリソースを取得しようとすると、通常は <xref:System.Resources.MissingManifestResourceException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-381">If the resource file identified by `baseName` cannot be found in `assembly`, the method instantiates a <xref:System.Resources.ResourceManager> object, but the attempt to retrieve a specific resource throws an exception, typically <xref:System.Resources.MissingManifestResourceException>.</span></span> <span data-ttu-id="086cf-382">例外の原因の診断の詳細については、<xref:System.Resources.ResourceManager> クラスのトピックの「MissingManifestResourceException Exception の処理」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-382">For information about diagnosing the cause of the exception, see the "Handling the MissingManifestResourceException Exception" section of the <xref:System.Resources.ResourceManager> class topic.</span></span>  
  
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] <span data-ttu-id="086cf-383">アプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-383">Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086cf-384"><xref:System.Resources.ResourceManager> クラスは [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでサポートされていますが、その使用は推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="086cf-384">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="086cf-385">[!INCLUDE[net_portable](~/includes/net-portable-md.md)] アプリで使用できる[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]を開発する場合にのみ、このクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-385">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="086cf-386">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリのリソースを取得するには、[Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) クラスを代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-386">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="086cf-387">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでは、リソースマネージャーが `assembly` パラメーターの簡易名を使用して、アプリのパッケージリソースインデックス (PRI) ファイルで一致するリソースセットを検索します。</span><span class="sxs-lookup"><span data-stu-id="086cf-387">In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, the resource manager uses the simple name of the `assembly` parameter to look up a matching resource set in the app's package resource index (PRI) file.</span></span> <span data-ttu-id="086cf-388">`baseName` パラメーターは、リソースセット内のリソース項目を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-388">The `baseName` parameter is used to look up a resource item within the resource set.</span></span> <span data-ttu-id="086cf-389">たとえば、PortableLibrary1.Resource1.de のルート名は PortableLibrary1 になります。</span><span class="sxs-lookup"><span data-stu-id="086cf-389">For example, the root name for PortableLibrary1.Resource1.de-DE.resources is PortableLibrary1.Resource1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-390">次の例では、単純なローカライズされていない "Hello World" アプリを使用して、<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> コンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="086cf-390">The following example uses a simple non-localized "Hello World" app to illustrate the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor.</span></span> <span data-ttu-id="086cf-391">ExampleResources という名前のテキストファイルの内容を次に示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-391">The following shows the contents of a text file named ExampleResources.txt.</span></span> <span data-ttu-id="086cf-392">アプリがコンパイルされると、リソースはメインアプリケーションアセンブリに埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="086cf-392">When the app is compiled, the resource is embedded in the main app assembly.</span></span>  
  
```  
Greeting=Hello  
```  
  
 <span data-ttu-id="086cf-393">テキストファイルをバイナリリソースファイルに変換するには、コマンドプロンプトで次のように[リソースファイルジェネレーター (resgen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md)を使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-393">The text file can be converted to a binary resource file by using the [Resource File Generator (ResGen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) at the command prompt as follows:</span></span>  
  
```  
resgen ExampleResources.txt  
```  
  
 <span data-ttu-id="086cf-394">次の例では、<xref:System.Resources.ResourceManager> オブジェクトをインスタンス化し、ユーザーに名前の入力を求めるプロンプトを表示して、あいさつ文を表示する実行可能コードを示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-394">The following example provides the executable code that instantiates a <xref:System.Resources.ResourceManager> object, prompts the user to enter a name, and displays a greeting.</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/example.cs#1)]
 [!code-vb[System.Resources.ResourceManager.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/example.vb#1)]  
  
 <span data-ttu-id="086cf-395">Visual Basic で次のコマンドを使用してコンパイルできます。</span><span class="sxs-lookup"><span data-stu-id="086cf-395">It can be compiled by using the following command in Visual Basic:</span></span>  
  
```  
vbc Example.vb /resource:ExampleResources.resources  
```  
  
 <span data-ttu-id="086cf-396">または、でC#次のコマンドを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-396">or by using the following command in C#:</span></span>  
  
```  
csc Example.cs /resource:ExampleResources.resources  
```  
  
 <span data-ttu-id="086cf-397">この例では、リソースファイルを含むアセンブリへの参照を取得します。そのためには、そのアセンブリで定義されC#ている型を `typeof` 関数 (では) または `GetType` (Visual Basic) 関数に渡し、<xref:System.Type.Assembly%2A?displayProperty=nameWithType> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-397">Note that the example retrieves a reference to the assembly that contains the resource file by passing a type defined in that assembly to the `typeof` function (in C#) or the `GetType` function (in Visual Basic) and retrieving the value of its <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-398"><paramref name="baseName" /> パラメーターまたは <paramref name="assembly" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-398">The <paramref name="baseName" /> or <paramref name="assembly" /> parameter is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="086cf-399">このコンストラクターは、システム指定の <see cref="T:System.Resources.ResourceSet" /> 実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-399">This constructor uses the system-provided <see cref="T:System.Resources.ResourceSet" /> implementation.</span></span> <span data-ttu-id="086cf-400">カスタムリソースファイル形式を使用するには、<see cref="T:System.Resources.ResourceSet" /> クラスから派生し、<see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> メソッドと <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> メソッドをオーバーライドして、その型を <see cref="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" /> コンストラクターに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-400">To use a custom resource file format, you should derive from the <see cref="T:System.Resources.ResourceSet" /> class, override the <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> methods, and pass that type to the <see cref="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" /> constructor.</span></span> <span data-ttu-id="086cf-401">カスタム <see cref="T:System.Resources.ResourceSet" /> を使用すると、リソースキャッシュポリシーを制御したり、独自のリソースファイル形式をサポートしたりする場合に便利ですが、通常は必要ありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-401">Using a custom <see cref="T:System.Resources.ResourceSet" /> can be useful for controlling resource caching policy or supporting your own resource file format, but is generally not necessary.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly * Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly, usingResourceSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="usingResourceSet" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="baseName"><span data-ttu-id="086cf-402">拡張子はないが、完全修飾名前空間名を含んだ、リソース ファイルのルート名。</span><span class="sxs-lookup"><span data-stu-id="086cf-402">The root name of the resource file without its extension but including any fully qualified namespace name.</span></span> <span data-ttu-id="086cf-403">たとえば、"MyApplication.MyResource.en-US.resources" というリソース ファイルのルート名は "MyApplication.MyResource" です。</span><span class="sxs-lookup"><span data-stu-id="086cf-403">For example, the root name for the resource file named MyApplication.MyResource.en-US.resources is MyApplication.MyResource.</span></span></param>
        <param name="assembly"><span data-ttu-id="086cf-404">リソースのメイン アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="086cf-404">The main assembly for the resources.</span></span></param>
        <param name="usingResourceSet"><span data-ttu-id="086cf-405">使用するカスタム <see cref="T:System.Resources.ResourceSet" /> の種類。</span><span class="sxs-lookup"><span data-stu-id="086cf-405">The type of the custom <see cref="T:System.Resources.ResourceSet" /> to use.</span></span> <span data-ttu-id="086cf-406"><see langword="null" /> の場合は、既定のランタイム <see cref="T:System.Resources.ResourceSet" /> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-406">If <see langword="null" />, the default runtime <see cref="T:System.Resources.ResourceSet" /> object is used.</span></span></param>
        <summary><span data-ttu-id="086cf-407">指定した <see cref="T:System.Resources.ResourceManager" /> クラスを使用して、指定したアセンブリ内で指定したルート名を持つファイルに含まれるリソースを検索する <see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-407">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that uses a specified <see cref="T:System.Resources.ResourceSet" /> class to look up resources contained in files with the specified root name in the given assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-408">個々のカルチャ固有のリソースファイルはサテライトアセンブリに含まれている必要があり、既定のカルチャのリソースファイルはメインアセンブリに含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-408">The individual culture-specific resource files should be contained in satellite assemblies, and the default culture's resource file should be contained in the main assembly.</span></span> <span data-ttu-id="086cf-409">サテライトアセンブリは、そのアセンブリのマニフェストで指定された1つのカルチャのリソースを格納し、必要に応じて読み込まれることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="086cf-409">A satellite assembly is assumed to contain resources for a single culture specified in that assembly's manifest, and is loaded as necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086cf-410">リソースをアセンブリから取得するのではなく、.resources ファイルから直接取得するには、<xref:System.Resources.ResourceManager> オブジェクトをインスタンス化するために、代わりに <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-410">To retrieve resources from .resources files directly instead of retrieving them from assemblies, you must call the <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> method instead to instantiate a <xref:System.Resources.ResourceManager> object.</span></span>  
  
 <span data-ttu-id="086cf-411">`baseName` によって識別されるリソースファイルが `assembly`に見つからない場合、メソッドは <xref:System.Resources.ResourceManager> オブジェクトをインスタンス化しますが、特定のリソースを取得しようとすると、通常は <xref:System.Resources.MissingManifestResourceException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-411">If the resource file identified by `baseName` cannot be found in `assembly`, the method instantiates a <xref:System.Resources.ResourceManager> object, but the attempt to retrieve a specific resource throws an exception, typically <xref:System.Resources.MissingManifestResourceException>.</span></span> <span data-ttu-id="086cf-412">例外の原因の診断の詳細については、<xref:System.Resources.ResourceManager> クラスのトピックの「MissingManifestResourceException Exception の処理」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-412">For information about diagnosing the cause of the exception, see the "Handling the MissingManifestResourceException Exception" section of the <xref:System.Resources.ResourceManager> class topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086cf-413">`usingResourceSet` パラメーターは、独自のリソース形式をサポートするために使用され、通常は `null`されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-413">The `usingResourceSet` parameter is used to support your own resource format, and will commonly be `null`.</span></span> <span data-ttu-id="086cf-414">これは、<xref:System.Type> を受け取るコンストラクターとは異なります。</span><span class="sxs-lookup"><span data-stu-id="086cf-414">This is different from the constructor that takes a <xref:System.Type> only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086cf-415"><paramref name="usingResourceset" /> が <see cref="T:System.Resources.ResourceSet" /> の派生クラスではありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-415"><paramref name="usingResourceset" /> is not a derived class of <see cref="T:System.Resources.ResourceSet" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-416"><paramref name="baseName" /> パラメーターまたは <paramref name="assembly" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-416">The <paramref name="baseName" /> or <paramref name="assembly" /> parameter is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086cf-417">このコンストラクターを使用すると、<see cref="T:System.Resources.ResourceSet" /> の実装を指定できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-417">This constructor lets you specify a <see cref="T:System.Resources.ResourceSet" /> implementation.</span></span> <span data-ttu-id="086cf-418">特定の <see cref="T:System.Resources.ResourceSet" /> 実装を必要とせず、カスタムリソースファイル形式を使用する場合は、<see cref="T:System.Resources.ResourceSet" /> クラスから派生し、<see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> および <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> メソッドをオーバーライドして、その型をこのコンストラクターに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-418">If you do not want a specific <see cref="T:System.Resources.ResourceSet" /> implementation but would like to use a custom resource file format, you should derive from the <see cref="T:System.Resources.ResourceSet" /> class, override the <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> methods, and pass that type to this constructor.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseName">
      <MemberSignature Language="C#" Value="public virtual string BaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.BaseName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseName : string" Usage="System.Resources.ResourceManager.BaseName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-419"><see cref="T:System.Resources.ResourceManager" /> がリソースを検索するリソース ファイルのルート名を取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-419">Gets the root name of the resource files that the <see cref="T:System.Resources.ResourceManager" /> searches for resources.</span></span></summary>
        <value><span data-ttu-id="086cf-420"><see cref="T:System.Resources.ResourceManager" /> がリソースを検索するリソース ファイルのルート名。</span><span class="sxs-lookup"><span data-stu-id="086cf-420">The root name of the resource files that the <see cref="T:System.Resources.ResourceManager" /> searches for resources.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-421"><xref:System.Resources.ResourceManager.BaseName%2A> プロパティには、リソースファイルの完全修飾名前空間名とルートリソース名が反映されます。カルチャまたはファイル名の拡張子は含まれません。</span><span class="sxs-lookup"><span data-stu-id="086cf-421">The <xref:System.Resources.ResourceManager.BaseName%2A> property reflects the fully qualified namespace name and the root resource name of a resource file, without its culture or file name extension.</span></span> <span data-ttu-id="086cf-422">たとえば、アプリの既定のリソースファイルに `SampleApps.StringResources.resources`という名前が付けられている場合、<xref:System.Resources.ResourceManager.BaseName%2A> プロパティの値は "SampleApps. StringResources" になります。</span><span class="sxs-lookup"><span data-stu-id="086cf-422">For example, if an app's default resource file is named `SampleApps.StringResources.resources`, the value of the <xref:System.Resources.ResourceManager.BaseName%2A> property  is "SampleApps.StringResources".</span></span> <span data-ttu-id="086cf-423">アプリの既定のリソースファイルの名前が `SampleApps.StringResources.en-US.resources` で、サテライトアセンブリに埋め込まれている場合、<xref:System.Resources.ResourceManager.BaseName%2A> プロパティの値は依然として "SampleApps. StringResources" になります。</span><span class="sxs-lookup"><span data-stu-id="086cf-423">If an app's default resource file is named `SampleApps.StringResources.en-US.resources` and is embedded in a satellite assembly, the value of the <xref:System.Resources.ResourceManager.BaseName%2A> property is still "SampleApps.StringResources".</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086cf-424">コマンドラインからコンパイルされて埋め込まれるリソースファイルの <xref:System.Resources.ResourceManager.BaseName%2A> プロパティ値には、ファイルをコンパイルするときに明示的に含める必要がある場合を除き、名前空間の名前は含まれません。</span><span class="sxs-lookup"><span data-stu-id="086cf-424">The <xref:System.Resources.ResourceManager.BaseName%2A> property value of a resource file that is compiled and embedded from the command line does not include a namespace name unless you explicitly include one when compiling the file.</span></span> <span data-ttu-id="086cf-425">一方、Visual Studio 環境内にコンパイルされて埋め込まれるリソースファイルの <xref:System.Resources.ResourceManager.BaseName%2A> プロパティ値には、通常、既定の名前空間名が含まれます。</span><span class="sxs-lookup"><span data-stu-id="086cf-425">On the other hand, the <xref:System.Resources.ResourceManager.BaseName%2A> property value of a resource file that is compiled and embedded within the Visual Studio environment typically does include the default namespace name.</span></span>  
  
 <span data-ttu-id="086cf-426"><xref:System.Resources.ResourceManager.BaseName%2A> プロパティ値は、<xref:System.Resources.ResourceManager> インスタンスをインスタンス化するときに、<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> または <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> コンストラクターに渡される文字列と同じです。</span><span class="sxs-lookup"><span data-stu-id="086cf-426">The <xref:System.Resources.ResourceManager.BaseName%2A> property value is the same as the string passed to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> or <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> constructor when instantiating a <xref:System.Resources.ResourceManager> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-427">次のユーティリティをコンパイルして実行すると、埋め込まれた .resources ファイルの名前を判断できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-427">You can determine the names of embedded .resources files by compiling and running the following utility.</span></span> <span data-ttu-id="086cf-428">これは、メイン アセンブリまたはサテライト アセンブリの名前をコマンド ライン パラメーターとして指定するコンソール アプリです。</span><span class="sxs-lookup"><span data-stu-id="086cf-428">This is a console app that accepts the name of a main assembly or satellite assembly as a command-line parameter.</span></span> <span data-ttu-id="086cf-429">リソースマネージャーがリソースを正しく識別できるように、<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> または <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> コンストラクターの `baseName` パラメーターとして指定する文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-429">It displays the strings that should be provided as the `baseName` parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> or <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> constructor so that the resource manager can correctly identify the resource.</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
 [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseNameField">
      <MemberSignature Language="C#" Value="protected string BaseNameField;" />
      <MemberSignature Language="ILAsm" Value=".field family string BaseNameField" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.BaseNameField" />
      <MemberSignature Language="VB.NET" Value="Protected BaseNameField As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ BaseNameField;" />
      <MemberSignature Language="F#" Value="val mutable BaseNameField : string" Usage="System.Resources.ResourceManager.BaseNameField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-430"><see cref="T:System.Resources.ResourceManager" /> がリソースを検索するリソース ファイルのルート名を指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-430">Specifies the root name of the resource files that the <see cref="T:System.Resources.ResourceManager" /> searches for resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-431"><xref:System.Resources.ResourceManager.BaseNameField> フィールドは、<xref:System.Resources.ResourceManager> クラスから派生した独自のクラスを記述する場合にのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="086cf-431">The <xref:System.Resources.ResourceManager.BaseNameField> field is useful only if you write your own class that derives from the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileBasedResourceManager">
      <MemberSignature Language="C#" Value="public static System.Resources.ResourceManager CreateFileBasedResourceManager (string baseName, string resourceDir, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResourceManager CreateFileBasedResourceManager(string baseName, string resourceDir, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFileBasedResourceManager (baseName As String, resourceDir As String, usingResourceSet As Type) As ResourceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResourceManager ^ CreateFileBasedResourceManager(System::String ^ baseName, System::String ^ resourceDir, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="static member CreateFileBasedResourceManager : string * string * Type -&gt; System.Resources.ResourceManager" Usage="System.Resources.ResourceManager.CreateFileBasedResourceManager (baseName, resourceDir, usingResourceSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="resourceDir" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="usingResourceSet" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="baseName"><span data-ttu-id="086cf-432">リソースのルート名。</span><span class="sxs-lookup"><span data-stu-id="086cf-432">The root name of the resources.</span></span> <span data-ttu-id="086cf-433">たとえば、"MyResource.en-US.resources" というリソース ファイルのルート名は "MyResource" です。</span><span class="sxs-lookup"><span data-stu-id="086cf-433">For example, the root name for the resource file named "MyResource.en-US.resources" is "MyResource".</span></span></param>
        <param name="resourceDir"><span data-ttu-id="086cf-434">リソースを検索するディレクトリの名前。</span><span class="sxs-lookup"><span data-stu-id="086cf-434">The name of the directory to search for the resources.</span></span> <span data-ttu-id="086cf-435"><paramref name="resourceDir" /> には、アプリケーション ディレクトリを基準とした相対パス、または絶対パスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-435"><paramref name="resourceDir" /> can be an absolute path or a relative path from the application directory.</span></span></param>
        <param name="usingResourceSet"><span data-ttu-id="086cf-436">使用するカスタム <see cref="T:System.Resources.ResourceSet" /> の種類。</span><span class="sxs-lookup"><span data-stu-id="086cf-436">The type of the custom <see cref="T:System.Resources.ResourceSet" /> to use.</span></span> <span data-ttu-id="086cf-437"><see langword="null" /> の場合は、既定のランタイム <see cref="T:System.Resources.ResourceSet" /> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-437">If <see langword="null" />, the default runtime <see cref="T:System.Resources.ResourceSet" /> object is used.</span></span></param>
        <summary><span data-ttu-id="086cf-438">リソースのアセンブリ マニフェストではなく特定のディレクトリを検索する <see cref="T:System.Resources.ResourceManager" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-438">Returns a <see cref="T:System.Resources.ResourceManager" /> object that searches a specific directory instead of an assembly manifest for resources.</span></span></summary>
        <returns><span data-ttu-id="086cf-439">リソースのアセンブリ マニフェストの代わりに指定されたディレクトリを検索する、リソース マネージャーの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="086cf-439">A new instance of a resource manager that searches the specified directory instead of an assembly manifest for resources.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-440">このメソッドは、アセンブリに埋め込まれていない .resources ファイルからリソースを取得するリソースマネージャーを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-440">This method returns a resource manager that retrieves resources from a .resources file that is not embedded in an assembly.</span></span> <span data-ttu-id="086cf-441">この <xref:System.Resources.ResourceManager> オブジェクトを使用して、ASP.NET ページのリソースを読み込んだり、<xref:System.Resources.ResourceSet> の実装をテストしたりすることができます。</span><span class="sxs-lookup"><span data-stu-id="086cf-441">You can use this <xref:System.Resources.ResourceManager> object to load resources for an ASP.NET page or to test a <xref:System.Resources.ResourceSet> implementation.</span></span>  <span data-ttu-id="086cf-442">スタンドアロンの .resources ファイルからリソースを取得する例については、[リソースの取得](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md)に関する記事をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="086cf-442">For an example that retrieves resources from a standalone .resources file, see the [Retrieving Resources](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md) article.</span></span>  
  
 <span data-ttu-id="086cf-443">このメソッドを使用すると、<xref:System.Resources.ResourceSet> の実装を指定できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-443">This method lets you specify a <xref:System.Resources.ResourceSet> implementation.</span></span> <span data-ttu-id="086cf-444">特定の <xref:System.Resources.ResourceSet> 実装が不要でも、カスタムリソースファイル形式を使用する場合は、<xref:System.Resources.ResourceSet> クラスから派生させ、<xref:System.Resources.ResourceSet.GetDefaultReader%2A> および <xref:System.Resources.ResourceSet.GetDefaultWriter%2A> メソッドをオーバーライドして、その型をこのコンストラクターに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-444">If you do not want a specific <xref:System.Resources.ResourceSet> implementation, but would like to use a custom resource file format, you should derive from the <xref:System.Resources.ResourceSet> class, override the <xref:System.Resources.ResourceSet.GetDefaultReader%2A> and <xref:System.Resources.ResourceSet.GetDefaultWriter%2A> methods, and pass that type to this constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086cf-445">ASP.NET アプリでスタンドアロン .resources ファイルを使用すると、XCOPY による配置が中断されます。<xref:System.Resources.ResourceManager.ReleaseAllResources%2A> メソッドによって明示的に解放されるまで、リソースがロックされたままになるためです。</span><span class="sxs-lookup"><span data-stu-id="086cf-445">Using standalone .resources files in an ASP.NET app will break XCOPY deployment, because the resources remain locked until they are explicitly released by the <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> method.</span></span> <span data-ttu-id="086cf-446">ASP.NET アプリを使用してリソースをデプロイする場合は、.resources ファイルをサテライトアセンブリにコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="086cf-446">If you want to deploy resources with your ASP.NET apps, compile your .resources files into satellite assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-447"><paramref name="baseName" /> パラメーターまたは <paramref name="resourceDir" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-447">The <paramref name="baseName" /> or <paramref name="resourceDir" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-448"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-448">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-449"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-449">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FallbackLocation">
      <MemberSignature Language="C#" Value="protected System.Resources.UltimateResourceFallbackLocation FallbackLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Resources.UltimateResourceFallbackLocation FallbackLocation" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.FallbackLocation" />
      <MemberSignature Language="VB.NET" Value="Protected Property FallbackLocation As UltimateResourceFallbackLocation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Resources::UltimateResourceFallbackLocation FallbackLocation { System::Resources::UltimateResourceFallbackLocation get(); void set(System::Resources::UltimateResourceFallbackLocation value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackLocation : System.Resources.UltimateResourceFallbackLocation with get, set" Usage="System.Resources.ResourceManager.FallbackLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.UltimateResourceFallbackLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-450">既定のフォールバック リソースの取得元の場所を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-450">Gets or sets the location from which to retrieve default fallback resources.</span></span></summary>
        <value><span data-ttu-id="086cf-451">リソース マネージャーがフォールバック リソースを検索できる場所を指定する列挙値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="086cf-451">One of the enumeration values that specifies where the resource manager can look for fallback resources.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-452"><xref:System.Resources.ResourceManager.FallbackLocation%2A> プロパティは、<xref:System.Resources.ResourceManager> クラスから派生した独自のクラスを記述する場合にのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="086cf-452">The <xref:System.Resources.ResourceManager.FallbackLocation%2A> property is useful only if you write your own class that derives from the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 <span data-ttu-id="086cf-453"><xref:System.Resources.NeutralResourcesLanguageAttribute> 属性を使用して、アプリケーションの既定のカルチャを検索する場所をリソースマネージャーに通知できます。これは、メインアセンブリ (既定値) またはサテライトアセンブリ内で行います。</span><span class="sxs-lookup"><span data-stu-id="086cf-453">You can use the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute to inform the resource manager where to find the default culture for an app: in the main assembly (default) or in a satellite assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
        <altmember cref="T:System.Resources.NeutralResourcesLanguageAttribute" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="086cf-454">パッケージ化と配置 (リソースの)</span><span class="sxs-lookup"><span data-stu-id="086cf-454">Packaging and Deploying Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetNeutralResourcesLanguage">
      <MemberSignature Language="C#" Value="protected static System.Globalization.CultureInfo GetNeutralResourcesLanguage (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Globalization.CultureInfo GetNeutralResourcesLanguage(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetNeutralResourcesLanguage (a As Assembly) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Globalization::CultureInfo ^ GetNeutralResourcesLanguage(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetNeutralResourcesLanguage : System.Reflection.Assembly -&gt; System.Globalization.CultureInfo" Usage="System.Resources.ResourceManager.GetNeutralResourcesLanguage a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="086cf-455">カルチャ固有の情報を返すアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="086cf-455">The assembly for which to return culture-specific information.</span></span></param>
        <summary><span data-ttu-id="086cf-456">指定したアセンブリで <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> 属性の値を取得して、メイン アセンブリの既定のリソースのカルチャ固有の情報を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-456">Returns culture-specific information for the main assembly's default resources by retrieving the value of the <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> attribute on a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="086cf-457">見つかった場合は <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> 属性のカルチャ、それ以外の場合は、インバリアント カルチャ。</span><span class="sxs-lookup"><span data-stu-id="086cf-457">The culture from the <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> attribute, if found; otherwise, the invariant culture.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-458"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-458">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-459"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-459">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086cf-460">現在のカルチャの文字列以外の指定したリソースの値を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-460">Returns the value of the specified non-string resource for the current culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string -&gt; obj&#xA;override this.GetObject : string -&gt; obj" Usage="resourceManager.GetObject name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="086cf-461">取得するリソースの名前。</span><span class="sxs-lookup"><span data-stu-id="086cf-461">The name of the resource to get.</span></span></param>
        <summary><span data-ttu-id="086cf-462">指定した文字列以外のリソースの値を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-462">Returns the value of the specified non-string resource.</span></span></summary>
        <returns><span data-ttu-id="086cf-463">呼び出し元の現在のカルチャ用にローカライズされているリソースの値。</span><span class="sxs-lookup"><span data-stu-id="086cf-463">The value of the resource localized for the caller's current culture settings.</span></span> <span data-ttu-id="086cf-464">適切なリソース セットが存在するが、<paramref name="name" /> が見つからない場合、メソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-464">If an appropriate resource set exists but <paramref name="name" /> cannot be found, the method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-465"><xref:System.Resources.ResourceManager.GetObject%2A> メソッドは、文字列以外のリソースを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-465">The <xref:System.Resources.ResourceManager.GetObject%2A> method is used to retrieve non-string resources.</span></span> <span data-ttu-id="086cf-466">これには、<xref:System.Int32> や <xref:System.Double>などのプリミティブデータ型、ビットマップ (<xref:System.Drawing.Bitmap?displayProperty=nameWithType> オブジェクトなど)、シリアル化されたカスタムオブジェクトなどの値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="086cf-466">These include values that belong to primitive data types such as <xref:System.Int32> or <xref:System.Double>, bitmaps (such as a <xref:System.Drawing.Bitmap?displayProperty=nameWithType> object), or custom serialized objects.</span></span> <span data-ttu-id="086cf-467">通常、返されるオブジェクトは、適切な型C#のオブジェクトにキャスト (では) または変換 (Visual Basic) する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-467">Typically, the returned object must be cast (in C#) or converted (in Visual Basic) to an object of the appropriate type.</span></span>  
  
 <span data-ttu-id="086cf-468">返されたリソースは、現在のスレッドの UI カルチャにローカライズされます。これは、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-468">The returned resource is localized for the UI culture of the current thread, which is defined by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="086cf-469">リソースがそのカルチャ用にローカライズされていない場合、リソースマネージャーはフォールバック規則を使用して適切なリソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-469">If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="086cf-470">ローカライズされたリソースの使用可能なセットが見つからない場合、<xref:System.Resources.ResourceManager> は既定のカルチャのリソースにフォールバックします。</span><span class="sxs-lookup"><span data-stu-id="086cf-470">If no usable set of localized resources is found, the <xref:System.Resources.ResourceManager> falls back on the default culture's resources.</span></span> <span data-ttu-id="086cf-471">既定のカルチャのリソースセットが見つからない場合、メソッドは <xref:System.Resources.MissingManifestResourceException> 例外をスローします。また、リソースセットがサテライトアセンブリに存在することが予想される場合は、<xref:System.Resources.MissingSatelliteAssemblyException> 例外です。</span><span class="sxs-lookup"><span data-stu-id="086cf-471">If a resource set for the default culture is not found, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="086cf-472">リソースマネージャーが適切なリソースセットを読み込むことができても、`name`という名前のリソースが見つからない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-472">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="086cf-473"><xref:System.Resources.ResourceManager.IgnoreCase%2A> プロパティは、リソースの名前と `name` の比較で大文字と小文字を区別しないか、大文字と小文字を区別するか (既定値) を決定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-473">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive or case-sensitive (the default).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086cf-474">このメソッドは、一覧表示されているよりも多くの例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-474">This method can throw more exceptions than are listed.</span></span> <span data-ttu-id="086cf-475">このような場合に発生する原因の1つとして、このメソッドが呼び出すメソッドが例外をスローすることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="086cf-475">One reason this might occur is if a method that this method calls throws an exception.</span></span>  <span data-ttu-id="086cf-476">たとえば、サテライトアセンブリを配置またはインストールするときにエラーが発生した場合、またはユーザー定義型が逆シリアル化されたときにユーザー定義の例外がスローされた場合に、例外がスローされる可能性がある場合 <xref:System.Runtime.Serialization.SerializationException> は、<xref:System.IO.FileLoadException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-476">For example, a <xref:System.IO.FileLoadException> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <xref:System.Runtime.Serialization.SerializationException> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="086cf-477">パフォーマンスに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="086cf-477">Performance Considerations</span></span>  
 <span data-ttu-id="086cf-478">同じ `name` パラメーターを使用して <xref:System.Resources.ResourceManager.GetObject%2A> メソッドを複数回呼び出す場合は、メソッドに依存せずに、各呼び出しで同じオブジェクトへの参照を返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="086cf-478">If you call the <xref:System.Resources.ResourceManager.GetObject%2A> method multiple times with the same `name` parameter, do not depend on the method returning a reference to the same object with each call.</span></span> <span data-ttu-id="086cf-479">これは、<xref:System.Resources.ResourceManager.GetObject%2A> メソッドがキャッシュ内の既存のリソースオブジェクトへの参照を返すことができるため、またはリソースを再度読み込み、新しいリソースオブジェクトへの参照を返すことができるためです。</span><span class="sxs-lookup"><span data-stu-id="086cf-479">This is because the <xref:System.Resources.ResourceManager.GetObject%2A> method can return a reference to an existing resource object in a cache, or it can reload the resource and return a reference to a new resource object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-480">次の例では、 <xref:System.Resources.ResourceManager.GetObject%28System.String%29> メソッドを使用して、カスタム オブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-480">The following example uses the <xref:System.Resources.ResourceManager.GetObject%28System.String%29> method to deserialize a custom object.</span></span> <span data-ttu-id="086cf-481">この例には、`PersonTable`という名前の次の構造を定義する、UIElements.cs という名前のソースコードファイル (Visual Basic を使用している場合は UIElements .vb) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-481">The example includes a source code file named UIElements.cs (UIElements.vb if you're using Visual Basic) that defines the following structure named `PersonTable`.</span></span> <span data-ttu-id="086cf-482">この構造体は、ローカライズされたテーブル列名を表示する一般的なテーブル表示ルーチンでの使用を目的としています。</span><span class="sxs-lookup"><span data-stu-id="086cf-482">This structure is intended to be used by a general table display routine that displays the localized names of table columns.</span></span> <span data-ttu-id="086cf-483">`PersonTable` 構造体は、<xref:System.SerializableAttribute> 属性でマークされています。</span><span class="sxs-lookup"><span data-stu-id="086cf-483">Note that the `PersonTable` structure is marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#6](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example.cs#6)]
 [!code-vb[Conceptual.Resources.Retrieving#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#6)]  
  
 <span data-ttu-id="086cf-484">CreateResources.cs (Visual Basic の場合は CreateResources.vb) という名前のファイルに入っている次のコードは、UIResources.resx という名前の XML リソース ファイルを作成します。このリソース ファイルには、テーブルのタイトルに加えて、英語にローカライズされたアプリに関する情報を含む `PersonTable` オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-484">The following code from a file named CreateResources.cs (CreateResources.vb for Visual Basic) creates an XML resource file named UIResources.resx that stores a table title and a `PersonTable` object that contains information for an app that is localized for the English language.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#7](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example1.cs#7)]
 [!code-vb[Conceptual.Resources.Retrieving#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#7)]  
  
 <span data-ttu-id="086cf-485">GetObject.cs (GetObject.vb) という名前のソース コード ファイルに含まれる次のコードは、リソースを取得し、コンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-485">The following code in a source code file named GetObject.cs (GetObject.vb) then retrieves the resources and displays them to the console.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#8](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example2.cs#8)]
 [!code-vb[Conceptual.Resources.Retrieving#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example2.vb#8)]  
  
 <span data-ttu-id="086cf-486">次のバッチ ファイルを実行することで、必要なリソース ファイルとアセンブリをビルドし、アプリケーションを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="086cf-486">You can build the necessary resource file and assemblies and run the app by executing the following batch file.</span></span> <span data-ttu-id="086cf-487">`/r` 構造体に関する情報にアクセスできるように、 `PersonTable` オプションを使用して Resgen.exe を指定し、UIElements.dll への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-487">You must use the `/r` option to supply Resgen.exe with a reference to UIElements.dll so that it can access information about the `PersonTable` structure.</span></span> <span data-ttu-id="086cf-488">C# を使用している場合は、 `vbc` コンパイラ名を `csc`に置換し、 `.vb` 拡張子を `.cs`に置換します。</span><span class="sxs-lookup"><span data-stu-id="086cf-488">If you're using C#, replace the `vbc` compiler name with `csc`, and replace the `.vb` extension with `.cs`.</span></span>  
  
```  
  
vbc /t:library UIElements.vb  
vbc CreateResources.vb /r:UIElements.dll  
CreateResources  
  
resgen UIResources.resx  /r:UIElements.dll  
vbc GetObject.vb /r:UIElements.dll /resource:UIResources.resources  
  
GetObject.exe  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-489"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-489">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="086cf-490">使用できるローカライズされたリソースのセットが見つからず、既定のカルチャ リソースもありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-490">No usable set of localized resources has been found, and there are no default culture resources.</span></span> <span data-ttu-id="086cf-491">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-491">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException"><span data-ttu-id="086cf-492">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="086cf-492">The default culture's resources reside in a satellite assembly that could not be found.</span></span> <span data-ttu-id="086cf-493">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-493">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-494"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-494">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-495"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-495">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String)" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="086cf-496">パッケージ化と配置 (リソースの)</span><span class="sxs-lookup"><span data-stu-id="086cf-496">Packaging and Deploying Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetObject : string * System.Globalization.CultureInfo -&gt; obj" Usage="resourceManager.GetObject (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="086cf-497">取得するリソースの名前。</span><span class="sxs-lookup"><span data-stu-id="086cf-497">The name of the resource to get.</span></span></param>
        <param name="culture"><span data-ttu-id="086cf-498">リソースのローカライズ対象のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="086cf-498">The culture for which the resource is localized.</span></span> <span data-ttu-id="086cf-499">リソースがこのカルチャにローカライズされていない場合、リソース マネージャーはフォールバック規則を使用して適切なリソースを探します。</span><span class="sxs-lookup"><span data-stu-id="086cf-499">If the resource is not localized for this culture, the resource manager uses fallback rules to locate an appropriate resource.</span></span>  
  
<span data-ttu-id="086cf-500">この値が <see langword="null" /> の場合、<see cref="T:System.Globalization.CultureInfo" /> プロパティを使用して <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> オブジェクトが取得されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-500">If this value is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> object is obtained by using the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="086cf-501">指定されたカルチャ用にローカライズされている指定された文字列以外のリソースの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-501">Gets the value of the specified non-string resource localized for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="086cf-502">指定されたカルチャに合わせてローカライズされているリソースの値。</span><span class="sxs-lookup"><span data-stu-id="086cf-502">The value of the resource, localized for the specified culture.</span></span> <span data-ttu-id="086cf-503">適切なリソース セットが存在するが、<paramref name="name" /> が見つからない場合、メソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-503">If an appropriate resource set exists but <paramref name="name" /> cannot be found, the method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-504"><xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> メソッドは、文字列以外のリソースを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-504">The <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> method is used to retrieve non-string resources.</span></span> <span data-ttu-id="086cf-505">これには、<xref:System.Int32> や <xref:System.Double>などのプリミティブデータ型、ビットマップ (<xref:System.Drawing.Bitmap?displayProperty=nameWithType> オブジェクトなど)、シリアル化されたカスタムオブジェクトなどの値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="086cf-505">These include values that belong to primitive data types such as <xref:System.Int32> or <xref:System.Double>, bitmaps (such as a <xref:System.Drawing.Bitmap?displayProperty=nameWithType> object), or custom serialized objects.</span></span> <span data-ttu-id="086cf-506">通常、返されるオブジェクトは、適切な型C#のオブジェクトにキャスト (では) または変換 (Visual Basic) する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-506">Typically, the returned object must be cast (in C#) or converted (in Visual Basic) to an object of the appropriate type.</span></span>  
  
 <span data-ttu-id="086cf-507">返されるリソースは `culture`によって指定されるカルチャ、または `culture` が `null`場合に <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティで指定されるカルチャにローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-507">The returned resource is localized for the culture that is specified by `culture`, or for the culture that is specified by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property if `culture` is `null`.</span></span> <span data-ttu-id="086cf-508">リソースがそのカルチャ用にローカライズされていない場合、リソースマネージャーはフォールバック規則を使用して適切なリソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-508">If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="086cf-509">ローカライズされたリソースの使用可能なセットが見つからない場合、リソースマネージャーは既定のカルチャのリソースにフォールバックします。</span><span class="sxs-lookup"><span data-stu-id="086cf-509">If no usable set of localized resources is found, the resource manager falls back on the default culture's resources.</span></span> <span data-ttu-id="086cf-510">既定のカルチャのリソースセットが見つからない場合、メソッドは <xref:System.Resources.MissingManifestResourceException> 例外をスローします。また、リソースセットがサテライトアセンブリに存在することが予想される場合は、<xref:System.Resources.MissingSatelliteAssemblyException> 例外です。</span><span class="sxs-lookup"><span data-stu-id="086cf-510">If a resource set for the default culture is not found, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="086cf-511">リソースマネージャーが適切なリソースセットを読み込むことができても、`name`という名前のリソースが見つからない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-511">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="086cf-512"><xref:System.Resources.ResourceManager.IgnoreCase%2A> プロパティは、リソースの名前と `name` の比較で大文字と小文字を区別しないか (既定)、大文字と小文字を区別するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-512">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086cf-513">このメソッドは、一覧表示されているよりも多くの例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-513">This method can throw more exceptions than are listed.</span></span> <span data-ttu-id="086cf-514">このような場合に発生する原因の1つとして、このメソッドが呼び出すメソッドが例外をスローすることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="086cf-514">One reason this might occur is if a method that this method calls throws an exception.</span></span>  <span data-ttu-id="086cf-515">たとえば、サテライトアセンブリを配置またはインストールするときにエラーが発生した場合、またはユーザー定義型が逆シリアル化されたときにユーザー定義の例外がスローされた場合に、例外がスローされる可能性がある場合 <xref:System.Runtime.Serialization.SerializationException> は、<xref:System.IO.FileLoadException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-515">For example, a <xref:System.IO.FileLoadException> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <xref:System.Runtime.Serialization.SerializationException> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="086cf-516">パフォーマンスに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="086cf-516">Performance Considerations</span></span>  
 <span data-ttu-id="086cf-517">同じ `name` パラメーターを使用して <xref:System.Resources.ResourceManager.GetObject%2A> メソッドを複数回呼び出す場合は、メソッドに依存せずに、各呼び出しで同じオブジェクトへの参照を返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="086cf-517">If you call the <xref:System.Resources.ResourceManager.GetObject%2A> method multiple times with the same `name` parameter, do not depend on the method returning a reference to the same object with each call.</span></span> <span data-ttu-id="086cf-518">これは、<xref:System.Resources.ResourceManager.GetObject%2A> メソッドがキャッシュ内の既存のリソースオブジェクトへの参照を返すことができるため、またはリソースを再度読み込み、新しいリソースオブジェクトへの参照を返すことができるためです。</span><span class="sxs-lookup"><span data-stu-id="086cf-518">This is because the <xref:System.Resources.ResourceManager.GetObject%2A> method can return a reference to an existing resource object in a cache, or it can reload the resource and return a reference to a new resource object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-519">次の例では、 <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> メソッドを使用して、カスタム オブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="086cf-519">The following example uses the <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> method to deserialize a custom object.</span></span> <span data-ttu-id="086cf-520">この例には、`Numbers`という名前の次の構造を定義する NumberInfo.cs (Visual Basic を使用する場合は数値) という名前のソースコードファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-520">The example includes a source code file named NumberInfo.cs (NumberInfo.vb if you're using Visual Basic) that defines the following structure named `Numbers`.</span></span> <span data-ttu-id="086cf-521">この構造は、英語以外の人の生徒が英語で10にカウントする、簡単な教育用アプリによって使用されることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="086cf-521">This structure is intended to be used by a simple educational app that teaches non-English speaking students to count to ten in English.</span></span> <span data-ttu-id="086cf-522">`Numbers` クラスは <xref:System.SerializableAttribute> 属性でマークされていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-522">Note that the `Numbers` class is marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/numberinfo.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/numberinfo.vb#1)]  
  
 <span data-ttu-id="086cf-523">CreateResources.cs という名前のファイル (Visual Basic の場合は Createresources.vb) の次のソースコードでは、既定の英語用の XML リソースファイルと、フランス語、ポルトガル語、およびロシア語の言語が作成されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-523">The following source code from a file named CreateResources.cs (CreateResources.vb for Visual Basic) creates XML resource files for the default English language, as well as for the French, Portuguese, and Russian languages.</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/createresources.cs#2)]
 [!code-vb[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/createresources.vb#2)]  
  
 <span data-ttu-id="086cf-524">リソースは、現在の UI カルチャをフランス語 (フランス)、ポルトガル語 (ブラジル)、またはロシア語 (ロシア) に設定する次のアプリによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-524">The resources are consumed by the following app, which sets the current UI culture to French (France), Portuguese (Brazil), or Russian (Russia).</span></span> <span data-ttu-id="086cf-525"><xref:System.Resources.ResourceManager.GetObject%28System.String%29> メソッドを呼び出して、ローカライズされた数値を含む `Numbers` オブジェクトを取得し、<xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> メソッドを呼び出して、英語の言語番号を含む `Numbers` オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-525">It calls the <xref:System.Resources.ResourceManager.GetObject%28System.String%29> method to get a `Numbers` object that contains localized numbers and the <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> method to get a `Numbers` object that contains English language numbers.</span></span> <span data-ttu-id="086cf-526">次に、現在の UI カルチャと英語を使用して奇数の数値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-526">It then displays odd numbers using the current UI culture and the English language.</span></span> <span data-ttu-id="086cf-527">ソースコードファイルには、ShowNumbers.cs (ShowNumbers .vb) という名前が付けられています。</span><span class="sxs-lookup"><span data-stu-id="086cf-527">The source code file is named ShowNumbers.cs (ShowNumbers.vb).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/shownumbers.cs#3)]
 [!code-vb[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/shownumbers.vb#3)]  
  
 <span data-ttu-id="086cf-528">次のバッチファイルを使用すると、この例の Visual Basic バージョンをビルドして実行できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-528">You can use the following batch file to build and execute the Visual Basic version of the example.</span></span> <span data-ttu-id="086cf-529">を使用してC#いる場合は、`vbc` を `csc`に置き換え、`.vb` 拡張機能を `.cs`に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="086cf-529">If you're using C#, replace `vbc` with `csc`, and replace the `.vb` extension with `.cs`.</span></span>  
  
```  
  
vbc /t:library NumberInfo.vb  
  
vbc CreateResources.vb /r:NumberInfo.dll  
CreateResources  
  
resgen NumberResources.resx /r:NumberInfo.dll  
  
resgen NumberResources.fr.resx /r:Numberinfo.dll  
Md fr  
al /embed:NumberResources.fr.resources /culture:fr /t:lib /out:fr\ShowNumbers.resources.dll  
  
resgen NumberResources.pt.resx  /r:Numberinfo.dll  
Md pt  
al /embed:NumberResources.pt.resources /culture:pt /t:lib /out:pt\ShowNumbers.resources.dll  
  
resgen NumberResources.ru.resx /r:Numberinfo.dll  
Md ru  
al /embed:NumberResources.ru.resources /culture:ru /t:lib /out:ru\ShowNumbers.resources.dll  
  
vbc ShowNumbers.vb /r:NumberInfo.dll /resource:NumberResources.resources  
ShowNumbers.exe  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-530"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-530">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="086cf-531">使用できるリソースのセットが見つからず、既定のカルチャ リソースもありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-531">No usable set of resources have been found, and there are no default culture resources.</span></span> <span data-ttu-id="086cf-532">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-532">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException"><span data-ttu-id="086cf-533">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="086cf-533">The default culture's resources reside in a satellite assembly that could not be found.</span></span> <span data-ttu-id="086cf-534">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-534">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-535"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-535">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-536"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-536">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <threadsafe><span data-ttu-id="086cf-537"><see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" /> メソッドはスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="086cf-537">The <see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" /> method is thread safe.</span></span></threadsafe>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="086cf-538">パッケージ化と配置 (リソースの)</span><span class="sxs-lookup"><span data-stu-id="086cf-538">Packaging and Deploying Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResourceFileName">
      <MemberSignature Language="C#" Value="protected virtual string GetResourceFileName (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResourceFileName(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResourceFileName (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResourceFileName(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceFileName : System.Globalization.CultureInfo -&gt; string&#xA;override this.GetResourceFileName : System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetResourceFileName culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="086cf-539">リソース ファイル名を構築する対象のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="086cf-539">The culture object for which a resource file name is constructed.</span></span></param>
        <summary><span data-ttu-id="086cf-540">指定した <see cref="T:System.Globalization.CultureInfo" /> オブジェクトのリソース ファイルの名前を生成します。</span><span class="sxs-lookup"><span data-stu-id="086cf-540">Generates the name of the resource file for the given <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="086cf-541">指定した <see cref="T:System.Globalization.CultureInfo" /> オブジェクトのリソース ファイルに使用できる名前。</span><span class="sxs-lookup"><span data-stu-id="086cf-541">The name that can be used for a resource file for the given <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-542"><xref:System.Resources.ResourceManager.GetResourceFileName%2A> メソッドは、<xref:System.Resources.ResourceManager> クラスから派生した独自のクラスを記述する場合にのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="086cf-542">The <xref:System.Resources.ResourceManager.GetResourceFileName%2A> method is useful only if you write your own class that derives from the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 <span data-ttu-id="086cf-543">このメソッドは、インバリアントカルチャ以外のすべてのカルチャのファイル名の一部として、<xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-543">This method uses the <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> property as part of the file name for all cultures other than the invariant culture.</span></span> <span data-ttu-id="086cf-544">このメソッドは、アセンブリのマニフェストを参照したりディスクにタッチしたりするのではなく、リソースファイル名 (<xref:System.Resources.ResourceReader> コンストラクターへの引き渡しに適しています) またはマニフェストリソース blob 名を構築するためにのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-544">This method does not look in an assembly's manifest or touch the disk, and is used only to construct a resource file name (suitable for passing to the <xref:System.Resources.ResourceReader> constructor) or a manifest resource blob name.</span></span>  
  
 <span data-ttu-id="086cf-545">派生クラスは、このメソッドをオーバーライドして、"などの別の拡張機能を検索できます。ResX (リソースファイルに名前を付けるための完全に異なるスキーム)。</span><span class="sxs-lookup"><span data-stu-id="086cf-545">A derived class can override this method to look for a different extension, such as ".ResX", or a completely different scheme for naming resource files.</span></span> <span data-ttu-id="086cf-546">メソッドを使用して、サテライトアセンブリ内のリソースファイルの名前をカスタマイズしたり、サテライトアセンブリ自体の名前をカスタマイズしたりすることはできないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-546">Note that the method can be used to customize the name of a resource file within a satellite assembly, and not to customize the name of the satellite assembly itself.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-547"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-547">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-548"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-548">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md"><span data-ttu-id="086cf-549">.NET アプリケーションのグローバライズとローカライズ</span><span class="sxs-lookup"><span data-stu-id="086cf-549">Globalizing and localizing .NET applications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResourceSet">
      <MemberSignature Language="C#" Value="public virtual System.Resources.ResourceSet GetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Resources.ResourceSet GetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Resources::ResourceSet ^ GetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.GetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="tryParents" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="086cf-550">リソースが取得されるカルチャ。</span><span class="sxs-lookup"><span data-stu-id="086cf-550">The culture whose resources are to be retrieved.</span></span></param>
        <param name="createIfNotExists"><span data-ttu-id="086cf-551">リソース セットがまだ読み込まれていなければ読み込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="086cf-551"><see langword="true" /> to load the resource set, if it has not been loaded yet; otherwise, <see langword="false" />.</span></span></param>
        <param name="tryParents"><span data-ttu-id="086cf-552">リソース セットが見つからないときに、適切なリソースを読み込むためにリソース フォールバックを使用する場合は <see langword="true" />。リソース フォールバック プロセスをバイパスする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="086cf-552"><see langword="true" /> to use resource fallback to load an appropriate resource if the resource set cannot be found; <see langword="false" /> to bypass the resource fallback process.</span></span></param>
        <summary><span data-ttu-id="086cf-553">特定のカルチャのリソース セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-553">Retrieves the resource set for a particular culture.</span></span></summary>
        <returns><span data-ttu-id="086cf-554">指定されたカルチャに設定されたリソース。</span><span class="sxs-lookup"><span data-stu-id="086cf-554">The resource set for the specified culture.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-555">返されるリソースセットは、指定されたカルチャにローカライズされているリソースを表します。</span><span class="sxs-lookup"><span data-stu-id="086cf-555">The resource set that is returned represents the resources that are localized for the specified culture.</span></span> <span data-ttu-id="086cf-556">リソースがそのカルチャ用にローカライズされておらず、`tryParents` が `true`場合、<xref:System.Resources.ResourceManager.GetResourceSet%2A> はリソースフォールバックルールを使用して適切なリソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-556">If the resources have not been localized for that culture and `tryParents` is `true`, <xref:System.Resources.ResourceManager.GetResourceSet%2A> uses resource fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="086cf-557">`tryParents` が `false`、カルチャ固有のリソースセットが見つからない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-557">If `tryParents` is `false` and a culture-specific resource set cannot be found, the method returns `null`.</span></span> <span data-ttu-id="086cf-558">リソースフォールバックの詳細については、リソースの[パッケージ化とデプロイ](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)に関する記事の「リソースフォールバックプロセス」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-558">For more information about resource fallback, see "The Resource Fallback Process" section in the [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) article.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-559">次の例では、<xref:System.Resources.ResourceManager.GetResourceSet%2A> メソッドを呼び出して、フランス語 (フランス) カルチャのカルチャ固有のリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-559">The following example calls the <xref:System.Resources.ResourceManager.GetResourceSet%2A> method to retrieve culture-specific resources for the French (France) culture.</span></span> <span data-ttu-id="086cf-560">次に、リソースセット内のすべてのリソースを列挙します。</span><span class="sxs-lookup"><span data-stu-id="086cf-560">It then enumerates all of the resources in the resource set.</span></span> <span data-ttu-id="086cf-561">これには、ShowNumbers という名前の実行可能ファイルのソースコードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-561">It contains the source code for an executable named ShowNumbers.exe.</span></span> <span data-ttu-id="086cf-562">また、数値の名前を含む次の2つのテキストファイルも含まれます。</span><span class="sxs-lookup"><span data-stu-id="086cf-562">It also includes the following two text file that contain the names of numbers.</span></span> <span data-ttu-id="086cf-563">1つ目の Number Resources .txt には、英語の 1 ~ 10 の数値の名前が含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-563">The first, NumberResources.txt, contains the names of numbers from one to ten in the English language:</span></span>  
  
```  
  
one=one  
two=two  
three=three  
four=four  
five=five  
six=six  
seven=seven  
eight=eight  
nine=nine  
ten=ten  
  
```  
  
 <span data-ttu-id="086cf-564">2番目の NumberResources.fr には、フランス語の 1 ~ 4 の数値の名前が含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-564">The second, NumberResources.fr-FR.txt, contains the names of numbers from one to four in the French language:</span></span>  
  
```  
  
one=un  
two=deux  
three=trois  
four=quatre  
  
```  
  
 <span data-ttu-id="086cf-565">バッチファイルを使用してリソースファイルを生成し、その実行可能ファイルに英語のリソースファイルを埋め込み、フランス語の言語リソース用のサテライトアセンブリを作成できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-565">You can use a batch file to generate the resource files, embed the English language resource file into the executable, and create a satellite assembly for the French language resources.</span></span> <span data-ttu-id="086cf-566">Visual Basic コンパイラを使用して実行可能ファイルを生成するバッチファイルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-566">Here's the batch file to generate an executable by using the Visual Basic compiler:</span></span>  
  
```  
  
resgen NumberResources.txt  
vbc shownumbers.vb /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
```  
  
 <span data-ttu-id="086cf-567">C#コンパイラでは、次のバッチファイルを使用できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-567">For the C# compiler, you can use the following batch file:</span></span>  
  
```  
  
resgen NumberResources.txt  
csc shownumbers.cs /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/cs/shownumbers.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/vb/shownumbers.vb#1)]  
  
 <span data-ttu-id="086cf-568">`createIfNotExists` 引数の値を `false`に変更すると、Resource Manager によってフランス語の言語リソースがまだ読み込まれていないため、メソッドの呼び出しは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-568">Note that if you change the value of the `createIfNotExists` argument to `false`, the method call returns `null`, since Resource Manager has not already loaded the French language resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-569"><paramref name="culture" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-569">The <paramref name="culture" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="086cf-570"><paramref name="tryParents" /> が <see langword="true" /> で、使用できるリソースのセットが見つからず、既定のカルチャ リソースもありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-570"><paramref name="tryParents" /> is <see langword="true" />, no usable set of resources has been found, and there are no default culture resources.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-571"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-571">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-572"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-572">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md"><span data-ttu-id="086cf-573">.NET アプリケーションのグローバライズとローカライズ</span><span class="sxs-lookup"><span data-stu-id="086cf-573">Globalizing and localizing .NET applications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteContractVersion">
      <MemberSignature Language="C#" Value="protected static Version GetSatelliteContractVersion (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Version GetSatelliteContractVersion(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetSatelliteContractVersion (a As Assembly) As Version" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Version ^ GetSatelliteContractVersion(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetSatelliteContractVersion : System.Reflection.Assembly -&gt; Version" Usage="System.Resources.ResourceManager.GetSatelliteContractVersion a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="086cf-574"><see cref="T:System.Resources.SatelliteContractVersionAttribute" /> 属性を確認する対象のアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="086cf-574">The assembly to check for the <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> attribute.</span></span></param>
        <summary><span data-ttu-id="086cf-575">指定したアセンブリの <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> 属性で指定されたバージョンを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-575">Returns the version specified by the <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> attribute in the given assembly.</span></span></summary>
        <returns><span data-ttu-id="086cf-576">指定したアセンブリのサテライト コントラクト バージョン。バージョンが見つからなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="086cf-576">The satellite contract version of the given assembly, or <see langword="null" /> if no version was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-577">サテライトアセンブリのバージョン管理の詳細については、<xref:System.Resources.SatelliteContractVersionAttribute> リファレンスのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-577">For more information about satellite assembly versioning, see the <xref:System.Resources.SatelliteContractVersionAttribute> reference topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086cf-578">アセンブリの <see cref="T:System.Version" /> で見つかった <paramref name="a" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="086cf-578">The <see cref="T:System.Version" /> found in the assembly <paramref name="a" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-579"><paramref name="a" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-579"><paramref name="a" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-580"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-580">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-581"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-581">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086cf-582">指定したリソースからアンマネージ メモリ ストリーム オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-582">Returns an unmanaged memory stream object from a specified resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="086cf-583">リソースの名前。</span><span class="sxs-lookup"><span data-stu-id="086cf-583">The name of a resource.</span></span></param>
        <summary><span data-ttu-id="086cf-584">指定したリソースからアンマネージ メモリ ストリーム オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-584">Returns an unmanaged memory stream object from the specified resource.</span></span></summary>
        <returns><span data-ttu-id="086cf-585">リソースを表すアンマネージ メモリ ストリーム オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="086cf-585">An unmanaged memory stream object that represents a resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-586"><xref:System.Resources.ResourceManager.GetStream%2A> メソッドは、<xref:System.IO.MemoryStream> オブジェクトとして格納されているリソースの名前を受け取り、<xref:System.Object> リソースの値を取得して、<xref:System.IO.UnmanagedMemoryStream> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-586">The <xref:System.Resources.ResourceManager.GetStream%2A> method takes the name of a resource that is stored as a <xref:System.IO.MemoryStream> object, gets the value of the <xref:System.Object> resource, and returns an <xref:System.IO.UnmanagedMemoryStream> object.</span></span> <span data-ttu-id="086cf-587">この場合、バイトのストリームを直接操作してから、オブジェクトに変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-587">It requires that you work directly with a stream of bytes, which you then convert to an object.</span></span> <span data-ttu-id="086cf-588">このメソッドは、主にパフォーマンス上の理由から役立ちます。明示的なオブジェクトではなくバイトストリームとしてリソースを取得すると、パフォーマンスが向上する場合があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-588">This method is useful primarily for performance reasons: Retrieving a resource as a byte stream instead of an explicit object can improve performance.</span></span>  
  
 <span data-ttu-id="086cf-589">返されたリソースは、現在のスレッドの UI カルチャにローカライズされます。これは、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-589">The returned resource is localized for the UI culture of the current thread, which is defined by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="086cf-590">リソースがそのカルチャ用にローカライズされていない場合、リソースマネージャーはフォールバック規則を使用して適切なリソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-590">If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="086cf-591">ローカライズされたリソースの使用可能なセットが見つからない場合、<xref:System.Resources.ResourceManager> は既定のカルチャのリソースにフォールバックします。</span><span class="sxs-lookup"><span data-stu-id="086cf-591">If no usable set of localized resources is found, the <xref:System.Resources.ResourceManager> falls back on the default culture's resources.</span></span> <span data-ttu-id="086cf-592">既定のカルチャのリソースセットが見つからない場合、メソッドは <xref:System.Resources.MissingManifestResourceException> 例外をスローします。また、リソースセットがサテライトアセンブリに存在することが予想される場合は、<xref:System.Resources.MissingSatelliteAssemblyException> 例外です。</span><span class="sxs-lookup"><span data-stu-id="086cf-592">If a resource set for the default culture is not found, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="086cf-593">リソースマネージャーが適切なリソースセットを読み込むことができても、`name`という名前のリソースが見つからない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-593">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="086cf-594"><xref:System.Resources.ResourceManager.IgnoreCase%2A> プロパティは、リソースの名前と `name` の比較で大文字と小文字を区別しないか (既定)、大文字と小文字を区別するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-594">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-595">次の例では、 <xref:System.Resources.ResourceManager.GetStream%28System.String%29> メソッドを使用して、アプリの開始スプラッシュ ウィンドウで使用されるビットマップを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-595">The following example uses the <xref:System.Resources.ResourceManager.GetStream%28System.String%29> method to retrieve a bitmap that is used in an app's opening splash window.</span></span> <span data-ttu-id="086cf-596">CreateResources.cs (のC#場合) または createresources.vb (Visual Basic の場合) という名前のファイルからの次のソースコードでは、シリアル化されたイメージを含む AppResources という名前の .resx ファイルが生成されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-596">The following source code from a file named CreateResources.cs (for C#) or CreateResources.vb (for Visual Basic) generates a .resx file named AppResources.resx that contains the serialized image.</span></span> <span data-ttu-id="086cf-597">この場合、画像は SplashScreen.jpg という名前のファイルから読み込まれます。ファイル名を変更して、独自の画像に置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="086cf-597">In this case, the image is loaded from a file named SplashScreen.jpg; you can modify the file name to substitute your own image.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#4](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/createresources.cs#4)]
 [!code-vb[Conceptual.Resources.Retrieving#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/createresources.vb#4)]  
  
 <span data-ttu-id="086cf-598">GetStream.cs (のC#場合) または system.resources.resourcemanager.getstream (Visual Basic の場合) という名前のファイルの次のコードは、リソースを取得し、そのイメージを <xref:System.Windows.Forms.PictureBox?displayProperty=nameWithType> コントロールに表示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-598">The following code from a file named GetStream.cs (for C#) or GetStream.vb (for Visual Basic) then retrieves the resource and displays the image in a <xref:System.Windows.Forms.PictureBox?displayProperty=nameWithType> control.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#5](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/getstream.cs#5)]
 [!code-vb[Conceptual.Resources.Retrieving#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/getstream.vb#5)]  
  
 <span data-ttu-id="086cf-599">次のバッチ ファイルを使用すると、C# の例をビルドできます。</span><span class="sxs-lookup"><span data-stu-id="086cf-599">You can use the following batch file to build the C# example.</span></span> <span data-ttu-id="086cf-600">Visual Basic の場合は、`csc` を `vbc` に変更し、さらにソース コード ファイルの拡張子を `.cs` から `.vb` に変更します。</span><span class="sxs-lookup"><span data-stu-id="086cf-600">For Visual Basic, change `csc` to `vbc`, and change the extension of the source code file from `.cs` to `.vb`.</span></span> 
  
```  
  
csc CreateResources.cs  
CreateResources  
  
resgen AppResources.resx  
  
csc GetStream.cs /resource:AppResources.resources  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="086cf-601">指定されたリソースの値が <see cref="T:System.IO.MemoryStream" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-601">The value of the specified resource is not a <see cref="T:System.IO.MemoryStream" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-602"><paramref name="name" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-602"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="086cf-603">使用できるリソースのセットが見つからず、既定のリソースもありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-603">No usable set of resources is found, and there are no default resources.</span></span> <span data-ttu-id="086cf-604">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-604">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException"><span data-ttu-id="086cf-605">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="086cf-605">The default culture's resources reside in a satellite assembly that could not be found.</span></span> <span data-ttu-id="086cf-606">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-606">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-607"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-607">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-608"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-608">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String, culture As CultureInfo) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string * System.Globalization.CultureInfo -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="086cf-609">リソースの名前。</span><span class="sxs-lookup"><span data-stu-id="086cf-609">The name of a resource.</span></span></param>
        <param name="culture"><span data-ttu-id="086cf-610">リソース検索に使用するカルチャを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="086cf-610">An  object that specifies the culture to use for the resource lookup.</span></span> <span data-ttu-id="086cf-611"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドのカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-611">If <paramref name="culture" /> is <see langword="null" />, the culture for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="086cf-612">指定したカルチャを使用し、指定したリソースからアンマネージ メモリ ストリーム オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-612">Returns an unmanaged memory stream object from the specified resource, using the specified culture.</span></span></summary>
        <returns><span data-ttu-id="086cf-613">リソースを表すアンマネージ メモリ ストリーム オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="086cf-613">An unmanaged memory stream object that represents a resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-614"><xref:System.Resources.ResourceManager.GetStream%2A> メソッドは、<xref:System.IO.MemoryStream> オブジェクトとして格納されているリソースの名前を受け取り、<xref:System.Object> リソースの値を取得して、<xref:System.IO.UnmanagedMemoryStream> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-614">The <xref:System.Resources.ResourceManager.GetStream%2A> method takes the name of a resource that is stored as a <xref:System.IO.MemoryStream> object, gets the value of the <xref:System.Object> resource, and returns an <xref:System.IO.UnmanagedMemoryStream> object.</span></span> <span data-ttu-id="086cf-615">この場合、バイトのストリームを直接操作してから、オブジェクトに変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-615">It requires that you work directly with a stream of bytes, which you then convert to an object.</span></span> <span data-ttu-id="086cf-616">このメソッドは、主にパフォーマンス上の理由から役立ちます。明示的なオブジェクトではなくバイトストリームとしてリソースを取得すると、パフォーマンスが向上する場合があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-616">This method is useful primarily for performance reasons: Retrieving a resource as a byte stream instead of an explicit object can improve performance.</span></span>  
  
 <span data-ttu-id="086cf-617">返されるリソースは `culture`によって指定されるカルチャ、または `culture` が `null`場合に <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティで指定されるカルチャにローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-617">The returned resource is localized for the culture that is specified by `culture`, or for the culture that is specified by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property if `culture` is `null`.</span></span> <span data-ttu-id="086cf-618">リソースがそのカルチャ用にローカライズされていない場合、リソースマネージャーはフォールバック規則を使用して適切なリソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="086cf-618">If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="086cf-619">ローカライズされたリソースの使用可能なセットが見つからない場合、<xref:System.Resources.ResourceManager> は既定のカルチャのリソースにフォールバックします。</span><span class="sxs-lookup"><span data-stu-id="086cf-619">If no usable set of localized resources is found, the <xref:System.Resources.ResourceManager> falls back on the default culture's resources.</span></span> <span data-ttu-id="086cf-620">既定のカルチャのリソースセットが見つからない場合、メソッドは <xref:System.Resources.MissingManifestResourceException> 例外をスローします。また、リソースセットがサテライトアセンブリに存在することが予想される場合は、<xref:System.Resources.MissingSatelliteAssemblyException> 例外です。</span><span class="sxs-lookup"><span data-stu-id="086cf-620">If a resource set for the default culture is not found, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="086cf-621">リソースマネージャーが適切なリソースセットを読み込むことができても、`name`という名前のリソースが見つからない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-621">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="086cf-622"><xref:System.Resources.ResourceManager.IgnoreCase%2A> プロパティは、リソースの名前と `name` の比較で大文字と小文字を区別しないか (既定)、大文字と小文字を区別するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-622">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="086cf-623">指定されたリソースの値が <see cref="T:System.IO.MemoryStream" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-623">The value of the specified resource is not a <see cref="T:System.IO.MemoryStream" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-624"><paramref name="name" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-624"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="086cf-625">使用できるリソースのセットが見つからず、既定のリソースもありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-625">No usable set of resources is found, and there are no default resources.</span></span> <span data-ttu-id="086cf-626">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-626">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException"><span data-ttu-id="086cf-627">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="086cf-627">The default culture's resources reside in a satellite assembly that could not be found.</span></span> <span data-ttu-id="086cf-628">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-628">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-629"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-629">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-630"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-630">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086cf-631">指定したカルチャまたは現在の UI カルチャの指定した文字列リソースを返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-631">Returns the specified string resource for the specified culture or current UI culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (string name);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(string name) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (name As String) As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::String ^ name);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="F#" Value="member this.GetString : string -&gt; string" Usage="resourceManager.GetString name" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetString : string -&gt; string&#xA;override this.GetString : string -&gt; string" Usage="resourceManager.GetString name" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="086cf-632">取得するリソースの名前。</span><span class="sxs-lookup"><span data-stu-id="086cf-632">The name of the resource to retrieve.</span></span></param>
        <summary><span data-ttu-id="086cf-633">指定されている文字列リソースの値を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-633">Returns the value of the specified string resource.</span></span></summary>
        <returns><span data-ttu-id="086cf-634">呼び出し元の現在の UI カルチャのためにローカライズされたリソースの値、または、リソース セットで <see langword="null" /> が見つからない場合は <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="086cf-634">The value of the resource localized for the caller's current UI culture, or <see langword="null" /> if <paramref name="name" /> cannot be found in a resource set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a><span data-ttu-id="086cf-635">デスクトップアプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-635">Desktop Apps</span></span>  
 <span data-ttu-id="086cf-636">デスクトップアプリでは、返されるリソースは、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティで定義されているように、現在のスレッドの UI カルチャにローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-636">In desktop apps, the resource that is returned is localized for the UI culture of the current thread, as defined by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="086cf-637">リソースがローカライズされていない場合は、リソースの[パッケージ化とデプロイ](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)に関する記事の「リソースフォールバックプロセス」セクションに記載されている手順に従って、リソースをプローブします。</span><span class="sxs-lookup"><span data-stu-id="086cf-637">If the resource has not been localized for that culture, the resource manager probes for a resource by following the steps outlined in the "Resource Fallback Process" section of the [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) article.</span></span> <span data-ttu-id="086cf-638">ローカライズされたリソースの使用可能なセットが見つからない場合、リソースマネージャーは既定のカルチャのリソースにフォールバックします。</span><span class="sxs-lookup"><span data-stu-id="086cf-638">If no usable set of localized resources is found, the resource manager falls back on the default culture's resources.</span></span> <span data-ttu-id="086cf-639">リソースマネージャーが既定のカルチャのリソースセットを読み込むことができない場合、メソッドは <xref:System.Resources.MissingManifestResourceException> 例外をスローします。また、リソースセットがサテライトアセンブリに存在することが予想される場合は、<xref:System.Resources.MissingSatelliteAssemblyException> の例外です。</span><span class="sxs-lookup"><span data-stu-id="086cf-639">If the resource manager cannot load the default culture's resource set, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="086cf-640">リソースマネージャーが適切なリソースセットを読み込むことができても、`name`という名前のリソースが見つからない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-640">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="086cf-641"><xref:System.Resources.ResourceManager.IgnoreCase%2A> プロパティは、リソースの名前と `name` の比較で大文字と小文字を区別しないか (既定)、大文字と小文字を区別するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-641">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086cf-642">このメソッドは、一覧表示されているよりも多くの例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-642">This method can throw more exceptions than are listed.</span></span> <span data-ttu-id="086cf-643">このような場合に発生する原因の1つとして、このメソッドが呼び出すメソッドが例外をスローすることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="086cf-643">One reason this might occur is if a method that this method calls throws an exception.</span></span>  <span data-ttu-id="086cf-644">たとえば、サテライトアセンブリを配置またはインストールするときにエラーが発生した場合、またはユーザー定義型が逆シリアル化されたときにユーザー定義の例外がスローされた場合に、例外がスローされる可能性がある場合 <xref:System.Runtime.Serialization.SerializationException> は、<xref:System.IO.FileLoadException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-644">For example, a <xref:System.IO.FileLoadException> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <xref:System.Runtime.Serialization.SerializationException> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.</span></span>  
  
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] <span data-ttu-id="086cf-645">アプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-645">Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086cf-646"><xref:System.Resources.ResourceManager> クラスは [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでサポートされていますが、その使用は推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="086cf-646">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="086cf-647">[!INCLUDE[net_portable](~/includes/net-portable-md.md)] アプリで使用できる[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]を開発する場合にのみ、このクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-647">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="086cf-648">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリのリソースを取得するには、[Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) クラスを代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-648">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="086cf-649">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでは、<xref:System.Resources.ResourceManager.GetString%28System.String%29> メソッドは、呼び出し元の現在の UI カルチャ設定にローカライズされた `name` 文字列リソースの値を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-649">In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, the <xref:System.Resources.ResourceManager.GetString%28System.String%29> method returns the value of the `name` string resource, localized for the caller's current UI culture settings.</span></span> <span data-ttu-id="086cf-650">カルチャの一覧は、オペレーティングシステムの優先する UI 言語の一覧から取得されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-650">The list of cultures is derived from the operating system's preferred UI language list.</span></span> <span data-ttu-id="086cf-651">リソースマネージャーが `name`と一致しない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-651">If the resource manager cannot match `name`, the method returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-652">次の例では、<xref:System.Resources.ResourceManager.GetString%2A> メソッドを使用して、カルチャ固有のリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-652">The following example uses the <xref:System.Resources.ResourceManager.GetString%2A> method to retrieve culture-specific resources.</span></span> <span data-ttu-id="086cf-653">これは、英語 (en)、フランス語 (フランス) (fr-FR)、およびロシア語 (ロシア) (ru-RU) の .txt ファイルからコンパイルされたリソースで構成されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-653">It consists of resources compiled from .txt files for the English (en), French (France) (fr-FR), and Russian (Russia) (ru-RU) cultures.</span></span> <span data-ttu-id="086cf-654">例では、現在のカルチャと現在の UI カルチャを、英語 (米国)、フランス語 (フランス)、ロシア語 (ロシア)、およびスウェーデン語 (スウェーデン) に変更します。</span><span class="sxs-lookup"><span data-stu-id="086cf-654">The example changes the current culture and current UI culture to English (United States), French (France), Russian (Russia), and Swedish (Sweden).</span></span> <span data-ttu-id="086cf-655">それから、<xref:System.Resources.ResourceManager.GetString%2A> メソッドを呼び出して、ローカライズされた文字列を取得します。この文字列は現在の日付と月と一緒に表示されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-655">It then calls the <xref:System.Resources.ResourceManager.GetString%2A> method to retrieve the localized string, which it displays along with the current day and month.</span></span> <span data-ttu-id="086cf-656">現在の UI カルチャがスウェーデン語 (スウェーデン) である場合を除き、適切なローカライズされた文字列が出力に表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-656">Notice that the output displays the appropriate localized string except when the current UI culture is Swedish (Sweden).</span></span> <span data-ttu-id="086cf-657">スウェーデン語の言語リソースが利用できないため、アプリは代わりに既定のカルチャである英語のリソースを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-657">Because Swedish language resources are unavailable, the app instead uses the resources of the default culture, which is English.</span></span> <span data-ttu-id="086cf-658">例には、次の表に記載されたテキスト ベースのリソース ファイルが必要です。</span><span class="sxs-lookup"><span data-stu-id="086cf-658">The example requires the text-based resource files listed in following table.</span></span> <span data-ttu-id="086cf-659">それぞれには `DateStart` という名前の唯一の文字列リソースがあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-659">Each has a single string resource named `DateStart`.</span></span>  
  
|<span data-ttu-id="086cf-660">カルチャ</span><span class="sxs-lookup"><span data-stu-id="086cf-660">Culture</span></span>|<span data-ttu-id="086cf-661">ファイル名</span><span class="sxs-lookup"><span data-stu-id="086cf-661">File name</span></span>|<span data-ttu-id="086cf-662">リソース名</span><span class="sxs-lookup"><span data-stu-id="086cf-662">Resource name</span></span>|<span data-ttu-id="086cf-663">リソースの値</span><span class="sxs-lookup"><span data-stu-id="086cf-663">Resource value</span></span>|  
|-------------|---------------|-------------------|--------------------|  
|<span data-ttu-id="086cf-664">en-US</span><span class="sxs-lookup"><span data-stu-id="086cf-664">en-US</span></span>|<span data-ttu-id="086cf-665">DateStrings.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-665">DateStrings.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-666">Today is</span><span class="sxs-lookup"><span data-stu-id="086cf-666">Today is</span></span>|  
|<span data-ttu-id="086cf-667">fr-FR</span><span class="sxs-lookup"><span data-stu-id="086cf-667">fr-FR</span></span>|<span data-ttu-id="086cf-668">DateStrings.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-668">DateStrings.fr-FR.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-669">Aujourd'hui、c' est le</span><span class="sxs-lookup"><span data-stu-id="086cf-669">Aujourd'hui, c'est le</span></span>|  
|<span data-ttu-id="086cf-670">ru-RU</span><span class="sxs-lookup"><span data-stu-id="086cf-670">ru-RU</span></span>|<span data-ttu-id="086cf-671">DateStrings.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-671">DateStrings.ru-RU.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-672">Сегодня</span><span class="sxs-lookup"><span data-stu-id="086cf-672">Сегодня</span></span>|  
  
 <span data-ttu-id="086cf-673">このC#例をコンパイルするには、次のバッチファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-673">You can use the following batch file to compile the C# example.</span></span> <span data-ttu-id="086cf-674">Visual Basic の場合は、`csc` を `vbc` に変更し、さらにソース コード ファイルの拡張子を `.cs` から `.vb` に変更します。</span><span class="sxs-lookup"><span data-stu-id="086cf-674">For Visual Basic, change `csc` to `vbc`, and change the extension of the source code file from `.cs` to `.vb`.</span></span>  
  
```  
resgen DateStrings.txt  
csc showdate.cs /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 <span data-ttu-id="086cf-675">例のソースコードを次に示します (Visual Basic バージョンの場合は ShowDate .vb、 C#バージョンの場合は ShowDate.cs)。</span><span class="sxs-lookup"><span data-stu-id="086cf-675">Here's the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-676"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-676">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="086cf-677">指定されたリソースの値が文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-677">The value of the specified resource is not a string.</span></span></exception>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="086cf-678">使用できるリソースのセットが見つからず、既定のカルチャ用のリソースもありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-678">No usable set of resources has been found, and there are no resources for the default culture.</span></span> <span data-ttu-id="086cf-679">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-679">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException"><span data-ttu-id="086cf-680">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="086cf-680">The default culture's resources reside in a satellite assembly that could not be found.</span></span> <span data-ttu-id="086cf-681">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-681">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-682"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-682">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-683"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-683">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <threadsafe><span data-ttu-id="086cf-684"><see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> メソッドはスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="086cf-684">The <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> method is thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="086cf-685">パッケージ化と配置 (リソースの)</span><span class="sxs-lookup"><span data-stu-id="086cf-685">Packaging and Deploying Resources</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/eca16922-1c46-4f68-aefe-e7a12283641f"><span data-ttu-id="086cf-686">サテライトアセンブリ内のリソースの取得</span><span class="sxs-lookup"><span data-stu-id="086cf-686">Retrieving Resources in Satellite Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string * System.Globalization.CultureInfo -&gt; string&#xA;override this.GetString : string * System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetString (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="086cf-687">取得するリソースの名前。</span><span class="sxs-lookup"><span data-stu-id="086cf-687">The name of the resource to retrieve.</span></span></param>
        <param name="culture"><span data-ttu-id="086cf-688">リソースのローカライズ先のカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="086cf-688">An object that represents the culture for which the resource is localized.</span></span></param>
        <summary><span data-ttu-id="086cf-689">指定したカルチャにローカライズされている文字列リソースの値を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-689">Returns the value of the string resource localized for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="086cf-690">指定されたカルチャのためにローカライズされたリソースの値、または、リソース セットで <see langword="null" /> が見つからない場合は <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="086cf-690">The value of the resource localized for the specified culture, or <see langword="null" /> if <paramref name="name" /> cannot be found in a resource set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a><span data-ttu-id="086cf-691">デスクトップアプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-691">Desktop Apps</span></span>  
 <span data-ttu-id="086cf-692">デスクトップアプリで `culture` が `null`場合、<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> メソッドは <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティから取得した現在の UI カルチャを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-692">In desktop apps, if `culture` is `null`, the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> method uses the current UI culture obtained from the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="086cf-693">返されるリソースは、`culture` パラメーターによって指定されたカルチャにローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-693">The resource that is returned is localized for the culture specified by the `culture` parameter.</span></span> <span data-ttu-id="086cf-694">リソースが `culture`にローカライズされていない場合、リソースの[パッケージ化と配置](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)に関するトピックの「リソースフォールバックプロセス」に記載されている手順に従って、リソースマネージャーがリソースをプローブします。</span><span class="sxs-lookup"><span data-stu-id="086cf-694">If the resource has not been localized for `culture`, the resource manager probes for a resource by following the steps outlined in the "Resource Fallback Process" section of the [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topic.</span></span> <span data-ttu-id="086cf-695">使用できるリソースのセットが見つからない場合、リソースマネージャーは既定のカルチャのリソースにフォールバックします。</span><span class="sxs-lookup"><span data-stu-id="086cf-695">If no usable set of resources is found, the resource manager falls back on the default culture's resources.</span></span> <span data-ttu-id="086cf-696">リソースマネージャーが既定のカルチャのリソースセットを読み込むことができない場合、メソッドは <xref:System.Resources.MissingManifestResourceException> 例外をスローします。また、リソースセットがサテライトアセンブリに存在することが予想される場合は、<xref:System.Resources.MissingSatelliteAssemblyException> の例外です。</span><span class="sxs-lookup"><span data-stu-id="086cf-696">If the resource manager cannot load the default culture's resource set, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="086cf-697">リソースマネージャーが適切なリソースセットを読み込むことができても、`name`という名前のリソースが見つからない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-697">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="086cf-698"><xref:System.Resources.ResourceManager.IgnoreCase%2A> プロパティは、リソースの名前と `name` の比較で大文字と小文字を区別しないか (既定)、大文字と小文字を区別するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-698">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086cf-699">このメソッドは、一覧表示されているよりも多くの例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-699">This method can throw more exceptions than are listed.</span></span> <span data-ttu-id="086cf-700">このような場合に発生する原因の1つとして、このメソッドが呼び出すメソッドが例外をスローすることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="086cf-700">One reason this might occur is if a method that this method calls throws an exception.</span></span>  <span data-ttu-id="086cf-701">たとえば、サテライトアセンブリを配置またはインストールするときにエラーが発生した場合、またはユーザー定義型が逆シリアル化されたときにユーザー定義の例外がスローされた場合に、例外がスローされる可能性がある場合 <xref:System.Runtime.Serialization.SerializationException> は、<xref:System.IO.FileLoadException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-701">For example, a <xref:System.IO.FileLoadException> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <xref:System.Runtime.Serialization.SerializationException> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.</span></span>  
  
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] <span data-ttu-id="086cf-702">アプリ</span><span class="sxs-lookup"><span data-stu-id="086cf-702">Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086cf-703"><xref:System.Resources.ResourceManager> クラスは [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでサポートされていますが、その使用は推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="086cf-703">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="086cf-704">[!INCLUDE[net_portable](~/includes/net-portable-md.md)] アプリで使用できる[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]を開発する場合にのみ、このクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-704">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="086cf-705">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリのリソースを取得するには、[Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) クラスを代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-705">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="086cf-706">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでは、<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> メソッドは、`culture` パラメーターによって指定されたカルチャにローカライズされた `name` 文字列リソースの値を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-706">In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> method returns the value of the `name` string resource, localized for the culture specified by the `culture` parameter.</span></span> <span data-ttu-id="086cf-707">リソースが `culture` カルチャ用にローカライズされていない場合、参照は [!INCLUDE[win8](~/includes/win8-md.md)] の言語フォールバックリスト全体を使用し、既定のカルチャを確認した後に停止します。</span><span class="sxs-lookup"><span data-stu-id="086cf-707">If the resource is not localized for the `culture` culture, the lookup uses the entire [!INCLUDE[win8](~/includes/win8-md.md)] language fallback list, and stops after looking in the default culture.</span></span> <span data-ttu-id="086cf-708">リソースマネージャーが `name`と一致しない場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="086cf-708">If the resource manager cannot match `name`, the method returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086cf-709">次の例では、<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> メソッドを使用して、カルチャ固有のリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-709">The following example uses the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> method to retrieve culture-specific resources.</span></span> <span data-ttu-id="086cf-710">この例の既定のカルチャは英語 (en) で、フランス語 (フランス) (fr-fr) カルチャおよびロシア語 (ロシア) (ru) カルチャ用のサテライトアセンブリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="086cf-710">The example's default culture is English (en), and it includes satellite assemblies for the French (France) (fr-FR) and Russian (Russia) (ru-RU) cultures.</span></span> <span data-ttu-id="086cf-711">この例では、<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>を呼び出す前に、現在のカルチャと現在の UI カルチャをロシア語 (ロシア) に変更します。</span><span class="sxs-lookup"><span data-stu-id="086cf-711">The example changes the current culture and current UI culture to Russian (Russia) before calling <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>.</span></span> <span data-ttu-id="086cf-712">次に、<xref:System.Resources.ResourceManager.GetString%2A> メソッドと <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出し、フランス語 (フランス) とスウェーデン語 (スウェーデン) のカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを各メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="086cf-712">It then calls the <xref:System.Resources.ResourceManager.GetString%2A> method and the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method and passes <xref:System.Globalization.CultureInfo> objects that represent the French (France) and Swedish (Sweden) cultures to each method.</span></span> <span data-ttu-id="086cf-713">この出力では、<xref:System.Resources.ResourceManager.GetString%2A> メソッドがフランス語の言語リソースを取得できるため、月の月と日、およびその前にある文字列がフランス語で表示されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-713">In the output, the month and day of the month as well as the string that precedes them appear in French, because the <xref:System.Resources.ResourceManager.GetString%2A> method is able to retrieve the French language resource.</span></span> <span data-ttu-id="086cf-714">ただし、スウェーデン語 (スウェーデン) カルチャが使用されている場合、月の月と日はスウェーデン語で表示されますが、その前にある文字列は英語で表されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-714">However, when the Swedish (Sweden) culture is used, the month and day of the month appear in Swedish, although the string that precedes them is in English.</span></span> <span data-ttu-id="086cf-715">これは、リソースマネージャーがローカライズされたスウェーデン語のリソースを見つけることができないため、代わりに既定の英語カルチャのリソースを返すためです。</span><span class="sxs-lookup"><span data-stu-id="086cf-715">This is because the resource manager cannot find localized Swedish language resources, so it returns a resource for the default English culture instead.</span></span>  
  
 <span data-ttu-id="086cf-716">例には、次の表に記載されたテキスト ベースのリソース ファイルが必要です。</span><span class="sxs-lookup"><span data-stu-id="086cf-716">The example requires the text-based resource files listed in following table.</span></span> <span data-ttu-id="086cf-717">それぞれには `DateStart` という名前の唯一の文字列リソースがあります。</span><span class="sxs-lookup"><span data-stu-id="086cf-717">Each has a single string resource named `DateStart`.</span></span>  
  
|<span data-ttu-id="086cf-718">カルチャ</span><span class="sxs-lookup"><span data-stu-id="086cf-718">Culture</span></span>|<span data-ttu-id="086cf-719">ファイル名</span><span class="sxs-lookup"><span data-stu-id="086cf-719">File name</span></span>|<span data-ttu-id="086cf-720">リソース名</span><span class="sxs-lookup"><span data-stu-id="086cf-720">Resource name</span></span>|<span data-ttu-id="086cf-721">リソースの値</span><span class="sxs-lookup"><span data-stu-id="086cf-721">Resource value</span></span>|  
|-------------|---------------|-------------------|--------------------|  
|<span data-ttu-id="086cf-722">en-US</span><span class="sxs-lookup"><span data-stu-id="086cf-722">en-US</span></span>|<span data-ttu-id="086cf-723">DateStrings.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-723">DateStrings.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-724">Today is</span><span class="sxs-lookup"><span data-stu-id="086cf-724">Today is</span></span>|  
|<span data-ttu-id="086cf-725">fr-FR</span><span class="sxs-lookup"><span data-stu-id="086cf-725">fr-FR</span></span>|<span data-ttu-id="086cf-726">DateStrings.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-726">DateStrings.fr-FR.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-727">Aujourd'hui、c' est le</span><span class="sxs-lookup"><span data-stu-id="086cf-727">Aujourd'hui, c'est le</span></span>|  
|<span data-ttu-id="086cf-728">ru-RU</span><span class="sxs-lookup"><span data-stu-id="086cf-728">ru-RU</span></span>|<span data-ttu-id="086cf-729">DateStrings.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="086cf-729">DateStrings.ru-RU.txt</span></span>|`DateStart`|<span data-ttu-id="086cf-730">Сегодня</span><span class="sxs-lookup"><span data-stu-id="086cf-730">Сегодня</span></span>|  
  
 <span data-ttu-id="086cf-731">次のバッチファイルを使用すると、Visual Basic の例をコンパイルできます。</span><span class="sxs-lookup"><span data-stu-id="086cf-731">You can use the following batch file to compile the Visual Basic example.</span></span> <span data-ttu-id="086cf-732">でC#コンパイルするには、`vbc` を `csc`に変更し、ソースコードファイルの拡張子を `.vb` から `.cs`に変更します。</span><span class="sxs-lookup"><span data-stu-id="086cf-732">To compile in C#, change `vbc` to `csc`, and change the extension of the source code file from `.vb` to `.cs`.</span></span>  
  
```  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 <span data-ttu-id="086cf-733">例のソースコードを次に示します (Visual Basic バージョンの場合は ShowDate .vb、 C#バージョンの場合は ShowDate.cs)。</span><span class="sxs-lookup"><span data-stu-id="086cf-733">Here's the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate2.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086cf-734"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="086cf-734">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="086cf-735">指定されたリソースの値が文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-735">The value of the specified resource is not a string.</span></span></exception>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="086cf-736">使用できるリソースのセットが見つからず、既定のカルチャ用のリソースもありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-736">No usable set of resources has been found, and there are no resources for a default culture.</span></span> <span data-ttu-id="086cf-737">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-737">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException"><span data-ttu-id="086cf-738">既定のカルチャのリソースがサテライト アセンブリに存在し、そのサテライト アセンブリが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="086cf-738">The default culture's resources reside in a satellite assembly that could not be found.</span></span> <span data-ttu-id="086cf-739">この例外の処理方法の詳細については、<see cref="T:System.Resources.ResourceManager" /> クラスのトピックの MissingManifestResourceException 例外と MissingSatelliteAssemblyException 例外の処理に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-739">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-740"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-740">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-741"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-741">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <threadsafe><span data-ttu-id="086cf-742"><see cref="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" /> メソッドはスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="086cf-742">The <see cref="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" /> method is thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="086cf-743">パッケージ化と配置 (リソースの)</span><span class="sxs-lookup"><span data-stu-id="086cf-743">Packaging and Deploying Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HeaderVersionNumber">
      <MemberSignature Language="C#" Value="public static readonly int HeaderVersionNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HeaderVersionNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderVersionNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HeaderVersionNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderVersionNumber : int" Usage="System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-744"><see cref="T:System.Resources.ResourceManager" /> の現在の実装が解釈および作成できるリソース ファイル ヘッダーのバージョンを指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-744">Specifies the version of resource file headers that the current implementation of <see cref="T:System.Resources.ResourceManager" /> can interpret and produce.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IgnoreCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IgnoreCase { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreCase : bool with get, set" Usage="System.Resources.ResourceManager.IgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-745">リソース マネージャーが <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> メソッドと <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> メソッドで大文字と小文字を区別しないリソースの検索を許可しているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-745">Gets or sets a value that indicates whether the resource manager allows case-insensitive resource lookups in the <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> and <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> methods.</span></span></summary>
        <value><span data-ttu-id="086cf-746">リソースの検索時に大文字と小文字の区別を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="086cf-746"><see langword="true" /> to ignore case during resource lookup; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-747"><xref:System.Resources.ResourceManager.IgnoreCase%2A> プロパティの値が `false`場合、"Resource" という名前のリソースは、"resource" という名前のリソースと同じではありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-747">If the value of the <xref:System.Resources.ResourceManager.IgnoreCase%2A> property is `false`, a resource with the name "Resource" is not equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="086cf-748"><xref:System.Resources.ResourceManager.IgnoreCase%2A> が `true`場合、"Resource" という名前のリソースは、"resource" という名前のリソースに相当します。</span><span class="sxs-lookup"><span data-stu-id="086cf-748">If <xref:System.Resources.ResourceManager.IgnoreCase%2A> is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="086cf-749">ただし、<xref:System.Resources.ResourceManager.IgnoreCase%2A> が `true`場合、<xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> および <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> メソッドでは、インバリアントカルチャを使用して大文字と小文字を区別しない文字列比較が実行されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="086cf-749">Note, however, that when <xref:System.Resources.ResourceManager.IgnoreCase%2A> is `true`, the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> and <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> methods perform case-insensitive string comparisons by using the invariant culture.</span></span> <span data-ttu-id="086cf-750">この利点は、これらのメソッドによって実行される大文字と小文字を区別しない文字列比較の結果が、カルチャに関係なくすべてのコンピューターで同じであることです。</span><span class="sxs-lookup"><span data-stu-id="086cf-750">The advantage is that results of case-insensitive string comparisons performed by these methods are the same on all computers regardless of culture.</span></span> <span data-ttu-id="086cf-751">欠点は、結果がすべてのカルチャの大文字と小文字の規則と一致しないことです。</span><span class="sxs-lookup"><span data-stu-id="086cf-751">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="086cf-752">たとえば、トルコ語のアルファベットには I という2つのバージョンがあります。1つはドット付きで、もう1つはドットを含んでいません。</span><span class="sxs-lookup"><span data-stu-id="086cf-752">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="086cf-753">トルコ語では、I (Unicode 0049) という文字は、異なる文字ı (Unicode 0131) の大文字版と見なされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-753">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="086cf-754">I (Unicode 0069) という文字は、他の文字 i (Unicode 0130) の小文字バージョンと見なされます。</span><span class="sxs-lookup"><span data-stu-id="086cf-754">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="086cf-755">これらの大文字と小文字の規則に従って、i (Unicode 0069) と I (Unicode 0049) の文字を区別しない文字列比較は、カルチャ "tr-TR" (トルコ語ではトルコ語) で失敗します。</span><span class="sxs-lookup"><span data-stu-id="086cf-755">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="086cf-756">ただし、<xref:System.Resources.ResourceManager.IgnoreCase%2A> が `true`場合は、インバリアントカルチャの大文字と小文字の規則を使用することによって比較が行われるため、この比較は成功します。</span><span class="sxs-lookup"><span data-stu-id="086cf-756">However, because the comparison is conducted by using the casing rules of the invariant culture if <xref:System.Resources.ResourceManager.IgnoreCase%2A> is `true`, this comparison succeeds.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086cf-757">パフォーマンス上の理由から、リソース名には常に正しいケースを指定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="086cf-757">For performance reasons, it is best to always specify the correct case for your resource names.</span></span> <span data-ttu-id="086cf-758"><xref:System.Resources.ResourceManager.IgnoreCase%2A> を `true` に設定すると、ワーキングセットが大幅に増加し、パフォーマンスが大幅に低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-758">Setting <xref:System.Resources.ResourceManager.IgnoreCase%2A> to `true` can cause a significant increase in working set and a significant decline in performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetResourceSet">
      <MemberSignature Language="C#" Value="protected virtual System.Resources.ResourceSet InternalGetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Resources.ResourceSet InternalGetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InternalGetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Resources::ResourceSet ^ InternalGetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.InternalGetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="tryParents" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="086cf-759">検索対象のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="086cf-759">The culture object to look for.</span></span></param>
        <param name="createIfNotExists"><span data-ttu-id="086cf-760">リソース セットがまだ読み込まれていなければ読み込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="086cf-760"><see langword="true" /> to load the resource set, if it has not been loaded yet; otherwise, <see langword="false" />.</span></span></param>
        <param name="tryParents"><span data-ttu-id="086cf-761">リソース セットを読み込むことができないときに、親 <see langword="true" /> オブジェクトを確認する場合は <see cref="T:System.Globalization.CultureInfo" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="086cf-761"><see langword="true" /> to check parent <see cref="T:System.Globalization.CultureInfo" /> objects if the resource set cannot be loaded; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="086cf-762">リソース セットを検索するための実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="086cf-762">Provides the implementation for finding a resource set.</span></span></summary>
        <returns><span data-ttu-id="086cf-763">指定されたリソース セット。</span><span class="sxs-lookup"><span data-stu-id="086cf-763">The specified resource set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="086cf-764">メイン アセンブリに .resources ファイルが含まれていませんが、これはリソースの検索に必要です。</span><span class="sxs-lookup"><span data-stu-id="086cf-764">The main assembly does not contain a .resources file, which is required to look up a resource.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="086cf-765">ランタイムで、内部エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="086cf-765">There was an internal error in the runtime.</span></span></exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException"><span data-ttu-id="086cf-766"><paramref name="culture" /> に関連付けられているサテライト アセンブリを配置できません。</span><span class="sxs-lookup"><span data-stu-id="086cf-766">The satellite assembly associated with <paramref name="culture" /> could not be located.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-767"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-767">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-768"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-768">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="086cf-769">このメソッドは、リソースセットを検索するために必要なすべての作業を完了し、再帰的で再入可能にすることができます。</span><span class="sxs-lookup"><span data-stu-id="086cf-769">This method completes all the work necessary to find a resource set, and can be recursive and reentrant.</span></span> <span data-ttu-id="086cf-770">つまり、このメソッドは、アセンブリを読み込み、<see cref="E:System.AppDomain.AssemblyLoad" /> イベントをトリガーする可能性があります。このイベントは、完全に初期化されていない <see cref="T:System.Resources.ResourceManager" /> のオブジェクトにコールバックします。</span><span class="sxs-lookup"><span data-stu-id="086cf-770">In other words, this method might load an assembly and trigger an <see cref="E:System.AppDomain.AssemblyLoad" /> event, which then calls back into a <see cref="T:System.Resources.ResourceManager" /> object that has not been completely initialized.</span></span> <span data-ttu-id="086cf-771">余分なロックを避けるために、このメソッドはスレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-771">To avoid taking extra locks, this method is not thread safe.</span></span> <span data-ttu-id="086cf-772"><see cref="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />、<see cref="M:System.Resources.ResourceManager.GetString(System.String)" />、および <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> の各メソッドでは、すべての必要な同期が実行されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-772">The <see cref="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />, <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />, and <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> methods do all the necessary synchronization.</span></span></para></block>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md"><span data-ttu-id="086cf-773">.NET アプリケーションのグローバライズとローカライズ</span><span class="sxs-lookup"><span data-stu-id="086cf-773">Globalizing and localizing .NET applications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MagicNumber">
      <MemberSignature Language="C#" Value="public static readonly int MagicNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 MagicNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MagicNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MagicNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int MagicNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable MagicNumber : int" Usage="System.Resources.ResourceManager.MagicNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-774">リソース ファイルを識別するために使用する番号を保持します。</span><span class="sxs-lookup"><span data-stu-id="086cf-774">Holds the number used to identify resource files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-775">値は0xBEEFCACE に設定されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-775">The value is set to 0xBEEFCACE.</span></span> <span data-ttu-id="086cf-776">システムの既定のファイル形式の最初の4バイトには、リトルエンディアン形式の32ビット符号付き整数が含まれています (<xref:System.Text.Encoding>を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="086cf-776">The first four bytes of the system default file format contain a 32-bit signed integer in little-endian format (see <xref:System.Text.Encoding>).</span></span>  
  
 <span data-ttu-id="086cf-777"><xref:System.Resources.ResourceManager.MagicNumber> が見つかった場合、その後に続くバイトは、<xref:System.Resources.ResourceManager> ヘッダーのバージョン番号になります。その後、このヘッダーを越えるためにスキップするバイト数を示す数字になります。</span><span class="sxs-lookup"><span data-stu-id="086cf-777">If the <xref:System.Resources.ResourceManager.MagicNumber> is found, the bytes following it will be a version number for a <xref:System.Resources.ResourceManager> header, followed by a number indicating how many bytes should be skipped to get past this header.</span></span> <span data-ttu-id="086cf-778">次の数値は、ヘッダーを作成した <xref:System.Resources.ResourceManager> のバージョンを示し、その後にバージョン固有の情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="086cf-778">The next number indicates the version of the <xref:System.Resources.ResourceManager> that created the header, followed by version specific information.</span></span>  
  
 <span data-ttu-id="086cf-779">現在の実装のバージョン番号は1です。</span><span class="sxs-lookup"><span data-stu-id="086cf-779">The version number for the current implementation is one.</span></span> <span data-ttu-id="086cf-780">次のバイトは、このファイルを読み取ることができる、<xref:System.Resources.IResourceReader>の名前を含む、長さを示すプレフィックスが付けられた文字列です。</span><span class="sxs-lookup"><span data-stu-id="086cf-780">The next bytes are a length-prefixed string containing the name of an <xref:System.Resources.IResourceReader>, which can read this file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainAssembly">
      <MemberSignature Language="C#" Value="protected System.Reflection.Assembly MainAssembly;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.Assembly MainAssembly" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MainAssembly" />
      <MemberSignature Language="VB.NET" Value="Protected MainAssembly As Assembly " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::Assembly ^ MainAssembly;" />
      <MemberSignature Language="F#" Value="val mutable MainAssembly : System.Reflection.Assembly" Usage="System.Resources.ResourceManager.MainAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-781">リソースを含むメイン アセンブリを指定します。</span><span class="sxs-lookup"><span data-stu-id="086cf-781">Specifies the main assembly that contains the resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-782"><xref:System.Resources.ResourceManager.MainAssembly> フィールドは、<xref:System.Resources.ResourceManager> クラスから派生した独自のクラスを記述する場合にのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="086cf-782">The <xref:System.Resources.ResourceManager.MainAssembly> field is useful only if you write your own class that derives from the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllResources">
      <MemberSignature Language="C#" Value="public virtual void ReleaseAllResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseAllResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.ReleaseAllResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseAllResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseAllResources();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAllResources : unit -&gt; unit&#xA;override this.ReleaseAllResources : unit -&gt; unit" Usage="resourceManager.ReleaseAllResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086cf-783">リソース マネージャーに、すべての <see cref="M:System.Resources.ResourceSet.Close" /> オブジェクトの <see cref="T:System.Resources.ResourceSet" /> メソッドを呼び出し、すべてのリソースを解放するように指示します。</span><span class="sxs-lookup"><span data-stu-id="086cf-783">Tells the resource manager to call the <see cref="M:System.Resources.ResourceSet.Close" /> method on all <see cref="T:System.Resources.ResourceSet" /> objects and release all resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086cf-784">このメソッドは、実行中のアプリのワーキングセットを圧縮します。</span><span class="sxs-lookup"><span data-stu-id="086cf-784">This method will shrink the working set in a running app.</span></span> <span data-ttu-id="086cf-785">リソースマネージャーがリソースをもう一度検索して読み込む必要があるため、この <xref:System.Resources.ResourceManager> オブジェクトの今後のリソース参照は、最初の参照と同じようにコストが高くなります。</span><span class="sxs-lookup"><span data-stu-id="086cf-785">Any future resource lookups on this <xref:System.Resources.ResourceManager> object will be as expensive as the first lookup, because the resource manager will have to search and load resources again.</span></span> <span data-ttu-id="086cf-786">これは、新しい <xref:System.Resources.ResourceManager> オブジェクトの作成が適切な動作である、複雑なスレッド処理のシナリオで役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="086cf-786">This can be useful in some complex threading scenarios, where creating a new <xref:System.Resources.ResourceManager> object is the appropriate behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086cf-787">.NET Framework バージョン2.0 以降、<xref:System.Resources.ResourceManager.ReleaseAllResources%2A> メソッドは <xref:System.Resources.ResourceManager.GetObject%2A>、<xref:System.Resources.ResourceManager.GetString%2A>、および <xref:System.Resources.ResourceManager.GetStream%2A> 操作に関してスレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="086cf-787">Starting with the .NET Framework version 2.0, the <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> method is not thread safe with respect to <xref:System.Resources.ResourceManager.GetObject%2A>, <xref:System.Resources.ResourceManager.GetString%2A>, and <xref:System.Resources.ResourceManager.GetStream%2A> operations.</span></span> <span data-ttu-id="086cf-788">この変更の利点は、リソースにアクセスする複数のスレッドのパフォーマンスが向上することです。</span><span class="sxs-lookup"><span data-stu-id="086cf-788">The advantage of this change is a performance improvement for multiple threads that access resources.</span></span> <span data-ttu-id="086cf-789">ただし、1つのスレッドで <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> メソッドを呼び出しても、別のスレッドで同時にリソースを取得した場合、get 操作では <xref:System.ObjectDisposedException> の例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="086cf-789">However, if you call the <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> method in one thread while simultaneously getting a resource in another thread, the get operation can throw an <xref:System.ObjectDisposedException> exception.</span></span>  
  
 <span data-ttu-id="086cf-790">また、このメソッドは、リソースマネージャーが完全にスコープ外になってガベージコレクションされるのを待たずに、現在のリソースマネージャーによって作成されたリソースのマネージインスタンスを決定的に解放する必要がある場合にも使用できます。</span><span class="sxs-lookup"><span data-stu-id="086cf-790">You can also use this method in situations where the managed instances for the resources created by the current resource manager have to be released deterministically, without waiting for the resource manager to go completely out of scope and be garbage collected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086cf-791">このメソッドを呼び出すと、サテライトアセンブリはアンロードされません。</span><span class="sxs-lookup"><span data-stu-id="086cf-791">Calling this method does not unload satellite assemblies.</span></span> <span data-ttu-id="086cf-792">サテライトアセンブリをアンロードするには、<xref:System.AppDomain.Unload%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="086cf-792">To unload satellite assemblies, use the <xref:System.AppDomain.Unload%2A> method .</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="086cf-793"><see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />などの機構を使用して遅延バインディングで呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="086cf-793">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="086cf-794"><see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="086cf-794">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ResourceSets">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ResourceSets;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable ResourceSets" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.ResourceSets" />
      <MemberSignature Language="VB.NET" Value="Protected ResourceSets As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ ResourceSets;" />
      <MemberSignature Language="F#" Value="val mutable ResourceSets : System.Collections.Hashtable" Usage="System.Resources.ResourceManager.ResourceSets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("call InternalGetResourceSet instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-795">カルチャから <see cref="T:System.Collections.Hashtable" /> オブジェクトへの割り当てを返す <see cref="T:System.Resources.ResourceSet" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="086cf-795">Contains a <see cref="T:System.Collections.Hashtable" /> that returns a mapping from cultures to <see cref="T:System.Resources.ResourceSet" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSetType">
      <MemberSignature Language="C#" Value="public virtual Type ResourceSetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ResourceSetType" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.ResourceSetType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ResourceSetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ResourceSetType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceSetType : Type" Usage="System.Resources.ResourceManager.ResourceSetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086cf-796"><see cref="T:System.Resources.ResourceSet" /> オブジェクトの構築にリソース マネージャーが使用するリソース セット オブジェクトの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="086cf-796">Gets the type of the resource set object that the resource manager uses to construct a <see cref="T:System.Resources.ResourceSet" /> object.</span></span></summary>
        <value><span data-ttu-id="086cf-797"><see cref="T:System.Resources.ResourceSet" /> オブジェクトの構築にリソース マネージャーが使用するリソース セット オブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="086cf-797">The type of the resource set object that the resource manager uses to construct a <see cref="T:System.Resources.ResourceSet" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
