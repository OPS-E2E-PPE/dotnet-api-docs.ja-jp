<Type Name="DispatcherUnhandledExceptionEventArgs" FullName="System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28d06c76e19bc69b15d26727352c71f109d5255d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82487636" /></Metadata><TypeSignature Language="C#" Value="public sealed class DispatcherUnhandledExceptionEventArgs : System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DispatcherUnhandledExceptionEventArgs extends System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DispatcherUnhandledExceptionEventArgs&#xA;Inherits DispatcherEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherUnhandledExceptionEventArgs sealed : System::Windows::Threading::DispatcherEventArgs" />
  <TypeSignature Language="F#" Value="type DispatcherUnhandledExceptionEventArgs = class&#xA;    inherit DispatcherEventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4779a-101"><see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="4779a-101">Provides data for the <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4779a-102"><xref:System.Windows.Threading.Dispatcher.UnhandledException> イベントは、<xref:System.Windows.Threading.Dispatcher> によって実行されるコードが、処理されない例外をスローした場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="4779a-102">The <xref:System.Windows.Threading.Dispatcher.UnhandledException> event occurs when code executing by way of the <xref:System.Windows.Threading.Dispatcher> throws an exception which is not handled.</span></span>  
  
 <span data-ttu-id="4779a-103"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> イベントは、<xref:System.Windows.Threading.Dispatcher.UnhandledException> イベントを発生させない手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="4779a-103">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="4779a-104">最初に <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> イベントが発生し、<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> の <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> が `false`に設定されている場合、<xref:System.Windows.Threading.Dispatcher.UnhandledException> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="4779a-104">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4779a-105">ディスパッチャーを使用してコードを実行したときに発生した例外を取得します。</span><span class="sxs-lookup"><span data-stu-id="4779a-105">Gets the exception that was raised when executing code by way of the dispatcher.</span></span></summary>
        <value><span data-ttu-id="4779a-106">例外です。</span><span class="sxs-lookup"><span data-stu-id="4779a-106">The exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4779a-107">例外イベントが処理されたかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4779a-107">Gets or sets whether the exception event has been handled.</span></span></summary>
        <value><span data-ttu-id="4779a-108">例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4779a-108"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
