<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="172d04804694d67bafd243873b702e7ee97e80e9" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83920279" /></Metadata><TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ナビゲーションをサポートするメソッド、プロパティ、およびイベントを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> は、ブラウザースタイルのナビゲーションのコンテキスト内でコンテンツをダウンロードする機能をカプセル化します。  
  
 コンテンツは、任意の種類の .NET Framework オブジェクトおよび HTML ファイルにすることができます。 ただし、通常は、ナビゲーションのためにコンテンツをパッケージ化する方法として、ページを使用することをお勧めします (「<xref:System.Windows.Controls.Page>」を参照してください)。  
  
 オブジェクトのインスタンスを提供し、オブジェクトを受け取る <xref:System.Windows.Navigation.NavigationService.Navigate%2A> メソッドのオーバーロードを呼び出すことによって、コンテンツに移動できます。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 または、URI を受け取る <xref:System.Windows.Navigation.NavigationService.Navigate%2A> メソッドオーバーロードの1つに、相対 URI または絶対 URI を渡すことによって、コンテンツに移動できます。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 URI によってコンテンツに移動すると、<xref:System.Windows.Navigation.NavigationService> はコンテンツを含むオブジェクトを返します。  
  
 ナビゲーションの有効期間は、次のイベントを使用して追跡できます。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   [https://login.microsoftonline.com/consumers/](<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>)  
  
 ナビゲーションが発生するたびにすべてのイベントが発生するとは限りません。発生するイベントのセットは、発生するナビゲーションの種類 (コンテンツまたはコンテンツフラグメント) と、ナビゲーションの完了 (取り消し、停止、または失敗) によって決まります。  
  
 次の図は、これらのイベントが発生する順序を示しています。  
  
 ![ページ ナビゲーションのフロー チャート](~/add/media/navigationoverviewfigure11.png "ページ ナビゲーションのフロー チャート")  
  
 ナビゲーション中またはナビゲーション後に、移動先のコンテンツの URI (<xref:System.Windows.Navigation.NavigationService.Source%2A>)、現在のコンテンツの URI (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>)、移動先のコンテンツを含むオブジェクト (<xref:System.Windows.Navigation.NavigationService.Content%2A>) など、移動先のコンテンツに関する情報が <xref:System.Windows.Navigation.NavigationService> に表示されます。  
  
 コンテンツに移動すると、<xref:System.Windows.Navigation.NavigationService> はナビゲーション履歴のエントリとしてナビゲーションを記録します。 新しいナビゲーションが発生したとき、<xref:System.Windows.Navigation.NavigationService.Navigate%2A> メソッドを呼び出したとき、または <xref:System.Windows.Navigation.NavigationService.GoForward%2A>を呼び出して "進む" ナビゲーション履歴のエントリに移動したときに、"戻る" ナビゲーション履歴にエントリが追加されます。 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>を呼び出すことによって、[戻る] ナビゲーション履歴のエントリに移動して、[進む] ナビゲーション履歴にエントリが追加されます。 "戻る" ナビゲーション履歴と "進む" ナビゲーション履歴にエントリがあるかどうかは、<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> と <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> によって報告されます。 また、[戻る] ナビゲーション履歴の最新のエントリは、<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>を呼び出すことによって削除できます。  
  
 既定では、<xref:System.Windows.Navigation.NavigationService> は、コンテンツオブジェクトのインスタンスをナビゲーション履歴に格納しません。 代わりに、<xref:System.Windows.Navigation.NavigationService> は、ナビゲーション履歴を使用して移動するたびにコンテンツオブジェクトの新しいインスタンスを作成します。 この動作は、大量の大量のコンテンツが移動されている場合に、過度なメモリ消費を避けるように設計されています。 そのため、コンテンツの状態は、1つのナビゲーションから次のナビゲーションに記憶されません。 ただし、WPF には、コンテンツの一部をナビゲーション履歴に格納するためのいくつかの手法が用意されています。  
  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>を使用すると、1つのページインスタンスに対して複数の状態のセットを覚えることもできます。  
  
 <xref:System.Windows.Navigation.NavigationService> は `sealed` クラスであるため、インスタンス化できません。代わりに、ナビゲーターがナビゲーションを有効にするために <xref:System.Windows.Navigation.NavigationService> を使用します。 WPF には、<xref:System.Windows.Navigation.NavigationWindow> と <xref:System.Windows.Controls.Frame>の2つのナビゲーターがあります。  
  
 視覚的には、[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] をナビゲーターとして使用して、統合されたユーザーエクスペリエンスを提供します。 ただし、実際には <xref:System.Windows.Navigation.NavigationWindow> をナビゲーターとして使用 [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]。[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] で実行されている [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] の <xref:System.Windows.Application.MainWindow%2A> プロパティは、<xref:System.Windows.Navigation.NavigationWindow>への参照を返します。また、<xref:System.Windows.Navigation.NavigationWindow> によって管理されるナビゲーション履歴は、次の方法で [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] によって管理されるナビゲーション履歴と統合されます。  
  
-   [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] 内から <xref:System.Windows.Navigation.NavigationService.Navigate%2A>、<xref:System.Windows.Navigation.NavigationService.GoBack%2A>、および <xref:System.Windows.Navigation.NavigationService.GoForward%2A> を呼び出すことによってコンテンツに移動すると、関連するナビゲーション履歴エントリも [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] ナビゲーション履歴に追加されます。  
  
-   [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] のエントリが選択されている場合、[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] によって <xref:System.Windows.Navigation.NavigationService> がそのエントリに関連付けられているコンテンツに戻るか、または転送されます。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Frame> は、独自のナビゲーション履歴を提供したり、それをホストするナビゲーターのナビゲーション履歴を使用したりすることができます。 <xref:System.Windows.Controls.Frame> が独自のナビゲーション履歴を提供する場合は、ナビゲーション履歴のエントリ間を移動するための独自のナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] を表示できます。これらのエントリは、ホストナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>、[!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) のナビゲーション履歴に追加されません。そのため、それぞれのナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] から移動することはできません (「<xref:System.Windows.Controls.Frame.JournalOwnership%2A>」を参照してください)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">特定のコンテンツ フラグメントに関連付けられたアプリケーション定義の状態を表す <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクト。</param>
        <summary><see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトを格納しているエントリを "戻る" ナビゲーション履歴に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>、<xref:System.Windows.Navigation.CustomContentState>、および <xref:System.Windows.Navigation.IProvideCustomContentState> は、現在のコンテンツに対して複数の状態のセットを記憶するために使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="state" /> が <see langword="null" /> です。<see cref="T:System.Windows.Navigation.CustomContentState" /> から <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> オブジェクトが返されませんでした。</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"戻る" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
        <value>"戻る" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 戻るナビゲーション履歴に少なくとも1つのエントリがあるかどうかを確認する <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> ます。 このプロパティは、<xref:System.Windows.Navigation.NavigationService.GoBack%2A>を呼び出す前に検査する必要があります。<xref:System.Windows.Navigation.NavigationService.GoBack%2A> が呼び出され、[戻る] ナビゲーション履歴にエントリが存在しない場合、<xref:System.InvalidOperationException> がスローされます。  
  
> [!NOTE]
>  ナビゲーション履歴が複数のナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>) によって共有されている場合、[戻る] ナビゲーション履歴の最新のエントリが、現在のナビゲーターの <xref:System.Windows.Navigation.NavigationService> によって追加されていない可能性があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"進む" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
        <value>"進む" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 進むナビゲーション履歴に少なくとも1つのエントリがあるかどうかを確認する <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> ます。 このプロパティは、<xref:System.Windows.Navigation.NavigationService.GoForward%2A>を呼び出す前に検査する必要があります。<xref:System.Windows.Navigation.NavigationService.GoForward%2A> が呼び出され、[進む] ナビゲーション履歴にエントリが存在しない場合、<xref:System.InvalidOperationException> がスローされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のコンテンツを格納しているオブジェクトへの参照を取得または設定します。</summary>
        <value>現在のコンテンツを格納しているオブジェクトへの参照であるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンテンツは、次の2つの方法のいずれかで設定できます。  
  
-   直接。オブジェクトへの参照に設定します。  
  
-   間接的には、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>、<xref:System.Windows.Navigation.NavigationService.GoBack%2A>、または <xref:System.Windows.Navigation.NavigationService.GoForward%2A>を呼び出します。  
  
 <xref:System.Windows.Navigation.NavigationService> 設定すると、新しいナビゲーションが開始します。ナビゲーションは非同期であるため、設定された直後に検査される場合、<xref:System.Windows.Navigation.NavigationService.Content%2A> は値を返しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最後に移動した先のコンテンツの URI を取得します。</summary>
        <value>URI を使用して移動した場合は、最後に移動したコンテンツの <see cref="T:System.Uri" />。それ以外の場合は、<see langword="null" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> プロパティの値は、別の URI への移動が正常に完了するまで変更されません。  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> は、フラグメントのみの URI を使用して設定できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ フラグメントへのナビゲーションが開始されると発生します。目的のフラグメントが現在のコンテンツにある場合は直ちに発生し、目的のフラグメントが別のコンテンツにある場合はソース [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] コンテンツが読み込まれた後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、コンテンツフラグメントは、<xref:System.Windows.FrameworkElement.Name%2A> 属性が設定されている <xref:System.Windows.UIElement> の名前付き <xref:System.Windows.UIElement>に含まれるコンテンツです。次に例を示します。  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] フラグメントに移動するには、次の形式でサフィックスを持つ URI を指定します。  
  
 \#*Fragmentname*  
  
 コンテンツフラグメントを参照する URI の例を次に示します。  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 ソースページが読み込まれた後 (<xref:System.Windows.Navigation.NavigationService.LoadCompleted> イベントが発生した後)、フラグメントナビゲーションが開始され、<xref:System.Windows.Navigation.NavigationService> は [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] フラグメントを見つけようとします。 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] フラグメントが見つかった場合、<xref:System.Windows.Navigation.NavigationService> はコンテンツナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>) に対してフラグメントを表示するように指示します。 この動作を変更する必要がある場合は、<xref:System.Windows.Navigation.NavigationService.FragmentNavigation> を処理して、独自のフラグメントナビゲーション動作を提供できます。 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> には、次のように、この目的に役立つプロパティを公開する <xref:System.Windows.Navigation.FragmentNavigationEventArgs> パラメーターが渡されます。  
  
-   このナビゲーションサービス (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>) を所有するナビゲーター。  
  
-   フラグメント名。  
  
 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> を処理して、独自のカスタム実装で既定の WPF フラグメントの実装をオーバーライドできます。 その場合は、<xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> を `true`に設定する必要があります。それ以外の場合は、WPF フラグメントの既定の処理動作が適用されます。  
  
 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> イベントハンドラー内から直接ナビゲーションを開始することは避けてください。 既存のナビゲーション中に <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> が発生するため、<xref:System.Windows.Navigation.NavigationService.FragmentNavigation> イベントハンドラーから新しいナビゲーションを開始すると、入れ子になったナビゲーションが作成され、<xref:System.ExecutionEngineException> がスローされる可能性があります。 代わりに、<xref:System.Windows.Threading.Dispatcher>を使用して非同期作業項目を作成することにより、ナビゲーションを間接的に開始できます。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> が <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>を発生させると、<xref:System.Windows.Application> オブジェクトで <xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType> イベントも発生します。  
  
> [!IMPORTANT]
>  次の場合は、疎 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページ (ルート要素として `Page` を持つ [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイル) ではフラグメントナビゲーションはサポートされません。  
>   
>  •疎 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページ内のフラグメントに移動する場合。  
>   
>  •緩い [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページから別の緩やかな [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページのフラグメントに移動する場合。  
>   
>  ただし、Loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページは、自身のフラグメントにナビゲートできます。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Navigation.NavigationService.FragmentNavigation> を処理して、カスタムフラグメントナビゲーション動作を提供する方法を示します。 この場合、ソース [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] ページのフラグメントが見つからない場合、この例ではエラー [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] ページが開きます。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNavigationService (dependencyObject As DependencyObject) As NavigationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">ナビゲーターによってホストされるコンテンツ内の <see cref="T:System.Windows.DependencyObject" />。</param>
        <summary>指定した <see cref="T:System.Windows.Navigation.NavigationService" /> がコンテンツに含まれているナビゲーターの <see cref="T:System.Windows.DependencyObject" /> への参照を取得します。</summary>
        <returns>指定した <see cref="T:System.Windows.DependencyObject" /> がコンテンツに含まれているナビゲーターの <see cref="T:System.Windows.Navigation.NavigationService" /> への参照。場合によっては <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ナビゲーターには、コンテンツナビゲーションを処理する <xref:System.Windows.Navigation.NavigationService> があります。 WPF には、<xref:System.Windows.Navigation.NavigationWindow> と <xref:System.Windows.Controls.Frame>という2つのナビゲーターがあります。 ナビゲーション要求を処理し、ナビゲーションの有効期間を管理するために、ナビゲーターは <xref:System.Windows.Navigation.NavigationService> クラスとして実装されている WPF ナビゲーションサービスを使用します。 ナビゲーターによってホストされるコンテンツは、<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> メソッドを呼び出すことによって、ナビゲーターの <xref:System.Windows.Navigation.NavigationService> への参照を取得できます。  
  
 `dependencyObject`の場合、<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> は `null` を返します。  
  
-   は <xref:System.Windows.Navigation.NavigationWindow>です。  
  
-   は、次のような <xref:System.Windows.Controls.Frame> です。  
  
    1.  は、別のナビゲーターによってホストされています。  
  
    2.  では、<xref:System.Windows.Controls.Frame.JournalOwnership%2A> プロパティが <xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>に設定されています。  
  
-   は、ナビゲーターによってホストされるコンテンツの一部ではありません。  
  
 WPF には、<xref:System.Windows.Navigation.NavigationService>への参照を取得するための2つのショートカットが用意されています。  
  
-   <xref:System.Windows.Controls.Page> へのナビゲーションを処理した <xref:System.Windows.Navigation.NavigationService> は、<xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType> プロパティの値を取得することによって、<xref:System.Windows.Controls.Page> 自体からアクセスできます。  
  
-   ナビゲーションを処理するために <xref:System.Windows.Controls.Frame> によって使用される <xref:System.Windows.Navigation.NavigationService> には、<xref:System.Windows.Controls.Frame.NavigationService%2A> プロパティの値を取得することによってアクセスできます。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>を呼び出して、<xref:System.Windows.Controls.UserControl> がナビゲーションサービスを取得する方法を示しています。  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyObject" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>"戻る" ナビゲーション履歴の最新のエントリに移動します (エントリが存在する場合)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>を呼び出す前に、"戻る" ナビゲーション履歴にエントリがあるかどうかを確認するために、<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> プロパティを検査できます。  
  
   
  
## Examples  
 次の例では、"戻る" ナビゲーション履歴の最新のエントリ (存在する場合) に移動します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">"戻る" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> が呼び出されました。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>"進む" ナビゲーション履歴の最新のエントリに移動します (エントリが存在する場合)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.GoForward%2A>を呼び出す前に、"進む" ナビゲーション履歴にエントリがあるかどうかを確認するために、<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> プロパティを検査できます。  
  
   
  
## Examples  
 次の例では、"進む" ナビゲーション履歴の最新のエントリ (存在する場合) に移動します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">"進む" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> が呼び出されました。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが読み込まれ、解析されて、描画が開始されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 読み込みの完了時にナビゲーション要求に関する関連情報を検出する必要がある場合は、<xref:System.Windows.Navigation.NavigationService.LoadCompleted> を処理します。 この情報は、<xref:System.Windows.Navigation.NavigationService.LoadCompleted> イベントハンドラーに渡される <xref:System.Windows.Navigation.NavigationEventArgs> オブジェクトから入手できます。これには次のものが含まれます。  
  
-   コンテンツとその URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>)。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A> または <xref:System.Windows.Navigation.NavigationService.Navigate%2A>を呼び出すことによってナビゲーションが開始された場合の追加データ。  
  
-   応答の詳細 (<xref:System.Net.WebResponse> オブジェクトを使用)。  
  
 ソースページが見つからないか、読み込まれていない場合、<xref:System.Windows.Navigation.NavigationService.LoadCompleted> は発生しません。この場合、<xref:System.Windows.Navigation.NavigationService.NavigationFailed> が発生します。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> が <xref:System.Windows.Navigation.NavigationService.LoadCompleted>を発生させると、<xref:System.Windows.Application> オブジェクトで <xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType> イベントも発生します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Navigation.NavigationService.LoadCompleted>を処理する方法を示しています。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたソース コンテンツに非同期に移動します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">移動先のコンテンツを格納しているオブジェクト。</param>
        <summary>オブジェクトに格納されているコンテンツに非同期に移動します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の条件に該当する場合、<xref:System.Windows.Navigation.NavigationService.Navigate%2A> は `root` によって指定された <xref:System.Object> に移動します。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> イベントは取り消されません。  
  
-   Web 要求 (「<xref:System.Windows.Navigation.NavigationService.Navigating>」を参照) を作成できます。  
  
 `root` が `null`場合、既存のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>) はクリアされます。  
  
> [!NOTE]
>  Web コンテンツをダウンロードするときに、Web 例外が発生する場合があります (たとえば、404: ファイルが見つかりません)。 このような例外は、<xref:System.Windows.Navigation.NavigationService.NavigationFailed>で処理できます。  
  
   
  
## Examples  
 次の例は、ソースコンテンツツリーを含む <xref:System.Windows.Controls.Page> オブジェクトに移動する方法を示しています。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
        <summary>URI で指定されたコンテンツに非同期に移動します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `source` の値には、Web [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] または有効なパック URI (「 [WPF のパック uri](/dotnet/framework/wpf/app-development/pack-uris-in-wpf)」を参照) を指定できます。  
  
 次の条件に該当する場合、<xref:System.Windows.Navigation.NavigationService.Navigate%2A> は `source` で指定された URI に移動します。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> イベントは取り消されません。  
  
-   Web 要求 (「<xref:System.Windows.Navigation.NavigationService.Navigating>」を参照) を作成できます。  
  
 `source` が `null`場合、既存のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>) はクリアされます。  
  
> [!NOTE]
>  Web コンテンツをダウンロードするときに、Web 例外が発生する場合があります (たとえば、404: ファイルが見つかりません)。 このような例外は、<xref:System.Windows.Navigation.NavigationService.NavigationFailed>で処理できます。  
  
 コンテンツフラグメントに移動するには、<xref:System.Windows.Navigation.NavigationService.Navigate%2A> を使用します。 URI で識別されるコンテンツが現在のコンテンツである場合は、再度ダウンロードされません。  
  
   
  
## Examples  
 次の例は、URI に移動する方法を示しています。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">移動先のコンテンツを格納しているオブジェクト。</param>
        <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
        <summary>オブジェクトに格納されているコンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの動作は <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>と同じですが、URI ではなくオブジェクトが渡されます。  
  
   
  
## Examples  
 次の例は、ソースコンテンツを含む <xref:System.Windows.Controls.Page> オブジェクトに移動し、ナビゲーション状態を渡す方法を示しています。  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
        <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
        <summary>URI にあるソース コンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ナビゲーションは非同期であるため、複数のナビゲーションを同時に実行することができます。 たとえば、1つのページに2つの子フレームがある場合、両方のフレームが移動している可能性があります。 この場合、<xref:System.Windows.Navigation.NavigationService> によって発生したさまざまなナビゲーションイベントが複数回発生する可能性があり、移動先のコンテンツごとに1つずつ、ナビゲーションが要求された順序ではありません。 そのため、特定のナビゲーション要求が個々の要求に固有のデータを処理する必要がある場合、すべてのナビゲーション要求で使用可能なデータを使用することはできません。 代わりに、`navigationState` を使用して、1つのナビゲーション要求に固有のナビゲーション処理にデータを渡すことができます。  
  
 次のイベント引数を使用すると、ナビゲーション状態にアクセスできます。  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (<xref:System.Windows.Navigation.NavigationService.Navigating> イベントに渡されます)。  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (<xref:System.Windows.Navigation.NavigationService.Navigated>、<xref:System.Windows.Navigation.NavigationService.NavigationStopped>、<xref:System.Windows.Navigation.NavigationService.LoadCompleted> のイベントハンドラーに渡されます)。  
  
   
  
## Examples  
 次の例は、URI への移動とナビゲーション状態の受け渡しを示しています。  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
        <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
        <param name="sandboxExternalContent">コンテンツを (既定のインターネット ゾーン アクセス許可が設定された) 部分信頼セキュリティ サンドボックスにダウンロードする場合は <see langword="true" />。 既定では、 <see langword="false" />です。</param>
        <summary>URI にあるソース コンテンツに非同期に移動して、ナビゲーション中の処理に使用するナビゲーションの状態を格納しているオブジェクトを渡し、コンテンツをサンドボックスに配置します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、スタンドアロンアプリケーションと [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] コンテンツに対してのみ使用されます。  
  
 このメソッドは <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>と同じ動作をし、ダウンロードされるコンテンツが部分信頼セキュリティサンドボックスに配置されるようにします (既定のインターネットゾーンのアクセス許可セットを使用します。「 [WPF 部分信頼セキュリティ](/dotnet/framework/wpf/wpf-partial-trust-security)」を参照してください)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが見つかったときに発生します。この時点で <see cref="P:System.Windows.Navigation.NavigationService.Content" /> プロパティからコンテンツを取得できますが、読み込みはまだ完了していない可能性があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ダウンロードの開始時にナビゲーション要求に関する関連情報を検出する必要がある場合は、<xref:System.Windows.Navigation.NavigationService.Navigated> を処理します。 この情報は、<xref:System.Windows.Navigation.NavigationService.Navigated> イベントハンドラーに渡される <xref:System.Windows.Navigation.NavigationEventArgs> オブジェクトから入手できます。これには次のものが含まれます。  
  
-   ソースページ。 <xref:System.Windows.Navigation.NavigationService.Navigated> が発生すると、ソースページの [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] ツリーの少なくとも一部が解析され、ターゲットコンテンツコントロールにアタッチされます。  
  
-   要求された URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>)。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A> または <xref:System.Windows.Navigation.NavigationService.Navigate%2A>を呼び出すことによってナビゲーションが開始された場合の追加データ。  
  
-   応答の詳細 (<xref:System.Net.WebResponse> オブジェクトを使用)。  
  
 ソースページが見つからないか、読み込まれていない場合、<xref:System.Windows.Navigation.NavigationService.Navigated> は発生しません。この場合、<xref:System.Windows.Navigation.NavigationService.NavigationFailed> が発生します。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> が <xref:System.Windows.Navigation.NavigationService.NavigationFailed>を発生させると、<xref:System.Windows.Application> オブジェクトで <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType> イベントも発生します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Navigation.NavigationService.Navigated>を処理する方法を示しています。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいナビゲーションが要求されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> は、新しいナビゲーションが要求されたときに、ソースコンテンツが要求される前 (次の場合を含む) に発生します。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A> が呼び出されます  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> または <xref:System.Windows.Navigation.NavigationService.GoForward%2A> が呼び出されます (または、ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]からエントリが選択されています)。  
  
-   コンテンツフラグメントに移動します。  
  
 ナビゲーションを開始する前にナビゲーション要求に関する関連情報を検出する必要がある場合は、<xref:System.Windows.Navigation.NavigationService.Navigating> を処理します。 この情報は、<xref:System.Windows.Navigation.NavigationService.Navigating> イベントハンドラーに渡される <xref:System.Windows.Navigation.NavigatingCancelEventArgs> オブジェクトから入手できます。  
  
 ナビゲーションの <xref:System.Net.WebRequest> オブジェクトが作成され、<xref:System.Windows.Navigation.NavigatingCancelEventArgs> パラメーターから使用できるようになります。この時点で実際の要求が行われていないため、必要に応じて <xref:System.Net.WebRequest> オブジェクトを再構成することができます。  
  
 また、必要に応じて <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> を true に設定することによって、ナビゲーションをキャンセルする <xref:System.Windows.Navigation.NavigatingCancelEventArgs> も処理します。 ナビゲーションをキャンセルした場合、他のナビゲーションイベントは発生しません。  
  
> [!NOTE]
>  アプリケーションがブラウザーでホストされている場合、<xref:System.Windows.Navigation.NavigationService.Navigating> イベントをキャンセルすることによって、ユーザーがアプリケーションから移動するのを防ぐことはできません。  
  
 ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>) によってコンテンツの最初の部分がナビゲートされると、移動先のコンテンツの各部分がナビゲーション履歴に追加されます。 移動元のコンテンツに関する状態情報を保存する必要がある場合は、<xref:System.Windows.Navigation.CustomContentState> オブジェクトを使用して <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A> を設定することによって、そのコンテンツの履歴エントリに状態を追加できます。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> が <xref:System.Windows.Navigation.NavigationService.Navigating>を発生させると、<xref:System.Windows.Application> オブジェクトで <xref:System.Windows.Application.Navigating?displayProperty=nameWithType> イベントも発生します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Navigation.NavigationService.Navigating> を処理して、静的コンテンツを更新する要求が行われたかどうかを検出し、要求をキャンセルする方法を示します。  
  
 [https://login.microsoftonline.com/consumers/](<xref:System.Windows.Navigation.NavigationService.Navigating>)  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationFailed As NavigationFailedEventHandler " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求されたコンテンツへの移動中にエラーが発生すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ナビゲーション中に <xref:System.Net.WebException> または <xref:System.IO.IOException> がスローされると、<xref:System.Windows.Navigation.NavigationService.NavigationFailed> イベントが発生します。 <xref:System.Windows.Navigation.NavigationService.NavigationFailed> には、例外と、例外の原因となったナビゲーションの詳細の両方に関する情報をカプセル化する <xref:System.Windows.Navigation.NavigationFailedEventArgs> が渡されます。  
  
 失敗したナビゲーションによって例外が発生し、処理されない場合、次のイベントが一覧に示された順序で表示されます。  
  
-   [https://login.microsoftonline.com/consumers/](<xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>)  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> または <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>。  
  
-   [https://login.microsoftonline.com/consumers/](<xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>)  
  
-   [https://login.microsoftonline.com/consumers/](<xref:System.Windows.Application.DispatcherUnhandledException>)  
  
 ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>) が1つ以上のナビゲーターによってホストされている場合、いずれのナビゲーターでも `NavigationFailed` は発生しません。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Navigation.NavigationService.NavigationFailed>を処理する方法を示しています。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション進行状況の情報提供を目的として、ダウンロード中に定期的に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> には、次の進行状況情報を公開する <xref:System.Windows.Navigation.NavigationProgressEventArgs> が渡されます。  
  
-   これまでにダウンロードしたバイト数 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>)。  
  
-   ダウンロードする合計バイト数 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>)。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> は、ダウンロードされたコンテンツの1024バイトごとに1回、残りのバイト数が1024バイト未満の場合は1回だけ発生します。 このため、<xref:System.Windows.Navigation.NavigationService.NavigationProgress> の処理により、現在のダウンロードの進行状況を追跡して表示するための便利な方法が提供されます。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> は、同じコンテンツがナビゲートされるときや、現在読み込まれているコンテンツ (つまり、<xref:System.Windows.Navigation.NavigationService.Content%2A> プロパティの値) でコンテンツフラグメントに移動するときなど、一部の状況では発生しません。  
  
 コンパイル済みの XAML リソースに移動すると、最終的な <xref:System.Windows.Navigation.NavigationService.NavigationProgress> イベントが発生しない可能性があります。 つまり、ダウンロードが終了すると、最後に報告された <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> 値が <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> の値と等しくならない可能性があります。 ナビゲーションが終了したときに通知されるように <xref:System.Windows.Navigation.NavigationService.LoadCompleted> イベントを処理します。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> が <xref:System.Windows.Navigation.NavigationService.NavigationProgress>を発生させると、<xref:System.Windows.Application> オブジェクトで <xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType> イベントも発生します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Navigation.NavigationService.NavigationProgress>を処理する方法を示しています。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> メソッドが呼び出されたときや、現在のナビゲーションの進行中に新しいナビゲーションが要求されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ダウンロードが停止したときにナビゲーション要求に関する関連情報を検出する必要がある場合は、<xref:System.Windows.Navigation.NavigationService.NavigationStopped> を処理します。 この情報は、<xref:System.Windows.Navigation.NavigationService.NavigationStopped> イベントハンドラーに渡される <xref:System.Windows.Navigation.NavigationEventArgs> オブジェクトから入手できます。これには次のものが含まれます。  
  
-   要求された URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>)。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType> または <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>を呼び出すことによってナビゲーションが開始された場合の追加データ。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> が <xref:System.Windows.Navigation.NavigationService.NavigationStopped>を発生させると、<xref:System.Windows.Application> オブジェクトで <xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType> イベントも発生します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Navigation.NavigationService.NavigationStopped>を処理する方法を示しています。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコンテンツを再度読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 (<xref:System.Windows.Navigation.NavigationService.Source%2A> プロパティの値によって指定された) 現在のコンテンツにもう一度移動した場合、<xref:System.Windows.Navigation.NavigationService> によってコンテンツが再度ダウンロードされることはありません。 <xref:System.Windows.Navigation.NavigationService> がコンテンツに再移動するように強制するには、<xref:System.Windows.Navigation.NavigationService.Refresh%2A>を呼び出します。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> または <xref:System.Windows.Navigation.NavigationService.Refresh%2A>を呼び出すことによって、現在のコンテンツにもう一度移動した場合は、新しいエントリがナビゲーション履歴に追加されないことに注意してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>"戻る" 履歴から最新の履歴項目を削除します。</summary>
        <returns>"戻る" ナビゲーション履歴の最新の <see cref="T:System.Windows.Navigation.JournalEntry" /> (存在する場合)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 2つ以上のナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>) が同じナビゲーション履歴を共有する場合、1つのナビゲーターで <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> を使用して、別のナビゲーターで行われたナビゲーションの "戻る" ナビゲーション履歴エントリを取得できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のコンテンツの URI (移動中の場合は移動先の新しいコンテンツの URI) を取得または設定します。</summary>
        <value>現在のコンテンツの URI、または現在ナビゲートされているコンテンツを格納している <see cref="T:System.Uri" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在表示されているものとは別の URI にこのプロパティを設定した場合、ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>) は指定された URI に移動します。  
  
 ナビゲーションが取り消されない限り、<xref:System.Windows.Navigation.NavigationService.Source%2A> は移動先の URI から読み込まれたコンテンツに設定されます。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> は、フラグメントのみの URI を使用して設定できます。 `null`に設定できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のナビゲーション要求に対応するコンテンツのダウンロードを中止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> は <xref:System.Windows.Navigation.NavigationService.Navigate%2A> が返されるとすぐに呼び出され、子フレームで進行中のナビゲーションを停止します。  
  
 (<xref:System.Windows.Controls.Frame>)。  
  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> メソッドを呼び出すと、<xref:System.Windows.Navigation.NavigationService.NavigationStopped> イベントが発生します。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> は、ナビゲーションを開始したのと同じスレッドで呼び出す必要があります。  
  
   
  
## Examples  
 次の例は、読み込みを停止する方法を示しています。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>
