<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c84f45ba9b3617b2a419d67c75cdc91b67584ca0" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77099960" /></Metadata><TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type SoapHttpClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SOAP 使用時のクライアント プロキシの派生元となるクラスを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 XML Web サービスクライアントを構築する場合は、<xref:System.Web.Services.Protocols.WebClientProtocol> から間接的または直接派生したプロキシクラスを XML Web サービス用に作成する必要があります。 XML Web サービスクライアントが SOAP を使用してを呼び出す場合、プロキシクラスは、<xref:System.Web.Services.Protocols.HttpWebClientProtocol>から派生した <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>から派生する必要があります。 <xref:System.Web.Services.Protocols.HttpWebClientProtocol>は、<xref:System.Web.Services.Protocols.WebClientProtocol>から派生します。

 XML Web サービスと通信するには、間接的に派生するプロキシクラスを作成するか、呼び出す XML Web サービスの <xref:System.Web.Services.Protocols.WebClientProtocol> から直接作成します。 プロキシクラスを手動で作成するのではなく、Web サービス記述言語ツール (Wsdl.exe) を使用して、指定された XML Web サービスのサービスの説明のプロキシクラスを作成します。 SOAP プロトコルに対してプロキシクラスが生成されると、<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> メソッドを介して XML Web サービスメソッドへの同期呼び出しが行われます。一方、非同期呼び出しは、<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> メソッドと <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> メソッドを使用して行われます。



## Examples
 次のコード例は、`Math` XML Web サービスの Wsdl.exe によって生成されるプロキシクラスです。 プロキシクラスは、抽象 <xref:System.Web.Services.Protocols.WebClientProtocol> クラスから派生した <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>から派生します。

 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]

 次のコード例は、前のプロキシクラスが生成された `Math` XML Web サービスです。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/sourcevb.asmx)]


 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <block subset="none" type="overrides"><para>このクラスをオーバーライドすると、特定の種類の XML Web サービスに固有のメソッドを派生クラスに導入できます。 メソッドは、パラメーターを取得し、基本クラスを呼び出して XML Web サービスとの通信を行います。 導入されたメソッドが非同期である場合は、<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドと <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> メソッドを呼び出します。 導入されたメソッドが同期している場合は、<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> メソッドを呼び出します。 オーバーライドされたコンストラクターは、通常、<see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> プロパティを XML Web サービスメソッドの URL に設定します。</para></block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="soapHttpClientProtocol.BeginInvoke (methodName, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドを呼び出している、派生クラス内の XML Web サービス メソッドの名前。</param>
        <param name="parameters">XML Web サービスに渡すパラメーターを格納しているオブジェクトの配列。 配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</param>
        <param name="callback">非同期呼び出しが完了したときに呼び出されるデリゲート。 <paramref name="callback" /> が <see langword="null" /> の場合、このデリゲートは呼び出されません。</param>
        <param name="asyncState">呼び出し元によって提供される補足情報。</param>
        <summary>SOAP を使用して XML Web サービス メソッドの非同期呼び出しを開始します。</summary>
        <returns>リモート メソッドの呼び出しからの戻り値を取得するために、<see cref="T:System.IAsyncResult" /> メソッドに渡される <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 通常は、XML Web サービス用に独自のプロキシクラスを作成していない限り、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドを直接呼び出すことはありません。

 サービスの説明から Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスでは、xml web サービスメソッドをプロキシクラスから派生した名前として公開し、XML Web サービスメソッドを同期的に呼び出すことができます。 Xml web サービスメソッドを非同期に呼び出すには、各 XML Web サービスメソッドのプロキシクラスに2つの追加のメソッドを追加します。1つは、XML Web サービスメソッドの名前に `Begin` プレフィックスを追加し、もう1つに `End` プレフィックスを追加したものです。

 プロキシクラスは、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドを呼び出して、XML Web サービスメソッドへの非同期呼び出しを開始します。 たとえば、xml web サービスが `Add`という名前の XML Web サービスメソッドを公開する場合、プロキシクラスには、XML Web サービスメソッドへの呼び出しを開始するための `BeginAdd`という名前のメソッドが含まれています。 `BeginAdd`のコード内では、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドに対して呼び出しが行われ、結果は `Add`の予想される戻り値の型に配置されます。

 `methodName` は、<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>など、メソッドに追加されたカスタム属性を検索するために使用されます。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> は、SOAP プロトコルに必要な派生メソッドに関する追加情報を提供します。

 `asyncState` は `callback` に渡され、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドから返された <xref:System.IAsyncResult> に含まれます。 `asyncState` パラメーターを使用すると、`callback` パラメーターで指定された非同期呼び出しのコンテキストに関する情報を、結果を処理するデリゲートに渡すことができます。



## Examples
 次のコード例は、`Math` XML Web サービスの Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスです。 プロキシクラスの `BeginAdd` メソッド内で、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドは `Add` XML Web サービスメソッドへの非同期呼び出しを開始します。

 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]

 次のコード例は、前のプロキシクラスが作成された `Math` XML Web サービスです。

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</exception>
        <exception cref="T:System.Net.WebException">ネットワークへのアクセス中にエラーが発生しました。</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberSignature Language="F#" Value="member this.Discover : unit -&gt; unit" Usage="soapHttpClientProtocol.Discover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> にある探索ドキュメントに記述されている XML Web サービスに動的にバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 XML Web サービスクライアントは、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> メソッドを使用して、プロキシクラスで参照されているもの以外の XML Web サービスに動的にバインドできます。 通常、<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティは、XML Web サービスのベースアドレスを参照します。 ただし、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> メソッドを呼び出す前に、<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティを探索ドキュメントの URL に設定してください。 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> メソッドは、プロキシクラスで定義されているバインディングに対して探索ドキュメント内の一致を検索し、それに動的にバインドしようとします。 成功した場合、後続のメソッド呼び出しは、探索ドキュメントで説明されている XML Web サービスに送られます。

 プロキシクラスが Web サービス記述言語ツール (Wsdl.exe) を使用して構築されている場合、プロキシクラスは、<xref:System.Web.Services.WebServiceBindingAttribute>を使用して呼び出す XML Web サービスメソッドによって実装されるバインディングを定義します。 XML Web サービスが複数のバインディングを実装する場合、Wsdl.exe はバインドごとにプロキシクラスを作成します。 各プロキシクラスに適用されるのは、バインディングとその名前空間の名前を定義する <xref:System.Web.Services.WebServiceBindingAttribute> です。 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティに設定する探索ドキュメントには、同じバインド名と名前空間を実装する XML Web サービスへの参照が含まれている必要があります。指定しないと、例外がスローされます。



## Examples
 次のコード例は、`Math` XML Web サービスの Wsdl.exe ユーティリティを使用して生成されたプロキシクラスです。 バインド名を `MathSoap` に設定し、名前空間を `http://tempuri.org/`する `Math` プロキシクラスに <xref:System.Web.Services.WebServiceBindingAttribute> が適用されます。

 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]

 次のコード例は、上記のプロキシクラスを使用する Web サービスクライアントです。 Web フォームの `EnterBtn_Click` イベント内では、XML Web サービスクライアントは、ユーザーが指定した URL に動的にバインドしようとしている <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> メソッドを呼び出します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">プロキシ クラスで定義されたバインディングが <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> の探索ドキュメントに見つかりませんでした。

または

プロキシ クラスにバインディングが定義されていません。</exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/fxx6cfx2(v=vs.100)">XML Web サービス探索</related>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj[]" Usage="soapHttpClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> メソッドから返された <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />。</param>
        <summary>SOAP を使用して XML Web サービス メソッドの非同期呼び出しを終了します。</summary>
        <returns>派生クラス メソッドの戻り値と、参照渡しパラメーターまたは <see langword="out" /> パラメーターを格納しているオブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 通常は、XML Web サービス用に独自のプロキシクラスを作成していない限り、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> メソッドを直接呼び出すことはありません。

 Xml web サービスの Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスは、xml web サービスメソッドを同期的に呼び出すために、プロキシクラスの名前として XML Web サービスメソッドを公開します。 Xml web サービスメソッドを非同期で呼び出す場合は、xml web サービスメソッドごとに2つの追加のメソッドがプロキシクラスに追加されます。1つは、XML Web サービスメソッドの名前に追加された `Begin` プレフィックスと `End` プレフィックスを追加したものです。

 プロキシクラスは、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> メソッドを呼び出して、XML Web サービスメソッドへの非同期呼び出しを完了します。 たとえば、xml web サービスが `Add`という名前の XML Web サービスメソッドを公開する場合、プロキシクラスには、XML Web サービスメソッドの非同期呼び出しを完了するための `EndAdd`という名前のメソッドが含まれています。 `EndAdd` のコード内では、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> メソッドに対して呼び出しが行われ、その結果が `Add`の予想される戻り値の型に配置されます。



## Examples
 次のコード例は、`Math` XML Web サービスの Wsdl.exe によって生成されるプロキシクラスです。 プロキシクラスの `EndAdd` メソッド内で、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> メソッドは `Add` XML Web サービスメソッドへの非同期呼び出しを完了します。

 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]

 次のコード例は、前のプロキシクラスが作成された `Math` XML Web サービスです。

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> が <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドからの戻り値ではありません。</exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</exception>
        <exception cref="T:System.Net.WebException">ネットワークへのアクセス中にエラーが発生しました。</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader&#xA;override this.GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader" Usage="soapHttpClientProtocol.GetReaderForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を初期化する <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> を提供する <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="bufferSize"><see cref="T:System.IO.StreamReader" /> で使用する <see cref="T:System.Xml.XmlReader" /> の初期バッファー サイズ。</param>
        <summary><see cref="T:System.Xml.XmlReader" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を返します。</summary>
        <returns><see cref="T:System.Xml.XmlReader" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <paramref name="message" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="soapHttpClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><see cref="T:System.Uri" /> の作成時に使用する <see cref="T:System.Net.WebRequest" />。</param>
        <summary>指定した <see cref="T:System.Net.WebRequest" /> に対して <paramref name="uri" /> を作成します。</summary>
        <returns>指定した URI の <see cref="T:System.Net.WebRequest" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、XML Web サービス要求が作成される前に <xref:System.Net.WebRequest> をカスタマイズするためにオーバーライドできます。 たとえば、要求にカスタムヘッダーを追加できます。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="uri" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter&#xA;override this.GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter" Usage="soapHttpClientProtocol.GetWriterForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を初期化する <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> を提供する <see cref="T:System.Xml.XmlWriter" />。</param>
        <param name="bufferSize"><see cref="T:System.IO.StreamWriter" /> で使用する <see cref="T:System.Xml.XmlWriter" /> の初期バッファー サイズ。</param>
        <summary><see cref="T:System.Xml.XmlWriter" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を返します。</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <paramref name="message" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (methodName, parameters)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName">XML Web サービス メソッドの名前。</param>
        <param name="method_name">XML Web サービス メソッドの名前。</param>
        <param name="parameters">XML Web サービスに渡すパラメーターを格納しているオブジェクトの配列。 配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</param>
        <summary>SOAP を使用して XML Web サービス メソッドを同期的に呼び出します。</summary>
        <returns>派生クラス メソッドの戻り値、および <see langword="reference" /> パラメーターまたは <see langword="out" /> パラメーターを格納しているオブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 通常、XML Web サービス用に独自のプロキシクラスを作成する場合を除き、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> メソッドを直接呼び出さないでください。

 XML web サービスの Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスは、XML Web サービスメソッドをプロキシクラスからの名前として公開します。 プロキシクラスは、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> メソッドを呼び出して、XML Web サービスメソッド呼び出しを呼び出します。 たとえば、XML Web サービスが `Add`という名前の XML Web サービスメソッドを公開している場合は、プロキシクラスに `Add`という名前のメソッドも含まれます。 プロキシクラスの `Add` メソッドのコード内では、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> メソッドを使用して XML Web サービスメソッドへの同期呼び出しが行われ、その結果が `Add`の予想される戻り値の型に配置されます。

 `methodName` パラメーターは、<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>など、メソッドに追加されたカスタム属性を検索するために使用されます。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> は、SOAP プロトコルに必要な派生メソッドに関する追加情報を提供します。



## Examples
 次のコード例は、`Math` XML Web サービスの Wsdl.exe によって生成されるプロキシクラスです。 プロキシクラスの `Add` メソッド内で、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> メソッドは `Add` XML Web サービスメソッドを呼び出します。

 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]

 次のコード例は、前のプロキシクラスが作成された `Math` XML Web サービスです。

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</exception>
        <exception cref="T:System.Net.WebException">ネットワークへのアクセス中にエラーが発生しました。</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたメソッドを非同期で呼び出します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName">呼び出すメソッドの名前。</param>
        <param name="parameters">メソッドに渡すパラメーター。</param>
        <param name="callback">メソッド呼び出しの完了時に呼び出されたデリゲート。</param>
        <summary>指定されたメソッドを非同期で呼び出します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userState" Type="System.Object" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName">呼び出すメソッドの名前。</param>
        <param name="parameters">メソッドに渡すパラメーター。</param>
        <param name="callback">メソッド呼び出しの完了時に呼び出されたデリゲート。</param>
        <param name="userState">ステータス情報を <paramref name="callback" /> デリゲートに渡すために使用するオブジェクト。</param>
        <summary>指定されたメソッドを非同期で呼び出します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion with get, set" Usage="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービスに対して SOAP 要求を行うために使用する SOAP プロトコルのバージョンを取得または設定します。</summary>
        <value><see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 値のいずれか 1 つです。 既定では、 <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> プロパティは、Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスで設定されます。これは、XML Web サービスの WSDL ドキュメントが SOAP バージョン1.1 をサポートしている場合に、既定で <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> されます。 ただし、XML Web サービスが SOAP 1.2 のみをサポートしている場合、Wsdl.exe は <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> プロパティを <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>に設定します。 Wsdl.exe を使用してプロキシクラスを生成するときに、SOAP プロトコルのバージョンを選択するには、`/protocol` スイッチを `SOAP` または `SOAP12` 設定と共に使用して、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> プロパティをそれぞれ <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> に設定し、<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>します。



## Examples
 次のコード例では、XML Web サービスとの通信に使用するプロトコルのバージョンを SOAP 1.2 に設定します。

 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>
