<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c84f45ba9b3617b2a419d67c75cdc91b67584ca0" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77099960" /></Metadata><TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type SoapHttpClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5b41c-101">SOAP 使用時のクライアント プロキシの派生元となるクラスを指定します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-101">Specifies the class client that proxies derive from when using SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="5b41c-102">XML Web サービスクライアントを構築する場合は、<xref:System.Web.Services.Protocols.WebClientProtocol> から間接的または直接派生したプロキシクラスを XML Web サービス用に作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b41c-102">If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> must be created for the XML Web service.</span></span> <span data-ttu-id="5b41c-103">XML Web サービスクライアントが SOAP を使用してを呼び出す場合、プロキシクラスは、<xref:System.Web.Services.Protocols.HttpWebClientProtocol>から派生した <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>から派生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b41c-103">When the XML Web service client calls using SOAP, the proxy class must derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from <xref:System.Web.Services.Protocols.HttpWebClientProtocol>.</span></span> <span data-ttu-id="5b41c-104"><xref:System.Web.Services.Protocols.HttpWebClientProtocol>は、<xref:System.Web.Services.Protocols.WebClientProtocol>から派生します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-104"><xref:System.Web.Services.Protocols.HttpWebClientProtocol>, in turn, derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>

 <span data-ttu-id="5b41c-105">XML Web サービスと通信するには、間接的に派生するプロキシクラスを作成するか、呼び出す XML Web サービスの <xref:System.Web.Services.Protocols.WebClientProtocol> から直接作成します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-105">To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call.</span></span> <span data-ttu-id="5b41c-106">プロキシクラスを手動で作成するのではなく、Web サービス記述言語ツール (Wsdl.exe) を使用して、指定された XML Web サービスのサービスの説明のプロキシクラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-106">Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</span></span> <span data-ttu-id="5b41c-107">SOAP プロトコルに対してプロキシクラスが生成されると、<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> メソッドを介して XML Web サービスメソッドへの同期呼び出しが行われます。一方、非同期呼び出しは、<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> メソッドと <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> メソッドを使用して行われます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-107">When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method, whereas asynchronous calls are made using the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method and the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> method.</span></span>



## Examples
 <span data-ttu-id="5b41c-108">次のコード例は、`Math` XML Web サービスの Wsdl.exe によって生成されるプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-108">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="5b41c-109">プロキシクラスは、抽象 <xref:System.Web.Services.Protocols.WebClientProtocol> クラスから派生した <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>から派生します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-109">The proxy class derives from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.WebClientProtocol> class.</span></span>

 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]

 <span data-ttu-id="5b41c-110">次のコード例は、前のプロキシクラスが生成された `Math` XML Web サービスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-110">The following code example is the `Math` XML Web service, from which the preceding proxy class was generated.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="5b41c-111">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5b41c-111">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="5b41c-112">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-112">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="5b41c-113">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5b41c-113">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/sourcevb.asmx)]


 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="5b41c-114">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-114">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="5b41c-115">このクラスをオーバーライドすると、特定の種類の XML Web サービスに固有のメソッドを派生クラスに導入できます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-115">When you override this class, you can introduce methods in the derived class which are specific to a particular type of XML Web service.</span></span> <span data-ttu-id="5b41c-116">メソッドは、パラメーターを取得し、基本クラスを呼び出して XML Web サービスとの通信を行います。</span><span class="sxs-lookup"><span data-stu-id="5b41c-116">The methods capture the parameters and call the base class to do the work of communicating with the XML Web service.</span></span> <span data-ttu-id="5b41c-117">導入されたメソッドが非同期である場合は、<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドと <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-117">If the introduced methods are asynchronous, call the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method and the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method.</span></span> <span data-ttu-id="5b41c-118">導入されたメソッドが同期している場合は、<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-118">If the introduced methods are synchronous, call the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> method.</span></span> <span data-ttu-id="5b41c-119">オーバーライドされたコンストラクターは、通常、<see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> プロパティを XML Web サービスメソッドの URL に設定します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-119">The overridden constructor typically sets the <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> property to the URL of the XML Web service method.</span></span></para></block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b41c-120"><see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-120">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="soapHttpClientProtocol.BeginInvoke (methodName, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="5b41c-121"><see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドを呼び出している、派生クラス内の XML Web サービス メソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="5b41c-121">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <param name="parameters"><span data-ttu-id="5b41c-122">XML Web サービスに渡すパラメーターを格納しているオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="5b41c-122">An array of objects containing the parameters to pass to the XML Web service.</span></span> <span data-ttu-id="5b41c-123">配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</span><span class="sxs-lookup"><span data-stu-id="5b41c-123">The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</span></span></param>
        <param name="callback"><span data-ttu-id="5b41c-124">非同期呼び出しが完了したときに呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="5b41c-124">The delegate to call when the asynchronous invoke is complete.</span></span> <span data-ttu-id="5b41c-125"><paramref name="callback" /> が <see langword="null" /> の場合、このデリゲートは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="5b41c-125">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="5b41c-126">呼び出し元によって提供される補足情報。</span><span class="sxs-lookup"><span data-stu-id="5b41c-126">Extra information supplied by the caller.</span></span></param>
        <summary><span data-ttu-id="5b41c-127">SOAP を使用して XML Web サービス メソッドの非同期呼び出しを開始します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-127">Starts an asynchronous invocation of an XML Web service method using SOAP.</span></span></summary>
        <returns><span data-ttu-id="5b41c-128">リモート メソッドの呼び出しからの戻り値を取得するために、<see cref="T:System.IAsyncResult" /> メソッドに渡される <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />。</span><span class="sxs-lookup"><span data-stu-id="5b41c-128">An <see cref="T:System.IAsyncResult" /> that is passed to the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the remote method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="5b41c-129">通常は、XML Web サービス用に独自のプロキシクラスを作成していない限り、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドを直接呼び出すことはありません。</span><span class="sxs-lookup"><span data-stu-id="5b41c-129">Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.</span></span>

 <span data-ttu-id="5b41c-130">サービスの説明から Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスでは、xml web サービスメソッドをプロキシクラスから派生した名前として公開し、XML Web サービスメソッドを同期的に呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-130">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</span></span> <span data-ttu-id="5b41c-131">Xml web サービスメソッドを非同期に呼び出すには、各 XML Web サービスメソッドのプロキシクラスに2つの追加のメソッドを追加します。1つは、XML Web サービスメソッドの名前に `Begin` プレフィックスを追加し、もう1つに `End` プレフィックスを追加したものです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-131">To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.</span></span>

 <span data-ttu-id="5b41c-132">プロキシクラスは、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドを呼び出して、XML Web サービスメソッドへの非同期呼び出しを開始します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-132">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method to start an asynchronous invocation call to the XML Web service method.</span></span> <span data-ttu-id="5b41c-133">たとえば、xml web サービスが `Add`という名前の XML Web サービスメソッドを公開する場合、プロキシクラスには、XML Web サービスメソッドへの呼び出しを開始するための `BeginAdd`という名前のメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5b41c-133">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `BeginAdd`, for starting an invocation to the XML Web service method.</span></span> <span data-ttu-id="5b41c-134">`BeginAdd`のコード内では、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドに対して呼び出しが行われ、結果は `Add`の予想される戻り値の型に配置されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-134">Within the code for the `BeginAdd`, a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method and the results are placed into the expected return type for `Add`.</span></span>

 <span data-ttu-id="5b41c-135">`methodName` は、<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>など、メソッドに追加されたカスタム属性を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-135">The `methodName` is used to find the custom attributes which may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</span></span> <span data-ttu-id="5b41c-136"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> は、SOAP プロトコルに必要な派生メソッドに関する追加情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-136"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information about the derived method that is required for the SOAP protocol.</span></span>

 <span data-ttu-id="5b41c-137">`asyncState` は `callback` に渡され、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドから返された <xref:System.IAsyncResult> に含まれます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-137">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="5b41c-138">`asyncState` パラメーターを使用すると、`callback` パラメーターで指定された非同期呼び出しのコンテキストに関する情報を、結果を処理するデリゲートに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-138">The `asyncState` parameter can be used to pass information about the context of the asynchronous call, specified in the `callback` parameter, to the delegate that handles the result.</span></span>



## Examples
 <span data-ttu-id="5b41c-139">次のコード例は、`Math` XML Web サービスの Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-139">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service.</span></span> <span data-ttu-id="5b41c-140">プロキシクラスの `BeginAdd` メソッド内で、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> メソッドは `Add` XML Web サービスメソッドへの非同期呼び出しを開始します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-140">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method is starting an asynchronous invocation to the `Add` XML Web service method.</span></span>

 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]

 <span data-ttu-id="5b41c-141">次のコード例は、前のプロキシクラスが作成された `Math` XML Web サービスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-141">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="5b41c-142">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</span><span class="sxs-lookup"><span data-stu-id="5b41c-142">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b41c-143">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</span><span class="sxs-lookup"><span data-stu-id="5b41c-143">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="5b41c-144">ネットワークへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="5b41c-144">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberSignature Language="F#" Value="member this.Discover : unit -&gt; unit" Usage="soapHttpClientProtocol.Discover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b41c-145"><see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> にある探索ドキュメントに記述されている XML Web サービスに動的にバインドします。</span><span class="sxs-lookup"><span data-stu-id="5b41c-145">Dynamically binds to an XML Web service described in the discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="5b41c-146">XML Web サービスクライアントは、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> メソッドを使用して、プロキシクラスで参照されているもの以外の XML Web サービスに動的にバインドできます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-146">An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method.</span></span> <span data-ttu-id="5b41c-147">通常、<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティは、XML Web サービスのベースアドレスを参照します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-147">Typically, the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property refers to the base address of the XML Web service.</span></span> <span data-ttu-id="5b41c-148">ただし、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> メソッドを呼び出す前に、<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティを探索ドキュメントの URL に設定してください。</span><span class="sxs-lookup"><span data-stu-id="5b41c-148">However, before invoking the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method, set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to a URL of a discovery document.</span></span> <span data-ttu-id="5b41c-149"><xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> メソッドは、プロキシクラスで定義されているバインディングに対して探索ドキュメント内の一致を検索し、それに動的にバインドしようとします。</span><span class="sxs-lookup"><span data-stu-id="5b41c-149">The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</span></span> <span data-ttu-id="5b41c-150">成功した場合、後続のメソッド呼び出しは、探索ドキュメントで説明されている XML Web サービスに送られます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-150">If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</span></span>

 <span data-ttu-id="5b41c-151">プロキシクラスが Web サービス記述言語ツール (Wsdl.exe) を使用して構築されている場合、プロキシクラスは、<xref:System.Web.Services.WebServiceBindingAttribute>を使用して呼び出す XML Web サービスメソッドによって実装されるバインディングを定義します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-151">If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <xref:System.Web.Services.WebServiceBindingAttribute>.</span></span> <span data-ttu-id="5b41c-152">XML Web サービスが複数のバインディングを実装する場合、Wsdl.exe はバインドごとにプロキシクラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-152">When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</span></span> <span data-ttu-id="5b41c-153">各プロキシクラスに適用されるのは、バインディングとその名前空間の名前を定義する <xref:System.Web.Services.WebServiceBindingAttribute> です。</span><span class="sxs-lookup"><span data-stu-id="5b41c-153">Applied to each proxy class is a <xref:System.Web.Services.WebServiceBindingAttribute> that defines the name of the binding and its namespace.</span></span> <span data-ttu-id="5b41c-154"><xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティに設定する探索ドキュメントには、同じバインド名と名前空間を実装する XML Web サービスへの参照が含まれている必要があります。指定しないと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-154">The discovery document you set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</span></span>



## Examples
 <span data-ttu-id="5b41c-155">次のコード例は、`Math` XML Web サービスの Wsdl.exe ユーティリティを使用して生成されたプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-155">The following code example is a proxy class generated using the Wsdl.exe utility for the `Math` XML Web service.</span></span> <span data-ttu-id="5b41c-156">バインド名を `MathSoap` に設定し、名前空間を `http://tempuri.org/`する `Math` プロキシクラスに <xref:System.Web.Services.WebServiceBindingAttribute> が適用されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-156">A <xref:System.Web.Services.WebServiceBindingAttribute> is applied to the `Math` proxy class setting the binding name to `MathSoap` and its namespace to `http://tempuri.org/`.</span></span>

 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]

 <span data-ttu-id="5b41c-157">次のコード例は、上記のプロキシクラスを使用する Web サービスクライアントです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-157">The following code example is a Web Service client using the preceding proxy class.</span></span> <span data-ttu-id="5b41c-158">Web フォームの `EnterBtn_Click` イベント内では、XML Web サービスクライアントは、ユーザーが指定した URL に動的にバインドしようとしている <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-158">Within the `EnterBtn_Click` event of the Web Form, the XML Web service client calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempting to dynamically bind to the URL supplied by the user.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="5b41c-159">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5b41c-159">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="5b41c-160">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-160">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="5b41c-161">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5b41c-161">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="5b41c-162">プロキシ クラスで定義されたバインディングが <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> の探索ドキュメントに見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="5b41c-162">The binding defined in the proxy class could not be found in the discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.</span></span>

<span data-ttu-id="5b41c-163">または</span><span class="sxs-lookup"><span data-stu-id="5b41c-163">-or-</span></span>

<span data-ttu-id="5b41c-164">プロキシ クラスにバインディングが定義されていません。</span><span class="sxs-lookup"><span data-stu-id="5b41c-164">The proxy class does not have a binding defined.</span></span></exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/fxx6cfx2(v=vs.100)"><span data-ttu-id="5b41c-165">XML Web サービス探索</span><span class="sxs-lookup"><span data-stu-id="5b41c-165">XML Web Service Discovery</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj[]" Usage="soapHttpClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="5b41c-166"><see cref="T:System.IAsyncResult" /> メソッドから返された <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="5b41c-166">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="5b41c-167">SOAP を使用して XML Web サービス メソッドの非同期呼び出しを終了します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-167">Ends an asynchronous invocation of an XML Web service method using SOAP.</span></span></summary>
        <returns><span data-ttu-id="5b41c-168">派生クラス メソッドの戻り値と、参照渡しパラメーターまたは <see langword="out" /> パラメーターを格納しているオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="5b41c-168">An array of objects that contains the return value and any by-reference or <see langword="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="5b41c-169">通常は、XML Web サービス用に独自のプロキシクラスを作成していない限り、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> メソッドを直接呼び出すことはありません。</span><span class="sxs-lookup"><span data-stu-id="5b41c-169">Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.</span></span>

 <span data-ttu-id="5b41c-170">Xml web サービスの Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスは、xml web サービスメソッドを同期的に呼び出すために、プロキシクラスの名前として XML Web サービスメソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-170">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</span></span> <span data-ttu-id="5b41c-171">Xml web サービスメソッドを非同期で呼び出す場合は、xml web サービスメソッドごとに2つの追加のメソッドがプロキシクラスに追加されます。1つは、XML Web サービスメソッドの名前に追加された `Begin` プレフィックスと `End` プレフィックスを追加したものです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-171">For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.</span></span>

 <span data-ttu-id="5b41c-172">プロキシクラスは、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> メソッドを呼び出して、XML Web サービスメソッドへの非同期呼び出しを完了します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-172">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method to complete an asynchronous invocation call to the XML Web service method.</span></span> <span data-ttu-id="5b41c-173">たとえば、xml web サービスが `Add`という名前の XML Web サービスメソッドを公開する場合、プロキシクラスには、XML Web サービスメソッドの非同期呼び出しを完了するための `EndAdd`という名前のメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5b41c-173">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `EndAdd`, for completing an asynchronous invocation of an XML Web service method.</span></span> <span data-ttu-id="5b41c-174">`EndAdd` のコード内では、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> メソッドに対して呼び出しが行われ、その結果が `Add`の予想される戻り値の型に配置されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-174">Within the code for the `EndAdd` a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method and then the results are placed into the expected return type for `Add`.</span></span>



## Examples
 <span data-ttu-id="5b41c-175">次のコード例は、`Math` XML Web サービスの Wsdl.exe によって生成されるプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-175">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="5b41c-176">プロキシクラスの `EndAdd` メソッド内で、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> メソッドは `Add` XML Web サービスメソッドへの非同期呼び出しを完了します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-176">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method completes the asynchronous invocation to the `Add` XML Web service method.</span></span>

 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]

 <span data-ttu-id="5b41c-177">次のコード例は、前のプロキシクラスが作成された `Math` XML Web サービスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-177">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b41c-178"><paramref name="asyncResult" /> が <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドからの戻り値ではありません。</span><span class="sxs-lookup"><span data-stu-id="5b41c-178"><paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="5b41c-179">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</span><span class="sxs-lookup"><span data-stu-id="5b41c-179">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b41c-180">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</span><span class="sxs-lookup"><span data-stu-id="5b41c-180">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="5b41c-181">ネットワークへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="5b41c-181">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader&#xA;override this.GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader" Usage="soapHttpClientProtocol.GetReaderForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="5b41c-182"><see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を初期化する <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> を提供する <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="5b41c-182">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="5b41c-183"><see cref="T:System.IO.StreamReader" /> で使用する <see cref="T:System.Xml.XmlReader" /> の初期バッファー サイズ。</span><span class="sxs-lookup"><span data-stu-id="5b41c-183">The initial buffer size of the <see cref="T:System.IO.StreamReader" /> used by the <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <summary><span data-ttu-id="5b41c-184"><see cref="T:System.Xml.XmlReader" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-184">Returns an <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="5b41c-185"><see cref="T:System.Xml.XmlReader" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <paramref name="message" />。</span><span class="sxs-lookup"><span data-stu-id="5b41c-185">A <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="soapHttpClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="5b41c-186"><see cref="T:System.Uri" /> の作成時に使用する <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="5b41c-186">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="5b41c-187">指定した <see cref="T:System.Net.WebRequest" /> に対して <paramref name="uri" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-187">Creates a <see cref="T:System.Net.WebRequest" /> for the specified <paramref name="uri" />.</span></span></summary>
        <returns><span data-ttu-id="5b41c-188">指定した URI の <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="5b41c-188">The <see cref="T:System.Net.WebRequest" /> for the specified URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="5b41c-189">このメソッドは、XML Web サービス要求が作成される前に <xref:System.Net.WebRequest> をカスタマイズするためにオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-189">This method can be overridden to customize the <xref:System.Net.WebRequest> before the XML Web service request is made.</span></span> <span data-ttu-id="5b41c-190">たとえば、要求にカスタムヘッダーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-190">For example, you could add a custom header to the request.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b41c-191"><paramref name="uri" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b41c-191">The <paramref name="uri" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter&#xA;override this.GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter" Usage="soapHttpClientProtocol.GetWriterForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="5b41c-192"><see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を初期化する <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> を提供する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5b41c-192">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlWriter" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="5b41c-193"><see cref="T:System.IO.StreamWriter" /> で使用する <see cref="T:System.Xml.XmlWriter" /> の初期バッファー サイズ。</span><span class="sxs-lookup"><span data-stu-id="5b41c-193">The initial buffer size of the <see cref="T:System.IO.StreamWriter" /> used by the <see cref="T:System.Xml.XmlWriter" />.</span></span></param>
        <summary><span data-ttu-id="5b41c-194"><see cref="T:System.Xml.XmlWriter" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-194">Returns a <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="5b41c-195"><see cref="T:System.Xml.XmlWriter" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <paramref name="message" />。</span><span class="sxs-lookup"><span data-stu-id="5b41c-195">A <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (methodName, parameters)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="5b41c-196">XML Web サービス メソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="5b41c-196">The name of the XML Web service method.</span></span></param>
        <param name="method_name"><span data-ttu-id="5b41c-197">XML Web サービス メソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="5b41c-197">The name of the XML Web service method.</span></span></param>
        <param name="parameters"><span data-ttu-id="5b41c-198">XML Web サービスに渡すパラメーターを格納しているオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="5b41c-198">An array of objects that contains the parameters to pass to the XML Web service.</span></span> <span data-ttu-id="5b41c-199">配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</span><span class="sxs-lookup"><span data-stu-id="5b41c-199">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <summary><span data-ttu-id="5b41c-200">SOAP を使用して XML Web サービス メソッドを同期的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-200">Invokes an XML Web service method synchronously using SOAP.</span></span></summary>
        <returns><span data-ttu-id="5b41c-201">派生クラス メソッドの戻り値、および <see langword="reference" /> パラメーターまたは <see langword="out" /> パラメーターを格納しているオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="5b41c-201">An array of objects that contains the return value and any <see langword="reference" /> or <see langword="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="5b41c-202">通常、XML Web サービス用に独自のプロキシクラスを作成する場合を除き、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> メソッドを直接呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="5b41c-202">Typically, you do not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method directly, unless you are building your own proxy class for an XML Web service.</span></span>

 <span data-ttu-id="5b41c-203">XML web サービスの Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスは、XML Web サービスメソッドをプロキシクラスからの名前として公開します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-203">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</span></span> <span data-ttu-id="5b41c-204">プロキシクラスは、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> メソッドを呼び出して、XML Web サービスメソッド呼び出しを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-204">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method to invoke an XML Web service method call.</span></span> <span data-ttu-id="5b41c-205">たとえば、XML Web サービスが `Add`という名前の XML Web サービスメソッドを公開している場合は、プロキシクラスに `Add`という名前のメソッドも含まれます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-205">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class also contains a method named `Add`.</span></span> <span data-ttu-id="5b41c-206">プロキシクラスの `Add` メソッドのコード内では、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> メソッドを使用して XML Web サービスメソッドへの同期呼び出しが行われ、その結果が `Add`の予想される戻り値の型に配置されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-206">Within the code for the `Add` method in the proxy class, a synchronous call is made to the XML Web service method through the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method and then the results are placed into the expected return type for `Add`.</span></span>

 <span data-ttu-id="5b41c-207">`methodName` パラメーターは、<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>など、メソッドに追加されたカスタム属性を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-207">The `methodName` parameter is used to find the custom attributes that may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</span></span> <span data-ttu-id="5b41c-208"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> は、SOAP プロトコルに必要な派生メソッドに関する追加情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-208"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information on the derived method which is required for the SOAP protocol.</span></span>



## Examples
 <span data-ttu-id="5b41c-209">次のコード例は、`Math` XML Web サービスの Wsdl.exe によって生成されるプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-209">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="5b41c-210">プロキシクラスの `Add` メソッド内で、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> メソッドは `Add` XML Web サービスメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-210">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method is calling the `Add` XML Web service method.</span></span>

 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]

 <span data-ttu-id="5b41c-211">次のコード例は、前のプロキシクラスが作成された `Math` XML Web サービスです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-211">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="5b41c-212">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</span><span class="sxs-lookup"><span data-stu-id="5b41c-212">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b41c-213">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</span><span class="sxs-lookup"><span data-stu-id="5b41c-213">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="5b41c-214">ネットワークへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="5b41c-214">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b41c-215">指定されたメソッドを非同期で呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-215">Invokes the specified method asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="5b41c-216">呼び出すメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="5b41c-216">The name of the method to invoke.</span></span></param>
        <param name="parameters"><span data-ttu-id="5b41c-217">メソッドに渡すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="5b41c-217">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="5b41c-218">メソッド呼び出しの完了時に呼び出されたデリゲート。</span><span class="sxs-lookup"><span data-stu-id="5b41c-218">The delegate called when the method invocation has completed.</span></span></param>
        <summary><span data-ttu-id="5b41c-219">指定されたメソッドを非同期で呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-219">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userState" Type="System.Object" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="5b41c-220">呼び出すメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="5b41c-220">The name of the method to invoke.</span></span></param>
        <param name="parameters"><span data-ttu-id="5b41c-221">メソッドに渡すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="5b41c-221">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="5b41c-222">メソッド呼び出しの完了時に呼び出されたデリゲート。</span><span class="sxs-lookup"><span data-stu-id="5b41c-222">The delegate called when the method invocation has completed.</span></span></param>
        <param name="userState"><span data-ttu-id="5b41c-223">ステータス情報を <paramref name="callback" /> デリゲートに渡すために使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b41c-223">An object used to pass state information into the <paramref name="callback" /> delegate.</span></span></param>
        <summary><span data-ttu-id="5b41c-224">指定されたメソッドを非同期で呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-224">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion with get, set" Usage="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b41c-225">XML Web サービスに対して SOAP 要求を行うために使用する SOAP プロトコルのバージョンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-225">Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</span></span></summary>
        <value><span data-ttu-id="5b41c-226"><see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="5b41c-226">One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values.</span></span> <span data-ttu-id="5b41c-227">既定では、 <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />です。</span><span class="sxs-lookup"><span data-stu-id="5b41c-227">The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="5b41c-228"><xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> プロパティは、Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシクラスで設定されます。これは、XML Web サービスの WSDL ドキュメントが SOAP バージョン1.1 をサポートしている場合に、既定で <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> されます。</span><span class="sxs-lookup"><span data-stu-id="5b41c-228">The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> by default when a WSDL document for an XML Web service supports SOAP version 1.1.</span></span> <span data-ttu-id="5b41c-229">ただし、XML Web サービスが SOAP 1.2 のみをサポートしている場合、Wsdl.exe は <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> プロパティを <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>に設定します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-229">However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>.</span></span> <span data-ttu-id="5b41c-230">Wsdl.exe を使用してプロキシクラスを生成するときに、SOAP プロトコルのバージョンを選択するには、`/protocol` スイッチを `SOAP` または `SOAP12` 設定と共に使用して、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> プロパティをそれぞれ <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> に設定し、<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-230">To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the `/protocol` switch with the `SOAP` or `SOAP12` settings to set the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> and <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>, respectively.</span></span>



## Examples
 <span data-ttu-id="5b41c-231">次のコード例では、XML Web サービスとの通信に使用するプロトコルのバージョンを SOAP 1.2 に設定します。</span><span class="sxs-lookup"><span data-stu-id="5b41c-231">The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.</span></span>

 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>
