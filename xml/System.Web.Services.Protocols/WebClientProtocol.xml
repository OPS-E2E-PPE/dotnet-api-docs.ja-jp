<Type Name="WebClientProtocol" FullName="System.Web.Services.Protocols.WebClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77aabfe081228031c2c3809c4795f120952f5275" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77099940" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebClientProtocol : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WebClientProtocol extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebClientProtocol&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClientProtocol abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClientProtocol = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b8b90-101">ASP.NET で作成されたすべての XML Web サービス クライアント プロキシの基本クラスを指定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-101">Specifies the base class for all XML Web service client proxies created using ASP.NET.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b8b90-102"><xref:System.Web.Services.Protocols.WebClientProtocol> クラスのプロパティは、XML Web サービスの要求と応答を送信するために使用されるトランスポートの動作を制御するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-102">The properties of the <xref:System.Web.Services.Protocols.WebClientProtocol> class are used to control the behavior of the transport used to transmit the XML Web service request and response.</span></span> <span data-ttu-id="b8b90-103">このクラスのプロパティは、<xref:System.Net.WebRequest>で見つかったプロパティにマップされます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-103">The properties on this class map to properties found on <xref:System.Net.WebRequest>.</span></span> <span data-ttu-id="b8b90-104"><xref:System.Net.WebRequest>から派生したクラスのインスタンス (<xref:System.Net.HttpWebRequest>など) は、ASP.NET を使用して作成された XML Web サービスのトランスポート機構として使用されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-104">Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.</span></span>

 <span data-ttu-id="b8b90-105">XML Web サービスと通信するには、間接的に、または呼び出す XML Web サービスの <xref:System.Web.Services.Protocols.WebClientProtocol> から直接派生するプロキシクラスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8b90-105">To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call.</span></span> <span data-ttu-id="b8b90-106">プロキシクラスを手動で作成する代わりに、Wsdl.exe ツールを使用して、特定の XML Web サービスのサービスの説明に対してプロキシクラスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-106">Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.</span></span> <span data-ttu-id="b8b90-107"><xref:System.Web.Services.Protocols.WebClientProtocol> はクライアントプロキシの基本クラスであるため、プロキシクラスにはプロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="b8b90-107">Since <xref:System.Web.Services.Protocols.WebClientProtocol> is the base class for your client proxy, you will find its properties on your proxy classes.</span></span> <span data-ttu-id="b8b90-108">これらのプロパティは、基になるトランスポートの要求動作を制御するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-108">These properties are useful for controlling the request behavior of the underlying transport.</span></span> <span data-ttu-id="b8b90-109">たとえば、認証された XML Web サービスの呼び出しには、<xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-109">For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services.</span></span> <span data-ttu-id="b8b90-110"><xref:System.Web.Services.Protocols.WebClientProtocol> プロパティの多くは、Web 要求の作成に使用される <xref:System.Net.WebRequest> オブジェクトを初期化するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-110">Many of the <xref:System.Web.Services.Protocols.WebClientProtocol> properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.</span></span>



## Examples
 <span data-ttu-id="b8b90-111">次の例は、`Math`という名前の XML Web サービスを呼び出す ASP.NET Web フォームです。</span><span class="sxs-lookup"><span data-stu-id="b8b90-111">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="b8b90-112">`EnterBtn_Click` 関数内では、Web フォームは、リモート XML Web サービスメソッドを呼び出す前に、プロキシクラスのプロキシ情報とクライアント資格情報を設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-112">Within the `EnterBtn_Click` function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="b8b90-113">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b8b90-113">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="b8b90-114">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-114">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="b8b90-115">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b8b90-115">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[Classic WebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol Example/VB/sourcevb.aspx#1)]

 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b8b90-116">このクラスのプロパティは、XML Web サービスメソッドの呼び出しごとに、<see cref="T:System.Net.WebRequest" /> オブジェクトの新しいインスタンスにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-116">The properties on this class are copied into a new instance of a <see cref="T:System.Net.WebRequest" /> object for each XML Web service method call.</span></span> <span data-ttu-id="b8b90-117">同じ <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> インスタンスの XML Web サービスメソッドを異なるスレッドから同時に呼び出すことはできますが、プロパティの一貫性のあるスナップショットが <see cref="T:System.Net.WebRequest" /> オブジェクトに転送されるように同期は行われません。</span><span class="sxs-lookup"><span data-stu-id="b8b90-117">While you can call XML Web service methods on the same <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> instance from different threads at the same time, there is no synchronization done to ensure that a consistent snapshot of the properties will get transferred to the <see cref="T:System.Net.WebRequest" /> object.</span></span> <span data-ttu-id="b8b90-118">したがって、プロパティを変更し、異なるスレッドからの同時メソッド呼び出しを行う必要がある場合は、XML Web サービスプロキシの別のインスタンスを使用するか、独自の同期を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8b90-118">Therefore if you need to modify the properties and make concurrent method calls from different threads you should use a different instance of the XML Web service proxy or provide your own synchronization.</span></span></threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)"><span data-ttu-id="b8b90-119">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="b8b90-119">Script Exploits Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8b90-120"><see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-120">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CPP/class1.cpp#1)]
 [!code-csharp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CS/class1.cs#1)]
 [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/VB/class1.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="T:System.Net.HttpWebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webClientProtocol.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8b90-121">XML Web サービス メソッドへの要求をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="b8b90-121">Cancels a request to an XML Web service method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Net.WebRequest.Abort" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="AddToCache">
      <MemberSignature Language="C#" Value="protected static void AddToCache (Type type, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AddToCache(class System.Type type, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void AddToCache(Type ^ type, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member AddToCache : Type * obj -&gt; unit" Usage="System.Web.Services.Protocols.WebClientProtocol.AddToCache (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b8b90-122">クライアント プロトコル ハンドラーの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-122">The <see cref="T:System.Type" /> of the client protocol handler.</span></span></param>
        <param name="value"><span data-ttu-id="b8b90-123">キャッシュに追加されるクライアント プロトコル ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="b8b90-123">The client protocol handler to be added to the cache.</span></span></param>
        <summary><span data-ttu-id="b8b90-124">クライアント プロトコル ハンドラーのインスタンスをキャッシュに追加します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-124">Add an instance of the client protocol handler to the cache.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8b90-125">要求に対して使用する接続グループの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-125">Gets or sets the name of the connection group for the request.</span></span></summary>
        <value><span data-ttu-id="b8b90-126">接続グループの名前。</span><span class="sxs-lookup"><span data-stu-id="b8b90-126">The name of the connection group.</span></span> <span data-ttu-id="b8b90-127">既定では、 <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="b8b90-127">The default is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b8b90-128"><xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> プロパティを使用すると、要求を接続グループに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-128">The <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> property enables you to associate a request to a connection group.</span></span> <span data-ttu-id="b8b90-129">詳細については、「<xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b8b90-129">For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.ConnectionGroupName" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8b90-130">XML Web サービス クライアント認証のセキュリティ資格情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-130">Gets or sets security credentials for XML Web service client authentication.</span></span></summary>
        <value><span data-ttu-id="b8b90-131">XML Web サービス クライアントの <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-131">The <see cref="T:System.Net.ICredentials" /> for the XML Web service client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b8b90-132">`Credentials` プロパティを使用する場合は、XML Web サービスクライアントが、<xref:System.Net.NetworkCredential>などの <xref:System.Net.ICredentials>を実装するクラスをインスタンス化してから、認証メカニズムに固有のクライアント資格情報を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8b90-132">When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism.</span></span> <span data-ttu-id="b8b90-133"><xref:System.Net.NetworkCredential> クラスを使用すると、基本認証、ダイジェスト認証、NTLM 認証、および Kerberos 認証メカニズムを使用して認証資格情報を設定できます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-133">The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.</span></span>

 <span data-ttu-id="b8b90-134"><xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> プロパティが <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType> に設定されている場合、クライアントはサーバーとネゴシエートする際に、サーバーの構成に応じて Kerberos 認証、NTLM 認証、またはその両方を使用します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-134">When the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.</span></span>



## Examples
 <span data-ttu-id="b8b90-135">次の例は、`Math`という名前の XML Web サービスを呼び出す ASP.NET Web フォームです。</span><span class="sxs-lookup"><span data-stu-id="b8b90-135">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="b8b90-136">`EnterBtn_Click` 関数内では、Web フォームは `Credentials` プロパティを使用して認証資格情報を明示的に設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-136">Within the `EnterBtn_Click` function, the Web Form explicitly sets authentication credentials using the `Credentials` property.</span></span> <span data-ttu-id="b8b90-137">ユーザー名、パスワード、およびドメインは、<xref:System.Net.NetworkCredential> クラスのコンストラクターに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-137">The user name, password and domain are passed into the constructor for the <xref:System.Net.NetworkCredential> class.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="b8b90-138">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b8b90-138">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="b8b90-139">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-139">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="b8b90-140">詳しくは  をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b8b90-140">For more information, see.</span></span>

 [!code-aspx-csharp[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)"><span data-ttu-id="b8b90-141">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="b8b90-141">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFromCache">
      <MemberSignature Language="C#" Value="protected static object GetFromCache (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetFromCache(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetFromCache(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetFromCache : Type -&gt; obj" Usage="System.Web.Services.Protocols.WebClientProtocol.GetFromCache type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b8b90-142">キャッシュから返されるクライアント プロトコル ハンドラーの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-142">The <see cref="T:System.Type" /> of the client protocol handler to be returned from the cache.</span></span></param>
        <summary><span data-ttu-id="b8b90-143">クライアント プロトコル ハンドラーのインスタンスをキャッシュから取得します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-143">Gets an instance of a client protocol handler from the cache.</span></span></summary>
        <returns><span data-ttu-id="b8b90-144">キャッシュから取得されたクライアント プロトコル ハンドラーのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b8b90-144">An instance of a client protocol handler from the cache.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="b8b90-145"><see cref="T:System.Uri" /> の作成時に使用する <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-145">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="b8b90-146">指定した <see cref="T:System.Net.WebRequest" /> に対する <paramref name="uri" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-146">Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified <paramref name="uri" />.</span></span> <span data-ttu-id="b8b90-147">この保護されているメソッドは、XML Web サービス クライアント インフラストラクチャから呼び出され、新しい<see cref="T:System.Net.WebRequest" /> トランスポート オブジェクトを取得して、XML Web サービス要求を送信します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-147">This protected method is called by the XML Web service client infrastructure to get a new <see cref="T:System.Net.WebRequest" /> transport object to transmit the XML Web service request.</span></span></summary>
        <returns><span data-ttu-id="b8b90-148"><see cref="T:System.Net.WebRequest" /> のインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="b8b90-148">The <see cref="T:System.Net.WebRequest" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b8b90-149">このメソッドは、XML Web サービス要求が作成される前に、<xref:System.Net.WebRequest> オブジェクトをカスタマイズするためにオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-149">This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made.</span></span> <span data-ttu-id="b8b90-150">たとえば、要求にカスタムヘッダーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-150">For example you could add a custom header to the request.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b8b90-151"><paramref name="uri" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b8b90-151">The <paramref name="uri" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8b90-152">XML Web サービス メソッドへの要求から応答を返します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-152">Returns a response from a request to an XML Web service method.</span></span> <span data-ttu-id="b8b90-153">この保護されているメソッドは、XML Web サービス クライアント インフラストラクチャから呼び出され、同期の XML Web サービス要求からの応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-153">This protected method is called by the XML Web service client infrastructure to get the response from a synchronous XML Web service request.</span></span></summary>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="b8b90-154">応答の取得元の <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-154">The <see cref="T:System.Net.WebRequest" /> to get the response from.</span></span></param>
        <summary><span data-ttu-id="b8b90-155">XML Web サービス メソッドへの同期要求から応答を返します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-155">Returns a response from a synchronous request to an XML Web service method.</span></span></summary>
        <returns><span data-ttu-id="b8b90-156">XML Web サービス メソッドへの同期要求からの応答。</span><span class="sxs-lookup"><span data-stu-id="b8b90-156">A response from a synchronous request to an XML Web service method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b8b90-157"><see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> が、<see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" /> を呼び出す前に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="b8b90-157">If <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> is invoked prior to calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />.</span></span></exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="b8b90-158">応答の取得元の <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-158">The <see cref="T:System.Net.WebRequest" /> to get the response from.</span></span></param>
        <param name="result"><span data-ttu-id="b8b90-159">応答が完了したときに <see cref="T:System.IAsyncResult" /> に渡される <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-159">The <see cref="T:System.IAsyncResult" /> to pass to <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /> when the response has completed.</span></span></param>
        <summary><span data-ttu-id="b8b90-160">XML Web サービス メソッドへの非同期要求から応答を返します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-160">Returns a response from an asynchronous request to an XML Web service method.</span></span> <span data-ttu-id="b8b90-161">この保護されているメソッドは、XML Web サービス クライアント インフラストラクチャから呼び出され、非同期の XML Web サービス要求からの応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-161">This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.</span></span></summary>
        <returns><span data-ttu-id="b8b90-162">XML Web サービス メソッドへの非同期要求からの応答。</span><span class="sxs-lookup"><span data-stu-id="b8b90-162">A response from an asynchronous request to an XML Web service method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b8b90-163"><see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> が、<see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" /> を呼び出す前に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="b8b90-163">If <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> is invoked prior to calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />.</span></span></exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8b90-164">事前認証を有効にするかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-164">Gets or sets whether pre-authentication is enabled.</span></span></summary>
        <value><span data-ttu-id="b8b90-165">要求を事前に認証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-165"><see langword="true" /> to pre-authenticate the request; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b8b90-166">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b8b90-166">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b8b90-167">クライアントが資格情報を使用せずにリソースを要求すると、サーバーは要求をチャレンジし、サポートする認証スキームを示します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-167">When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports.</span></span> <span data-ttu-id="b8b90-168">クライアントは認証スキームを選択し、適切な `WWW-authenticate` ヘッダーをサーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-168">The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server.</span></span> <span data-ttu-id="b8b90-169"><xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> が `true`場合、`WWW-authenticate` ヘッダーは後続のすべての要求と共に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-169">When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `true`, the `WWW-authenticate` header is sent with all subsequent requests.</span></span>

 <span data-ttu-id="b8b90-170"><xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> が `false`場合、最初にユーザーの認証を試行することなく、XML Web サービスメソッドへの要求が行われます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-170">When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user.</span></span> <span data-ttu-id="b8b90-171">XML Web サービスが匿名アクセスを許可している場合は、XML Web サービスメソッドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-171">If the XML Web service allows anonymous access, then the XML Web service method is executed.</span></span> <span data-ttu-id="b8b90-172">匿名アクセスが許可されていない場合、401 HTTP リターンコードがクライアントに返されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-172">If anonymous access is disallowed, a 401 HTTP return code is sent back to the client.</span></span> <span data-ttu-id="b8b90-173">応答として、<xref:System.Web.Services.Protocols.WebClientProtocol> クラスは認証資格情報を Web サーバーに返します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-173">In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server.</span></span> <span data-ttu-id="b8b90-174">クライアントが認証され、その後 XML Web サービスにアクセスする権限がある場合は、XML Web サービスメソッドが実行されます。それ以外の場合、クライアントはアクセスを拒否されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-174">If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestEncoding : System.Text.Encoding with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8b90-175">クライアントが XML Web サービスを要求するときに使用される <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-175">The <see cref="T:System.Text.Encoding" /> used to make the client request to the XML Web service.</span></span></summary>
        <value><span data-ttu-id="b8b90-176">クライアントによる要求に使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="b8b90-176">The character encoding for the client request.</span></span> <span data-ttu-id="b8b90-177">既定値は <see langword="null" /> で、基になるトランスポートとプロトコルに既定のエンコーディングが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-177">The default is <see langword="null" />, which uses the default encoding for the underlying transport and protocol.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b8b90-178"><xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> は、要求メッセージのエンコーディングを決定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-178">The <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determines the encoding for the request message.</span></span> <span data-ttu-id="b8b90-179">要求の <xref:System.Net.WebRequest.ContentType%2A> には、エンコーディング値で注釈が付けられます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-179">The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.</span></span>

 <span data-ttu-id="b8b90-180"><xref:System.Web.Services.Protocols.WebClientProtocol> から派生するクラスは、SOAP の <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> など、特定のプロトコルをサポートします。このプロパティは、特定のプロトコルのエンコード要件に準拠するように設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-180">Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol.</span></span> <span data-ttu-id="b8b90-181">たとえば、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol> は既定のエンコードを UTF-8 に設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-181">For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.</span></span>



## Examples
 <span data-ttu-id="b8b90-182">次の例は、`Math`という名前の XML Web サービスを呼び出す ASP.NET Web フォームです。</span><span class="sxs-lookup"><span data-stu-id="b8b90-182">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="b8b90-183">`EnterBtn_Click` 関数内では、Web フォームは明示的に RequestEncoding を UTF-8 に設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-183">Within the `EnterBtn_Click` function, the Web Form explicitly sets RequestEncoding to UTF-8.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="b8b90-184">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b8b90-184">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="b8b90-185">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-185">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="b8b90-186">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b8b90-186">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(100000)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8b90-187">同期的な XML Web サービスの要求に対する返答の受信を XML Web サービス クライアントが待機する時間 (ミリ秒単位) を示します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-187">Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).</span></span></summary>
        <value><span data-ttu-id="b8b90-188">XML Web サービスを同期的に呼び出すときのタイムアウト (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="b8b90-188">The time out, in milliseconds, for synchronous calls to the XML Web service.</span></span> <span data-ttu-id="b8b90-189">既定値は10万ミリ秒です。</span><span class="sxs-lookup"><span data-stu-id="b8b90-189">The default is 100000 milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b8b90-190"><xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> プロパティを <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> に設定すると、要求がタイムアウトしないことを示します。XML Web サービスクライアントで <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> プロパティをタイムアウトに設定できない場合でも、Web サーバーはサーバー側で要求をタイムアウトさせることができます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-190">Setting the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> indicates that the request does not time out. Even though an XML Web service client can set the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to not time out, the Web server can still cause the request to time out on the server side.</span></span>



## Examples
 <span data-ttu-id="b8b90-191">次の例では、`Math` XML Web サービス内の `Add` XML Web サービスメソッドへの同期呼び出しに対して、`Timeout` 値を 15000 (15 秒) に設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-191">The following example sets the `Timeout` value to 15000 (15 seconds) for the synchronous call to the `Add` XML Web service method within the `Math` XML Web service.</span></span>

 [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8b90-192">クライアントが要求している XML Web サービスのベース URL を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-192">Gets or sets the base URL of the XML Web service the client is requesting.</span></span></summary>
        <value><span data-ttu-id="b8b90-193">クライアントが要求している XML Web サービスのベース URL。</span><span class="sxs-lookup"><span data-stu-id="b8b90-193">The base URL of the XML Web service the client is requesting.</span></span> <span data-ttu-id="b8b90-194">既定では、 <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="b8b90-194">The default is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b8b90-195">Wsdl.exe を使用して生成されたプロキシクラスは、クライアントが使用する既定の <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-195">Proxy classes generated using Wsdl.exe will set a default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the client to use.</span></span> <span data-ttu-id="b8b90-196">既定の <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> は、プロキシクラスが生成されたサービスの説明で見つかった location 属性によって決定されます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-196">The default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> is determined by the location attribute found in the service description from which the proxy class was generated.</span></span>

 <span data-ttu-id="b8b90-197"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> や <xref:System.Web.Services.Protocols.HttpPostClientProtocol> など、特定のプロトコルをサポートする派生クラスは、XML Web サービス要求を作成するために <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> に追加情報を追加する場合があります。</span><span class="sxs-lookup"><span data-stu-id="b8b90-197">Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> to make the XML Web service request.</span></span>

 <span data-ttu-id="b8b90-198"><xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティは、プロキシクラスが生成されたのと同じサービスの説明を実装する任意の XML Web サービスを参照するように変更できます。</span><span class="sxs-lookup"><span data-stu-id="b8b90-198">The <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.</span></span>



## Examples
 <span data-ttu-id="b8b90-199">次の例では、`math` XML Web サービスの <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> プロパティを `http:// www.contoso.com`という名前の Web サーバーに変更します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-199">The following example changes the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the `math` XML Web service to the Web server named `http:// www.contoso.com`.</span></span>

 [!code-cpp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8b90-200"><see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> プロパティを <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> プロパティの値に設定するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b8b90-200">Gets or sets a value that indicates whether to set the <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> property to the value of the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property.</span></span></summary>
        <value><span data-ttu-id="b8b90-201">資格情報プロパティを <see langword="true" /> の値に設定する場合は <see cref="P:System.Net.CredentialCache.DefaultCredentials" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b8b90-201"><see langword="true" /> if the Credentials property is set to the value of the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
  </Members>
</Type>
