<Type Name="Pkcs12Info" FullName="System.Security.Cryptography.Pkcs.Pkcs12Info">
  <Metadata><Meta Name="ms.openlocfilehash" Value="58ee9075839ea2742937e20c0cd283922fe608ae" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82499518" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs12Info" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs12Info extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12Info" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs12Info" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12Info sealed" />
  <TypeSignature Language="F#" Value="type Pkcs12Info = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>PKCS#12 PFX の内容からのデータを表します。 このクラスは継承できません。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticatedSafe">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt; AuthenticatedSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt; AuthenticatedSafe" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticatedSafe As ReadOnlyCollection(Of Pkcs12SafeContents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^&gt; ^ AuthenticatedSafe { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticatedSafe : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>PFX AuthenticatedSafe 内に存在する SafeContents 値の読み取り専用のコレクションを取得します。</summary>
        <value>PFX 認証 Atedsafe に存在する SafeContents 値の読み取り専用コレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs12Info Decode (ReadOnlyMemory&lt;byte&gt; encodedBytes, out int bytesConsumed, bool skipCopy = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs12Info Decode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; encodedBytes, [out] int32&amp; bytesConsumed, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedBytes As ReadOnlyMemory(Of Byte), ByRef bytesConsumed As Integer, Optional skipCopy As Boolean = false) As Pkcs12Info" />
      <MemberSignature Language="F#" Value="static member Decode : ReadOnlyMemory&lt;byte&gt; * int * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs12Info" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.Decode (encodedBytes, bytesConsumed, skipCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12Info</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedBytes" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encodedBytes">PKCS#12 PFX として解釈されるデータ。</param>
        <param name="bytesConsumed">このメソッドから戻ったときには、このメソッドによって <paramref name="encodedBytes" /> から読み取られたバイト数を示す値が格納されています。 このパラメーターは初期化前として処理されます。</param>
        <param name="skipCopy">防御用のコピーを作成しないで <paramref name="encodedBytes" /> を格納する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
        <summary>指定されたデータを PKCS#12 PFX として読み取り、その内容のオブジェクト ビューを返します。</summary>
        <returns>入力からデコードされた PKCS#12 PFX のオブジェクト ビュー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

 このメソッドの既定の動作では、`encodedBytes`から最初の `bytesConsumed` バイトの防御コピーが作成されます。
`skipCopy` パラメーターが `true`場合、この防御用コピーはスキップされます。
防御コピーがスキップされ、`encodedBytes` の最初の `bytesConsumed` バイトの内容が、返された値またはメソッドまたはプロパティによって生成されるオブジェクトの有効期間中に変更された場合、それらのオブジェクトのメソッドとプロパティは、無意味な結果を生成したり、破損状態によって例外をスローしたりする可能性があります。
そのため、呼び出し元は、データがそのまま維持されることを合理的に保証できる場合にのみ、`skipCopy` パラメーターに `true` 値を使用することをお勧めします。
 
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="encodedBytes" /> パラメーターの内容は、PKCS#12 PFX として正常にデコードされませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="IntegrityMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode IntegrityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode IntegrityMode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IntegrityMode As Pkcs12IntegrityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::Pkcs12IntegrityMode IntegrityMode { System::Security::Cryptography::Pkcs::Pkcs12IntegrityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.IntegrityMode : System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容に対して提供されている改ざん防止の種類を示す値を取得します。</summary>
        <value><see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> コンテンツに対して提供される改ざん防止の種類を示す列挙体メンバーの1つ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyMac">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>パスワードを使用して <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性の検証を試みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容が変更されているため、パスワードが間違っていることが原因でエラーを識別することはできません。
 
 通常、パスワードで保護された PFX では、整合性を提供する MAC アルゴリズムと機密性を提供する暗号化アルゴリズムに同じパスワードを使用しますが、ファイル形式では要件を設定しません。
したがって、このメソッドから返される `true` 結果となるパスワードが <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt%2A>の呼び出しで成功するという保証はありません。

       ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyMac">
      <MemberSignature Language="C#" Value="public bool VerifyMac (ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyMac(valuetype System.ReadOnlySpan`1&lt;char&gt; password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyMac (password As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyMac(ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="F#" Value="member this.VerifyMac : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="pkcs12Info.VerifyMac password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="password">整合性の検証を試みるために使用されるパスワード。</param>
        <summary><c>System.ReadOnlySpan {System.Char}</c> で表されるパスワードを使用して、<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> コンテンツの整合性の検証を試みます。</summary>
        <returns>パスワードによって <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性が正常に検証された場合は <see langword="true" />、パスワードが正しくない場合、または内容が変更されている場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 PKCS # 12 仕様では、`null` パスワードと "空の" パスワードの区別が行われ、この違いがこのメソッドの戻り値に反映されます。
 `ReadOnlySpan<Char>.Empty` は `null` パスワードを表し、`String.Empty.AsSpan()` は "空の" パスワードを表します。 これらの2つの値のいずれかが `true`を返す場合、他方は返されません。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> の値が <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" /> ではありません。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX の内容によって指定されたハッシュ アルゴリズム オプションは、識別できなかったか、またはこのプラットフォームでサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyMac">
      <MemberSignature Language="C#" Value="public bool VerifyMac (string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyMac(string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyMac (password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyMac(System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.VerifyMac : string -&gt; bool" Usage="pkcs12Info.VerifyMac password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">整合性の検証を試みるために使用されるパスワード。</param>
        <summary><see cref="T:System.String" /> によって表されたパスワードを使用して、<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性の検証を試みます。</summary>
        <returns>パスワードによって <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性が正常に検証された場合は <see langword="true" />、パスワードが正しくない場合、または内容が変更されている場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 PKCS # 12 仕様では、`null` パスワードと "空の" パスワードの区別が行われ、この違いがこのメソッドの戻り値に反映されます。
`null` 文字列が `true`を返す場合、<xref:System.String.Empty?displayProperty=nameWithType> は `false`を返し、その逆も返されます。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> の値が <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" /> ではありません。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX の内容によって指定されたハッシュ アルゴリズム オプションは、識別できなかったか、またはこのプラットフォームでサポートされていません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
