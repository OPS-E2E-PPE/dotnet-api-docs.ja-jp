<Type Name="Pkcs8PrivateKeyInfo" FullName="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f962c30e000e696407583736851efba335a419d4" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75079751" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs8PrivateKeyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs8PrivateKeyInfo sealed" />
  <TypeSignature Language="F#" Value="type Pkcs8PrivateKeyInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2e3f7-101">PKCS#8 の PrivateKeyInfo と EncryptedPrivateKeyInfo の値の検査と作成を有効にします。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-101">Enables the inspection of and creation of PKCS#8 PrivateKeyInfo and EncryptedPrivateKeyInfo values.</span></span> <span data-ttu-id="2e3f7-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs8PrivateKeyInfo (System.Security.Cryptography.Oid algorithmId, Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; algorithmParameters, ReadOnlyMemory&lt;byte&gt; privateKey, bool skipCopies = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Oid algorithmId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; algorithmParameters, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; privateKey, bool skipCopies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithmId As Oid, algorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte)), privateKey As ReadOnlyMemory(Of Byte), Optional skipCopies As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo : System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * ReadOnlyMemory&lt;byte&gt; * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo (algorithmId, algorithmParameters, privateKey, skipCopies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithmId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="algorithmParameters" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="privateKey" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="skipCopies" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithmId"><span data-ttu-id="2e3f7-103">このキーの対象となる非対称アルゴリズムを示すオブジェクト識別子 (OID)。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-103">The Object Identifier (OID) identifying the asymmetric algorithm this key is for.</span></span></param>
        <param name="algorithmParameters"><span data-ttu-id="2e3f7-104">このキーに関連付けられている BER でエンコードされたアルゴリズム パラメーター、またはエンコード時にアルゴリズム パラメーターを省略する場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-104">The BER-encoded algorithm parameters associated with this key, or <see langword="null" /> to omit algorithm parameters when encoding.</span></span></param>
        <param name="privateKey"><span data-ttu-id="2e3f7-105">アルゴリズム固有のエンコードされた秘密キー。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-105">The algorithm-specific encoded private key.</span></span></param>
        <param name="skipCopies"><span data-ttu-id="2e3f7-106">防御用のコピーを作成しないで <see langword="true" /> および <paramref name="algorithmParameters" /> を格納する場合は <paramref name="privateKey" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-106"><see langword="true" /> to store <paramref name="algorithmParameters" /> and <paramref name="privateKey" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2e3f7-107">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-107">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2e3f7-108"><see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="2e3f7-109">`privateKey` パラメーターの検証は行われません。すべてのアルゴリズムで、BER でエンコードされた値が必要になるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-109">No validation is done on the `privateKey` parameter; not all algorithms require a BER-encoded value.</span></span>

<span data-ttu-id="2e3f7-110">このコンストラクターの既定の動作では、`algorithmParameters` と `privateKey` の両方のパラメーターの防御コピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-110">The default behavior of this constructor is to make a defensive copy of both the `algorithmParameters` and the `privateKey` parameters.</span></span>
<span data-ttu-id="2e3f7-111">`skipCopies` パラメーターが `true`場合、この防御用コピーはスキップされます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-111">When the `skipCopies` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="2e3f7-112">防御コピーがスキップされ、`algorithmParameters` または `privateKey` の内容が、返された値またはメソッドまたはプロパティによって生成されるオブジェクトの有効期間中に変更された場合、それらのオブジェクトのメソッドとプロパティは、無意味な結果を生成したり、破損状態が原因で例外をスローしたりする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-112">If the defensive copy is skipped and the contents of either `algorithmParameters` or `privateKey` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="2e3f7-113">そのため、呼び出し元は、データがそのまま維持されることを合理的に保証できる場合にのみ、`skipCopies` パラメーターに `true` 値を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-113">Callers are therefore advised to only use a `true` value for the `skipCopies` parameter when they can be reasonably assured that the data will stay intact.</span></span>
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e3f7-114"><paramref name="algorithmId" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-114">The <paramref name="algorithmId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2e3f7-115"><paramref name="algorithmParameters" /> パラメーターが、<see langword="null" /> ではないか、空であるか、または 1 つの BER でエンコードされた値です。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-115">The <paramref name="algorithmParameters" /> parameter is not <see langword="null" />, empty, or a single BER-encoded value.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmId">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid AlgorithmId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid AlgorithmId" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmId As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ AlgorithmId { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmId : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e3f7-116">このキーの対象となるアルゴリズムを示すオブジェクト識別子 (OID) の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-116">Gets the Object Identifier (OID) value identifying the algorithm this key is for.</span></span></summary>
        <value><span data-ttu-id="2e3f7-117">このキーのアルゴリズムを識別するオブジェクト識別子 (OID) 値。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-117">The Object Identifier (OID) value identifying the algorithm this key is for.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmParameters">
      <MemberSignature Language="C#" Value="public Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; AlgorithmParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; AlgorithmParameters" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; AlgorithmParameters { Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmParameters : Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e3f7-118">このキーに関連付けられている BER でエンコードされたアルゴリズム パラメーターが格納されているメモリ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-118">Gets a memory value containing the BER-encoded algorithm parameters associated with this key.</span></span></summary>
        <value><span data-ttu-id="2e3f7-119">このキーに関連付けられている BER でエンコードされたアルゴリズムパラメーターを格納しているメモリ値。または、パラメーターが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-119">A memory value containing the BER-encoded algorithm parameters associated with this key, or <see langword="null" /> if no parameters were present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ Attributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Security.Cryptography.CryptographicAttributeObjectCollection" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e3f7-120">この秘密キーに対する属性の変更可能なコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-120">Gets the modifiable collection of attributes for this private key.</span></span></summary>
        <value><span data-ttu-id="2e3f7-121">秘密キーを使用してエンコードする、変更可能な属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-121">The modifiable collection of attributes to encode with the private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create (System.Security.Cryptography.AsymmetricAlgorithm privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create(class System.Security.Cryptography.AsymmetricAlgorithm privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (privateKey As AsymmetricAlgorithm) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ Create(System::Security::Cryptography::AsymmetricAlgorithm ^ privateKey);" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.AsymmetricAlgorithm -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create privateKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="privateKey"><span data-ttu-id="2e3f7-122">PKCS#8 PrivateKeyInfo で表す秘密キー。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-122">The private key to represent in a PKCS#8 PrivateKeyInfo.</span></span></param>
        <summary><span data-ttu-id="2e3f7-123">指定されたキーを PKCS#8 PrivateKeyInfo としてエクスポートし、デコードされた解釈を返します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-123">Exports a specified key as a PKCS#8 PrivateKeyInfo and returns its decoded interpretation.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-124">エクスポートされた PKCS#8 PrivateKeyInfo のデコードされた解釈。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-124">The decoded interpretation of the exported PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e3f7-125"><paramref name="privateKey" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-125">The <paramref name="privateKey" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode (ReadOnlyMemory&lt;byte&gt; source, out int bytesRead, bool skipCopy = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer, Optional skipCopy As Boolean = false) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="F#" Value="static member Decode : ReadOnlyMemory&lt;byte&gt; * int * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode (source, bytesRead, skipCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2e3f7-126">PKCS#8 PrivateKeyInfo 値として解釈するデータ。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-126">The data to interpret as a PKCS#8 PrivateKeyInfo value.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="2e3f7-127">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-127">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="2e3f7-128">このパラメーターは初期化前として処理されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-128">This parameter is treated as uninitialized.</span></span></param>
        <param name="skipCopy"><span data-ttu-id="2e3f7-129">防御用のコピーを作成しないで <see langword="true" /> を格納する場合は <paramref name="source" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-129"><see langword="true" /> to store <paramref name="source" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2e3f7-130">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-130">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2e3f7-131">指定されたデータを PKCS#8 PrivateKeyInfo として読み取り、その内容のオブジェクト ビューを返します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-131">Reads the provided data as a PKCS#8 PrivateKeyInfo and returns an object view of the contents.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-132">PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-132">An object view of the contents decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 <span data-ttu-id="2e3f7-133">このメソッドの既定の動作では、`source`から最初の `bytesConsumed` バイトの防御コピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-133">The default behavior of this method is to make a defensive copy of the first `bytesConsumed` bytes from `source`.</span></span>
<span data-ttu-id="2e3f7-134">`skipCopy` パラメーターが `true`場合、この防御用コピーはスキップされます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-134">When the `skipCopy` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="2e3f7-135">防御コピーがスキップされ、`source` の最初の `bytesConsumed` バイトの内容が、返された値またはメソッドまたはプロパティによって生成されるオブジェクトの有効期間中に変更された場合、それらのオブジェクトのメソッドとプロパティは、無意味な結果を生成したり、破損状態によって例外をスローしたりする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-135">If the defensive copy is skipped and the contents of the first `bytesConsumed` bytes of `source` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="2e3f7-136">そのため、呼び出し元は、データがそのまま維持されることを合理的に保証できる場合にのみ、`skipCopy` パラメーターに `true` 値を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-136">Callers are therefore advised to only use a `true` value for the `skipCopy` parameter when they can be reasonably assured that the data will stay intact.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2e3f7-137"><paramref name="source" /> パラメーターの内容は、PKCS#8 PrivateKeyInfo として正常にデコードされませんでした。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-137">The contents of the <paramref name="source" /> parameter were not successfully decoded as a PKCS#8 PrivateKeyInfo.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;byte&gt; passwordBytes, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (passwordBytes As ReadOnlySpan(Of Byte), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;byte&gt; * ReadOnlyMemory&lt;byte&gt; * int -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (passwordBytes, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="2e3f7-138">キー マテリアルを暗号化解除するときにパスワードとして使用するバイト。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-138">The bytes to use as a password when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="2e3f7-139">ASN.1-BER エンコードで PKCS#8 EncryptedPrivateKeyInfo 構造体として読み取るデータ。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-139">The data to read as a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="2e3f7-140">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-140">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="2e3f7-141">このパラメーターは初期化前として処理されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-141">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="2e3f7-142">指定されたバイト ベースのパスワードを使用して指定されたデータを復号化し、その出力を PKCS#8 PrivateKeyInfo のオブジェクト ビューにデコードします。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-142">Decrypts the provided data using the provided byte-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-143">復号化されて PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-143">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f7-144">パスワードのバイト数は、`pbeParameters`によって示されるアルゴリズムによって使用されるキー派生関数 (KDF) に直接渡されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-144">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="2e3f7-145">これにより、PBKDF2 (パスワードベースのキー派生関数 2) でパスワードを処理するときに、UTF-8 以外のテキストエンコードを使用する他のシステムとの互換性が確保されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-145">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 <span data-ttu-id="2e3f7-146">このメソッドは、EncryptedPrivateKeyInfo の binary (BER/CER/DER) エンコードのみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-146">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="2e3f7-147">値が Base64 でエンコードされている場合、または PEM テキスト形式の場合、呼び出し元は、このメソッドを呼び出す前にコンテンツを Base64 でデコードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-147">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2e3f7-148">パスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-148">The password is incorrect.</span></span>

<span data-ttu-id="2e3f7-149">または</span><span class="sxs-lookup"><span data-stu-id="2e3f7-149">-or-</span></span>

<span data-ttu-id="2e3f7-150"><paramref name="source" /> のコンテンツは、適用するキー派生関数 (KDF) が、<see cref="T:System.Char" /> ベースのパスワードを必要とするレガシの PKCS#12 KDF であることを示しています。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-150">The contents of <paramref name="source" /> indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires <see cref="T:System.Char" />-based passwords.</span></span>

<span data-ttu-id="2e3f7-151">または</span><span class="sxs-lookup"><span data-stu-id="2e3f7-151">-or-</span></span>

<span data-ttu-id="2e3f7-152"><paramref name="source" /> のコンテンツは、ASN.1-BER でエンコードされた PKCS#8 EncryptedPrivateKeyInfo 構造体を表していません。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-152">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span></exception>
      </Docs>
      <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey" />
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (password As ReadOnlySpan(Of Char), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;char&gt; * ReadOnlyMemory&lt;byte&gt; * int -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (password, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="2e3f7-153">キー マテリアルを復号化するときに使用するパスワード。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-153">The password to use when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="2e3f7-154">ASN.1-BER エンコードでの PKCS#8 EncryptedPrivateKeyInfo 構造体のバイト。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-154">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="2e3f7-155">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-155">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="2e3f7-156">このパラメーターは初期化前として処理されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-156">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="2e3f7-157">指定された文字ベースのパスワードを使用して指定されたデータを復号化し、その出力を PKCS#8 PrivateKeyInfo のオブジェクト ビューにデコードします。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-157">Decrypts the provided data using the provided character-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-158">復号化されて PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-158">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f7-159">`source` の内容が、PBKDF1 (パスワードベースのキー派生関数 1) または PBKDF2 (パスワードベースのキー派生関数 2) を使用するアルゴリズムを示している場合、パスワードは UTF-8 エンコードを使用してバイトに変換されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-159">When the contents of `source` indicate an algorithm that uses PBKDF1 (Password-Based Key Derivation Function 1) or PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 <span data-ttu-id="2e3f7-160">このメソッドは、EncryptedPrivateKeyInfo の binary (BER/CER/DER) エンコードのみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-160">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="2e3f7-161">値が Base64 でエンコードされている場合、または PEM テキスト形式の場合、呼び出し元は、このメソッドを呼び出す前にコンテンツを Base64 でデコードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-161">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e3f7-162">このインスタンスのプロパティ データを PKCS#8 PrivateKeyInfo としてエンコードし、エンコードをバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-162">Encodes the property data of this instance as a PKCS#8 PrivateKeyInfo and returns the encoding as a byte array.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-163">PKCS#8 PrivateKeyInfo のエンコード形式を表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-163">A byte array representing the encoded form of the PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="2e3f7-164">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-164">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="2e3f7-165">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-165">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="2e3f7-166">指定されたバイト ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-166">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-167">PKCS#8 EncryptedPrivateKeyInfo のエンコード形式が格納されているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-167">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f7-168">パスワードのバイト数は、`pbeParameters`によって示されるアルゴリズムによって使用されるキー派生関数 (KDF) に直接渡されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-168">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="2e3f7-169">これにより、PBKDF2 (パスワードベースのキー派生関数 2) でパスワードを処理するときに、UTF-8 以外のテキストエンコードを使用する他のシステムとの互換性が確保されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-169">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2e3f7-170"><paramref name="pbeParameters" /> は、<see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> ベースのパスワードを必要とする <see cref="T:System.Char" /> を使用する必要があることを示しています。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-170"><paramref name="pbeParameters" /> indicates that <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> should be used, which requires <see cref="T:System.Char" />-based passwords.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="2e3f7-171">キー マテリアルを暗号化するときに使用するパスワード。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-171">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="2e3f7-172">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-172">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="2e3f7-173">指定された文字ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-173">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-174">PKCS#8 EncryptedPrivateKeyInfo のエンコード形式が格納されているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-174">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f7-175">`pbeParameters` が、PBKDF2 (パスワードベースのキー派生関数 2) を使用するアルゴリズムを示している場合、パスワードは UTF-8 エンコードを使用してバイトに変換されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-175">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="PrivateKeyBytes">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; PrivateKeyBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; PrivateKeyBytes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateKeyBytes As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; PrivateKeyBytes { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKeyBytes : ReadOnlyMemory&lt;byte&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e3f7-176">アルゴリズム固有のエンコードされた秘密キーを表すメモリ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-176">Gets a memory value that represents the algorithm-specific encoded private key.</span></span></summary>
        <value><span data-ttu-id="2e3f7-177">アルゴリズム固有のエンコードされた秘密キーを表すメモリ値。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-177">A memory value that represents the algorithm-specific encoded private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="2e3f7-178">PKCS#8 PrivateKeyInfo データを受け取るバイト スパン。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-178">The byte span to receive the PKCS#8 PrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="2e3f7-179">このメソッドから制御が戻ったときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-179">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="2e3f7-180">このパラメーターは初期化前として処理されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-180">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="2e3f7-181">このインスタンスのプロパティ データを PKCS#8 PrivateKeyInfo としてエンコードすることを試み、指定されたバッファーに結果を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-181">Attempts to encode the property data of this instance as a PKCS#8 PrivateKeyInfo, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-182"><see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-182"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (passwordBytes, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="2e3f7-183">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-183">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="2e3f7-184">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-184">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="2e3f7-185">PKCS#8 EncryptedPrivateKeyInfo データを受け取るバイト スパン。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-185">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="2e3f7-186">このメソッドから制御が戻ったときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-186">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="2e3f7-187">このパラメーターは初期化前として処理されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-187">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="2e3f7-188">指定されたバイト ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成することを試み、指定されたバッファーに結果を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-188">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-189"><see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-189"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f7-190">パスワードのバイト数は、`pbeParameters`によって示されるアルゴリズムによって使用されるキー派生関数 (KDF) に直接渡されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-190">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="2e3f7-191">これにより、PBKDF2 (パスワードベースのキー派生関数 2) でパスワードを処理するときに、UTF-8 以外のテキストエンコードを使用する他のシステムとの互換性が確保されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-191">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (password, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="2e3f7-192">キー マテリアルを暗号化するときに使用するパスワード。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-192">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="2e3f7-193">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-193">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="2e3f7-194">PKCS#8 EncryptedPrivateKeyInfo データを受け取るバイト スパン。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-194">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="2e3f7-195">このメソッドから制御が戻ったときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-195">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="2e3f7-196">このパラメーターは初期化前として処理されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-196">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="2e3f7-197">指定された文字ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成することを試み、指定されたバッファーに結果を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-197">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters, writing the result into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="2e3f7-198"><see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-198"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f7-199">`pbeParameters` が、PBKDF2 (パスワードベースのキー派生関数 2) を使用するアルゴリズムを示している場合、パスワードは UTF-8 エンコードを使用してバイトに変換されます。</span><span class="sxs-lookup"><span data-stu-id="2e3f7-199">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
  </Members>
</Type>
