<Type Name="SecurityAlgorithmSuite" FullName="System.ServiceModel.Security.SecurityAlgorithmSuite">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a803cf09bde96dc43fb26ff089cff2abbec7221" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75062461" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityAlgorithmSuite" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract SecurityAlgorithmSuite extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityAlgorithmSuite" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityAlgorithmSuite abstract" />
  <TypeSignature Language="F#" Value="type SecurityAlgorithmSuite = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Security</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.SecurityAlgorithmSuiteConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="42b1e-101">アルゴリズムのプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-101">Specifies properties of algorithms.</span></span> <span data-ttu-id="42b1e-102">これは <see langword="abstract" /> クラスです。</span><span class="sxs-lookup"><span data-stu-id="42b1e-102">This is an <see langword="abstract" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-103">このクラスのインスタンスは、メッセージをセキュリティで保護するときに使用するアルゴリズムの暗号化特性を指定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-103">Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.</span></span>  
  
 <span data-ttu-id="42b1e-104">このクラスは、セキュリティ アルゴリズム スイートをインスタンス化するために派生クラスで使用されます。このクラスには、セキュリティ アルゴリズムを記述するプロパティが含まれます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-104">This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.</span></span> <span data-ttu-id="42b1e-105">たとえば、`wsBasicHttp` バインディングは、内部派生クラスを使用してそのセキュリティ アルゴリズムのプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-105">For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityAlgorithmSuite();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="42b1e-106"><see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-107">このクラスのインスタンスは静的プロパティと読み取り専用プロパティで構成されるため、このコンストラクターはプロパティを初期化しません。</span><span class="sxs-lookup"><span data-stu-id="42b1e-107">The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic128 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-108">Basic128 アルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-108">Gets the Basic128 algorithm suite.</span></span></summary>
        <value><span data-ttu-id="42b1e-109">128 ビット Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-109">The 128-bit Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-110">既定では、AES-128 が暗号化アルゴリズムとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-110">By default, AES-128 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic128Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-111">キー ラップ アルゴリズムとして RSA15 を使用し、メッセージ暗号化アルゴリズムとして 128 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-111">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-112">キー ラップ アルゴリズムとして RSA15 を使用し、メッセージ暗号化アルゴリズムとして 128 ビット Basic を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-112">An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-113">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-113">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic128Sha256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-114">署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 128 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-114">Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-115">署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 128 ビット Basic を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-115">An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-116">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-116">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic128Sha256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-117">キー ラップ アルゴリズムとして RSA15 を使用し、署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 128 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-117">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-118">キー ラップ アルゴリズムとして RSA15 を使用し、署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 128 ビット Basic を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-118">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-119">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-119">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic192 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-120">メッセージ暗号化アルゴリズムとして 192 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-120">Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-121">メッセージ暗号化アルゴリズムとして 192 ビット Basic を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-121">An algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-122">既定では、暗号化アルゴリズムとして AES-192 が使用されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-122">By default, AES-192 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic192Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-123">キー ラップ アルゴリズムとして RSA15 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-123">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-124">キーラップアルゴリズムとして RSA15 を使用し、メッセージ暗号化アルゴリズムとして192ビット Basic を使用するアルゴリズムスイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-124">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-125">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-125">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic192Sha256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-126">署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-126">Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-127">署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Basic を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-127">An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-128">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-128">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic192Sha256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-129">キー ラップ アルゴリズムとして RSA15 を使用し、署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-129">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-130">キーラップアルゴリズムとして RSA15 を使用し、署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして192ビット Basic を使用するアルゴリズムスイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-130">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-131">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-131">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-132">メッセージ暗号化アルゴリズムとして 256 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-132">Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-133">メッセージ暗号化アルゴリズムとして256ビット Basic を使用するアルゴリズムスイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-133">An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-134">既定では、暗号化アルゴリズムとして AES-256 が使用されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-134">By default, AES-256 is used for the encryption algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42b1e-135">次のコードに、このプロパティに <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-135">The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.</span></span>  
  
 [!code-csharp[c_ProgrammingSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#8)]
 [!code-vb[c_ProgrammingSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-136">キー ラップ アルゴリズムとして RSA15 を使用し、メッセージ暗号化アルゴリズムとして 256 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-136">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-137">キーラップアルゴリズムとして RSA15 を使用し、メッセージ暗号化アルゴリズムとして256ビット Basic を使用するアルゴリズムスイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-137">An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-138">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-138">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic256Sha256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-139">署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 256 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-139">Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-140">署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして256ビット Basic を使用するアルゴリズムスイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-140">An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-141">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-141">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic256Sha256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-142">キー ラップ アルゴリズムとして RSA15 を使用し、署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 256 ビット Basic を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-142">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-143">キー ラップ アルゴリズムとして RSA15 を使用し、署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 256 ビット Basic を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-143">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-144">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-144">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Default" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Default { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-145">既定のアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-145">Gets the default algorithm suite.</span></span></summary>
        <value><span data-ttu-id="42b1e-146">既定の <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> は <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" /> です。これは、対称暗号化アルゴリズムとして 256 ビット Advanced Encryption Standard (AES) を指定します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-146">The default <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-147">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、メソッドだけでなく、既定値を指定するプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-147">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAsymmetricKeyWrapAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-148">既定の非対称キー ラップ アルゴリズムを文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-148">Gets the default asymmetric key wrap algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="42b1e-149">既定の非対称キー ラップ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="42b1e-149">The default asymmetric key wrap algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-150">オーバーライドされると、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> メソッドで比較に使用される文字列値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-150">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAsymmetricSignatureAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-151">既定の非対称署名アルゴリズムを文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-151">Gets the default asymmetric signature algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="42b1e-152">既定の非対称署名アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="42b1e-152">The default asymmetric signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-153">オーバーライドされると、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> メソッドで比較に使用される文字列値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-153">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCanonicalizationAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultCanonicalizationAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCanonicalizationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultCanonicalizationAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCanonicalizationAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-154">既定の標準化アルゴリズムを文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-154">Gets the default canonicalization algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="42b1e-155">既定の正規化アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="42b1e-155">The default canonicalization algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-156">オーバーライドされると、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A> メソッドで比較に使用される文字列値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-156">When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDigestAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultDigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultDigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultDigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultDigestAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDigestAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-157">既定のダイジェスト アルゴリズムを文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-157">Gets the default digest algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="42b1e-158">既定のダイジェスト アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="42b1e-158">The default digest algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-159">オーバーライドされると、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> メソッドで比較に使用される文字列値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-159">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultEncryptionAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-160">既定の暗号化アルゴリズムを文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-160">Gets the default encryption algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="42b1e-161">既定の暗号化アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="42b1e-161">The default encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-162">オーバーライドされると、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> メソッドで比較に使用される文字列値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-162">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultEncryptionKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultEncryptionKeyDerivationLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultEncryptionKeyDerivationLength : int" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-163">既定の暗号化キー派生長を <see cref="T:System.Int32" /> 値として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-163">Gets the default encryption key derivation length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="42b1e-164">既定の暗号化キー派生長。</span><span class="sxs-lookup"><span data-stu-id="42b1e-164">The default encryption key derivation length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-165">戻り値は、メソッドを実装しているサブクラスによって異なります。</span><span class="sxs-lookup"><span data-stu-id="42b1e-165">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="42b1e-166">`Basic256` 暗号化では、256 が返されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-166">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSignatureKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSignatureKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSignatureKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSignatureKeyDerivationLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSignatureKeyDerivationLength : int" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-167">既定の署名キー派生長を <see cref="T:System.Int32" /> 値として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-167">Gets the default signature key derivation length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="42b1e-168">既定の署名キー派生長。</span><span class="sxs-lookup"><span data-stu-id="42b1e-168">The default signature key derivation length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-169">戻り値は、メソッドを実装しているサブクラスによって異なります。</span><span class="sxs-lookup"><span data-stu-id="42b1e-169">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="42b1e-170">`Basic256` 暗号化の場合、192が返されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-170">For `Basic256` encryption, it returns 192.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSymmetricKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeyLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSymmetricKeyLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricKeyLength : int" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-171">既定の対称キー長を <see cref="T:System.Int32" /> 値として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-171">Gets the default symmetric key length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="42b1e-172">既定の対称キー長。</span><span class="sxs-lookup"><span data-stu-id="42b1e-172">The default symmetric key length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-173">戻り値は、メソッドを実装しているサブクラスによって異なります。</span><span class="sxs-lookup"><span data-stu-id="42b1e-173">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="42b1e-174">`Basic256` 暗号化では、256 が返されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-174">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricKeyWrapAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-175">既定の対称キー ラップ アルゴリズムを文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-175">Gets the default symmetric key wrap algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="42b1e-176">既定の対称キー ラップ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="42b1e-176">The default symmetric key wrap algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricSignatureAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-177">既定の対称署名アルゴリズムを文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-177">Gets the default symmetric signature algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="42b1e-178">既定の対称署名アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="42b1e-178">The default symmetric signature algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsAsymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAsymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsAsymmetricKeyLengthSupported(int length);" />
      <MemberSignature Language="F#" Value="abstract member IsAsymmetricKeyLengthSupported : int -&gt; bool" Usage="securityAlgorithmSuite.IsAsymmetricKeyLengthSupported length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="42b1e-179">確認対象のキー長。</span><span class="sxs-lookup"><span data-stu-id="42b1e-179">The key length to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-180">特定のキー長が非対称アルゴリズムでサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-180">Indicates whether a particular key length is supported by the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="42b1e-181">キー長が非対称アルゴリズムでサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-181"><see langword="true" /> if the key length is supported by the asymmetric algorithm; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-182">一般的なキー長は 128、192、および 256 ビットです。</span><span class="sxs-lookup"><span data-stu-id="42b1e-182">Typical key lengths are 128, 192, and 256 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsAsymmetricKeyWrapAlgorithmSupported : string -&gt; bool&#xA;override this.IsAsymmetricKeyWrapAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-183">確認対象のアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="42b1e-183">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-184">非対称キー ラップ アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-184">Indicates whether an asymmetric key wrap algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-185">非対称キー ラップ アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-185"><see langword="true" /> if the asymmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-186">`algorithm` が、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A> によって返される文字列と比較されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-186">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsAsymmetricSignatureAlgorithmSupported : string -&gt; bool&#xA;override this.IsAsymmetricSignatureAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-187">確認対象のアルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="42b1e-187">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-188">非対称署名アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-188">Indicates whether an asymmetric signature algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-189">非対称署名アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-189"><see langword="true" /> if the asymmetric signature algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-190">`algorithm` が、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A> によって返される文字列と比較されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-190">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalizationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCanonicalizationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCanonicalizationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCanonicalizationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsCanonicalizationAlgorithmSupported : string -&gt; bool&#xA;override this.IsCanonicalizationAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsCanonicalizationAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-191">確認対象のアルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="42b1e-191">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-192">標準化アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-192">Indicates whether a canonicalization algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-193">標準化アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-193"><see langword="true" /> if the canonicalization algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-194">`algorithm` が、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A> によって返される文字列と比較されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-194">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigestAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsDigestAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDigestAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDigestAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDigestAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsDigestAlgorithmSupported : string -&gt; bool&#xA;override this.IsDigestAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsDigestAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-195">確認対象のアルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="42b1e-195">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-196">ダイジェスト アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-196">Indicates whether a digest algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-197">ダイジェスト アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-197"><see langword="true" /> if the digest algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-198">`algorithm` が、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A> によって返される文字列と比較されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-198">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsEncryptionAlgorithmSupported : string -&gt; bool&#xA;override this.IsEncryptionAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsEncryptionAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-199">確認対象のアルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="42b1e-199">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-200">暗号化アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-200">Indicates whether an encryption algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-201">暗号化アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-201"><see langword="true" /> if the encryption algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-202">`algorithm` が、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A> によって返される文字列と比較されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-202">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsEncryptionKeyDerivationAlgorithmSupported : string -&gt; bool&#xA;override this.IsEncryptionKeyDerivationAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-203">確認対象のアルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="42b1e-203">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-204">暗号化キー派生アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-204">Indicates whether an encryption key derivation algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-205">暗号化キー派生アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-205"><see langword="true" /> if the encryption key derivation algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignatureKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignatureKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignatureKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignatureKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsSignatureKeyDerivationAlgorithmSupported : string -&gt; bool&#xA;override this.IsSignatureKeyDerivationAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-206">確認対象のアルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="42b1e-206">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-207">署名キー派生アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-207">Indicates whether a signature key derivation algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-208">署名キー派生アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-208"><see langword="true" /> if the signature key derivation algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsSymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSymmetricKeyLengthSupported(int length);" />
      <MemberSignature Language="F#" Value="abstract member IsSymmetricKeyLengthSupported : int -&gt; bool" Usage="securityAlgorithmSuite.IsSymmetricKeyLengthSupported length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="42b1e-209">確認対象のキー長。</span><span class="sxs-lookup"><span data-stu-id="42b1e-209">The key length to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-210">派生クラスでオーバーライドされると、特定の対称キー長がサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-210">When overridden in a derived class, indicates whether a particular symmetric key length is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-211">対称キー長がサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-211"><see langword="true" /> if the symmetric key length is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-212">`length` は、サブクラスに応じた範囲の値と比較されます。</span><span class="sxs-lookup"><span data-stu-id="42b1e-212">The `length` is compared to a range of values depending on the subclass.</span></span> <span data-ttu-id="42b1e-213">たとえば、`TripleDES` サブクラスでは、このメソッドは `length` が 192 ～ 256 の範囲内の値であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-213">For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsSymmetricKeyWrapAlgorithmSupported : string -&gt; bool&#xA;override this.IsSymmetricKeyWrapAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-214">確認対象のアルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="42b1e-214">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-215">対称キー ラップ アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-215">Indicates whether a symmetric key wrap algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-216">対称キー ラップ アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-216"><see langword="true" /> if the symmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsSymmetricSignatureAlgorithmSupported : string -&gt; bool&#xA;override this.IsSymmetricSignatureAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="42b1e-217">確認対象のアルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="42b1e-217">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="42b1e-218">対称署名アルゴリズムがサポートされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-218">Indicates whether a symmetric signature algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="42b1e-219">対称署名アルゴリズムがサポートされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-219"><see langword="true" /> if the symmetric signature algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDes">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDes As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDes { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TripleDes : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-220">Triple Data Encryption Standard (DES) アルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-220">Gets the Triple Data Encryption Standard (DES) algorithm suite.</span></span></summary>
        <value><span data-ttu-id="42b1e-221">Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。</span><span class="sxs-lookup"><span data-stu-id="42b1e-221">The Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-222">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-222">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesRsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesRsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesRsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TripleDesRsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-223">キー ラップ アルゴリズムとして RSA15 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Triple Data Encryption Standard (DES) を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-223">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-224">キー ラップ アルゴリズムとして RSA15 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Triple Data Encryption Standard (DES) を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-224">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-225">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-225">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TripleDesSha256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-226">署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Triple Data Encryption Standard (DES) を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-226">Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-227">署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Triple Data Encryption Standard (DES) を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-227">An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-228">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-228">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TripleDesSha256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42b1e-229">キー ラップ アルゴリズムとして RSA15 を使用し、署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Triple Data Encryption Standard (DES) を使用するアルゴリズム スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="42b1e-229">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="42b1e-230">キー ラップ アルゴリズムとして RSA15 を使用し、署名ダイジェストに SHA256 を使用し、メッセージ暗号化アルゴリズムとして 192 ビット Triple Data Encryption Standard (DES) を使用するアルゴリズム スイート。</span><span class="sxs-lookup"><span data-stu-id="42b1e-230">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42b1e-231">返される <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> は内部サブクラスであり、いくつかのメソッドだけでなく、既定値を指定するいくつかのプロパティをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="42b1e-231">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
