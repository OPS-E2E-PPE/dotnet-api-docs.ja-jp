<Type Name="ServiceCredentialsSecurityTokenManager" FullName="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00b74bce01b81c0530e108e542c7e3afe5b7af72" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73396155" /></Metadata><TypeSignature Language="C#" Value="public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager implements class System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceCredentialsSecurityTokenManager&#xA;Inherits SecurityTokenManager&#xA;Implements IEndpointIdentityProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCredentialsSecurityTokenManager : System::IdentityModel::Selectors::SecurityTokenManager, System::ServiceModel::Security::IEndpointIdentityProvider" />
  <TypeSignature Language="F#" Value="type ServiceCredentialsSecurityTokenManager = class&#xA;    inherit SecurityTokenManager&#xA;    interface IEndpointIdentityProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IEndpointIdentityProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>サービス上で構成された <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> に基づいてセキュリティ トークン シリアライザーを提供する <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> の実装を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、<xref:System.IdentityModel.Selectors.SecurityTokenSerializer> クラスのインスタンスを作成します。 サービス チャネル リスナーごとにこのクラスのインスタンスが 1 つ存在します。  
  
   
  
## Examples  
 このクラスをオーバーライドしてカスタムのサービス資格情報トークン マネージャーを作成する方法を次のコードに示します。  
  
 [!code-csharp[c_CustomCredentials#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#5)]
 [!code-vb[c_CustomCredentials#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As ServiceCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceCredentialsSecurityTokenManager(System::ServiceModel::Description::ServiceCredentials ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager : System.ServiceModel.Description.ServiceCredentials -&gt; System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" Usage="new System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="parent">サービス資格情報。</param>
        <summary>渡された <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> に基づいて、<see cref="T:System.ServiceModel.Description.ServiceCredentials" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationTokenAuthenticator">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator(class System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; sctResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateSecureConversationTokenAuthenticator (recipientRequirement As RecipientServiceModelSecurityTokenRequirement, preserveBootstrapTokens As Boolean, ByRef sctResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecureConversationTokenAuthenticator(System::ServiceModel::Security::Tokens::RecipientServiceModelSecurityTokenRequirement ^ recipientRequirement, bool preserveBootstrapTokens, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % sctResolver);" />
      <MemberSignature Language="F#" Value="member this.CreateSecureConversationTokenAuthenticator : System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement * bool * SecurityTokenResolver -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="serviceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator (recipientRequirement, preserveBootstrapTokens, sctResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipientRequirement" Type="System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" />
        <Parameter Name="preserveBootstrapTokens" Type="System.Boolean" />
        <Parameter Name="sctResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" RefType="out" />
      </Parameters>
      <Docs>
        <param name="recipientRequirement">リスナーに固有のセキュリティ プロパティ要件を表します。</param>
        <param name="preserveBootstrapTokens">ブートストラップ トークンを保持する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <param name="sctResolver">キー識別子またはキー識別句がある場合にセキュリティ トークンまたはキーを取得可能なセキュリティ トークン リゾルバー オブジェクト。</param>
        <summary>渡されたプロパティ要件に基づいて、セキュリティで保護された通信のトークン認証システムを作成します。</summary>
        <returns>セキュリティ トークン認証システム。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenAuthenticator (tokenRequirement As SecurityTokenRequirement, ByRef outOfBandTokenResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecurityTokenAuthenticator(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % outOfBandTokenResolver);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenRequirement * SecurityTokenResolver -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator (tokenRequirement, outOfBandTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">セキュリティ トークン要件。</param>
        <param name="outOfBandTokenResolver">このメソッドから制御が戻るときに、<see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> を格納します。 このパラメーターは初期化せずに渡されます。</param>
        <summary><see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> に基づいて、セキュリティ トークン認証システムを作成します。</summary>
        <returns>セキュリティ トークン認証システム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `outOfBand` トークンリゾルバーは、必要に応じてメソッドから返すことができます。これは、セキュリティを処理するときに、SOAP メッセージに含まれていないトークンを解決するために WCF セキュリティプロセッサによって使用されます。 このメソッドによって返される <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> は、トークンを検証し、クレームを抽出します。 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> から派生したクラスごとに、1 つの <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> が作成されます。  
  
   
  
## Examples  
 このメソッドをオーバーライドする方法を次のコード例に示します。  
  
 [!code-csharp[c_CustomTokenAuthenticator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#2)]
 [!code-vb[c_CustomTokenAuthenticator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="tokenRequirement" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">渡された<paramref name="tokenRequirement" /> に対するセキュリティ トークン認証システムを作成できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenProvider (requirement As SecurityTokenRequirement) As SecurityTokenProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenProvider ^ CreateSecurityTokenProvider(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.IdentityModel.Selectors.SecurityTokenProvider" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenProvider requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">セキュリティ トークン要件。</param>
        <summary><see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> に基づいて、セキュリティ トークン プロバイダーを作成します。</summary>
        <returns>セキュリティ トークン プロバイダー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> クラスは、指定された<xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> のトークンの取得を行います。 トークン プロバイダーは、オプションで、トークンの更新とキャンセルも実行できます。 トークン プロバイダーがトークンをキャッシュするように構成されている場合は、トークンがキャッシュされます。  
  
   
  
## Examples  
 このメソッドをオーバーライドする方法を次のコードに示します。  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#4)]
 [!code-vb[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requirement" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.NotSupportedException">渡された <paramref name="requirement" /> に対するセキュリティ トークン プロバイダーを作成できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenSerializer (version As SecurityTokenVersion) As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenSerializer ^ CreateSecurityTokenSerializer(System::IdentityModel::Selectors::SecurityTokenVersion ^ version);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenSerializer : System.IdentityModel.Selectors.SecurityTokenVersion -&gt; System.IdentityModel.Selectors.SecurityTokenSerializer" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version">セキュリティ トークンのバージョン。</param>
        <summary>渡されたセキュリティ トークンのバージョンに基づいて、セキュリティ トークン シリアライザーを作成します。</summary>
        <returns>セキュリティ トークン シリアライザー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> は、セキュリティ トークンおよびセキュリティ トークンの参照を読み書きするために使用します。 XML からトークンを逆シリアル化した場合、返されたトークンは暗号操作を実行できなければなりません。 トークン シリアライザーは、トークンが暗号操作 (Kerberos チケット処理、X.509 デコード、SAML デコードなど) を確実に行えるように検証を実行できなければなりませんが、アプリケーション信頼性の決定は認証システムに委任する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">渡された <paramref name="version" /> に対するセキュリティ トークン シリアライザーを作成できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityOfSelf">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.EndpointIdentity GetIdentityOfSelf(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentityOfSelf (tokenRequirement As SecurityTokenRequirement) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::EndpointIdentity ^ GetIdentityOfSelf(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement);" />
      <MemberSignature Language="F#" Value="abstract member GetIdentityOfSelf : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.ServiceModel.EndpointIdentity&#xA;override this.GetIdentityOfSelf : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.ServiceModel.EndpointIdentity" Usage="serviceCredentialsSecurityTokenManager.GetIdentityOfSelf tokenRequirement" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">セキュリティ トークン要件。</param>
        <summary>セキュリティ トークン要件に基づいて、<see cref="T:System.ServiceModel.EndpointIdentity" /> を取得します。</summary>
        <returns><paramref name="tokenRequirement" /> に対応するエンドポイント ID。 <paramref name="tokenRequirement" /> から ID を作成できない場合は、<see langword="null" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、サービスエンドポイントに対応する <xref:System.ServiceModel.EndpointIdentity> を取得するために、WCF インフラストラクチャによって呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="tokenRequirement" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsIssuedSecurityTokenRequirement (requirement As SecurityTokenRequirement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsIssuedSecurityTokenRequirement(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="member this.IsIssuedSecurityTokenRequirement : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; bool" Usage="serviceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">セキュリティ トークン要件。</param>
        <summary>セキュリティ トークン要件が発行済みトークンの要件であるかどうかを確認します。</summary>
        <returns>セキュリティ トークン要件が発行済みトークンの要件である場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials ServiceCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceCredentials As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceCredentials ^ ServiceCredentials { System::ServiceModel::Description::ServiceCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceCredentials : System.ServiceModel.Description.ServiceCredentials" Usage="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスのこのインスタンスを構築するために使用するサービス資格情報を取得します。</summary>
        <value>サービス資格情報。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.ServiceCredentials> オブジェクトを使用して、サービス資格情報と、サービス資格情報の認証設定を構成できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
