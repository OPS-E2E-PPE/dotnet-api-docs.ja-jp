<Type Name="XmlDataDocument" FullName="System.Xml.XmlDataDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60fd0bf31cd7c65192913d6480153969f409a6aa" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75174092" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataDocument : System.Xml.XmlDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataDocument extends System.Xml.XmlDocument" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDataDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataDocument&#xA;Inherits XmlDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataDocument : System::Xml::XmlDocument" />
  <TypeSignature Language="F#" Value="type XmlDataDocument = class&#xA;    inherit XmlDocument" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlDocument</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Obsolete("XmlDataDocument class will be removed in a future release.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1b986-101">リレーショナル <see cref="T:System.Data.DataSet" /> を通じて、構造化データを格納、取得、および操作できるようにします。</span><span class="sxs-lookup"><span data-stu-id="1b986-101">Allows structured data to be stored, retrieved, and manipulated through a relational <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-102">このクラスは <xref:System.Xml.XmlDocument>を拡張します。</span><span class="sxs-lookup"><span data-stu-id="1b986-102">This class extends <xref:System.Xml.XmlDocument>.</span></span> <span data-ttu-id="1b986-103">これにより、リレーショナルデータまたは XML データを読み込み、World Wide Web コンソーシアム (W3C) ドキュメントオブジェクトモデル (DOM) を使用してデータを操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="1b986-103">It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</span></span> <span data-ttu-id="1b986-104">DOM は、データをノードオブジェクトの階層として表現します。</span><span class="sxs-lookup"><span data-stu-id="1b986-104">The DOM presents data as a hierarchy of node objects.</span></span> <span data-ttu-id="1b986-105">`XmlDataDocument` は <xref:System.Xml.XPath.IXPathNavigable> インターフェイスを実装するため、<xref:System.Xml.Xsl.XslTransform> クラスのソースドキュメントとしても使用できます。</span><span class="sxs-lookup"><span data-stu-id="1b986-105">Because `XmlDataDocument` implements the <xref:System.Xml.XPath.IXPathNavigable> interface, it can also be used as the source document for the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="1b986-106">`XmlDataDocument` には、読み込まれた XML データのリレーショナルビューを提供する、`DataSet` クラスと密接に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="1b986-106">`XmlDataDocument` has a close affiliation with the `DataSet` class, which provides a relational view of the loaded XML data.</span></span> <span data-ttu-id="1b986-107">`XmlDataDocument` に加えられた変更は、`DataSet` に反映されます。その逆も同様です。</span><span class="sxs-lookup"><span data-stu-id="1b986-107">Any changes made to the `XmlDataDocument` are reflected in the `DataSet` and vice versa.</span></span>  
  
 <span data-ttu-id="1b986-108">XML データを含む `DataSet` を読み込むには、<xref:System.Data.DataSet.ReadXmlSchema%2A> を使用してリレーショナルマッピングを作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-108">To load a `DataSet` with XML data, use <xref:System.Data.DataSet.ReadXmlSchema%2A> to build a relational mapping.</span></span> <span data-ttu-id="1b986-109">XML データは <xref:System.Xml.XmlDataDocument.Load%2A> または <xref:System.Xml.XmlDocument.LoadXml%2A>を使用して読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="1b986-109">The XML data can then be loaded using <xref:System.Xml.XmlDataDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A>.</span></span>  
  
 <span data-ttu-id="1b986-110">リレーショナルデータを読み込むには、<xref:System.Xml.XmlDataDocument.%23ctor%2A> コンストラクターのパラメーターとして、リレーショナルデータを含む `DataSet` を指定します。</span><span class="sxs-lookup"><span data-stu-id="1b986-110">To load relational data, specify the `DataSet` containing the relational data as the parameter in the <xref:System.Xml.XmlDataDocument.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b986-111">
          <see cref="T:System.Xml.XmlDataDocument" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1b986-111">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b986-112">
          <see cref="T:System.Xml.XmlDataDocument" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1b986-112">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-113">空の <xref:System.Data.DataSet> が作成され、`XmlDataDocument`に関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="1b986-113">An empty <xref:System.Data.DataSet> is created and associated with the `XmlDataDocument`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument (System.Data.DataSet dataset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataSet dataset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument(System::Data::DataSet ^ dataset);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDataDocument : System.Data.DataSet -&gt; System.Xml.XmlDataDocument" Usage="new System.Xml.XmlDataDocument dataset" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataset" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataset"><span data-ttu-id="1b986-114"><see langword="DataSet" /> に読み込む <see langword="XmlDataDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-114">The <see langword="DataSet" /> to load into <see langword="XmlDataDocument" />.</span></span></param>
        <summary><span data-ttu-id="1b986-115">指定された <see cref="T:System.Xml.XmlDataDocument" /> を使用して <see cref="T:System.Data.DataSet" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1b986-115">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class with the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-116">指定された `DataSet`と `XmlDataDocument` が同期されています。</span><span class="sxs-lookup"><span data-stu-id="1b986-116">The `XmlDataDocument` is synchronized with the specified `DataSet`.</span></span> <span data-ttu-id="1b986-117">`DataSet` 内のデータは、`XmlDataDocument`を通じてすぐに使用できます。</span><span class="sxs-lookup"><span data-stu-id="1b986-117">Any data in the `DataSet` is immediately available through the `XmlDataDocument`.</span></span> <span data-ttu-id="1b986-118">`DataSet` 内のすべての変更が `XmlDataDocument`に反映されます。</span><span class="sxs-lookup"><span data-stu-id="1b986-118">Any changes in the `DataSet` are propagated in the `XmlDataDocument`.</span></span> <span data-ttu-id="1b986-119">`XmlDataDocument`に加えられたすべての変更は、`DataSet` スキーマに一致すると、`DataSet`に反映されます。</span><span class="sxs-lookup"><span data-stu-id="1b986-119">Any changes made in the `XmlDataDocument`, provided they match the `DataSet` schema, are propagated in the `DataSet`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b986-120">次の例では、顧客テーブルを `XmlDataDocument`に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1b986-120">The following example loads a customer table into an `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="1b986-121">この例では、SQL Server 2000 Northwind データベースを使用します。</span><span class="sxs-lookup"><span data-stu-id="1b986-121">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlConnection" />
        <altmember cref="T:System.Data.SqlClient.SqlDataAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlDataDocument.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep"><span data-ttu-id="1b986-122">指定したノードの下にあるサブツリーのクローンを順次作成していく場合は <see langword="true" />。指定したノードだけのクローンを作成する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-122"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="1b986-123">現在のノードの複製を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-123">Creates a duplicate of the current node.</span></span></summary>
        <returns><span data-ttu-id="1b986-124">クローンとして作成されたノード。</span><span class="sxs-lookup"><span data-stu-id="1b986-124">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-125">`XmlDataDocument` を複製すると、<xref:System.Data.DataSet> スキーマも複製されます。</span><span class="sxs-lookup"><span data-stu-id="1b986-125">Cloning the `XmlDataDocument` also clones the <xref:System.Data.DataSet> schema.</span></span>  
  
 <span data-ttu-id="1b986-126">`deep` が `false`に設定されている場合、複製された `DataSet` にはデータがありません。つまり、行はありません。</span><span class="sxs-lookup"><span data-stu-id="1b986-126">If `deep` is set to `false`, the cloned `DataSet` has no data; that is, no rows.</span></span>  
  
 <span data-ttu-id="1b986-127">`deep` が `true`に設定されている場合は、複製された `DataSet` がスキーマで設定され、データが設定されます。</span><span class="sxs-lookup"><span data-stu-id="1b986-127">If `deep` is set to `true`, the cloned `DataSet` is set with the schema and then populated with the data.</span></span>  
  
 <span data-ttu-id="1b986-128">各ノード型でこのメソッドがどのように動作するかを説明した表を表示するには、`XmlNode` クラスの <xref:System.Xml.XmlNode.CloneNode%2A> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b986-128">See <xref:System.Xml.XmlNode.CloneNode%2A> in the `XmlNode` class to see a table describing how this method behaves with each of the different node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b986-129">次の例では、`DataSet` を `XmlDataDocument` に読み込み、`XmlDataDocument`の浅い複製を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-129">The following example loads a `DataSet` into an `XmlDataDocument` and then creates a shallow clone of the `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="1b986-130">この例では、SQL Server 2000 Northwind データベースを使用します。</span><span class="sxs-lookup"><span data-stu-id="1b986-130">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.CreateElement : string * string * string -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.CreateElement (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="1b986-131">新しい要素のプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="1b986-131">The prefix of the new element.</span></span> <span data-ttu-id="1b986-132">String.Empty または <see langword="null" /> の場合、プレフィックスはありません。</span><span class="sxs-lookup"><span data-stu-id="1b986-132">If String.Empty or <see langword="null" />, there is no prefix.</span></span></param>
        <param name="localName"><span data-ttu-id="1b986-133">新しい要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="1b986-133">The local name of the new element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="1b986-134">新しい要素の名前空間 URI (Uniform Resource Identifier)。</span><span class="sxs-lookup"><span data-stu-id="1b986-134">The namespace Uniform Resource Identifier (URI) of the new element.</span></span> <span data-ttu-id="1b986-135">String.Empty または <see langword="null" /> の場合、namespaceURI はありません。</span><span class="sxs-lookup"><span data-stu-id="1b986-135">If String.Empty or <see langword="null" />, there is no namespaceURI.</span></span></param>
        <summary><span data-ttu-id="1b986-136">指定した <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" />、<see cref="P:System.Xml.XmlNode.NamespaceURI" /> を使用して、要素を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-136">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> , and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="1b986-137">新しい <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-137">A new <see cref="T:System.Xml.XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-138">`Note to Inheritors` この関数をオーバーロードする場合は、この関数を機能拡張に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="1b986-138">`Note to Inheritors` If you overload this function, it cannot be used for extensibility.</span></span> <span data-ttu-id="1b986-139">代わりに、基本クラス (この場合は `XmlDataDocument`) によって作成された要素を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="1b986-139">Instead, you can return an element created by the base class, in this case, `XmlDataDocument`.</span></span> <span data-ttu-id="1b986-140">次の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b986-140">See the following example.</span></span>  
  
```csharp  
class MyXmlDataDocument : XmlDataDocument {  
 public override XmlElement CreateElement(string prefix, string localName, string nsURI) {  
   //Ensure we are returning the base class implementation of element.  
   XmlElement e = base.CreateElement(prefix, localName, nsURI);  
   //Add additional code here.  
   return e;    //Return the element created by XmlDataDocument.  
 }      
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.CreateEntityReference : string -&gt; System.Xml.XmlEntityReference" Usage="xmlDataDocument.CreateEntityReference name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1b986-141">エンティティ参照の名前。</span><span class="sxs-lookup"><span data-stu-id="1b986-141">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="1b986-142">指定した名前を使用して、<see cref="T:System.Xml.XmlEntityReference" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-142">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></summary>
        <returns><span data-ttu-id="1b986-143">指定した名前を持つ <see cref="T:System.Xml.XmlEntityReference" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-143">An <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-144"><xref:System.Xml.XmlDataDocument> オブジェクトの <xref:System.Xml.XmlEntityReference> ノードを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="1b986-144"><xref:System.Xml.XmlEntityReference> nodes cannot be created for <xref:System.Xml.XmlDataDocument> objects.</span></span> <span data-ttu-id="1b986-145">このメソッドを呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1b986-145">Calling this method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b986-146">このメソッドを呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="1b986-146">Calling this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected override System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : System.Xml.XmlNode -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDataDocument.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="1b986-147">ナビゲーターを最初に配置する <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-147">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span></span></param>
        <summary><span data-ttu-id="1b986-148">このドキュメント内を移動するための、新しい <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-148">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span></span> <span data-ttu-id="1b986-149"><see langword="XPathNavigator" /> は、<paramref name="node" /> パラメーターに指定されたノード上に配置されています。</span><span class="sxs-lookup"><span data-stu-id="1b986-149">The <see langword="XPathNavigator" /> is positioned on the node specified in the <paramref name="node" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="1b986-150">XML ドキュメントに移動するために使用される <see langword="XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-150">An <see langword="XPathNavigator" /> used to navigate the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-151">`XPathNavigator` は、データへの読み取り専用のランダムアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="1b986-151">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="1b986-152">XSLT 変換用に最適化されているため、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドへの入力メカニズムとして使用すると、パフォーマンス上の利点が得られます。</span><span class="sxs-lookup"><span data-stu-id="1b986-152">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b986-153">`XmlDataDocument` と `XPathNavigator`を使用して XSLT 変換を表示するには、<xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b986-153">To see an XSLT transformation using `XmlDataDocument` and an `XPathNavigator`, see the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDataDocument.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Xml.XmlDataDocument.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b986-154"><see cref="T:System.Data.DataSet" /> のデータのリレーショナル表現を提供する <see langword="XmlDataDocument" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b986-154">Gets a <see cref="T:System.Data.DataSet" /> that provides a relational representation of the data in the <see langword="XmlDataDocument" />.</span></span></summary>
        <value><span data-ttu-id="1b986-155">リレーショナル モデルを使用して <see langword="DataSet" /> のデータにアクセスするために使用できる <see langword="XmlDataDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-155">A <see langword="DataSet" /> that can be used to access the data in the <see langword="XmlDataDocument" /> using a relational model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-156">`DataSet` を使用すると、リレーショナルモデルを使用して `XmlDataDocument` 内のデータにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="1b986-156">The `DataSet` enables you to access the data in the `XmlDataDocument` using a relational model.</span></span> <span data-ttu-id="1b986-157">これは、データをテーブル、ビュー、行、列、リレーションなどとして処理できることを意味します。</span><span class="sxs-lookup"><span data-stu-id="1b986-157">This means that you can handle the data as tables and views, rows and columns, relations, and so on.</span></span> <span data-ttu-id="1b986-158">`DataSet` で行った変更は、`XmlDataDocument`にすぐに表示されます。</span><span class="sxs-lookup"><span data-stu-id="1b986-158">Changes made in the `DataSet` are immediately visible in the `XmlDataDocument`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b986-159">次の例では、`DataSet` メソッドを使用して書籍の価格を変更します。</span><span class="sxs-lookup"><span data-stu-id="1b986-159">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/VB/source.vb#1)]  
  
 <span data-ttu-id="1b986-160">この例では、次の2つのファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="1b986-160">The example uses the following two files as input.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetElementById (string elemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetElementById(string elemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementById (elemId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetElementById(System::String ^ elemId);" />
      <MemberSignature Language="F#" Value="override this.GetElementById : string -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.GetElementById elemId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elemId"><span data-ttu-id="1b986-161">一致する属性 ID。</span><span class="sxs-lookup"><span data-stu-id="1b986-161">The attribute ID to match.</span></span></param>
        <summary><span data-ttu-id="1b986-162">指定した ID の <see cref="T:System.Xml.XmlElement" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b986-162">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span> <span data-ttu-id="1b986-163">このメソッドは <see cref="T:System.Xml.XmlDataDocument" /> クラスでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="1b986-163">This method is not supported by the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span> <span data-ttu-id="1b986-164">このメソッドを呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1b986-164">Calling this method throws an exception.</span></span></summary>
        <returns><span data-ttu-id="1b986-165">指定した ID を持つ <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-165">An <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-166">このメソッドは <xref:System.Xml.XmlDataDocument> クラスでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="1b986-166">This method is not supported by the <xref:System.Xml.XmlDataDocument> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b986-167">このメソッドを呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="1b986-167">Calling this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementFromRow">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetElementFromRow (System.Data.DataRow r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetElementFromRow(class System.Data.DataRow r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementFromRow (r As DataRow) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetElementFromRow(System::Data::DataRow ^ r);" />
      <MemberSignature Language="F#" Value="member this.GetElementFromRow : System.Data.DataRow -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.GetElementFromRow r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="1b986-168">取得する対象の、関連付けられた <see langword="DataRow" /> を持つ <see langword="XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-168">The <see langword="DataRow" /> whose associated <see langword="XmlElement" /> you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="1b986-169">指定した <see cref="T:System.Xml.XmlElement" /> に関連付けられている <see cref="T:System.Data.DataRow" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b986-169">Retrieves the <see cref="T:System.Xml.XmlElement" /> associated with the specified <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="1b986-170">指定した <see langword="XmlElement" /> の表現を格納している <see langword="DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-170">The <see langword="XmlElement" /> containing a representation of the specified <see langword="DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1b986-171">次の例では、`DataSet` を `XmlDataDocument` に読み込み、最初の顧客レコードを表す `XmlElement` を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-171">The following example loads a `DataSet` into an `XmlDataDocument` and then creates an `XmlElement` representing the first customer record.</span></span>  
  
 <span data-ttu-id="1b986-172">この例では、SQL Server 2000 Northwind データベースを使用します。</span><span class="sxs-lookup"><span data-stu-id="1b986-172">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetElementsByTagName : string -&gt; System.Xml.XmlNodeList" Usage="xmlDataDocument.GetElementsByTagName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1b986-173">一致する限定名。</span><span class="sxs-lookup"><span data-stu-id="1b986-173">The qualified name to match.</span></span> <span data-ttu-id="1b986-174">一致するノードの <see cref="P:System.Xml.XmlDocument.Name" /> プロパティに一致します。</span><span class="sxs-lookup"><span data-stu-id="1b986-174">It is matched against the <see cref="P:System.Xml.XmlDocument.Name" /> property of the matching node.</span></span> <span data-ttu-id="1b986-175">特殊値の "\*" は、すべてのタグに一致します。</span><span class="sxs-lookup"><span data-stu-id="1b986-175">The special value "\*" matches all tags.</span></span></param>
        <summary><span data-ttu-id="1b986-176">指定した <see cref="T:System.Xml.XmlNodeList" /> に一致するすべての子孫の要素のリストを格納している <see cref="P:System.Xml.XmlDocument.Name" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1b986-176">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span></span></summary>
        <returns><span data-ttu-id="1b986-177">一致しているすべてのノードのリストを格納している <see cref="T:System.Xml.XmlNodeList" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-177">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1b986-178"><xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> メソッドの代わりに、<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> または <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="1b986-178">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowFromElement">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetRowFromElement (System.Xml.XmlElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetRowFromElement(class System.Xml.XmlElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowFromElement (e As XmlElement) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetRowFromElement(System::Xml::XmlElement ^ e);" />
      <MemberSignature Language="F#" Value="member this.GetRowFromElement : System.Xml.XmlElement -&gt; System.Data.DataRow" Usage="xmlDataDocument.GetRowFromElement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1b986-179">取得する対象の、関連付けられた <see langword="XmlElement" /> を持つ <see langword="DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-179">The <see langword="XmlElement" /> whose associated <see langword="DataRow" /> you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="1b986-180">指定した <see cref="T:System.Data.DataRow" /> に関連付けられている <see cref="T:System.Xml.XmlElement" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b986-180">Retrieves the <see cref="T:System.Data.DataRow" /> associated with the specified <see cref="T:System.Xml.XmlElement" />.</span></span></summary>
        <returns><span data-ttu-id="1b986-181"><see langword="DataRow" /> の表現を格納している <see langword="XmlElement" />。<see langword="null" /> に関連付けられた <see langword="DataRow" /> がない場合は <see langword="XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-181">The <see langword="DataRow" /> containing a representation of the <see langword="XmlElement" />; <see langword="null" /> if there is no <see langword="DataRow" /> associated with the <see langword="XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1b986-182">次の例では、最初の本の価格を変更します。</span><span class="sxs-lookup"><span data-stu-id="1b986-182">The following example modifies the price of the first book.</span></span>  
  
 [!code-cpp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CPP/getrow.cpp#1)]
 [!code-csharp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CS/getrow.cs#1)]
 [!code-vb[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/VB/getrow.vb#1)]  
  
 <span data-ttu-id="1b986-183">この例では、次の入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="1b986-183">The example uses the following input files:</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b986-184">指定したデータ ソースを使用して <see langword="XmlDataDocument" /> を読み込み、読み込んだデータと <see cref="T:System.Data.DataSet" /> を同期します。</span><span class="sxs-lookup"><span data-stu-id="1b986-184">Loads the <see langword="XmlDataDocument" /> using the specified data source and synchronizes the <see cref="T:System.Data.DataSet" /> with the loaded data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1b986-185">XML データ relationally を表示するには、まず、データマッピングに使用するスキーマを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-185">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="1b986-186">これを行うには、<xref:System.Data.DataSet.ReadXmlSchema%2A> メソッドを呼び出すか、`DataSet` 内にテーブルと列を手動で作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-186">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="1b986-187">この手順は、`Load`を呼び出す前に行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-187">This step must be done before calling `Load`.</span></span>  
  
 <span data-ttu-id="1b986-188">`XmlDataDocument` は、エンティティ参照の作成をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="1b986-188">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="1b986-189">データにエンティティ参照が含まれている場合、`Load` メソッドはエンティティ参照を解決および展開します。</span><span class="sxs-lookup"><span data-stu-id="1b986-189">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span> <span data-ttu-id="1b986-190">ただし、引数として <xref:System.Xml.XmlReader> を受け取る `Load` オーバーロードを使用している場合は、エンティティを解決できる `XmlReader` を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-190">However, if you are using the `Load` overload that takes a <xref:System.Xml.XmlReader> as an argument, you must specify an `XmlReader` that can resolve entities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::Stream ^ inStream);" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.Stream -&gt; unit" Usage="xmlDataDocument.Load inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream"><span data-ttu-id="1b986-191">読み込む XML ドキュメントが含まれているストリーム。</span><span class="sxs-lookup"><span data-stu-id="1b986-191">The stream containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="1b986-192">指定したストリームから <see langword="XmlDataDocument" /> を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1b986-192">Loads the <see langword="XmlDataDocument" /> from the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-193">`XmlDataDocument` は、エンティティ参照の作成をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="1b986-193">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="1b986-194">データにエンティティ参照が含まれている場合、`Load` メソッドはエンティティ参照を解決および展開します。</span><span class="sxs-lookup"><span data-stu-id="1b986-194">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b986-195">XML データ relationally を表示するには、まず、データマッピングに使用するスキーマを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-195">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="1b986-196">これを行うには、<xref:System.Data.DataSet.ReadXmlSchema%2A> メソッドを呼び出すか、`DataSet` 内にテーブルと列を手動で作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-196">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="1b986-197">この手順は、`Load`を呼び出す前に行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-197">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::TextReader ^ txtReader);" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.TextReader -&gt; unit" Usage="xmlDataDocument.Load txtReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader"><span data-ttu-id="1b986-198">XML データをドキュメントに送るために使用する <see langword="TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-198">The <see langword="TextReader" /> used to feed the XML data into the document.</span></span></param>
        <summary><span data-ttu-id="1b986-199">指定した <see langword="XmlDataDocument" /> から <see cref="T:System.IO.TextReader" /> を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1b986-199">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-200">`XmlDataDocument` は、エンティティ参照の作成をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="1b986-200">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="1b986-201">データにエンティティ参照が含まれている場合、`Load` メソッドはエンティティ参照を解決および展開します。</span><span class="sxs-lookup"><span data-stu-id="1b986-201">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b986-202">XML データ relationally を表示するには、まず、データマッピングに使用するスキーマを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-202">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="1b986-203">これを行うには、<xref:System.Data.DataSet.ReadXmlSchema%2A> メソッドを呼び出すか、`DataSet` 内にテーブルと列を手動で作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-203">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="1b986-204">この手順は、`Load`を呼び出す前に行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-204">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="override this.Load : string -&gt; unit" Usage="xmlDataDocument.Load filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="1b986-205">読み込む XML ドキュメントを格納しているファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="1b986-205">The URL of the file containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="1b986-206">指定した URL を使用して、<see langword="XmlDataDocument" /> を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1b986-206">Loads the <see langword="XmlDataDocument" /> using the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-207">`XmlDataDocument` は、エンティティ参照の作成をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="1b986-207">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="1b986-208">データにエンティティ参照が含まれている場合、`Load` メソッドはエンティティ参照を解決および展開します。</span><span class="sxs-lookup"><span data-stu-id="1b986-208">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b986-209">XML データ relationally を表示するには、まず、データマッピングに使用するスキーマを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-209">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="1b986-210">これを行うには、<xref:System.Data.DataSet.ReadXmlSchema%2A> メソッドを呼び出すか、`DataSet` 内にテーブルと列を手動で作成します。</span><span class="sxs-lookup"><span data-stu-id="1b986-210">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="1b986-211">この手順は、`Load`を呼び出す前に行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b986-211">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Xml.XmlReader -&gt; unit" Usage="xmlDataDocument.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="1b986-212">読み込む XML ドキュメントを格納している <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1b986-212">The <see langword="XmlReader" /> containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="1b986-213">指定した <see langword="XmlDataDocument" /> から <see cref="T:System.Xml.XmlReader" /> を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1b986-213">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b986-214">`XmlDataDocument` は、エンティティ参照の作成をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="1b986-214">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="1b986-215">データソースにエンティティ参照が含まれている場合は、<xref:System.Xml.XmlValidatingReader.EntityHandling%2A> プロパティが EntityHandling. ExpandEntities (既定の動作) に設定されている <xref:System.Xml.XmlValidatingReader> を作成し、その `XmlValidatingReader` を `Load` メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="1b986-215">If the data source contains entity references, you must create an <xref:System.Xml.XmlValidatingReader> with the <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the `XmlValidatingReader` to the `Load` method.</span></span> <span data-ttu-id="1b986-216">`XmlValidatingReader`を使用しない場合、`Load` メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="1b986-216">If you do not use an `XmlValidatingReader`, the `Load` method throws an exception.</span></span>  
  
 <span data-ttu-id="1b986-217">`Load` メソッドでは、常に有意の空白が保持されます。</span><span class="sxs-lookup"><span data-stu-id="1b986-217">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="1b986-218"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> プロパティは、空白を保持するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="1b986-218">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not white space is preserved.</span></span> <span data-ttu-id="1b986-219">既定値は `false`です。空白は保持されません。</span><span class="sxs-lookup"><span data-stu-id="1b986-219">The default is `false`, white space is not preserved.</span></span>  
  
 <span data-ttu-id="1b986-220">リーダーが初期状態 (つまり、ReadState = ReadState. Initial) である場合、`Load` はリーダーのコンテンツ全体を使用し、検出されたものから DOM を構築します。</span><span class="sxs-lookup"><span data-stu-id="1b986-220">If the reader is in the initial state (that is, ReadState=ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="1b986-221">リーダーが深さ "n" のノードに既に配置されている場合、このメソッドはそのノードと、深さ "n" を閉じる終了タグまでのすべての後続の兄弟を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1b986-221">If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="1b986-222">これには、次の結果が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b986-222">This has the following results.</span></span>  
  
 <span data-ttu-id="1b986-223">現在のノードと次の兄弟が次のようになります。</span><span class="sxs-lookup"><span data-stu-id="1b986-223">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="1b986-224">ドキュメントには2つのルートレベル要素を含めることができないため、`Load` は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="1b986-224">`Load` throws an exception, because a document cannot have two root-level elements.</span></span> <span data-ttu-id="1b986-225">現在のノードと次の兄弟が次のようになります。</span><span class="sxs-lookup"><span data-stu-id="1b986-225">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><?process  
    instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="1b986-226">`Load` は成功します。ただし、ルートレベルの要素がないため、不完全な DOM ツリーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="1b986-226">`Load` will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</span></span> <span data-ttu-id="1b986-227">ドキュメントを保存する前に、ルートレベルの要素を追加する必要があります。それ以外の場合、<xref:System.Xml.XmlDocument.Save%2A> メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="1b986-227">You have to add a root-level element before you save the document; otherwise, the <xref:System.Xml.XmlDocument.Save%2A> method throws an exception.</span></span>  
  
 <span data-ttu-id="1b986-228">ドキュメントのルート レベルとしては無効なリーフ ノード (たとえば空白ノードや属性ノード) にリーダーが位置している場合、リーダーはルートとして使用できるノードに移動するまで読み込みを続行します。</span><span class="sxs-lookup"><span data-stu-id="1b986-228">If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="1b986-229">ドキュメントの読み込みは、この位置から開始されます。</span><span class="sxs-lookup"><span data-stu-id="1b986-229">The document begins loading at this point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b986-230">次の例では、`DataSet` メソッドを使用して書籍の価格を変更します。</span><span class="sxs-lookup"><span data-stu-id="1b986-230">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[XmlDataDocument.Load#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.Load/CPP/loadrdr.cpp#1)]
 [!code-csharp[XmlDataDocument.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.Load/CS/loadrdr.cs#1)]
 [!code-vb[XmlDataDocument.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.Load/VB/loadrdr.vb#1)]  
  
 <span data-ttu-id="1b986-231">この例では、次の2つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="1b986-231">The example uses the following two input files.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[XmlDataDocument.Load#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/2books.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[XmlDataDocument.Load#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/test.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b986-232">読み込まれている XML にエンティティ参照が含まれており、リーダーがエンティティを解決できません。</span><span class="sxs-lookup"><span data-stu-id="1b986-232">The XML being loaded contains entity references, and the reader cannot resolve entities.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
