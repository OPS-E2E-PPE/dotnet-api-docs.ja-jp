<Type Name="XmlWriter" FullName="System.Xml.XmlWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f2848baea265d2a774e7b7ef96105b54ed36e9e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83956985" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlWriter : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object implements class System.IDisposable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter&#xA;Implements IDisposable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type XmlWriter = class&#xA;    interface IDisposable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class XmlWriter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type XmlWriter = class" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.ReaderWriter" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="31673-101">XML データが格納されたストリームまたはファイルを、高速かつ非キャッシュで前方のみに生成する方法を提供するライターを表します。</span><span class="sxs-lookup"><span data-stu-id="31673-101">Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-102"><xref:System.Xml.XmlWriter> クラスは、ストリーム、ファイル、テキストリーダー、または文字列に XML データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-102">The <xref:System.Xml.XmlWriter> class writes XML data to a stream, file, text reader, or string.</span></span> <span data-ttu-id="31673-103">W3C[拡張マークアップ言語 (xml) 1.0 (第4版)](https://www.w3.org/TR/2006/REC-xml-20060816/)と[名前空間 (xml 1.0 (第3版))](https://www.w3.org/TR/REC-xml-names/)をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="31673-103">It supports the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) and [Namespaces in XML 1.0 (third edition)](https://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="31673-104"><xref:System.Xml.XmlWriter> クラスのメンバーを使用すると、次のことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-104">The members of the <xref:System.Xml.XmlWriter> class enable you to:</span></span>  
  
-   <span data-ttu-id="31673-105">文字が有効な XML 文字かどうか、要素名と属性名が有効な XML 名かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="31673-105">Verify that the characters are legal XML characters and that element and attribute names are valid XML names.</span></span>  
  
-   <span data-ttu-id="31673-106">XML ドキュメントが整形式かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="31673-106">Verify that the XML document is well-formed.</span></span>  
  
-   <span data-ttu-id="31673-107">バイナリバイトを Base64 または BinHex としてエンコードし、その結果生成されるテキストを書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-107">Encode binary bytes as Base64 or BinHex, and write out the resulting text.</span></span>  
  
-   <span data-ttu-id="31673-108">値の変換を手動で実行する必要がないように、文字列ではなく共通言語ランタイムの型を使用して値を渡します。</span><span class="sxs-lookup"><span data-stu-id="31673-108">Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.</span></span>  
  
-   <span data-ttu-id="31673-109">複数のドキュメントを 1 つの出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-109">Write multiple documents to one output stream.</span></span>  
  
-   <span data-ttu-id="31673-110">有効な名前、修飾された名前、および名前トークンを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-110">Write valid names, qualified names, and name tokens.</span></span>  
  
 <span data-ttu-id="31673-111">このセクションの内容は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="31673-111">In this section:</span></span>  
  
 <span data-ttu-id="31673-112">[XML ライター](#create)  の作成</span><span class="sxs-lookup"><span data-stu-id="31673-112">[Creating an XML writer](#create) </span></span>  
 <span data-ttu-id="31673-113">[出力形式の指定](#output) </span><span class="sxs-lookup"><span data-stu-id="31673-113">[Specifying the output format](#output) </span></span>  
 <span data-ttu-id="31673-114">[データの一致](#conformance) </span><span class="sxs-lookup"><span data-stu-id="31673-114">[Data conformance](#conformance) </span></span>  
 <span data-ttu-id="31673-115">  の[要素の書き込み](#writing_elements)</span><span class="sxs-lookup"><span data-stu-id="31673-115">[Writing elements](#writing_elements) </span></span>  
 <span data-ttu-id="31673-116">[属性の書き込み](#writing_attributes) </span><span class="sxs-lookup"><span data-stu-id="31673-116">[Writing attributes](#writing_attributes) </span></span>  
 <span data-ttu-id="31673-117">[名前空間の処理](#handling_ns) </span><span class="sxs-lookup"><span data-stu-id="31673-117">[Handling namespaces](#handling_ns) </span></span>  
 <span data-ttu-id="31673-118">[型指定](#writing_types)されたデータの書き込み </span><span class="sxs-lookup"><span data-stu-id="31673-118">[Writing typed data](#writing_types) </span></span>  
 <span data-ttu-id="31673-119">[XML ライター  を閉じる](#close)</span><span class="sxs-lookup"><span data-stu-id="31673-119">[Closing the XML writer](#close) </span></span>  
 <span data-ttu-id="31673-120">[非同期プログラミング](#async) </span><span class="sxs-lookup"><span data-stu-id="31673-120">[Asynchronous programming](#async) </span></span>  
 [<span data-ttu-id="31673-121">セキュリティに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="31673-121">Security considerations</span></span>](#security)  
  
<a name="create"></a>   
## <a name="creating-an-xml-writer"></a><span data-ttu-id="31673-122">XML ライターの作成</span><span class="sxs-lookup"><span data-stu-id="31673-122">Creating an XML writer</span></span>  
 <span data-ttu-id="31673-123"><xref:System.Xml.XmlWriter> インスタンスを作成するには、<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-123">To create an <xref:System.Xml.XmlWriter> instance, use the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="31673-124">XML ライターで有効にする機能のセットを指定するには、<xref:System.Xml.XmlWriter.Create%2A> メソッドに <xref:System.Xml.XmlWriterSettings> を渡します。</span><span class="sxs-lookup"><span data-stu-id="31673-124">To specify the set of features you want to enable on the XML writer, pass an <xref:System.Xml.XmlWriterSettings> to the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="31673-125">それ以外の場合は、既定の設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-125">Otherwise, default settings are used.</span></span> <span data-ttu-id="31673-126">詳細については、<xref:System.Xml.XmlWriter.Create%2A> リファレンスページを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-126">See the <xref:System.Xml.XmlWriter.Create%2A> reference pages for details.</span></span>  
  
<a name="output"></a>   
## <a name="specifying-the-output-format"></a><span data-ttu-id="31673-127">出力形式の指定</span><span class="sxs-lookup"><span data-stu-id="31673-127">Specifying the output format</span></span>  
 <span data-ttu-id="31673-128"><xref:System.Xml.XmlWriterSettings> クラスには、<xref:System.Xml.XmlWriter> 出力を書式設定する方法を制御するいくつかのプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="31673-128">The <xref:System.Xml.XmlWriterSettings> class includes several properties that control how <xref:System.Xml.XmlWriter> output is formatted:</span></span>  
  
|<span data-ttu-id="31673-129">プロパティ</span><span class="sxs-lookup"><span data-stu-id="31673-129">Property</span></span>|<span data-ttu-id="31673-130">説明</span><span class="sxs-lookup"><span data-stu-id="31673-130">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="31673-131">使用するテキスト エンコーディングを指定します。</span><span class="sxs-lookup"><span data-stu-id="31673-131">Specifies the text encoding to use.</span></span> <span data-ttu-id="31673-132">既定では、 `Encoding.UTF8`です。</span><span class="sxs-lookup"><span data-stu-id="31673-132">The default is `Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="31673-133">要素をインデントするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="31673-133">Indicates whether to indent elements.</span></span> <span data-ttu-id="31673-134">既定値は `false` (インデントなし) です。</span><span class="sxs-lookup"><span data-stu-id="31673-134">The default is `false` (no indentation).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="31673-135">インデントに使用する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="31673-135">Specifies the character string to use when indenting.</span></span> <span data-ttu-id="31673-136">既定値は 2 つのスペースです。</span><span class="sxs-lookup"><span data-stu-id="31673-136">The default is two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="31673-137">改行に使用する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="31673-137">Specifies the character string to use for line breaks.</span></span> <span data-ttu-id="31673-138">既定値は `\r\n` (キャリッジ リターン、ライン フィード) です。</span><span class="sxs-lookup"><span data-stu-id="31673-138">The default is `\r\n` (carriage return, line feed).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="31673-139">改行文字の処理方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="31673-139">Specifies how to handle newline characters.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="31673-140">新しい行に属性を書き込むかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="31673-140">Indicates whether to write attributes on a new line.</span></span> <span data-ttu-id="31673-141">このプロパティを使用する場合は、<xref:System.Xml.XmlWriterSettings.Indent%2A> を `true` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-141"><xref:System.Xml.XmlWriterSettings.Indent%2A> should be set to `true` when using this property.</span></span> <span data-ttu-id="31673-142">既定では、 `false`です。</span><span class="sxs-lookup"><span data-stu-id="31673-142">The default is `false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="31673-143">XML 宣言を書き込むかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="31673-143">Indicates whether to write an XML declaration.</span></span> <span data-ttu-id="31673-144">既定では、 `false`です。</span><span class="sxs-lookup"><span data-stu-id="31673-144">The default is `false`.</span></span>|  
  
 <span data-ttu-id="31673-145"><xref:System.Xml.XmlWriterSettings.Indent%2A> および <xref:System.Xml.XmlWriterSettings.IndentChars%2A> プロパティによって、意味のない空白の書式設定方法が制御されます。</span><span class="sxs-lookup"><span data-stu-id="31673-145">The <xref:System.Xml.XmlWriterSettings.Indent%2A> and <xref:System.Xml.XmlWriterSettings.IndentChars%2A> properties control how insignificant white space is formatted.</span></span> <span data-ttu-id="31673-146">たとえば、要素ノードをインデントするには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="31673-146">For example, to indent element nodes:</span></span>  
  
 [!code-csharp[XmlWriter_v2#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#8)]
 [!code-vb[XmlWriter_v2#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#8)]  
  
 <span data-ttu-id="31673-147"><xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> を使用して、インデントのレベルを1つ追加して、新しい行に各属性を記述します。</span><span class="sxs-lookup"><span data-stu-id="31673-147">Use the <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> to write each attribute on a new line with one extra level of indentation:</span></span>  
  
 [!code-csharp[XmlWriter_v2#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#9)]
 [!code-vb[XmlWriter_v2#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#9)]  
  
<a name="conformance"></a>   
## <a name="data-conformance"></a><span data-ttu-id="31673-148">データの一致</span><span class="sxs-lookup"><span data-stu-id="31673-148">Data conformance</span></span>  
 <span data-ttu-id="31673-149">XML ライターは、<xref:System.Xml.XmlWriterSettings> クラスの2つのプロパティを使用して、データの一致を確認します。</span><span class="sxs-lookup"><span data-stu-id="31673-149">An XML writer uses two properties from the <xref:System.Xml.XmlWriterSettings> class to check for data conformance:</span></span>  
  
-   <span data-ttu-id="31673-150"><xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> プロパティは、W3C で定義されているように、文字が有効範囲外にある場合に、XML ライターに対して文字のチェックを指示し、<xref:System.Xml.XmlException> 例外をスローするように指示します。</span><span class="sxs-lookup"><span data-stu-id="31673-150">The <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property instructs the XML writer to check characters and throw an <xref:System.Xml.XmlException> exception if any characters are outside the legal range, as defined by the W3C.</span></span>  
  
-   <span data-ttu-id="31673-151"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> プロパティは、記述されているストリームが W3C によって定義されている整形式の XML 1.0 ドキュメントまたはドキュメントフラグメントの規則に準拠していることを確認するように XML ライターを構成します。</span><span class="sxs-lookup"><span data-stu-id="31673-151">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C.</span></span> <span data-ttu-id="31673-152">次の表では、3つの準拠レベルについて説明します。</span><span class="sxs-lookup"><span data-stu-id="31673-152">The three conformance levels are described in the following table.</span></span> <span data-ttu-id="31673-153">既定では、 <xref:System.Xml.ConformanceLevel.Document>です。</span><span class="sxs-lookup"><span data-stu-id="31673-153">The default is <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="31673-154">詳細については、<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> プロパティと <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> 列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-154">For details, see the <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property and the <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> enumeration.</span></span>  
  
    |<span data-ttu-id="31673-155">Level</span><span class="sxs-lookup"><span data-stu-id="31673-155">Level</span></span>|<span data-ttu-id="31673-156">説明</span><span class="sxs-lookup"><span data-stu-id="31673-156">Description</span></span>|  
    |-----------|-----------------|  
    |<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="31673-157">XML 出力は、整形式の XML 1.0 ドキュメントの規則に準拠し、任意の準拠プロセッサによって処理できます。</span><span class="sxs-lookup"><span data-stu-id="31673-157">The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="31673-158">XML 出力は、整形式の XML 1.0 ドキュメントフラグメントの規則に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="31673-158">The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="31673-159">XML ライターは、受信データに基づいて、どのレベルのオファー確認チェックを適用するか (ドキュメントまたはフラグメント) を決定します。</span><span class="sxs-lookup"><span data-stu-id="31673-159">The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</span></span>|  
  
<a name="writing_elements"></a>   
## <a name="writing-elements"></a><span data-ttu-id="31673-160">要素の書き込み</span><span class="sxs-lookup"><span data-stu-id="31673-160">Writing elements</span></span>  
 <span data-ttu-id="31673-161">次の <xref:System.Xml.XmlWriter> メソッドを使用して、要素ノードを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-161">You can use the following <xref:System.Xml.XmlWriter> methods to write element nodes.</span></span> <span data-ttu-id="31673-162">例については、記載されているメソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-162">For examples, see the methods listed.</span></span>  
  
|<span data-ttu-id="31673-163">用途</span><span class="sxs-lookup"><span data-stu-id="31673-163">Use</span></span>|<span data-ttu-id="31673-164">ターゲット</span><span class="sxs-lookup"><span data-stu-id="31673-164">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteElementString%2A>|<span data-ttu-id="31673-165">文字列値を含む要素ノード全体を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-165">Write an entire element  node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A>|<span data-ttu-id="31673-166">複数のメソッド呼び出しを使用して要素値を書き込む場合は。</span><span class="sxs-lookup"><span data-stu-id="31673-166">To write an element value by using multiple method calls.</span></span>  <span data-ttu-id="31673-167">たとえば、<xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出して、型指定された値を書き込んだり、<xref:System.Xml.XmlWriter.WriteCharEntity%2A> を呼び出して文字エンティティを書き込んだり、<xref:System.Xml.XmlWriter.WriteAttributeString%2A> を呼び出して 1 つの属性を書き込んだり、子要素を書き込んだりすることができます。</span><span class="sxs-lookup"><span data-stu-id="31673-167">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value, <xref:System.Xml.XmlWriter.WriteCharEntity%2A> to write a character entity, <xref:System.Xml.XmlWriter.WriteAttributeString%2A> to write an attribute, or you can write a child element.</span></span> <span data-ttu-id="31673-168">これは、<xref:System.Xml.XmlWriter.WriteElementString%2A> メソッドのより高度なバージョンです。</span><span class="sxs-lookup"><span data-stu-id="31673-168">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="31673-169">要素を閉じるには、<xref:System.Xml.XmlWriter.WriteEndElement%2A> または <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="31673-169">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteNode%2A>|<span data-ttu-id="31673-170"><xref:System.Xml.XmlReader> または <xref:System.Xml.XPath.XPathNavigator> オブジェクトの現在の位置で見つかった要素ノードをコピーする場合は。</span><span class="sxs-lookup"><span data-stu-id="31673-170">To copy an element node found at the current position of an <xref:System.Xml.XmlReader> or <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="31673-171">呼び出されると、ソース オブジェクトからすべてを <xref:System.Xml.XmlWriter> インスタンスにコピーします。</span><span class="sxs-lookup"><span data-stu-id="31673-171">When called, it copies everything from the source object to the <xref:System.Xml.XmlWriter> instance.</span></span>|  
  
<a name="writing_attributes"></a>   
## <a name="writing-attributes"></a><span data-ttu-id="31673-172">属性の書き込み</span><span class="sxs-lookup"><span data-stu-id="31673-172">Writing attributes</span></span>  
 <span data-ttu-id="31673-173">次の <xref:System.Xml.XmlWriter> メソッドを使用して、要素ノードに属性を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-173">You can use the following <xref:System.Xml.XmlWriter> methods to write attributes on element nodes.</span></span> <span data-ttu-id="31673-174">次のセクションで説明するように、これらのメソッドを使用して、要素に名前空間宣言を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="31673-174">These methods can also be used to create namespace declarations on an element, as discussed in the next section.</span></span>  
  
|<span data-ttu-id="31673-175">用途</span><span class="sxs-lookup"><span data-stu-id="31673-175">Use</span></span>|<span data-ttu-id="31673-176">ターゲット</span><span class="sxs-lookup"><span data-stu-id="31673-176">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteAttributeString%2A>|<span data-ttu-id="31673-177">文字列値を含む属性ノード全体を書き込む場合は。</span><span class="sxs-lookup"><span data-stu-id="31673-177">To write an entire attribute node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>|<span data-ttu-id="31673-178">複数のメソッド呼び出しを使用して属性値を書き込む場合は。</span><span class="sxs-lookup"><span data-stu-id="31673-178">To write the attribute value using multiple method calls.</span></span> <span data-ttu-id="31673-179">たとえば、<xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出して、型指定された値を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-179">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value.</span></span> <span data-ttu-id="31673-180">これは、<xref:System.Xml.XmlWriter.WriteElementString%2A> メソッドのより高度なバージョンです。</span><span class="sxs-lookup"><span data-stu-id="31673-180">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="31673-181">要素を閉じるには、<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="31673-181">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteAttributes%2A>|<span data-ttu-id="31673-182"><xref:System.Xml.XmlReader> オブジェクトの現在の位置で見つかったすべての属性をコピーする場合は。</span><span class="sxs-lookup"><span data-stu-id="31673-182">To copy all the attributes found at the current position of an <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="31673-183">記述される属性は、リーダーが現在配置されているノードの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="31673-183">The attributes that are written depend on the type of node the reader is currently positioned on:</span></span><br /><br /> <span data-ttu-id="31673-184">-属性ノードの場合は、現在の属性と、要素の終了タグまでの残りの属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-184">-   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.</span></span><br /><span data-ttu-id="31673-185">-要素ノードの場合は、要素に格納されているすべての属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-185">-   For an element node, it writes all attributes contained by the element.</span></span><br /><span data-ttu-id="31673-186">-XML 宣言ノードの場合は、宣言内のすべての属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-186">-   For an XML declaration node, it writes all the attributes in the declaration.</span></span><br /><span data-ttu-id="31673-187">-他のすべてのノード型では、メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="31673-187">-   For all other node types, the method throws an exception.</span></span>|  
  
<a name="handling_ns"></a>   
## <a name="handling-namespaces"></a><span data-ttu-id="31673-188">名前空間の処理</span><span class="sxs-lookup"><span data-stu-id="31673-188">Handling namespaces</span></span>  
 <span data-ttu-id="31673-189">名前空間は、XML ドキュメント内の要素名と属性名を修飾するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-189">Namespaces are used to qualify element and attribute names in an XML document.</span></span> <span data-ttu-id="31673-190">名前空間プレフィックスは、要素と属性を名前空間に関連付けます。名前空間は、URI 参照に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="31673-190">Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references.</span></span> <span data-ttu-id="31673-191">名前空間は、XML ドキュメントの中の要素名と属性名を一意にします。</span><span class="sxs-lookup"><span data-stu-id="31673-191">Namespaces create element and attribute name uniqueness in an XML document.</span></span>  
  
 <span data-ttu-id="31673-192"><xref:System.Xml.XmlWriter> は、現在の名前空間スコープで定義されているすべての名前空間に対応する名前空間スタックを保持します。</span><span class="sxs-lookup"><span data-stu-id="31673-192">The <xref:System.Xml.XmlWriter> maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope.</span></span> <span data-ttu-id="31673-193">要素および属性の書き込み時には、次の方法で名前空間を使用できます。</span><span class="sxs-lookup"><span data-stu-id="31673-193">When writing elements and attributes you can utilize namespaces in the following ways:</span></span>  
  
-   <span data-ttu-id="31673-194"><xref:System.Xml.XmlWriter.WriteAttributeString%2A> メソッドを使用して、名前空間を手動で宣言します。</span><span class="sxs-lookup"><span data-stu-id="31673-194">Declare namespaces manually by using the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method.</span></span> <span data-ttu-id="31673-195">これは、名前空間宣言の個数を最適化する方法がわかっているときに役立つ場合があります。</span><span class="sxs-lookup"><span data-stu-id="31673-195">This can be useful when you know how to best optimize the number of namespace declarations.</span></span> <span data-ttu-id="31673-196">例については、<xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-196">For an example, see the <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
-   <span data-ttu-id="31673-197">現在の名前空間宣言を新しい名前空間でオーバーライドする。</span><span class="sxs-lookup"><span data-stu-id="31673-197">Override the current namespace declaration with a new namespace.</span></span> <span data-ttu-id="31673-198">次のコードでは、<xref:System.Xml.XmlWriter.WriteAttributeString%2A> メソッドによって、`"x"` プレフィックスの名前空間 URI が `"123"` から `"abc"`に変更されます。</span><span class="sxs-lookup"><span data-stu-id="31673-198">In the following code, the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method changes the namespace URI for the `"x"` prefix from `"123"` to `"abc"`.</span></span>  
  
     [!code-csharp[XmlWriter_v2#18](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#18)]
     [!code-vb[XmlWriter_v2#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#18)]  
  
     <span data-ttu-id="31673-199">このコードは、次の XML 文字列を生成します。</span><span class="sxs-lookup"><span data-stu-id="31673-199">The code generates the following XML string:</span></span>  
  
    ```xml  
    <x:root xmlns:x="123">  
      <item xmlns:x="abc" />  
    </x:root>  
    ```  
  
-   <span data-ttu-id="31673-200">属性または要素の書き込み時に名前空間プレフィックスを指定する。</span><span class="sxs-lookup"><span data-stu-id="31673-200">Specify a namespace prefix when writing attributes or elements.</span></span> <span data-ttu-id="31673-201">要素と属性の書き込みに使用されるメソッドの多くでは、これを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-201">Many of the methods used to write element and attributes enable you to do this.</span></span> <span data-ttu-id="31673-202">たとえば、<xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> メソッドは、開始タグを書き込み、指定した名前空間とプレフィックスに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="31673-202">For example, the <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> method writes a start tag and associates it with a specified namespace and prefix.</span></span>  
  
<a name="writing_types"></a>   
## <a name="writing-typed-data"></a><span data-ttu-id="31673-203">型指定されたデータの書き込み</span><span class="sxs-lookup"><span data-stu-id="31673-203">Writing typed data</span></span>  
 <span data-ttu-id="31673-204"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドは、共通言語ランタイム (CLR) オブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則に従って入力値を文字列形式に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して出力します。</span><span class="sxs-lookup"><span data-stu-id="31673-204">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="31673-205">これは、記述する前に、<xref:System.Xml.XmlConvert> クラスのメソッドを使用して、型指定されたデータを文字列値に変換するよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="31673-205">This is easier than using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="31673-206">テキストに書き込む場合、型指定された値は、そのスキーマ型の <xref:System.Xml.XmlConvert> 規則を使用してテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-206">When writing to text, the typed value is serialized to text by using the <xref:System.Xml.XmlConvert> rules for that schema type.</span></span>  
  
 <span data-ttu-id="31673-207">CLR 型に対応する既定の XSD データ型については、<xref:System.Xml.XmlWriter.WriteValue%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-207">For default XSD data types that correspond to CLR types, see the <xref:System.Xml.XmlWriter.WriteValue%2A> method.</span></span>  
  
 <span data-ttu-id="31673-208"><xref:System.Xml.XmlWriter> は、XML データストアへの書き込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="31673-208">The <xref:System.Xml.XmlWriter> can also be used to write to an XML data store.</span></span> <span data-ttu-id="31673-209">たとえば、<xref:System.Xml.XPath.XPathNavigator> クラスは <xref:System.Xml.XmlWriter> オブジェクトを作成して、<xref:System.Xml.XmlDocument> オブジェクト用のノードを作成できます。</span><span class="sxs-lookup"><span data-stu-id="31673-209">For example, the <xref:System.Xml.XPath.XPathNavigator> class can create an <xref:System.Xml.XmlWriter> object to create nodes for an <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="31673-210">データストアに使用可能なスキーマ情報が含まれている場合、許可されていない型に変換しようとすると、<xref:System.Xml.XmlWriter.WriteValue%2A> メソッドによって例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-210">If the data store has schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method throws an exception if you try to convert to a type that is not allowed.</span></span> <span data-ttu-id="31673-211">データストアに使用可能なスキーマ情報がない場合、<xref:System.Xml.XmlWriter.WriteValue%2A> メソッドでは、すべての値が `xsd:anySimpleType` 型として扱われます。</span><span class="sxs-lookup"><span data-stu-id="31673-211">If the data store does not have schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method treats all values as an `xsd:anySimpleType` type.</span></span>  
  
<a name="close"></a>   
## <a name="closing-the-xml-writer"></a><span data-ttu-id="31673-212">XML ライターを閉じる</span><span class="sxs-lookup"><span data-stu-id="31673-212">Closing the XML writer</span></span>  
 <span data-ttu-id="31673-213"><xref:System.Xml.XmlWriter> メソッドを使用して XML を出力する場合、<xref:System.Xml.XmlWriter.Close%2A> メソッドを呼び出すまで、要素と属性は書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="31673-213">When you use <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes are not written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="31673-214">たとえば、<xref:System.Xml.XmlWriter> を使用して <xref:System.Xml.XmlDocument> オブジェクトを設定している場合は、<xref:System.Xml.XmlWriter> インスタンスを閉じるまで、ターゲットドキュメントに記述された要素および属性を表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-214">For example, if you are using <xref:System.Xml.XmlWriter> to populate an <xref:System.Xml.XmlDocument> object, you won't be able to see the written elements and attributes in the target document until you close the <xref:System.Xml.XmlWriter> instance.</span></span>  
  
<a name="async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="31673-215">非同期プログラミング</span><span class="sxs-lookup"><span data-stu-id="31673-215">Asynchronous programming</span></span>  
 <span data-ttu-id="31673-216">ほとんどの <xref:System.Xml.XmlWriter> メソッドには、メソッド名の末尾に "Async" を持つ非同期の対応するものがあります。</span><span class="sxs-lookup"><span data-stu-id="31673-216">Most of the <xref:System.Xml.XmlWriter> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="31673-217">たとえば、非同期の <xref:System.Xml.XmlWriter.WriteAttributeString%2A> に相当するのは <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31673-217">For example, the asynchronous equivalent of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> is <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
 <span data-ttu-id="31673-218">非同期のメソッドを持たない <xref:System.Xml.XmlWriter.WriteValue%2A> メソッドの場合は、戻り値を文字列に変換し、代わりに <xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-218">For the <xref:System.Xml.XmlWriter.WriteValue%2A> method, which doesn't have an asynchronous counterpart, convert the return value to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method instead.</span></span>  
  
<a name="security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="31673-219">セキュリティに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="31673-219">Security considerations</span></span>  
 <span data-ttu-id="31673-220"><xref:System.Xml.XmlWriter> クラスを使用する場合は、次の点を考慮してください。</span><span class="sxs-lookup"><span data-stu-id="31673-220">Consider the following when working with the <xref:System.Xml.XmlWriter> class:</span></span>  
  
-   <span data-ttu-id="31673-221"><xref:System.Xml.XmlWriter> によってスローされた例外は、アプリに通知しないようにするパス情報を開示できます。</span><span class="sxs-lookup"><span data-stu-id="31673-221">Exceptions thrown by the <xref:System.Xml.XmlWriter> can disclose path information that you do not want bubbled up to the app.</span></span> <span data-ttu-id="31673-222">アプリは例外をキャッチして適切に処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-222">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="31673-223"><xref:System.Xml.XmlWriter> では、<xref:System.Xml.XmlWriter.WriteDocType%2A> または <xref:System.Xml.XmlWriter.WriteRaw%2A> メソッドに渡されるデータは検証されません。</span><span class="sxs-lookup"><span data-stu-id="31673-223"><xref:System.Xml.XmlWriter> does not validate any data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> or <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="31673-224">これらのメソッドには、任意のデータを渡さないでください。</span><span class="sxs-lookup"><span data-stu-id="31673-224">You should not pass arbitrary data to these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-225">次のコード例は、非同期 API を使用して XML を生成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="31673-225">The following example code shows how to use the asynchronous API to generate XML.</span></span>  
  
```csharp  
async Task TestWriter(Stream stream)   
{  
    XmlWriterSettings settings = new XmlWriterSettings();  
    settings.Async = true;  
  
    using (XmlWriter writer = XmlWriter.Create(stream, settings)) {  
        await writer.WriteStartElementAsync("pf", "root", "http://ns");  
        await writer.WriteStartElementAsync(null, "sub", null);  
        await writer.WriteAttributeStringAsync(null, "att", null, "val");  
        await writer.WriteStringAsync("text");  
        await writer.WriteEndElementAsync();  
        await writer.WriteProcessingInstructionAsync("pName", "pValue");  
        await writer.WriteCommentAsync("cValue");  
        await writer.WriteCDataAsync("cdata value");  
        await writer.WriteEndElementAsync();  
        await writer.FlushAsync();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="31673-226">XML ドキュメントと XML データ</span><span class="sxs-lookup"><span data-stu-id="31673-226">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-227"><see cref="T:System.Xml.XmlWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="31673-227">Initializes a new instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="xmlWriter.Close " FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void Close ();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="xmlWriter.Close " FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-228">派生クラスでオーバーライドされると、このストリームと基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="31673-228">When overridden in a derived class, closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-229">開いている要素または属性は、自動的に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="31673-229">Any elements or attributes left open are automatically closed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31673-230"><xref:System.Xml.XmlWriter> メソッドを使用して XML を出力する場合、<xref:System.Xml.XmlWriter.Close%2A> メソッドを呼び出すまで、要素と属性は書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="31673-230">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="31673-231">たとえば、XmlWriter を使用して <xref:System.Xml.XmlDocument>を設定している場合、<xref:System.Xml.XmlWriter>を閉じるまで、ターゲットドキュメント内の記述された要素と属性を確認することはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-231">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-232">次の例では、XML ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-232">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-233"><see langword="Close" /> が呼び出された後に、追加出力を書き込む呼び出しが行われたか、この呼び出しの結果が無効な XML ドキュメントです。</span><span class="sxs-lookup"><span data-stu-id="31673-233">A call is made to write more output after <see langword="Close" /> has been called or the result of this call is an invalid XML document.</span></span>

<span data-ttu-id="31673-234">または</span><span class="sxs-lookup"><span data-stu-id="31673-234">-or-</span></span>

<span data-ttu-id="31673-235">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-235">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-236">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-236">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31673-237">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-237">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-238">一部の <xref:System.Xml.XmlWriter.Create%2A> オーバーロードには、<xref:System.Xml.XmlWriterSettings> オブジェクトを受け取る `settings` パラメーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="31673-238">Some of the <xref:System.Xml.XmlWriter.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlWriterSettings> object.</span></span> <span data-ttu-id="31673-239">このオブジェクトを使用して、次のことを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-239">You can use this object to:</span></span>  
  
-   <span data-ttu-id="31673-240">作成された <xref:System.Xml.XmlWriter> オブジェクトでサポートする機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="31673-240">Specify which features you want supported on the created <xref:System.Xml.XmlWriter> object.</span></span>  
  
-   <span data-ttu-id="31673-241"><xref:System.Xml.XmlWriterSettings> オブジェクトを再利用して、複数のライターオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-241">Reuse the <xref:System.Xml.XmlWriterSettings> object to create multiple writer objects.</span></span> <span data-ttu-id="31673-242">作成されるライターそれぞれについて、<xref:System.Xml.XmlWriterSettings> オブジェクトがコピーされ、読み取り専用とマークされます。</span><span class="sxs-lookup"><span data-stu-id="31673-242">The <xref:System.Xml.XmlWriterSettings> object is copied and marked read-only for each created writer.</span></span> <span data-ttu-id="31673-243"><xref:System.Xml.XmlWriterSettings> インスタンスの設定が変更されても、同じ設定を使用している既存のライターには影響しません。</span><span class="sxs-lookup"><span data-stu-id="31673-243">Changes to the settings on an <xref:System.Xml.XmlWriterSettings> instance do not affect existing writers with the same settings.</span></span> <span data-ttu-id="31673-244">したがって、同じ機能を持つ複数のライターの作成に、同じ設定を使用できます。</span><span class="sxs-lookup"><span data-stu-id="31673-244">Thus, you can use the same settings to create multiple writers with the same functionality.</span></span> <span data-ttu-id="31673-245">または、<xref:System.Xml.XmlWriterSettings> インスタンスの設定を変更して、別の機能セットを持つ新しいライターを作成できます。</span><span class="sxs-lookup"><span data-stu-id="31673-245">Or, you can modify the settings on an <xref:System.Xml.XmlWriterSettings> instance and create a new writer with a different set of features.</span></span>  
  
-   <span data-ttu-id="31673-246">既存の XML ライターに機能を追加します。</span><span class="sxs-lookup"><span data-stu-id="31673-246">Add features to an existing XML writer.</span></span> <span data-ttu-id="31673-247"><xref:System.Xml.XmlWriter.Create%2A> メソッドは別の <xref:System.Xml.XmlWriter> オブジェクトを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="31673-247">The <xref:System.Xml.XmlWriter.Create%2A> method can accept another <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="31673-248">基になる <xref:System.Xml.XmlWriter> オブジェクトは、静的な <xref:System.Xml.XmlWriter.Create%2A> メソッドによって作成された XML ライターである必要はありません。</span><span class="sxs-lookup"><span data-stu-id="31673-248">The underlying <xref:System.Xml.XmlWriter> object does not have to be an XML writer created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="31673-249">たとえば、ユーザー定義の XML ライターを指定して、機能を追加することができます。</span><span class="sxs-lookup"><span data-stu-id="31673-249">For example, you can specify a user-defined XML writer to add additional features to.</span></span>  
  
-   <span data-ttu-id="31673-250">静的な <xref:System.Xml.XmlWriter.Create%2A> メソッドによって作成された <xref:System.Xml.XmlWriter> オブジェクトでのみ使用可能な、準拠のチェックや[XML 1.0 勧告](https://www.w3.org/TR/2006/REC-xml-20060816/)への準拠などの機能を最大限に活用します。</span><span class="sxs-lookup"><span data-stu-id="31673-250">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/) that are available only on <xref:System.Xml.XmlWriter> objects created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 <span data-ttu-id="31673-251"><xref:System.Xml.XmlWriterSettings> オブジェクトを受け入れない <xref:System.Xml.XmlWriter.Create%2A> のオーバーロードを使用する場合は、次の既定のライター設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-251">If you use a <xref:System.Xml.XmlWriter.Create%2A> overload that doesn't accept an <xref:System.Xml.XmlWriterSettings> object, the following default writer settings are used:</span></span>  
  
|<span data-ttu-id="31673-252">設定</span><span class="sxs-lookup"><span data-stu-id="31673-252">Setting</span></span>|<span data-ttu-id="31673-253">Default</span><span class="sxs-lookup"><span data-stu-id="31673-253">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="31673-254">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="31673-254">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="31673-255"><xref:System.Xml.NamespaceHandling.Default> (削除なし)</span><span class="sxs-lookup"><span data-stu-id="31673-255"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="31673-256">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="31673-256">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
> [!NOTE]
>  <span data-ttu-id="31673-257">.NET Framework には、<xref:System.Xml.XmlWriter> クラスの具象実装である <xref:System.Xml.XmlTextWriter> クラスが含まれていますが、<xref:System.Xml.XmlWriter.Create%2A> メソッドを使用して <xref:System.Xml.XmlWriter> インスタンスを作成することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="31673-257">Although the .NET Framework includes the <xref:System.Xml.XmlTextWriter> class, which is a concrete implementation of the <xref:System.Xml.XmlWriter> class, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="31673-258">書き込み先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="31673-258">The stream to which you want to write.</span></span> <span data-ttu-id="31673-259"><see cref="T:System.Xml.XmlWriter" /> は、XML 1.0 テキスト構文を書き込み、指定されたストリームにそれを付加します。</span><span class="sxs-lookup"><span data-stu-id="31673-259">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <summary><span data-ttu-id="31673-260">指定されたストリームを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-260">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified stream.</span></span></summary>
        <returns><span data-ttu-id="31673-261"><see cref="T:System.Xml.XmlWriter" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-261">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-262">このオーバーロードを使用すると、次の既定の設定を持つ <xref:System.Xml.XmlWriterSettings> オブジェクトを使用して XML ライターが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31673-262">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with the following default settings is used to create the XML writer:</span></span>  
  
|<span data-ttu-id="31673-263">設定</span><span class="sxs-lookup"><span data-stu-id="31673-263">Setting</span></span>|<span data-ttu-id="31673-264">Default</span><span class="sxs-lookup"><span data-stu-id="31673-264">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="31673-265">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="31673-265">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="31673-266"><xref:System.Xml.NamespaceHandling.Default> (削除なし)</span><span class="sxs-lookup"><span data-stu-id="31673-266"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="31673-267">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="31673-267">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="31673-268">作成されたライターでサポートする機能を指定する場合は、<xref:System.Xml.XmlWriterSettings> オブジェクトをその引数の1つとして受け取り、<xref:System.Xml.XmlWriterSettings> オブジェクトをカスタム設定で渡すオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-268">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 <span data-ttu-id="31673-269">また、XmlWriter は常に、基になるデータストリームにバイトオーダーマーク (BOM) を書き込みます。ただし、一部のストリームは BOM を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-269">Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="31673-270">BOM を省略するには、新しい <xref:System.Xml.XmlWriterSettings> オブジェクトを作成し、Encoding プロパティを新しい <xref:System.Text.UTF8Encoding> オブジェクトに設定し、コンストラクターのブール値を false に設定します。</span><span class="sxs-lookup"><span data-stu-id="31673-270">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-271">次の例では、XML フラグメントをメモリストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-271">The following example writes an XML fragment to a memory stream.</span></span> <span data-ttu-id="31673-272">(<xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> オーバーロードを使用します。これにより、新しい XML ライターインスタンスでも設定が構成されます)。</span><span class="sxs-lookup"><span data-stu-id="31673-272">(It uses the <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> overload, which also configures the settings on the new XML writer instance.)</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-273"><paramref name="stream" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-273">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="31673-274">書き込み先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="31673-274">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="31673-275"><see cref="T:System.Xml.XmlWriter" /> は、XML 1.0 テキスト構文を書き込み、指定された <see cref="T:System.IO.TextWriter" /> にそれを付加します。</span><span class="sxs-lookup"><span data-stu-id="31673-275">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <summary><span data-ttu-id="31673-276">指定された <see cref="T:System.IO.TextWriter" /> を使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-276">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <returns><span data-ttu-id="31673-277"><see cref="T:System.Xml.XmlWriter" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-277">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-278">このオーバーロードを使用すると、既定の設定を持つ <xref:System.Xml.XmlWriterSettings> オブジェクトが XML ライターの作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-278">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="31673-279">設定</span><span class="sxs-lookup"><span data-stu-id="31673-279">Setting</span></span>|<span data-ttu-id="31673-280">Default</span><span class="sxs-lookup"><span data-stu-id="31673-280">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="31673-281">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="31673-281">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="31673-282"><xref:System.Xml.NamespaceHandling.Default> (削除なし)</span><span class="sxs-lookup"><span data-stu-id="31673-282"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="31673-283">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="31673-283">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="31673-284">作成されたライターでサポートする機能を指定する場合は、<xref:System.Xml.XmlWriterSettings> オブジェクトをその引数の1つとして受け取り、<xref:System.Xml.XmlWriterSettings> オブジェクトをカスタム設定で渡すオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-284">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-285">次の例では、コンソールに出力するライターを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-285">The following example creates a writer that outputs to the console.</span></span>  
  
 [!code-csharp[XmlWriter_v2#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#3)]
 [!code-vb[XmlWriter_v2#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-286"><paramref name="text" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-286">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="31673-287">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="31673-287">The file to which you want to write.</span></span> <span data-ttu-id="31673-288"><see cref="T:System.Xml.XmlWriter" /> は、指定されたパスにファイルを作成し、XML 1.0 テキスト構文でファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-288">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="31673-289"><paramref name="outputFileName" /> はファイル システム パスにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-289">The <paramref name="outputFileName" /> must be a file system path.</span></span></param>
        <summary><span data-ttu-id="31673-290">指定されたファイル名を使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-290">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified filename.</span></span></summary>
        <returns><span data-ttu-id="31673-291"><see cref="T:System.Xml.XmlWriter" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-291">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-292">このオーバーロードを使用すると、既定の設定を持つ <xref:System.Xml.XmlWriterSettings> オブジェクトが XML ライターの作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-292">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="31673-293">設定</span><span class="sxs-lookup"><span data-stu-id="31673-293">Setting</span></span>|<span data-ttu-id="31673-294">Default</span><span class="sxs-lookup"><span data-stu-id="31673-294">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="31673-295">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="31673-295">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="31673-296"><xref:System.Xml.NamespaceHandling.Default> (削除なし)</span><span class="sxs-lookup"><span data-stu-id="31673-296"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="31673-297">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="31673-297">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="31673-298">作成された XML ライターでサポートする機能を指定する場合は、<xref:System.Xml.XmlWriterSettings> オブジェクトを引数の1つとして受け取り、<xref:System.Xml.XmlWriterSettings> オブジェクトをカスタム設定で渡すオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-298">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-299">次の例では、<xref:System.Xml.XmlWriter> オブジェクトを作成し、book ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-299">The following example creates an <xref:System.Xml.XmlWriter> object and writes a book node.</span></span>  
  
 [!code-csharp[XmlWriter_v2#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#2)]
 [!code-vb[XmlWriter_v2#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-300"><paramref name="url" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-300">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="31673-301">書き込み先の <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="31673-301">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="31673-302"><see cref="T:System.Xml.XmlWriter" /> で書き込まれたコンテンツが、<see cref="T:System.Text.StringBuilder" /> に付加されます。</span><span class="sxs-lookup"><span data-stu-id="31673-302">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="31673-303">指定された <see cref="T:System.Text.StringBuilder" /> を使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-303">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="31673-304"><see cref="T:System.Xml.XmlWriter" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-304">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-305">このオーバーロードを使用すると、既定の設定を持つ <xref:System.Xml.XmlWriterSettings> オブジェクトが XML ライターの作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-305">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="31673-306">設定</span><span class="sxs-lookup"><span data-stu-id="31673-306">Setting</span></span>|<span data-ttu-id="31673-307">Default</span><span class="sxs-lookup"><span data-stu-id="31673-307">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="31673-308">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="31673-308">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="31673-309"><xref:System.Xml.NamespaceHandling.Default> (削除なし)</span><span class="sxs-lookup"><span data-stu-id="31673-309"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="31673-310">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="31673-310">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="31673-311">作成された XML ライターでサポートする機能を指定する場合は、<xref:System.Xml.XmlWriterSettings> オブジェクトを引数の1つとして受け取り、<xref:System.Xml.XmlWriterSettings> オブジェクトをカスタム設定で渡すオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-311">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-312"><paramref name="builder" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-312">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="31673-313">基になるライターとして使用する <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-313">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <summary><span data-ttu-id="31673-314">指定された <see cref="T:System.Xml.XmlWriter" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-314">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></summary>
        <returns><span data-ttu-id="31673-315">指定された <see cref="T:System.Xml.XmlWriter" /> オブジェクトをラップする <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-315">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-316">このメソッドを使用すると、基になる <xref:System.Xml.XmlWriter> オブジェクトに機能を追加できます。</span><span class="sxs-lookup"><span data-stu-id="31673-316">This method allows you add features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="31673-317">基になる <xref:System.Xml.XmlWriter> オブジェクトは、<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> メソッドによって作成されたオブジェクト、または <xref:System.Xml.XmlTextWriter> 実装を使用して作成されたオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-317">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 <span data-ttu-id="31673-318">このオーバーロードを使用すると、既定の設定を持つ <xref:System.Xml.XmlWriterSettings> オブジェクトが XML ライターの作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-318">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="31673-319">設定</span><span class="sxs-lookup"><span data-stu-id="31673-319">Setting</span></span>|<span data-ttu-id="31673-320">Default</span><span class="sxs-lookup"><span data-stu-id="31673-320">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="31673-321">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="31673-321">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="31673-322"><xref:System.Xml.NamespaceHandling.Default> (削除なし)</span><span class="sxs-lookup"><span data-stu-id="31673-322"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="31673-323">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="31673-323">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="31673-324">作成された XML ライターでサポートする機能を指定する場合は、<xref:System.Xml.XmlWriterSettings> オブジェクトを引数の1つとして受け取り、<xref:System.Xml.XmlWriterSettings> オブジェクトをカスタム設定で渡すオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-324">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-325"><paramref name="writer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-325">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="31673-326">書き込み先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="31673-326">The stream to which you want to write.</span></span> <span data-ttu-id="31673-327"><see cref="T:System.Xml.XmlWriter" /> は、XML 1.0 テキスト構文を書き込み、指定されたストリームにそれを付加します。</span><span class="sxs-lookup"><span data-stu-id="31673-327">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <param name="settings"><span data-ttu-id="31673-328">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-328">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="31673-329">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-329">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="31673-330"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-330">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="31673-331">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-331">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="31673-332">ストリームと <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-332">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the stream and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="31673-333"><see cref="T:System.Xml.XmlWriter" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-333">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-334">XmlWriter は、常に、基になるデータストリームにバイトオーダーマーク (BOM) を書き込みます。ただし、一部のストリームは BOM を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-334">XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="31673-335">BOM を省略するには、新しい <xref:System.Xml.XmlWriterSettings> オブジェクトを作成し、Encoding プロパティを新しい <xref:System.Text.UTF8Encoding> オブジェクトに設定し、コンストラクターのブール値を false に設定します。</span><span class="sxs-lookup"><span data-stu-id="31673-335">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-336">次の例では、XML フラグメントをメモリストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-336">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-337"><paramref name="stream" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-337">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="31673-338">書き込み先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="31673-338">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="31673-339"><see cref="T:System.Xml.XmlWriter" /> は、XML 1.0 テキスト構文を書き込み、指定された <see cref="T:System.IO.TextWriter" /> にそれを付加します。</span><span class="sxs-lookup"><span data-stu-id="31673-339">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <param name="settings"><span data-ttu-id="31673-340">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-340">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="31673-341">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-341">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="31673-342"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-342">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="31673-343">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-343">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="31673-344"><see cref="T:System.IO.TextWriter" /> オブジェクトと <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-344">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="31673-345"><see cref="T:System.Xml.XmlWriter" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-345">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="31673-346">次の例では、XML 文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-346">The following example writes out an XML string.</span></span>  
  
 [!code-csharp[XmlWriter_v2#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#4)]
 [!code-vb[XmlWriter_v2#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-347"><paramref name="text" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-347">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (outputFileName, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="31673-348">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="31673-348">The file to which you want to write.</span></span> <span data-ttu-id="31673-349"><see cref="T:System.Xml.XmlWriter" /> は、指定されたパスにファイルを作成し、XML 1.0 テキスト構文でファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-349">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="31673-350"><paramref name="outputFileName" /> はファイル システム パスにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-350">The <paramref name="outputFileName" /> must be a file system path.</span></span></param>
        <param name="settings"><span data-ttu-id="31673-351">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-351">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="31673-352">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-352">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="31673-353"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-353">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="31673-354">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-354">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="31673-355">ファイル名と <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-355">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the filename and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="31673-356"><see cref="T:System.Xml.XmlWriter" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-356">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="31673-357">次の例では、定義された設定を使用して <xref:System.Xml.XmlWriter> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-357">The following example creates an <xref:System.Xml.XmlWriter> object with the defined settings.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-358"><paramref name="url" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-358">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="31673-359">書き込み先の <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="31673-359">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="31673-360"><see cref="T:System.Xml.XmlWriter" /> で書き込まれたコンテンツが、<see cref="T:System.Text.StringBuilder" /> に付加されます。</span><span class="sxs-lookup"><span data-stu-id="31673-360">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <param name="settings"><span data-ttu-id="31673-361">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-361">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="31673-362">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-362">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="31673-363"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-363">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="31673-364">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-364">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="31673-365"><see cref="T:System.Text.StringBuilder" /> オブジェクトと <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-365">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.Text.StringBuilder" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="31673-366"><see cref="T:System.Xml.XmlWriter" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-366">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-367"><paramref name="builder" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-367">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="31673-368">基になるライターとして使用する <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-368">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <param name="settings"><span data-ttu-id="31673-369">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-369">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="31673-370">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-370">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="31673-371"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-371">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="31673-372">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-372">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="31673-373">指定された <see cref="T:System.Xml.XmlWriter" /> オブジェクトと <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-373">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="31673-374">指定された <see cref="T:System.Xml.XmlWriter" /> オブジェクトをラップする <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-374">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-375">このメソッドを使用すると、基になる <xref:System.Xml.XmlWriter> オブジェクトに機能を追加できます。</span><span class="sxs-lookup"><span data-stu-id="31673-375">This method allows you add additional features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="31673-376">基になる <xref:System.Xml.XmlWriter> オブジェクトは、<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> メソッドによって作成されたオブジェクト、または <xref:System.Xml.XmlTextWriter> 実装を使用して作成されたオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="31673-376">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-377"><paramref name="writer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-377">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-378">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-378">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-379">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-379">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-380"><see cref="T:System.Xml.XmlWriter" /> クラスで使用されたリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="31673-380">Releases the resources used by the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-381"><see cref="T:System.Xml.XmlWriter" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="31673-381">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-382">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-382">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-383">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-383">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="31673-384">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31673-384"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="31673-385"><see cref="T:System.Xml.XmlWriter" /> で使用されたアンマネージド リソースを解放し、必要に応じてマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="31673-385">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-386">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-386">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-387">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-387">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="xmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-388">派生クラスでオーバーライドされると、バッファー内のデータをすべて基になるストリームにフラッシュし、基になるストリームもフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="31673-388">When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-389">これは、バッファー内の残りの部分を失うことなく、基になるストリームにさらに書き込む必要がある場合に、<xref:System.Xml.XmlWriter.Close%2A> の代わりに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="31673-389">This is called instead of <xref:System.Xml.XmlWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
 <span data-ttu-id="31673-390">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.FlushAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-390">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.FlushAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-391">次の例では、2つの XML フラグメントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-391">The following example writes two XML fragments.</span></span>  
  
 [!code-cpp[XmlWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Flush/CPP/write2docs_v2.cpp#1)]
 [!code-csharp[XmlWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Flush/CS/write2docs_v2.cs#1)]
 [!code-vb[XmlWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Flush/VB/write2docs_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-392">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-392">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-393">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-393">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-394">バッファー内のデータをすべて基になるストリームに非同期にフラッシュし、基になるストリームもフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="31673-394">Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <returns><span data-ttu-id="31673-395">非同期の <see langword="Flush" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-395">The task that represents the asynchronous <see langword="Flush" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-396">これは <xref:System.Xml.XmlWriter.Flush%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-396">This is the asynchronous version of <xref:System.Xml.XmlWriter.Flush%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-397">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-397">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-398">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-398">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-399">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-399">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-400">または</span><span class="sxs-lookup"><span data-stu-id="31673-400">-or-</span></span>

<span data-ttu-id="31673-401"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-401">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-402">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-402">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-403">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-403">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public abstract string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string" Usage="xmlWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="31673-404">検索対象のプリフィックスを持つ名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-404">The namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="31673-405">派生クラスでオーバーライドされると、名前空間 URI の現在の名前空間スコープで定義された最も近いプリフィックスを返します。</span><span class="sxs-lookup"><span data-stu-id="31673-405">When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="31673-406">一致するプリフィックス。現在のスコープに一致する名前空間 URI が見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31673-406">The matching prefix or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="31673-407">次の例では、書籍を書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-407">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-408"><paramref name="ns" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-408"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-409">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-409">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-410">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-410">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlWriterSettings ^ Settings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlWriterSettings" Usage="System.Xml.XmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31673-411">この <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成するために使用された <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="31673-411">Gets the <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <value><span data-ttu-id="31673-412">このライターのインスタンスを作成するために使用した <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31673-412">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this writer instance.</span></span> <span data-ttu-id="31673-413">このライターが <see cref="Overload:System.Xml.XmlWriter.Create" /> メソッドを使用して作成されなかった場合、このプロパティは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="31673-413">If this writer was not created using the <see cref="Overload:System.Xml.XmlWriter.Create" /> method, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-414"><xref:System.Xml.XmlWriterSettings> クラスは、作成されたライターインスタンスでサポートする一連の機能を指定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-414">The <xref:System.Xml.XmlWriterSettings> class is used to specify the set of features to support on the created writer instance.</span></span> <span data-ttu-id="31673-415"><xref:System.Xml.XmlWriter.Settings%2A> プロパティによって返された <xref:System.Xml.XmlWriterSettings> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="31673-415">The <xref:System.Xml.XmlWriterSettings> object returned by the <xref:System.Xml.XmlWriter.Settings%2A> property cannot be modified.</span></span> <span data-ttu-id="31673-416">個々の設定を変更しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-416">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-417">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-417">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-418">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-418">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="xmlWriter.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-419">このメンバーの説明については、<see cref="M:System.IDisposable.Dispose" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-419">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="31673-420">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31673-420">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31673-421">これは、<xref:System.Xml.XmlWriter> のインスタンスが <xref:System.IDisposable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31673-421">It can be used only when the <xref:System.Xml.XmlWriter> instance is cast to an <xref:System.IDisposable> interface.</span></span>

<span data-ttu-id="31673-422">ポータブルクラスライブラリプロジェクトで使用されている場合、このメンバーの動作が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="31673-422">This member may behave differently when it is used in a Portable Class Library project.</span></span> <span data-ttu-id="31673-423">詳細については、「[ポータブルクラスライブラリの API の相違点](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-423">For more information, see [API Differences in Portable Class Library](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributes">
      <MemberSignature Language="C#" Value="public virtual void WriteAttributes (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttributes(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttributes (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttributes(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributes : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteAttributes : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteAttributes (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="31673-424">属性のコピー元の <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="31673-424">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr"><span data-ttu-id="31673-425"><see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31673-425"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31673-426">派生クラスでオーバーライドされると、<see cref="T:System.Xml.XmlReader" /> の現在の位置で見つかったすべての属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-426">When overridden in a derived class, writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-427">リーダーが `element` ノードに配置されている場合は `WriteAttributes` 含まれるすべての属性がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="31673-427">If the reader is positioned on an `element` node `WriteAttributes` copies all the contained attributes.</span></span> <span data-ttu-id="31673-428">リーダーが `attribute` ノードに配置されている場合、このメソッドは現在の属性を書き込み、要素の終了タグまで残りの属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-428">If the reader is positioned on an `attribute` node, this method writes the current attribute, then the rest of the attributes until the element closing tag.</span></span> <span data-ttu-id="31673-429">リーダーが `XmlDeclaration` ノードに配置されている場合、このメソッドは宣言内のすべての属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-429">If the reader is positioned on an `XmlDeclaration` node, this method writes all the attributes in the declaration.</span></span> <span data-ttu-id="31673-430">リーダーが他のノード型に配置されている場合、このメソッドは <xref:System.Xml.XmlException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="31673-430">If the reader is positioned on any other node type this method throws an <xref:System.Xml.XmlException>.</span></span>  
  
 <span data-ttu-id="31673-431"><xref:System.Xml.XmlValidatingReader>を使用してこのメソッドが呼び出された場合は、適切な形式の XML (エンティティから展開された) コンテンツを確実に作成すると、無効なドキュメントが置換される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-431">If this method is called using <xref:System.Xml.XmlValidatingReader>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written.</span></span> <span data-ttu-id="31673-432">たとえば、拡張された `&gt;` エンティティが属性に含まれている場合、適切な形式のドキュメントを確保するために、展開された > は `&gt;`で書き出されるときに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-432">For example, if an attribute includes an `&gt;` entity that has been expanded, to ensure a well-formed document the expanded > is replaced when written out with `&gt;`.</span></span>  
  
 <span data-ttu-id="31673-433">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-433">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-434">次の例では、すべての要素を出力にコピーし、タグ名を大文字に変更して、すべての属性を変更せずにコピーします。</span><span class="sxs-lookup"><span data-stu-id="31673-434">The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributes#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributes/CPP/writeattrs_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributes/CS/writeattrs_v2.cs#1)]
 [!code-vb[XmlWriter.WriteAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributes/VB/writeattrs_v2.vb#1)]  
  
 <span data-ttu-id="31673-435">この例では、ファイル `test1.xml`を入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-435">The example uses the file, `test1.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteAttributes#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteAttributes/XML/test1.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-436"><paramref name="reader" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-436"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="31673-437">リーダーが <see langword="element" /> ノード、<see langword="attribute" /> ノード、または <see langword="XmlDeclaration" /> ノードに配置されていません。</span><span class="sxs-lookup"><span data-stu-id="31673-437">The reader is not positioned on an <see langword="element" />, <see langword="attribute" /> or <see langword="XmlDeclaration" /> node.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-438">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-438">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-439">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-439">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAttributesAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAttributesAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAttributesAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAttributesAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributesAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="31673-440">属性のコピー元の <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="31673-440">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr"><span data-ttu-id="31673-441"><see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31673-441"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31673-442"><see cref="T:System.Xml.XmlReader" /> の現在の位置で見つかったすべての属性を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-442">Asynchronously writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="31673-443">非同期の <see langword="WriteAttributes" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-443">The task that represents the asynchronous <see langword="WriteAttributes" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-444">これは <xref:System.Xml.XmlWriter.WriteAttributes%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-444">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributes%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-445">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-445">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-446">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-446">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-447">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-447">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-448">または</span><span class="sxs-lookup"><span data-stu-id="31673-448">-or-</span></span>

<span data-ttu-id="31673-449"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-449">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-450">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-450">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-451">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-451">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttributeString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-452">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-452">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-453">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-453">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-454">派生クラスでオーバーライドされると、指定した値の属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-454">When overridden in a derived class, writes an attribute with the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-455">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-455">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-456">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-456">The local name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="31673-457">属性の値。</span><span class="sxs-lookup"><span data-stu-id="31673-457">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="31673-458">派生クラスでオーバーライドされると、指定したローカル名と値の属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-458">When overridden in a derived class, writes out the attribute with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-459">`WriteAttributeString` を実行すると、次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="31673-459">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="31673-460">属性値に二重引用符または単一引用符が含まれている場合は、それぞれ `&quot;` と `&apos;` に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-460">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="31673-461">`xml:space` 属性を書き込む場合、ライターは属性値が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="31673-461">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="31673-462">(有効な値は `preserve` または `default`です)。</span><span class="sxs-lookup"><span data-stu-id="31673-462">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="31673-463">`xml:lang` 属性を書き込む場合、ライターは、W3C 勧告『 XML 1.0 』に従って属性値が有効であるかどうかを検証しません。</span><span class="sxs-lookup"><span data-stu-id="31673-463">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="31673-464">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-464">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-465">次の例では、書籍を書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-465">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-466">ライターが <see langword="WriteState.Element" /> の状態にないか、またはライターが閉じています。</span><span class="sxs-lookup"><span data-stu-id="31673-466">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="31673-467">または</span><span class="sxs-lookup"><span data-stu-id="31673-467">-or-</span></span>

<span data-ttu-id="31673-468">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-468">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-469">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-469">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-470"><see langword="xml:space" /> 属性値または <see langword="xml:lang" /> 属性値が無効です。</span><span class="sxs-lookup"><span data-stu-id="31673-470">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-471">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-471">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-472">属性に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-472">The namespace URI to associate with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="31673-473">属性の値。</span><span class="sxs-lookup"><span data-stu-id="31673-473">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="31673-474">派生クラスでオーバーライドされると、指定したローカル名、名前空間 URI、および値の属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-474">When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-475">このメソッドは、ユーザー定義の名前空間プレフィックスを持つ属性を書き込み、指定した名前空間に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="31673-475">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="31673-476">`localName` が "xmlns" の場合、このメソッドもこれを名前空間宣言として扱います。</span><span class="sxs-lookup"><span data-stu-id="31673-476">If `localName` is "xmlns" then this method also treats this as a namespace declaration.</span></span> <span data-ttu-id="31673-477">この場合、`ns` 引数を `null`できます。</span><span class="sxs-lookup"><span data-stu-id="31673-477">In this case, the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="31673-478">`WriteAttributeString` を実行すると、次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="31673-478">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="31673-479">属性値に二重引用符または単一引用符が含まれている場合は、それぞれ `&quot;` と `&apos;` に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-479">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="31673-480">`xml:space` 属性を書き込む場合、ライターは属性値が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="31673-480">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="31673-481">(有効な値は `preserve` または `default`です)。</span><span class="sxs-lookup"><span data-stu-id="31673-481">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="31673-482">`xml:lang` 属性を書き込む場合、ライターは、W3C 勧告『 XML 1.0 』に従って属性値が有効であるかどうかを検証しません。</span><span class="sxs-lookup"><span data-stu-id="31673-482">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="31673-483">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-483">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-484">次の例では、<xref:System.Xml.XmlWriter.WriteAttributeString%2A> メソッドを使用して、名前空間宣言を記述します。</span><span class="sxs-lookup"><span data-stu-id="31673-484">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-485">ライターが <see langword="WriteState.Element" /> の状態にないか、またはライターが閉じています。</span><span class="sxs-lookup"><span data-stu-id="31673-485">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="31673-486">または</span><span class="sxs-lookup"><span data-stu-id="31673-486">-or-</span></span> 
<span data-ttu-id="31673-487">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-487">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-488">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-488">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-489"><see langword="xml:space" /> 属性値または <see langword="xml:lang" /> 属性値が無効です。</span><span class="sxs-lookup"><span data-stu-id="31673-489">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="31673-490">属性の名前空間プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="31673-490">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="31673-491">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-491">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-492">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-492">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="31673-493">属性の値。</span><span class="sxs-lookup"><span data-stu-id="31673-493">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="31673-494">派生クラスでオーバーライドされると、指定したプリフィックス、ローカル名、名前空間 URI、および値の属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-494">When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-495">このメソッドは、ユーザー定義の名前空間プレフィックスを持つ属性を書き込み、指定した名前空間に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="31673-495">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="31673-496">プレフィックスが "xmlns" の場合、このメソッドはこれを名前空間宣言として扱い、宣言されたプレフィックスを、指定された属性値に指定された名前空間 URI に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="31673-496">If the prefix is "xmlns" then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value.</span></span> <span data-ttu-id="31673-497">この場合、`ns` 引数を `null`できます。</span><span class="sxs-lookup"><span data-stu-id="31673-497">In this case the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="31673-498">`WriteAttributeString` を実行すると、次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="31673-498">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="31673-499">属性値に二重引用符または単一引用符が含まれている場合は、それぞれ `&quot;` と `&apos;` に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-499">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="31673-500">`xml:space` 属性を書き込む場合、ライターは属性値が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="31673-500">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="31673-501">(有効な値は `preserve` または `default`です)。</span><span class="sxs-lookup"><span data-stu-id="31673-501">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="31673-502">`xml:lang` 属性を書き込む場合、ライターは、W3C 勧告『 XML 1.0 』に従って属性値が有効であるかどうかを検証しません。</span><span class="sxs-lookup"><span data-stu-id="31673-502">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="31673-503">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-503">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-504">次の例では、<xref:System.Xml.XmlWriter.WriteAttributeString%2A> メソッドを使用して、名前空間宣言を記述します。</span><span class="sxs-lookup"><span data-stu-id="31673-504">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-505">ライターが <see langword="WriteState.Element" /> の状態にないか、またはライターが閉じています。</span><span class="sxs-lookup"><span data-stu-id="31673-505">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="31673-506">または</span><span class="sxs-lookup"><span data-stu-id="31673-506">-or-</span></span> 
<span data-ttu-id="31673-507">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-507">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-508">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-508">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-509"><see langword="xml:space" /> 属性値または <see langword="xml:lang" /> 属性値が無効です。</span><span class="sxs-lookup"><span data-stu-id="31673-509">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="31673-510"><paramref name="localName" /> または <paramref name="ns" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-510">The <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAttributeStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAttributeStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAttributeStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAttributeStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributeStringAsync (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="31673-511">属性の名前空間プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="31673-511">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="31673-512">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-512">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-513">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-513">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="31673-514">属性の値。</span><span class="sxs-lookup"><span data-stu-id="31673-514">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="31673-515">指定されたプレフィックス、ローカル名、名前空間 URI、および値を使用して属性を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-515">Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="31673-516">非同期の <see langword="WriteAttributeString" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-516">The task that represents the asynchronous <see langword="WriteAttributeString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-517">これは <xref:System.Xml.XmlWriter.WriteAttributeString%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-517">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-518">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-518">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-519">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-519">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-520">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-520">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-521">または</span><span class="sxs-lookup"><span data-stu-id="31673-521">-or-</span></span> 
<span data-ttu-id="31673-522"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-522">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-523">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-523">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-524">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-524">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public abstract void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="31673-525">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="31673-525">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="31673-526">書き込むバイトの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="31673-526">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="31673-527">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="31673-527">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="31673-528">派生クラスでオーバーライドされると、指定したバイナリ バイトを Base64 としてエンコードし、その結果生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-528">When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-529">たとえば、バイトバッファーには、GIF イメージのバイナリコンテンツが含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="31673-529">For example, the byte buffer may contain the binary contents of a GIF image.</span></span> <span data-ttu-id="31673-530">これは明らかに有効な XML ではありません。</span><span class="sxs-lookup"><span data-stu-id="31673-530">This clearly would not be valid XML.</span></span> <span data-ttu-id="31673-531">`Base64` エンコードは、65の US-ASCII 文字 ([a-za-z0-9 +/=]) で構成されるテキスト形式の任意のバイトシーケンスを表すように設計されています。この場合、各文字はバイナリデータの6ビットをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="31673-531">The `Base64` encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data.</span></span> <span data-ttu-id="31673-532">詳細については、「 [request](https://www.rfc-editor.org)for COMMENTS (RFC) 1521」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-532">For more information, see Requests for Comments (RFC) 1521 located on the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="31673-533">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteBase64Async%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-533">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-534">次の例では、<xref:System.Xml.XmlWriter.WriteBase64%2A> メソッドを使用して `Base64` データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-534">The following example uses the <xref:System.Xml.XmlWriter.WriteBase64%2A> method to write `Base64` data.</span></span> <span data-ttu-id="31673-535">`Base64` データは `<image>` 要素内に埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="31673-535">The `Base64` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#3)]
 [!code-vb[XmlReader_Read_Write_Binary#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-536"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-536"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31673-537"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="31673-537"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31673-538">または</span><span class="sxs-lookup"><span data-stu-id="31673-538">-or-</span></span> 
<span data-ttu-id="31673-539">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="31673-539">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-540">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-540">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-541">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-541">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="31673-542">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="31673-542">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="31673-543">書き込むバイトの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="31673-543">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="31673-544">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="31673-544">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="31673-545">指定したバイナリ バイトを base64 として非同期にエンコードし、その結果生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-545">Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="31673-546">非同期の <see langword="WriteBase64" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-546">The task that represents the asynchronous <see langword="WriteBase64" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-547">これは <xref:System.Xml.XmlWriter.WriteBase64%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-547">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-548">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-548">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-549">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-549">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-550">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-550">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-551">または</span><span class="sxs-lookup"><span data-stu-id="31673-551">-or-</span></span>

<span data-ttu-id="31673-552"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-552">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-553">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-553">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-554">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-554">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public virtual void WriteBinHex (byte[] buffer, int index, int count);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHex : byte[] * int * int -&gt; unit&#xA;override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBinHex (buffer, index, count)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void WriteBinHex (byte[] buffer, int index, int count);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBinHex (buffer, index, count)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="31673-555">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="31673-555">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="31673-556">書き込むバイトの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="31673-556">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="31673-557">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="31673-557">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="31673-558">派生クラスでオーバーライドされると、指定されたバイナリ バイトを <see langword="BinHex" /> としてエンコードし、その結果生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-558">When overridden in a derived class, encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-559">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-559">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-560">次の例では、<xref:System.Xml.XmlWriter.WriteBinHex%2A> メソッドを使用して `BinHex` データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-560">The following example uses the <xref:System.Xml.XmlWriter.WriteBinHex%2A> method to write `BinHex` data.</span></span> <span data-ttu-id="31673-561">`BinHex` データは `<image>` 要素内に埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="31673-561">The `BinHex` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#1)]
 [!code-vb[XmlReader_Read_Write_Binary#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-562"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-562"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-563">ライターが閉じているかエラー状態です。</span><span class="sxs-lookup"><span data-stu-id="31673-563">The writer is closed or in error state.</span></span>
<span data-ttu-id="31673-564">または</span><span class="sxs-lookup"><span data-stu-id="31673-564">-or-</span></span>

<span data-ttu-id="31673-565">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-565">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-566">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-566">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31673-567"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="31673-567"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31673-568">または</span><span class="sxs-lookup"><span data-stu-id="31673-568">-or-</span></span> 
<span data-ttu-id="31673-569">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="31673-569">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="31673-570">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="31673-570">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="31673-571">書き込むバイトの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="31673-571">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="31673-572">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="31673-572">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="31673-573">指定したバイナリ バイトを <see langword="BinHex" /> として非同期にエンコードし、その結果生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-573">Asynchronously encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="31673-574">非同期の <see langword="WriteBinHex" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-574">The task that represents the asynchronous <see langword="WriteBinHex" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-575">これは <xref:System.Xml.XmlWriter.WriteBinHex%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-575">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-576">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-576">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-577">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-577">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-578">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-578">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-579">または</span><span class="sxs-lookup"><span data-stu-id="31673-579">-or-</span></span>

<span data-ttu-id="31673-580"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-580">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-581">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-581">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-582">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-582">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public abstract void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCData : string -&gt; unit" Usage="xmlWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="31673-583">CDATA ブロック内に配置するテキスト。</span><span class="sxs-lookup"><span data-stu-id="31673-583">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="31673-584">派生クラスでオーバーライドされると、指定したテキストを含む &lt;![CDATA[...]]&gt; ブロックを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-584">When overridden in a derived class, writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-585">`text` が `null` または `String.Empty`の場合、このメソッドは空の CDATA ブロックを書き込みます。たとえば \<![CDATA []</span><span class="sxs-lookup"><span data-stu-id="31673-585">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-586">テキストは、非整形式の XML ドキュメントになります。</span><span class="sxs-lookup"><span data-stu-id="31673-586">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-587">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-587">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-588">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-588">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCDataAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCDataAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCDataAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCDataAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCDataAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCDataAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCDataAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="31673-589">CDATA ブロック内に配置するテキスト。</span><span class="sxs-lookup"><span data-stu-id="31673-589">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="31673-590">指定したテキストを格納する &lt;![CDATA[...]]&gt; ブロックを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-590">Asynchronously writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="31673-591">非同期の <see langword="WriteCData" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-591">The task that represents the asynchronous <see langword="WriteCData" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-592">これは <xref:System.Xml.XmlWriter.WriteCData%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-592">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCData%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-593">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-593">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-594">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-594">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-595">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-595">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-596">または</span><span class="sxs-lookup"><span data-stu-id="31673-596">-or-</span></span>

<span data-ttu-id="31673-597"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-597">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-598">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-598">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-599">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-599">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntity : char -&gt; unit" Usage="xmlWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="31673-600">文字エンティティを生成する Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="31673-600">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="31673-601">派生クラスでオーバーライドされると、指定した Unicode 文字値の文字エンティティを強制的に生成します。</span><span class="sxs-lookup"><span data-stu-id="31673-601">When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-602">このメソッドは、16進文字エンティティ参照形式で Unicode 文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-602">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
 <span data-ttu-id="31673-603">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-603">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-604">このメソッドの使用例については、「<xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-604">See <xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-605">文字がサロゲート ペアの文字範囲、つまり <see langword="0xd800" /> - <see langword="0xdfff" /> 内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-605">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-606">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-606">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-607">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-607">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharEntityAsync (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharEntityAsync(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharEntityAsync (ch As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharEntityAsync(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharEntityAsync ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="31673-608">文字エンティティを生成する Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="31673-608">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="31673-609">指定した Unicode 文字値の文字エンティティを非同期に強制的に生成します。</span><span class="sxs-lookup"><span data-stu-id="31673-609">Asynchronously forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <returns><span data-ttu-id="31673-610">非同期の <see langword="WriteCharEntity" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-610">The task that represents the asynchronous <see langword="WriteCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-611">これは <xref:System.Xml.XmlWriter.WriteCharEntity%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-611">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-612">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-612">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-613">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-613">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-614">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-614">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-615">または</span><span class="sxs-lookup"><span data-stu-id="31673-615">-or-</span></span>

<span data-ttu-id="31673-616"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-616">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-617">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-617">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-618">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-618">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public abstract void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteChars : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="31673-619">書き込むテキストを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="31673-619">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="31673-620">書き込むテキストの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="31673-620">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="31673-621">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="31673-621">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="31673-622">派生クラスでオーバーライドされると、一度に 1 つのバッファーにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-622">When overridden in a derived class, writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-623">このメソッドを使用して、一度に1つのバッファーに大量のテキストを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-623">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="31673-624">`WriteChars` メソッドで複数のバッファー書き込みでサロゲートペア文字が分割されないようにするには、特別な処理を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-624">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="31673-625">XML 仕様では、サロゲートペアの有効な範囲が定義されています。</span><span class="sxs-lookup"><span data-stu-id="31673-625">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="31673-626">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteCharsAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-626">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharsAsync%2A>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-627"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-627"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31673-628"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="31673-628"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31673-629">または</span><span class="sxs-lookup"><span data-stu-id="31673-629">-or-</span></span> 
<span data-ttu-id="31673-630">バッファー長から <paramref name="index" /> を差し引いた値が <paramref name="count" /> 未満です。この呼び出しにより、サロゲート ペア文字が分割されるか、無効なサロゲート ペアが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="31673-630">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-631"><paramref name="buffer" /> パラメーター値が無効です。</span><span class="sxs-lookup"><span data-stu-id="31673-631">The <paramref name="buffer" /> parameter value is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-632">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-632">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-633">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-633">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharsAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharsAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharsAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharsAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharsAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="31673-634">書き込むテキストを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="31673-634">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="31673-635">書き込むテキストの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="31673-635">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="31673-636">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="31673-636">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="31673-637">一度に 1 つのバッファーにテキストを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-637">Asynchronously writes text one buffer at a time.</span></span></summary>
        <returns><span data-ttu-id="31673-638">非同期の <see langword="WriteChars" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-638">The task that represents the asynchronous <see langword="WriteChars" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-639">これは <xref:System.Xml.XmlWriter.WriteChars%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-639">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteChars%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-640">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-640">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-641">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-641">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-642">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-642">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-643">または</span><span class="sxs-lookup"><span data-stu-id="31673-643">-or-</span></span>

<span data-ttu-id="31673-644"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-644">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-645">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-645">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-646">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-646">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public abstract void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteComment : string -&gt; unit" Usage="xmlWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="31673-647">コメント内に配置するテキスト。</span><span class="sxs-lookup"><span data-stu-id="31673-647">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="31673-648">派生クラスでオーバーライドされると、指定したテキストを格納している &lt;!--...--&gt; コメントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-648">When overridden in a derived class, writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-649">`text` が `null` または `String.Empty`の場合、このメソッドは \<!----> などのデータコンテンツのないコメントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-649">If `text` is either `null` or `String.Empty`, this method writes a comment with no data content, for example \<!---->.</span></span>  
  
 <span data-ttu-id="31673-650">`text` に2つのダッシュ (--) の無効なシーケンスが含まれている場合、<xref:System.Xml.XmlWriter> は <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> オブジェクト) をスローするか、ダッシュ "--" の間にスペースを挿入して、テキストが有効な XML コメント (<xref:System.Xml.XmlWriter> メソッドによって作成されたオブジェクト) であることを示します。<xref:System.Xml.XmlWriter.Create%2A></span><span class="sxs-lookup"><span data-stu-id="31673-650">If `text` contains an invalid sequence of two dashes "--" the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space between the dashes "- -" so that the text is a valid XML comment (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="31673-651">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteCommentAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-651">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCommentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-652">次の例では、書籍を表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-652">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-653">テキストは、非整形式の XML ドキュメントになります。</span><span class="sxs-lookup"><span data-stu-id="31673-653">The text would result in a non-well-formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-654">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-654">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-655">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-655">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCommentAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCommentAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCommentAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCommentAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCommentAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCommentAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCommentAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="31673-656">コメント内に配置するテキスト。</span><span class="sxs-lookup"><span data-stu-id="31673-656">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="31673-657">指定したテキストを含むコメント &lt;!--...--&gt; を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-657">Asynchronously writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="31673-658">非同期の <see langword="WriteComment" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-658">The task that represents the asynchronous <see langword="WriteComment" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-659">これは <xref:System.Xml.XmlWriter.WriteComment%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-659">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteComment%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-660">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-660">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-661">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-661">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-662">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-662">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-663">または</span><span class="sxs-lookup"><span data-stu-id="31673-663">-or-</span></span>

<span data-ttu-id="31673-664"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-664">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-665">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-665">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-666">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-666">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public abstract void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocType : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-667">DOCTYPE の名前。</span><span class="sxs-lookup"><span data-stu-id="31673-667">The name of the DOCTYPE.</span></span> <span data-ttu-id="31673-668">これを空にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-668">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="31673-669">null でない場合は、PUBLIC "pubid" "sysid" も書き込みます。<paramref name="pubid" /> と <paramref name="sysid" /> は、指定した引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-669">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="31673-670"><paramref name="pubid" /> が <see langword="null" /> で <paramref name="sysid" /> が null でない場合は、SYSTEM "sysid" を書き込みます。<paramref name="sysid" /> は、この引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-670">If <paramref name="pubid" /> is <see langword="null" /> and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="31673-671">null でない場合は、[subset] を書き込みます。subset は、この引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-671">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="31673-672">派生クラスでオーバーライドされると、指定した名前とオプションの属性を含む DOCTYPE 宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-672">When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-673">このメソッドでは、`pubid`、`sysid` または `subset`に無効な文字があるかどうかは確認されません。</span><span class="sxs-lookup"><span data-stu-id="31673-673">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="31673-674">また、内部サブセットが整形式であるかどうかも確認しません。</span><span class="sxs-lookup"><span data-stu-id="31673-674">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31673-675"><xref:System.Xml.XmlWriter> は、<xref:System.Xml.XmlWriter.WriteDocType%2A> メソッドに渡されるデータを検証しません。</span><span class="sxs-lookup"><span data-stu-id="31673-675">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="31673-676">このメソッドには、任意のデータを渡すことはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-676">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="31673-677">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-677">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-678">次の例では、書籍を表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-678">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-679">このメソッドが、プロローグの外 (ルート要素の後) で呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-679">This method was called outside the prolog (after the root element).</span></span>

<span data-ttu-id="31673-680">または</span><span class="sxs-lookup"><span data-stu-id="31673-680">-or-</span></span>

<span data-ttu-id="31673-681">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-681">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-682">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-682">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-683"><paramref name="name" /> の値が、無効な XML になることがあります。</span><span class="sxs-lookup"><span data-stu-id="31673-683">The value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteDocTypeAsync (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteDocTypeAsync(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteDocTypeAsync (name As String, pubid As String, sysid As String, subset As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteDocTypeAsync(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteDocTypeAsync (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pubid" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sysid" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subset" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-684">DOCTYPE の名前。</span><span class="sxs-lookup"><span data-stu-id="31673-684">The name of the DOCTYPE.</span></span> <span data-ttu-id="31673-685">これを空にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-685">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="31673-686">null でない場合は、PUBLIC "pubid" "sysid" も書き込みます。<paramref name="pubid" /> と <paramref name="sysid" /> は、指定した引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-686">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="31673-687"><paramref name="pubid" /> が <see langword="null" /> で <paramref name="sysid" /> が null でない場合は、SYSTEM "sysid" を書き込みます。<paramref name="sysid" /> は、この引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-687">If <paramref name="pubid" /> is <see langword="null" /> and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="31673-688">null でない場合は、[subset] を書き込みます。subset は、この引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-688">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="31673-689">指定された名前とオプション属性を使用して DOC 宣言を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-689">Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <returns><span data-ttu-id="31673-690">非同期の <see langword="WriteDocType" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-690">The task that represents the asynchronous <see langword="WriteDocType" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-691">これは <xref:System.Xml.XmlWriter.WriteDocType%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-691">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteDocType%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-692">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-692">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-693">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-693">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-694">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-694">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-695">または</span><span class="sxs-lookup"><span data-stu-id="31673-695">-or-</span></span>

<span data-ttu-id="31673-696"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-696">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-697">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-697">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-698">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-698">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-699">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-699">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-700">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-700">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-701">文字列値を含む要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-701">Writes an element containing a string value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-702">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-702">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-703">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-703">The local name of the element.</span></span></param>
        <param name="value"><span data-ttu-id="31673-704">要素の値です。</span><span class="sxs-lookup"><span data-stu-id="31673-704">The value of the element.</span></span></param>
        <summary><span data-ttu-id="31673-705">指定されたローカル名および値を使用して要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-705">Writes an element with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-706">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-706">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-707">次の例では、いくつかの書き込みメソッドを使用して XML フラグメントを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-707">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-708"><paramref name="localName" /> 値が <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="31673-708">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="31673-709">または</span><span class="sxs-lookup"><span data-stu-id="31673-709">-or-</span></span> 
<span data-ttu-id="31673-710">パラメーターの値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="31673-710">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-711">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-711">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-712">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-712">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-713">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-713">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-714">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-714">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-715">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-715">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-716">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-716">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-717">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-717">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-718">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-718">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-719">要素に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-719">The namespace URI to associate with the element.</span></span></param>
        <param name="value"><span data-ttu-id="31673-720">要素の値です。</span><span class="sxs-lookup"><span data-stu-id="31673-720">The value of the element.</span></span></param>
        <summary><span data-ttu-id="31673-721">指定されたローカル名、名前空間 URI、および値を使用して要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-721">Writes an element with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-722">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-722">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-723">次の例では、いくつかの書き込みメソッドを使用して XML フラグメントを作成します。</span><span class="sxs-lookup"><span data-stu-id="31673-723">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-724"><paramref name="localName" /> 値が <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="31673-724">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="31673-725">または</span><span class="sxs-lookup"><span data-stu-id="31673-725">-or-</span></span> 
<span data-ttu-id="31673-726">パラメーターの値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="31673-726">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-727">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-727">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-728">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-728">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-729">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-729">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-730">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-730">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-731">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-731">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-732">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-732">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-733">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-733">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="31673-734">要素のプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="31673-734">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="31673-735">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-735">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-736">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-736">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="31673-737">要素の値です。</span><span class="sxs-lookup"><span data-stu-id="31673-737">The value of the element.</span></span></param>
        <summary><span data-ttu-id="31673-738">指定されたプレフィックス、ローカル名、名前空間 URI、および値を使用して要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-738">Writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-739">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-739">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-740"><paramref name="localName" /> 値が <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="31673-740">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="31673-741">または</span><span class="sxs-lookup"><span data-stu-id="31673-741">-or-</span></span> 
<span data-ttu-id="31673-742">パラメーターの値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="31673-742">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-743">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-743">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-744">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-744">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-745">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-745">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-746">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-746">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-747">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-747">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-748">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-748">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-749">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-749">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteElementStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteElementStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteElementStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteElementStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteElementStringAsync (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="31673-750">要素のプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="31673-750">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="31673-751">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-751">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-752">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-752">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="31673-753">要素の値です。</span><span class="sxs-lookup"><span data-stu-id="31673-753">The value of the element.</span></span></param>
        <summary><span data-ttu-id="31673-754">指定されたプレフィックス、ローカル名、名前空間 URI、および値を使用して要素を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-754">Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="31673-755">非同期の <see langword="WriteElementString" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-755">The task that represents the asynchronous <see langword="WriteElementString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-756">これは <xref:System.Xml.XmlWriter.WriteElementString%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-756">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteElementString%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-757">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-757">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-758">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-758">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-759">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-759">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-760">または</span><span class="sxs-lookup"><span data-stu-id="31673-760">-or-</span></span>

<span data-ttu-id="31673-761"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-761">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-762">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-762">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-763">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-763">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttribute : unit -&gt; unit" Usage="xmlWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-764">派生クラスでオーバーライドされると、前の <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 呼び出しを閉じます。</span><span class="sxs-lookup"><span data-stu-id="31673-764">When overridden in a derived class, closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-765">`WriteStartAttribute`を呼び出す場合は、このメソッドを使用して属性を閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="31673-765">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="31673-766">もう一度 `WriteStartAttribute` を呼び出して、<xref:System.Xml.XmlWriter.WriteAttributeString%2A>を呼び出すか、<xref:System.Xml.XmlWriter.WriteEndElement%2A>を呼び出すことによって、属性を閉じることもできます。</span><span class="sxs-lookup"><span data-stu-id="31673-766">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlWriter.WriteEndElement%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31673-767"><xref:System.Xml.XmlWriter> メソッドを使用して XML を出力する場合、<xref:System.Xml.XmlWriter.Close%2A> メソッドを呼び出すまで、要素と属性は書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="31673-767">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="31673-768">たとえば、XmlWriter を使用して <xref:System.Xml.XmlDocument>を設定している場合、<xref:System.Xml.XmlWriter>を閉じるまで、ターゲットドキュメント内の記述された要素と属性を確認することはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-768">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="31673-769">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-769">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-770">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-770">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-771">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-771">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteEndAttributeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndAttributeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteEndAttributeAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndAttributeAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndAttributeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-772">前の <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 呼び出しを非同期に閉じます。</span><span class="sxs-lookup"><span data-stu-id="31673-772">Asynchronously closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <returns><span data-ttu-id="31673-773">非同期の <see langword="WriteEndAttribute" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-773">The task that represents the asynchronous <see langword="WriteEndAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-774">これは <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-774">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-775">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-775">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-776">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-776">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-777">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-777">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-778">または</span><span class="sxs-lookup"><span data-stu-id="31673-778">-or-</span></span>

<span data-ttu-id="31673-779"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-779">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-780">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-780">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-781">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-781">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocument : unit -&gt; unit" Usage="xmlWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-782">派生クラスでオーバーライドされると、開いている任意の要素または属性を閉じ、ライターを Start 状態に戻します。</span><span class="sxs-lookup"><span data-stu-id="31673-782">When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="31673-783"><xref:System.Xml.XmlWriter> メソッドを使用して XML を出力する場合、<xref:System.Xml.XmlWriter.Close%2A> メソッドを呼び出すまで、要素と属性は書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="31673-783">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="31673-784">たとえば、XmlWriter を使用して <xref:System.Xml.XmlDocument>を設定している場合、<xref:System.Xml.XmlWriter>を閉じるまで、ターゲットドキュメント内の記述された要素と属性を確認することはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-784">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="31673-785">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-785">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-786">次の例では、書籍を表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-786">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-787">XML ドキュメントが無効です。</span><span class="sxs-lookup"><span data-stu-id="31673-787">The XML document is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-788">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-788">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-789">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-789">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-790">開いている要素または属性を非同期に閉じ、ライターを Start 状態に戻します。</span><span class="sxs-lookup"><span data-stu-id="31673-790">Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <returns><span data-ttu-id="31673-791">非同期の <see langword="WriteEndDocument" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-791">The task that represents the asynchronous <see langword="WriteEndDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-792">これは <xref:System.Xml.XmlWriter.WriteEndDocument%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-792">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-793">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-793">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-794">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-794">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-795">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-795">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-796">または</span><span class="sxs-lookup"><span data-stu-id="31673-796">-or-</span></span>

<span data-ttu-id="31673-797"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-797">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-798">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-798">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-799">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-799">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElement : unit -&gt; unit" Usage="xmlWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-800">派生クラスでオーバーライドされると、1 つの要素を閉じ、対応する名前空間スコープをポップします。</span><span class="sxs-lookup"><span data-stu-id="31673-800">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-801">要素にコンテンツが含まれていない場合は、短い終了タグ "/>" が書き込まれます。それ以外の場合は、完全終了タグが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="31673-801">If the element contains no content, a short end tag "/>" is written; otherwise, a full end tag is written.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31673-802"><xref:System.Xml.XmlWriter> メソッドを使用して XML を出力する場合、<xref:System.Xml.XmlWriter.Close%2A> メソッドを呼び出すまで、要素と属性は書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="31673-802">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="31673-803">たとえば、XmlWriter を使用して <xref:System.Xml.XmlDocument>を設定している場合、<xref:System.Xml.XmlWriter>を閉じるまで、ターゲットドキュメント内の記述された要素と属性を確認することはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-803">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="31673-804">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-804">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-805">次の例では、<xref:System.Xml.XmlWriter.WriteEndElement%2A> と <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-805">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-806">結果が無効な XML ドキュメントになります。</span><span class="sxs-lookup"><span data-stu-id="31673-806">This results in an invalid XML document.</span></span>

<span data-ttu-id="31673-807">または</span><span class="sxs-lookup"><span data-stu-id="31673-807">-or-</span></span>

<span data-ttu-id="31673-808">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-808">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-809">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-809">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-810">1 つの要素を非同期に閉じ、対応する名前空間スコープをポップします。</span><span class="sxs-lookup"><span data-stu-id="31673-810">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="31673-811">非同期の <see langword="WriteEndElement" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-811">The task that represents the asynchronous <see langword="WriteEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-812">これは <xref:System.Xml.XmlWriter.WriteEndElement%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-812">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-813">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-813">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-814">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-814">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-815">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-815">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-816">または</span><span class="sxs-lookup"><span data-stu-id="31673-816">-or-</span></span>

<span data-ttu-id="31673-817"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-817">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-818">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-818">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-819">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-819">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public abstract void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRef : string -&gt; unit" Usage="xmlWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-820">エンティティ参照の名前。</span><span class="sxs-lookup"><span data-stu-id="31673-820">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="31673-821">派生クラスでオーバーライドされると、<see langword="&amp;name;" /> などのエンティティ参照を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-821">When overridden in a derived class, writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-822">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-822">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-823">次の例では、書籍を表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-823">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-824"><paramref name="name" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-824"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-825">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-825">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-826">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-826">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRefAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEntityRefAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEntityRefAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEntityRefAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEntityRefAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEntityRefAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-827">エンティティ参照の名前。</span><span class="sxs-lookup"><span data-stu-id="31673-827">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="31673-828">エンティティ参照を <see langword="&amp;name;" /> として非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-828">Asynchronously writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <returns><span data-ttu-id="31673-829">非同期の <see langword="WriteEntityRef" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-829">The task that represents the asynchronous <see langword="WriteEntityRef" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-830">これは <xref:System.Xml.XmlWriter.WriteEntityRef%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-830">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEntityRef%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-831">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-831">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-832">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-832">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-833">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-833">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-834">または</span><span class="sxs-lookup"><span data-stu-id="31673-834">-or-</span></span>

<span data-ttu-id="31673-835"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-835">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-836">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-836">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-837">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-837">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElement : unit -&gt; unit" Usage="xmlWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-838">派生クラスでオーバーライドされると、1 つの要素を閉じ、対応する名前空間スコープをポップします。</span><span class="sxs-lookup"><span data-stu-id="31673-838">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-839">このメソッドは、常に完全終了タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-839">This method always writes the full end tag.</span></span> <span data-ttu-id="31673-840">これは、完全終了タグを含める必要がある要素を処理する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="31673-840">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="31673-841">たとえば、ブラウザーでは HTML スクリプトブロックが "\</script >" で閉じられることが想定されています。</span><span class="sxs-lookup"><span data-stu-id="31673-841">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
 <span data-ttu-id="31673-842">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-842">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-843">次の例では、<xref:System.Xml.XmlWriter.WriteEndElement%2A> と <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-843">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-844">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-844">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-845">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-845">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteFullEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteFullEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFullEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteFullEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteFullEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-846">1 つの要素を非同期に閉じ、対応する名前空間スコープをポップします。</span><span class="sxs-lookup"><span data-stu-id="31673-846">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="31673-847">非同期の <see langword="WriteFullEndElement" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-847">The task that represents the asynchronous <see langword="WriteFullEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-848">これは <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-848">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-849">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-849">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-850">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-850">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-851">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-851">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-852">または</span><span class="sxs-lookup"><span data-stu-id="31673-852">-or-</span></span>

<span data-ttu-id="31673-853"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-853">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-854">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-854">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-855">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-855">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public virtual void WriteName (string name);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteName (name As String)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteName(System::String ^ name);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteName : string -&gt; unit&#xA;override this.WriteName : string -&gt; unit" Usage="xmlWriter.WriteName name" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void WriteName (string name);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteName (name As String)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteName(System::String ^ name);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member WriteName : string -&gt; unit" Usage="xmlWriter.WriteName name" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-856">書き込む名前。</span><span class="sxs-lookup"><span data-stu-id="31673-856">The name to write.</span></span></param>
        <summary><span data-ttu-id="31673-857">派生クラスでオーバーライドされると、指定した名前を書き込み、その名前が W3C 勧告『XML 1.0』(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) に準拠した有効な名前であるようにします。</span><span class="sxs-lookup"><span data-stu-id="31673-857">When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-858"><xref:System.Xml.XmlTextWriter.Namespaces%2A> が `true`に設定されている場合は、`WriteName` XML 勧告の W3C 名前空間に従っても名前が有効であることも確認します。</span><span class="sxs-lookup"><span data-stu-id="31673-858">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 <span data-ttu-id="31673-859">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteNameAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-859">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNameAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-860"><paramref name="name" /> が有効な XML 名ではありません。または、<paramref name="name" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-860"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-861">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-861">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-862">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-862">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNameAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNameAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNameAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNameAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNameAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNameAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNameAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-863">書き込む名前。</span><span class="sxs-lookup"><span data-stu-id="31673-863">The name to write.</span></span></param>
        <summary><span data-ttu-id="31673-864">指定した名前が W3C 勧告『XML 1.0』(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) に準拠した有効な名前であることを確認し、それを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-864">Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="31673-865">非同期の <see langword="WriteName" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-865">The task that represents the asynchronous <see langword="WriteName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-866">これは <xref:System.Xml.XmlWriter.WriteName%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-866">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteName%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-867">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-867">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-868">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-868">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-869">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-869">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-870">または</span><span class="sxs-lookup"><span data-stu-id="31673-870">-or-</span></span>

<span data-ttu-id="31673-871"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-871">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-872">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-872">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-873">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-873">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public virtual void WriteNmToken (string name);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNmToken (name As String)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNmToken(System::String ^ name);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteNmToken : string -&gt; unit&#xA;override this.WriteNmToken : string -&gt; unit" Usage="xmlWriter.WriteNmToken name" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void WriteNmToken (string name);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteNmToken (name As String)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteNmToken(System::String ^ name);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member WriteNmToken : string -&gt; unit" Usage="xmlWriter.WriteNmToken name" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-874">書き込む名前。</span><span class="sxs-lookup"><span data-stu-id="31673-874">The name to write.</span></span></param>
        <summary><span data-ttu-id="31673-875">派生クラスでオーバーライドされると、指定した名前を書き込み、その名前が W3C 勧告『XML 1.0』(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) に準拠した有効な NmToken であるようにします。</span><span class="sxs-lookup"><span data-stu-id="31673-875">When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-876">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-876">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-877"><paramref name="name" /> が有効な NmToken ではありません。または、<paramref name="name" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-877"><paramref name="name" /> is not a valid NmToken; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-878">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-878">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-879">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-879">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNmTokenAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNmTokenAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNmTokenAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNmTokenAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNmTokenAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-880">書き込む名前。</span><span class="sxs-lookup"><span data-stu-id="31673-880">The name to write.</span></span></param>
        <summary><span data-ttu-id="31673-881">指定した名前が W3C 勧告『XML 1.0』(https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) に準拠した有効な NmToken であることを確認し、それを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-881">Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="31673-882">非同期の <see langword="WriteNmToken" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-882">The task that represents the asynchronous <see langword="WriteNmToken" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-883">これは <xref:System.Xml.XmlWriter.WriteNmToken%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-883">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNmToken%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-884">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-884">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-885">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-885">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-886">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-886">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-887">または</span><span class="sxs-lookup"><span data-stu-id="31673-887">-or-</span></span>

<span data-ttu-id="31673-888"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-888">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-889">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-889">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-890">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-890">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-891">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-891">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-892">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-892">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-893">ソース オブジェクトから現在のライターのインスタンスにすべてをコピーします。</span><span class="sxs-lookup"><span data-stu-id="31673-893">Copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-894">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-894">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteNode (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="31673-895">読み取り元の <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="31673-895">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr"><span data-ttu-id="31673-896"><see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31673-896"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31673-897">派生クラスでオーバーライドされると、リーダーのデータをすべてライターにコピーし、リーダーを次の兄弟の開始位置に移動します。</span><span class="sxs-lookup"><span data-stu-id="31673-897">When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-898">次の表は、このメソッドでサポートされているノードの種類を示しています。</span><span class="sxs-lookup"><span data-stu-id="31673-898">The following table shows the supported node types for this method.</span></span>  
  
|<span data-ttu-id="31673-899">NodeType</span><span class="sxs-lookup"><span data-stu-id="31673-899">NodeType</span></span>|<span data-ttu-id="31673-900">WriteNode 動作</span><span class="sxs-lookup"><span data-stu-id="31673-900">WriteNode Behavior</span></span>|  
|--------------|------------------------|  
|`None`|<span data-ttu-id="31673-901">型に関係なく、すべてのノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-901">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="31673-902">つまり、ライターは、<xref:System.Xml.XmlReader> を使用し、属性、処理命令、コメントなど、読み取られたすべてのノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-902">That is, the writer consumes the <xref:System.Xml.XmlReader> and writes out all the nodes read including attributes, processing instructions, comments, and so on.</span></span><br /><br /> <span data-ttu-id="31673-903">この状況は、<xref:System.Xml.XmlReader> が初期状態である場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="31673-903">This situation occurs when the <xref:System.Xml.XmlReader> is in an initial state.</span></span> <span data-ttu-id="31673-904"><xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> プロパティは `ReaderState.Initial`を返します。</span><span class="sxs-lookup"><span data-stu-id="31673-904">(The <xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> property returns `ReaderState.Initial`).</span></span>|  
|`Element`|<span data-ttu-id="31673-905">要素ノードとすべての属性ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-905">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="31673-906">操作なし</span><span class="sxs-lookup"><span data-stu-id="31673-906">No operation.</span></span> <span data-ttu-id="31673-907">代わりに、<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> タグまたは <xref:System.Xml.XmlWriter.WriteAttributeString%2A> タグを使用してください。</span><span class="sxs-lookup"><span data-stu-id="31673-907">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="31673-908">テキスト ノードを書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-908">Writes out the text node.</span></span>|  
|`CDATA`|<span data-ttu-id="31673-909">CDATA セクション ノードを書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-909">Writes out the CDATA section node.</span></span>|  
|`EntityReference`|<span data-ttu-id="31673-910">エンティティ参照ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-910">Writes out the entity reference node.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="31673-911">処理命令ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-911">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="31673-912">コメントノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-912">Writes out the comment node.</span></span>|  
|`DocumentType`|<span data-ttu-id="31673-913">ドキュメント型ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-913">Writes out the document type node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="31673-914">有意の空白ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-914">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="31673-915">空白ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-915">Writes out the white space node.</span></span>|  
|`EndElement`|<span data-ttu-id="31673-916">終了要素タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-916">Writes out the end element tag.</span></span>|  
|`EndEntity`|<span data-ttu-id="31673-917">操作なし</span><span class="sxs-lookup"><span data-stu-id="31673-917">No operation.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="31673-918">XML 宣言ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-918">Writes out the XML declaration node.</span></span>|  
  
 <span data-ttu-id="31673-919">リーダーが初期状態の場合、このメソッドはリーダーをファイルの末尾に移動します。</span><span class="sxs-lookup"><span data-stu-id="31673-919">If the reader is in the initial state, this method moves the reader to the end of file.</span></span> <span data-ttu-id="31673-920">リーダーが既にファイルの末尾または closed 状態の場合、このメソッドは操作不可能です。</span><span class="sxs-lookup"><span data-stu-id="31673-920">If the reader is already at the end of file or in a closed state, this method is non-operational.</span></span>  
  
 <span data-ttu-id="31673-921">次C#のコードでは、XML 入力ドキュメント全体をコンソールにコピーします。</span><span class="sxs-lookup"><span data-stu-id="31673-921">The following C# code copies an entire XML input document to the console:</span></span>  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
XmlWriter writer = XmlWriter.Create(Console.Out);  
writer.WriteNode(reader, false);  
```  
  
 <span data-ttu-id="31673-922">ルートノードから移動し、ドキュメント内の他の場所に配置した場合C# 、次の例ではノードが正しく書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="31673-922">If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.</span></span>  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
reader.Read(); // Read PI  
reader.Read(); // Read Comment  
reader.Read(); // Read DOCType  
XmlWriter writer = XmlWriter.Create(Console.Out);  
while (!reader.EOF){  
  writer.WriteNode(reader, false);  
 }  
```  
  
 <span data-ttu-id="31673-923">リーダーが空白を返すように構成されていて、ライターが出力をインデントするように構成されている場合、`WriteNode` は奇妙な出力を生成することがあります。</span><span class="sxs-lookup"><span data-stu-id="31673-923">If the reader is configured to return white space and the writer has is configured to indent output, `WriteNode` may produce strange output.</span></span> <span data-ttu-id="31673-924">基本的には、2つの書式設定が取得されます。</span><span class="sxs-lookup"><span data-stu-id="31673-924">You will essentially be getting double formatting.</span></span>  
  
 <span data-ttu-id="31673-925">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-925">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-926">次の例では、最初と最後の book ノードをコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-926">The following example writes the first and last book nodes out to the console.</span></span>  
  
 [!code-cpp[XmlWriter.WriteNode#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteNode/CPP/writenode.cpp#1)]
 [!code-csharp[XmlWriter.WriteNode#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteNode/CS/writenode.cs#1)]
 [!code-vb[XmlWriter.WriteNode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteNode/VB/writenode.vb#1)]  
  
 <span data-ttu-id="31673-927">この例では、ファイル `books.xml`を入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-927">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteNode#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteNode/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-928"><paramref name="reader" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-928"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-929"><paramref name="reader" /> に無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="31673-929"><paramref name="reader" /> contains invalid characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-930">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-930">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-931">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-931">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (navigator As XPathNavigator, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit" Usage="xmlWriter.WriteNode (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="31673-932">コピー元の <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="31673-932">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr"><span data-ttu-id="31673-933">既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31673-933"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31673-934"><see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクトからライターにすべてをコピーします。</span><span class="sxs-lookup"><span data-stu-id="31673-934">Copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="31673-935"><see cref="T:System.Xml.XPath.XPathNavigator" /> の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="31673-935">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-936">次の表は、このメソッドでサポートされている `XPath` ノードの種類を示しています。</span><span class="sxs-lookup"><span data-stu-id="31673-936">The following table shows the supported `XPath` node types for this method.</span></span>  
  
|<span data-ttu-id="31673-937">XPathNodeType</span><span class="sxs-lookup"><span data-stu-id="31673-937">XPathNodeType</span></span>|<span data-ttu-id="31673-938">WriteNode 動作</span><span class="sxs-lookup"><span data-stu-id="31673-938">WriteNode Behavior</span></span>|  
|-------------------|------------------------|  
|`Root`|<span data-ttu-id="31673-939">型に関係なく、すべてのノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-939">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="31673-940">つまり、ライターは <xref:System.Xml.XPath.XPathNavigator> を使用し、ルートノードからすべてのノード (属性、処理命令、コメントなど) を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-940">That is, the writer consumes the <xref:System.Xml.XPath.XPathNavigator> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</span></span>|  
|`Element`|<span data-ttu-id="31673-941">要素ノードとすべての属性ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-941">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="31673-942">操作なし</span><span class="sxs-lookup"><span data-stu-id="31673-942">No operation.</span></span> <span data-ttu-id="31673-943">代わりに、<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> タグまたは <xref:System.Xml.XmlWriter.WriteAttributeString%2A> タグを使用してください。</span><span class="sxs-lookup"><span data-stu-id="31673-943">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="31673-944">テキスト ノードを書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-944">Writes out the text node.</span></span>|  
|`Namespace`|<span data-ttu-id="31673-945">操作なし</span><span class="sxs-lookup"><span data-stu-id="31673-945">No operation.</span></span> <span data-ttu-id="31673-946"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> または <xref:System.Xml.XmlWriter.WriteAttributeString%2A> メソッドを使用して、名前空間宣言を記述します。</span><span class="sxs-lookup"><span data-stu-id="31673-946">Use the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write the namespace declaration.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="31673-947">処理命令ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-947">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="31673-948">コメントノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-948">Writes out the comment node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="31673-949">有意の空白ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-949">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="31673-950">空白ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-950">Writes out the white space node.</span></span>|  
  
 <span data-ttu-id="31673-951">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-951">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-952">次の例では、<xref:System.Xml.XmlWriter.WriteNode%2A> メソッドを使用して、ドキュメントから最初の book ノードをコピーし、それをコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-952">The following example uses the <xref:System.Xml.XmlWriter.WriteNode%2A> method to copy the first book node from a document and write it to the console.</span></span>  
  
 [!code-csharp[XmlWriteNode_nav#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriteNode_nav/CS/XmlWriteNode_nav.cs#1)]
 [!code-vb[XmlWriteNode_nav#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriteNode_nav/VB/XmlWriteNode_nav.vb#1)]  
  
 <span data-ttu-id="31673-953">この例では、books.xml ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-953">The example uses the books.xml file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#1](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/books.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-954"><paramref name="navigator" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-954"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-955">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-955">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-956">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-956">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNodeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-957"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-957">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-958">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-958">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="31673-959">ソース オブジェクトから現在のライターのインスタンスにすべてを非同期にコピーします。</span><span class="sxs-lookup"><span data-stu-id="31673-959">Asynchronously copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-960">これは <xref:System.Xml.XmlWriter.WriteNode%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-960">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-961">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-961">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-962">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-962">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="31673-963">読み取り元の <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="31673-963">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr"><span data-ttu-id="31673-964"><see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31673-964"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31673-965">派生クラスでオーバーライドされると、リーダーのデータをすべてライターに非同期にコピーし、リーダーを次の兄弟の開始位置に移動します。</span><span class="sxs-lookup"><span data-stu-id="31673-965">Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <returns><span data-ttu-id="31673-966">非同期の <see langword="WriteNode" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-966">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-967">これは <xref:System.Xml.XmlWriter.WriteNode%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-967">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-968">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-968">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-969">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-969">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-970">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-970">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-971">または</span><span class="sxs-lookup"><span data-stu-id="31673-971">-or-</span></span>

<span data-ttu-id="31673-972"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-972">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-973">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-973">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-974">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-974">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (navigator As XPathNavigator, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="31673-975">コピー元の <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="31673-975">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr"><span data-ttu-id="31673-976">既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31673-976"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31673-977"><see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクトのすべてをライターに非同期にコピーします。</span><span class="sxs-lookup"><span data-stu-id="31673-977">Asynchronously copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="31673-978"><see cref="T:System.Xml.XPath.XPathNavigator" /> の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="31673-978">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <returns><span data-ttu-id="31673-979">非同期の <see langword="WriteNode" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-979">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-980">これは <xref:System.Xml.XmlWriter.WriteNode%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-980">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-981">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-981">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-982">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-982">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-983">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-983">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-984">または</span><span class="sxs-lookup"><span data-stu-id="31673-984">-or-</span></span>

<span data-ttu-id="31673-985"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-985">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-986">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-986">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-987">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-987">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public abstract void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-988">処理命令の名前。</span><span class="sxs-lookup"><span data-stu-id="31673-988">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="31673-989">処理命令に含めるテキスト。</span><span class="sxs-lookup"><span data-stu-id="31673-989">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="31673-990">派生クラスでオーバーライドされると、名前とテキストの間にスペースがある処理命令を、次のように非同期的に書き込みます: &lt;?name text?&gt;。</span><span class="sxs-lookup"><span data-stu-id="31673-990">When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-991">このメソッドは、(<xref:System.Xml.XmlWriter.WriteStartDocument%2A>ではなく) XML 宣言を書き込むために使用できます。</span><span class="sxs-lookup"><span data-stu-id="31673-991">This method can be used to write the XML declaration (rather than <xref:System.Xml.XmlWriter.WriteStartDocument%2A>).</span></span> <span data-ttu-id="31673-992">これにより、エンコード属性が誤って書き込まれる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-992">This could result in the encoding attribute being incorrectly written.</span></span> <span data-ttu-id="31673-993">たとえば、次C#のコードでは、既定のエンコードが utf-8 であるため、無効な XML ドキュメントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="31673-993">For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.</span></span>  
  
```csharp  
XmlWriter writer = XmlWriter.Create("output.xml");  
writer.WriteProcessingInstruction("xml", "version='1.0' encoding='UTF-16'");  
writer.WriteStartElement("root");  
writer.Close();  
```  
  
 <span data-ttu-id="31673-994">`text` が `null` または `String.Empty`の場合、このメソッドはデータコンテンツのない `ProcessingInstruction` を書き込みます。たとえば、\<? name? > のようになります。</span><span class="sxs-lookup"><span data-stu-id="31673-994">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
 <span data-ttu-id="31673-995">テキストに "? >" の無効なシーケンスが含まれている場合、<xref:System.Xml.XmlWriter> は <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> オブジェクト) をスローするか、空白文字を挿入できますか?</span><span class="sxs-lookup"><span data-stu-id="31673-995">If text contains an invalid sequence of "?>", the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space "?</span></span> <span data-ttu-id="31673-996">> "によって、無効な XML (<xref:System.Xml.XmlWriter.Create%2A> メソッドによって作成された<xref:System.Xml.XmlWriter> オブジェクト) が書き込まれないようにします。</span><span class="sxs-lookup"><span data-stu-id="31673-996">>" to avoid writing invalid XML (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="31673-997">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-997">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-998">次の例では、書籍を表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-998">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-999">テキストは、非整形式の XML ドキュメントになります。</span><span class="sxs-lookup"><span data-stu-id="31673-999">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="31673-1000"><paramref name="name" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-1000"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
<span data-ttu-id="31673-1001">このメソッドは、<see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> が呼び出された後に XML 宣言を作成するために使用されています。</span><span class="sxs-lookup"><span data-stu-id="31673-1001">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> has already been called.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1002">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1002">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1003">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1003">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstructionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteProcessingInstructionAsync(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteProcessingInstructionAsync (name As String, text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteProcessingInstructionAsync(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteProcessingInstructionAsync (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31673-1004">処理命令の名前。</span><span class="sxs-lookup"><span data-stu-id="31673-1004">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="31673-1005">処理命令に含めるテキスト。</span><span class="sxs-lookup"><span data-stu-id="31673-1005">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="31673-1006">名前とテキストの間にスペースがある処理命令を、次のように非同期的に書き込みます: &lt;?name text?&gt;。</span><span class="sxs-lookup"><span data-stu-id="31673-1006">Asynchronously writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <returns><span data-ttu-id="31673-1007">非同期の <see langword="WriteProcessingInstruction" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1007">The task that represents the asynchronous <see langword="WriteProcessingInstruction" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1008">これは <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1008">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1009">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1009">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1010">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1010">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1011">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1011">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1012">または</span><span class="sxs-lookup"><span data-stu-id="31673-1012">-or-</span></span>

<span data-ttu-id="31673-1013"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1013">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1014">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1014">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1015">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1015">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public virtual void WriteQualifiedName (string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteQualifiedName (localName As String, ns As String)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedName : string * string -&gt; unit&#xA;override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlWriter.WriteQualifiedName (localName, ns)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void WriteQualifiedName (string localName, string ns);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteQualifiedName (localName As String, ns As String)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedName : string * string -&gt; unit" Usage="xmlWriter.WriteQualifiedName (localName, ns)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-1016">書き込むローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1016">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-1017">名前の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-1017">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="31673-1018">派生クラスでオーバーライドされると、名前空間の限定名を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1018">When overridden in a derived class, writes out the namespace-qualified name.</span></span> <span data-ttu-id="31673-1019">このメソッドは、指定した名前空間のスコープ内にあるプレフィックスを検索します。</span><span class="sxs-lookup"><span data-stu-id="31673-1019">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1020">`ns` が現在の既定の名前空間にマップされている場合、プレフィックスは生成されません。</span><span class="sxs-lookup"><span data-stu-id="31673-1020">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="31673-1021">属性値を書き込むときに、`ns` が見つからない場合、このメソッドはプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="31673-1021">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="31673-1022">要素の内容を書き込むときに、`ns` が見つからない場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="31673-1022">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31673-1023"><xref:System.Xml.XmlWriter> から派生したクラスがこのメソッドをオーバーライドしない場合 `localName` は有効な W3C XML 名としてチェックされません。</span><span class="sxs-lookup"><span data-stu-id="31673-1023">If a class derived from the <xref:System.Xml.XmlWriter> does not override this method `localName` is not checked to be a valid W3C XML name.</span></span> <span data-ttu-id="31673-1024">このような場合は、このメソッドを呼び出す前に、<xref:System.Xml.XmlReader.IsName%2A> メソッドを使用して文字列の有効性を確認できます。</span><span class="sxs-lookup"><span data-stu-id="31673-1024">In such case, before calling this method, the validity of the string can be checked by <xref:System.Xml.XmlReader.IsName%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1025">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1025">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-1026">この例では、次の要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1026">The example writes the following element:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
  <item href="#x:test"/>  
</root>  
```  
  
 [!code-csharp[XmlWriter_v2#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#5)]
 [!code-vb[XmlWriter_v2#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1027"><paramref name="localName" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-1027"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="31673-1028"><paramref name="localName" /> が有効な名前ではありません。</span><span class="sxs-lookup"><span data-stu-id="31673-1028"><paramref name="localName" /> is not a valid name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1029">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1029">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1030">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1030">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteQualifiedNameAsync(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQualifiedNameAsync (localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteQualifiedNameAsync(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteQualifiedNameAsync (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-1031">書き込むローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1031">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-1032">名前の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-1032">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="31673-1033">名前空間の修飾名を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1033">Asynchronously writes out the namespace-qualified name.</span></span> <span data-ttu-id="31673-1034">このメソッドは、指定した名前空間のスコープ内にあるプレフィックスを検索します。</span><span class="sxs-lookup"><span data-stu-id="31673-1034">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <returns><span data-ttu-id="31673-1035">非同期の <see langword="WriteQualifiedName" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1035">The task that represents the asynchronous <see langword="WriteQualifiedName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1036">これは <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1036">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1037">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1037">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1038">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1038">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1039">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1039">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1040">または</span><span class="sxs-lookup"><span data-stu-id="31673-1040">-or-</span></span>

<span data-ttu-id="31673-1041"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1041">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1042">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1042">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1043">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1043">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1044">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1044">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1045">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1045">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-1046">派生クラスでオーバーライドされると、生のマークアップを手動で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1046">When overridden in a derived class, writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1047">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteRawAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1047">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : string -&gt; unit" Usage="xmlWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="31673-1048">書き込むテキストを格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="31673-1048">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="31673-1049">派生クラスでオーバーライドされると、手動で文字列から生のマークアップを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1049">When overridden in a derived class, writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1050">このメソッドは、特殊文字をエスケープしません。</span><span class="sxs-lookup"><span data-stu-id="31673-1050">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31673-1051"><xref:System.Xml.XmlWriter> は、<xref:System.Xml.XmlWriter.WriteRaw%2A> メソッドに渡されるデータを検証しません。</span><span class="sxs-lookup"><span data-stu-id="31673-1051">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="31673-1052">このメソッドには、任意のデータを渡すことはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-1052">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="31673-1053">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteRawAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1053">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-1054">このメソッドの使用例については、「<xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1054">See <xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1055"><paramref name="data" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-1055"><paramref name="data" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1056">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1056">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1057">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1057">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="31673-1058">書き込むテキストを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="31673-1058">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="31673-1059">書き込むテキストの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="31673-1059">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="31673-1060">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="31673-1060">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="31673-1061">派生クラスでオーバーライドされると、手動で文字バッファーから生のマークアップを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1061">When overridden in a derived class, writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1062">このメソッドは、特殊文字をエスケープしません。</span><span class="sxs-lookup"><span data-stu-id="31673-1062">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31673-1063"><xref:System.Xml.XmlWriter> は、<xref:System.Xml.XmlWriter.WriteRaw%2A> メソッドに渡されるデータを検証しません。</span><span class="sxs-lookup"><span data-stu-id="31673-1063">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="31673-1064">このメソッドには、任意のデータを渡すことはできません。</span><span class="sxs-lookup"><span data-stu-id="31673-1064">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="31673-1065">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteRawAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1065">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-1066"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-1066"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31673-1067"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="31673-1067"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31673-1068">または</span><span class="sxs-lookup"><span data-stu-id="31673-1068">-or-</span></span> 
<span data-ttu-id="31673-1069">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="31673-1069">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1070">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1070">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1071">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1071">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRawAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1072"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1072">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1073">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1073">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="31673-1074">生のマークアップを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1074">Asynchronously writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1075">これは <xref:System.Xml.XmlWriter.WriteRaw%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1075">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1076">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1076">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1077">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1077">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (data As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="31673-1078">書き込むテキストを格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="31673-1078">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="31673-1079">文字列から手動で生のマークアップを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1079">Asynchronously writes raw markup manually from a string.</span></span></summary>
        <returns><span data-ttu-id="31673-1080">非同期の <see langword="WriteRaw" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1080">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1081">これは <xref:System.Xml.XmlWriter.WriteRaw%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1081">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1082">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1082">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1083">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1083">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1084">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1084">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1085">または</span><span class="sxs-lookup"><span data-stu-id="31673-1085">-or-</span></span>

<span data-ttu-id="31673-1086"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1086">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1087">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1087">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1088">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1088">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="31673-1089">書き込むテキストを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="31673-1089">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="31673-1090">書き込むテキストの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="31673-1090">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="31673-1091">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="31673-1091">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="31673-1092">文字バッファーから手動で生のマークアップを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1092">Asynchronously writes raw markup manually from a character buffer.</span></span></summary>
        <returns><span data-ttu-id="31673-1093">非同期の <see langword="WriteRaw" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1093">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1094">これは <xref:System.Xml.XmlWriter.WriteRaw%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1094">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1095">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1095">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1096">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1096">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1097">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1097">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1098">または</span><span class="sxs-lookup"><span data-stu-id="31673-1098">-or-</span></span>

<span data-ttu-id="31673-1099"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1099">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1100">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1100">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1101">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1101">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1102">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1102">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1103">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1103">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-1104">派生クラスでオーバーライドされると、属性の開始を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1104">When overridden in a derived class, writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1105">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1105">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string -&gt; unit" Usage="xmlWriter.WriteStartAttribute localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-1106">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1106">The local name of the attribute.</span></span></param>
        <summary><span data-ttu-id="31673-1107">指定されたローカル名を使用して属性の開始を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1107">Writes the start of an attribute with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1108">このメソッドを使用すると、複数の書き込みメソッドを使用して値を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-1108">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="31673-1109">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1109">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1110">ライターは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="31673-1110">The writer is closed.</span></span>

<span data-ttu-id="31673-1111">または</span><span class="sxs-lookup"><span data-stu-id="31673-1111">-or-</span></span>

<span data-ttu-id="31673-1112">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1112">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1113">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1113">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-1114">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-1114">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-1115">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1115">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-1116">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1116">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-1117">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-1117">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-1118">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-1118">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-1119">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1119">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-1120">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-1120">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="31673-1121">指定されたローカル名および名前空間 URI を使用して属性の開始を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1121">Writes the start of an attribute with the specified local name and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1122">これは、<xref:System.Xml.XmlWriter.WriteString%2A>、<xref:System.Xml.XmlWriter.WriteQualifiedName%2A>などの複数の書き込みメソッドを使用して属性値を書き込むことができる、より高度なバージョンの <xref:System.Xml.XmlWriter.WriteAttributeString%2A> です。</span><span class="sxs-lookup"><span data-stu-id="31673-1122">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlWriter.WriteString%2A>, <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, and so on.</span></span>  
  
 <span data-ttu-id="31673-1123">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1123">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-1124">このメソッドの使用例については、「<xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1124">See <xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-1125">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-1125">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-1126">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1126">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-1127">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1127">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-1128">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-1128">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-1129">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-1129">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1130">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1130">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1131">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1131">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="31673-1132">属性の名前空間プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="31673-1132">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="31673-1133">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1133">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-1134">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-1134">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="31673-1135">派生クラスでオーバーライドされると、指定されたプリフィックス、ローカル名、および名前空間 URI を使用して属性の開始を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1135">When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1136">このメソッドを使用すると、複数の書き込みメソッドを使用して値を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-1136">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="31673-1137">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1137">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-1138">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-1138">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-1139">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1139">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-1140">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1140">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-1141">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-1141">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-1142">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-1142">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1143">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1143">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1144">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1144">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartAttributeAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteStartAttributeAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartAttributeAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartAttributeAsync (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="31673-1145">属性の名前空間プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="31673-1145">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="31673-1146">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1146">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-1147">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-1147">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="31673-1148">指定されたプレフィックス、ローカル名、および名前空間 URI を使用して属性の開始を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1148">Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="31673-1149">非同期の <see langword="WriteStartAttribute" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1149">The task that represents the asynchronous <see langword="WriteStartAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1150">これは <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1150">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1151">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1151">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1152">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1152">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1153">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1153">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1154">または</span><span class="sxs-lookup"><span data-stu-id="31673-1154">-or-</span></span>

<span data-ttu-id="31673-1155"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1155">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1156">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1156">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1157">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1157">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1158">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1158">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1159">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1159">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-1160">派生クラスでオーバーライドされると、XML 宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1160">When overridden in a derived class, writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1161">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1161">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : unit -&gt; unit" Usage="xmlWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-1162">派生クラスでオーバーライドされると、バージョン "1.0" の XML 宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1162">When overridden in a derived class, writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1163">ドキュメントのエンコーディングレベルは、ライターの実装方法によって決まります。</span><span class="sxs-lookup"><span data-stu-id="31673-1163">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="31673-1164">たとえば、`XmlTextWriter` コンストラクターに <xref:System.Text.Encoding> オブジェクトが指定されている場合、encoding 属性の値が決定されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1164">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="31673-1165">このメソッドでは、スタンドアロン属性は作成されません。</span><span class="sxs-lookup"><span data-stu-id="31673-1165">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="31673-1166">`WriteStartDocument` が呼び出されると、ライターは、記述しているものが整形式の XML ドキュメントであることを検証します。</span><span class="sxs-lookup"><span data-stu-id="31673-1166">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="31673-1167">たとえば、XML 宣言が最初のノードであること、ルートレベルの要素が1つだけ存在することなどが確認されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1167">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="31673-1168">このメソッドが呼び出されない場合、ライターは XML フラグメントが記述されていると想定し、ルートレベルの規則は適用しません。</span><span class="sxs-lookup"><span data-stu-id="31673-1168">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="31673-1169">`WriteStartDocument` が呼び出され、<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> メソッドを使用して別の XML 宣言を作成した場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1169">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="31673-1170">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1170">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1171">これは、コンストラクターの後に呼び出された最初の書き込みメソッドではありません。</span><span class="sxs-lookup"><span data-stu-id="31673-1171">This is not the first write method called after the constructor.</span></span>

<span data-ttu-id="31673-1172">または</span><span class="sxs-lookup"><span data-stu-id="31673-1172">-or-</span></span>

<span data-ttu-id="31673-1173">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1173">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1174">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1174">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : bool -&gt; unit" Usage="xmlWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="31673-1175"><see langword="true" /> の場合は "standalone=yes"、<see langword="false" /> の場合は "standalone=no" を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1175">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="31673-1176">派生クラスでオーバーライドされると、バージョン "1.0" の XML 宣言とスタンドアロン属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1176">When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1177">ドキュメントのエンコーディングレベルは、ライターの実装方法によって決まります。</span><span class="sxs-lookup"><span data-stu-id="31673-1177">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="31673-1178">たとえば、`XmlTextWriter` コンストラクターに <xref:System.Text.Encoding> オブジェクトが指定されている場合、encoding 属性の値が決定されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1178">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="31673-1179">`WriteStartDocument` が呼び出されると、ライターは、記述しているものが整形式の XML ドキュメントであることを検証します。</span><span class="sxs-lookup"><span data-stu-id="31673-1179">When `WriteStartDocument` is called, the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="31673-1180">たとえば、XML 宣言が最初のノードであること、ルートレベルの要素が1つだけ存在することなどが確認されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1180">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="31673-1181">このメソッドが呼び出されない場合、ライターは XML フラグメントが記述されていると想定し、ルートレベルの規則は適用しません。</span><span class="sxs-lookup"><span data-stu-id="31673-1181">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="31673-1182">`WriteStartDocument` が呼び出され、<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> メソッドを使用して別の XML 宣言を作成した場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1182">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="31673-1183">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1183">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1184">これは、コンストラクターの後に呼び出された最初の書き込みメソッドではありません。</span><span class="sxs-lookup"><span data-stu-id="31673-1184">This is not the first write method called after the constructor.</span></span>

<span data-ttu-id="31673-1185">または</span><span class="sxs-lookup"><span data-stu-id="31673-1185">-or-</span></span>

<span data-ttu-id="31673-1186">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1186">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1187">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1187">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocumentAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1188"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1188">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1189">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1189">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="31673-1190">XML 宣言を非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1190">Asynchronously writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1191">これは <xref:System.Xml.XmlWriter.WriteStartDocument%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1191">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1192">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1192">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1193">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1193">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31673-1194">バージョン "1.0" で XML 宣言を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1194">Asynchronously writes the XML declaration with the version "1.0".</span></span></summary>
        <returns><span data-ttu-id="31673-1195">非同期の <see langword="WriteStartDocument" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1195">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1196">これは <xref:System.Xml.XmlWriter.WriteStartDocument%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1196">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1197">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1197">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1198">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1198">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1199">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1199">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1200">または</span><span class="sxs-lookup"><span data-stu-id="31673-1200">-or-</span></span>

<span data-ttu-id="31673-1201"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1201">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1202">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1202">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1203">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1203">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync (standalone As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="31673-1204"><see langword="true" /> の場合は "standalone=yes"、<see langword="false" /> の場合は "standalone=no" を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1204">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="31673-1205">バージョン "1.0" とスタントアロン属性を使用して XML 宣言を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1205">Asynchronously writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <returns><span data-ttu-id="31673-1206">非同期の <see langword="WriteStartDocument" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1206">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1207">これは <xref:System.Xml.XmlWriter.WriteStartDocument%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1207">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1208">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1208">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1209">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1209">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1210">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1210">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1211">または</span><span class="sxs-lookup"><span data-stu-id="31673-1211">-or-</span></span>

<span data-ttu-id="31673-1212"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1212">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1213">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1213">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1214">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1214">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1215">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1215">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1216">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1216">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-1217">派生クラスでオーバーライドされると、指定した開始タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1217">When overridden in a derived class, writes the specified start tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1218">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1218">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string -&gt; unit" Usage="xmlWriter.WriteStartElement localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-1219">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1219">The local name of the element.</span></span></param>
        <summary><span data-ttu-id="31673-1220">派生クラスでオーバーライドされると、指定したローカル名の開始タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1220">When overridden in a derived class, writes out a start tag with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1221">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1221">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-1222">次の例では、XML ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1222">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1223">ライターは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="31673-1223">The writer is closed.</span></span>

<span data-ttu-id="31673-1224">または</span><span class="sxs-lookup"><span data-stu-id="31673-1224">-or-</span></span>

<span data-ttu-id="31673-1225">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1225">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1226">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1226">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-1227">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-1227">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-1228">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1228">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-1229">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1229">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-1230">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-1230">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-1231">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-1231">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="31673-1232">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1232">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-1233">要素に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-1233">The namespace URI to associate with the element.</span></span> <span data-ttu-id="31673-1234">この名前空間が既にスコープ内にあり、関連付けられたプリフィックスを持つ場合、ライターは、そのプリフィックスも自動的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1234">If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="31673-1235">派生クラスでオーバーライドされると、指定した開始タグを書き込み、指定した名前空間に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="31673-1235">When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1236">このメソッドを呼び出した後、属性を書き込むか、子要素の <xref:System.Xml.XmlWriter.WriteComment%2A>、<xref:System.Xml.XmlWriter.WriteString%2A>、または `WriteStartElement` を使用してコンテンツを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="31673-1236">After calling this method you can either write attributes, or create content using <xref:System.Xml.XmlWriter.WriteComment%2A>, <xref:System.Xml.XmlWriter.WriteString%2A>, or `WriteStartElement` for child elements.</span></span> <span data-ttu-id="31673-1237"><xref:System.Xml.XmlWriter.WriteEndElement%2A> または <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>を使用して要素を閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="31673-1237">You can close the element with either <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>.</span></span> <span data-ttu-id="31673-1238">たとえば、次C#のコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1238">For example, the following C# code:</span></span>  
  
```csharp  
writer.WriteStartElement("item",null);  
writer.WriteString("some text");  
writer.WriteEndElement();  
```  
  
 <span data-ttu-id="31673-1239">では、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1239">Generates the following output:</span></span>  
  
```xml  
<item>some text</item>  
```  
  
 <span data-ttu-id="31673-1240">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1240">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1241">ライターは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="31673-1241">The writer is closed.</span></span>

<span data-ttu-id="31673-1242">または</span><span class="sxs-lookup"><span data-stu-id="31673-1242">-or-</span></span>

<span data-ttu-id="31673-1243">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1243">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1244">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1244">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-1245">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-1245">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-1246">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1246">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-1247">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1247">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-1248">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-1248">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-1249">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-1249">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public abstract void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElement : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="31673-1250">要素の名前空間プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="31673-1250">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="31673-1251">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1251">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-1252">要素に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-1252">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="31673-1253">派生クラスでオーバーライドされると、指定した開始タグを書き込み、指定した名前空間とプリフィックスに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="31673-1253">When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1254">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1254">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-1255">次の例では、XML フラグメントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1255">The following example writes out an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1256">ライターは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="31673-1256">The writer is closed.</span></span>

<span data-ttu-id="31673-1257">または</span><span class="sxs-lookup"><span data-stu-id="31673-1257">-or-</span></span>

<span data-ttu-id="31673-1258">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1258">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1259">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1259">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31673-1260">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="31673-1260">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="31673-1261">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1261">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="31673-1262">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1262">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="31673-1263">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="31673-1263">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="31673-1264">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="31673-1264">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartElementAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartElementAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartElementAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartElementAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartElementAsync (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="31673-1265">要素の名前空間プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="31673-1265">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="31673-1266">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="31673-1266">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="31673-1267">要素に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="31673-1267">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="31673-1268">指定した開始タグを非同期に書き込み、指定した名前空間とプレフィックスに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="31673-1268">Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <returns><span data-ttu-id="31673-1269">非同期の <see langword="WriteStartElement" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1269">The task that represents the asynchronous <see langword="WriteStartElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1270">これは <xref:System.Xml.XmlWriter.WriteStartElement%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1270">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartElement%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1271">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1271">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1272">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1272">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1273">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1273">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1274">または</span><span class="sxs-lookup"><span data-stu-id="31673-1274">-or-</span></span>

<span data-ttu-id="31673-1275"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1275">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1276">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1276">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1277">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1277">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31673-1278">派生クラスでオーバーライドされると、ライターの状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="31673-1278">When overridden in a derived class, gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="31673-1279"><see cref="T:System.Xml.WriteState" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="31673-1279">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1280">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1280">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1281">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1281">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public abstract void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteString : string -&gt; unit" Usage="xmlWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="31673-1282">書き込むテキスト。</span><span class="sxs-lookup"><span data-stu-id="31673-1282">The text to write.</span></span></param>
        <summary><span data-ttu-id="31673-1283">派生クラスでオーバーライドされると、指定したテキスト内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1283">When overridden in a derived class, writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1284">`WriteString` を実行すると、次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="31673-1284">`WriteString` does the following:</span></span>  
  
-   <span data-ttu-id="31673-1285">`&`、`<`、および `>` 文字は、それぞれ `&amp;`、`&lt;`、および `&gt;`に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-1285">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="31673-1286"><xref:System.Xml.XmlWriter.Create%2A> を使用して作成された <xref:System.Xml.XmlWriter> の既定の動作では、0x-0x1F (空白文字0x9、0xA、0xD を除く) の文字値を書き込もうとすると <xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1286">The default behavior of an <xref:System.Xml.XmlWriter> created using <xref:System.Xml.XmlWriter.Create%2A> is to throw an <xref:System.ArgumentException> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).</span></span> <span data-ttu-id="31673-1287">これらの無効な XML 文字は、<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> プロパティを `false`に設定して <xref:System.Xml.XmlWriter> を作成することによって記述できます。</span><span class="sxs-lookup"><span data-stu-id="31673-1287">These invalid XML characters can be written by creating the <xref:System.Xml.XmlWriter> with the <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property set to `false`.</span></span> <span data-ttu-id="31673-1288">このようにすると、文字が数字エンティティ (&\#0; & #0x1F) に置換されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1288">Doing so will result in the characters being replaced with numeric character entities (&\#0; through &#0x1F).</span></span> <span data-ttu-id="31673-1289">さらに、`new` 演算子を使用して作成された <xref:System.Xml.XmlTextWriter> は、既定で無効な文字を数字のエンティティに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="31673-1289">Additionally, an <xref:System.Xml.XmlTextWriter> created with the `new` operator will replace the invalid characters with numeric character entities by default.</span></span>  
  
 <span data-ttu-id="31673-1290">**メモ**XML を使用する多くのアプリケーションは無効な文字を処理するように設計されていないため、Microsoft では無効な XML 文字を記述することを推奨していません。</span><span class="sxs-lookup"><span data-stu-id="31673-1290">**Note** Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.</span></span>  
  
-   <span data-ttu-id="31673-1291">属性値のコンテキストで `WriteString` が呼び出された場合、二重引用符と単一引用符はそれぞれ `&quot;` と `&apos;` に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="31673-1291">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="31673-1292">たとえば、次の入力文字列 `test<item>test` はとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="31673-1292">For example, this input string `test<item>test` is written out as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="31673-1293">`text` が `null` または `String.Empty`の場合、このメソッドはデータコンテンツのないテキストノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1293">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
 <span data-ttu-id="31673-1294">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteStringAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1294">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-1295">次の例では、XML ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1295">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1296">テキスト文字列に、無効なサロゲート ペアが含まれています。</span><span class="sxs-lookup"><span data-stu-id="31673-1296">The text string contains an invalid surrogate pair.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1297">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1297">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1298">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1298">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStringAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStringAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStringAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStringAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteStringAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStringAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStringAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="31673-1299">書き込むテキスト。</span><span class="sxs-lookup"><span data-stu-id="31673-1299">The text to write.</span></span></param>
        <summary><span data-ttu-id="31673-1300">指定したテキストの内容を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1300">Asynchronously writes the given text content.</span></span></summary>
        <returns><span data-ttu-id="31673-1301">非同期の <see langword="WriteString" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1301">The task that represents the asynchronous <see langword="WriteString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1302">これは <xref:System.Xml.XmlWriter.WriteString%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1302">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteString%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1303">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1303">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1304">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1304">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1305">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1305">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1306">または</span><span class="sxs-lookup"><span data-stu-id="31673-1306">-or-</span></span>

<span data-ttu-id="31673-1307"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1307">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1308">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1308">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1309">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1309">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="31673-1310">下位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="31673-1310">The low surrogate.</span></span> <span data-ttu-id="31673-1311">この値は、0xDC00 から 0xDFFF の範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1311">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="31673-1312">上位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="31673-1312">The high surrogate.</span></span> <span data-ttu-id="31673-1313">この値は、0xD800 から 0xDBFF の範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1313">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="31673-1314">派生クラスでオーバーライドされると、サロゲート文字ペアのサロゲート文字エンティティを生成し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1314">When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1315">このメソッドは、UTF-16 エンコードを使用するシステムにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1315">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="31673-1316">サロゲート文字エンティティは16進形式で記述されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1316">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="31673-1317">サロゲート文字の範囲は、#x10FFFF に #x10000 ます。</span><span class="sxs-lookup"><span data-stu-id="31673-1317">The range for surrogate characters is #x10000 to #x10FFFF.</span></span> <span data-ttu-id="31673-1318">次の式は、サロゲート文字エンティティを生成するために使用されます: (`highChar`-0xD800) \* 0x400 + (`lowChar` 0xDC00) +</span><span class="sxs-lookup"><span data-stu-id="31673-1318">The following formula is used to generate the surrogate character entity: (`highChar` -0xD800) \* 0x400 + (`lowChar` -0xDC00) + 0x10000</span></span>  
  
 <span data-ttu-id="31673-1319">HTML と XML の両方で、ドキュメントの文字セット (および数値の文字参照の表記) は UCS [ISO-10646] に基づいています。</span><span class="sxs-lookup"><span data-stu-id="31673-1319">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="31673-1320">したがって、ソースドキュメント内の1つの数値文字参照は、文字列の 2 16 ビット単位に対応する場合があります (上位サロゲートと下位サロゲート)。</span><span class="sxs-lookup"><span data-stu-id="31673-1320">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="31673-1321">これらの16ビットユニットは、サロゲートペアと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="31673-1321">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="31673-1322">サロゲートまたは文字の詳細については、<https://www.unicode.org>にある Unicode 3.0/Unicode 2.0 標準のセクション3.7、または W3C 勧告『 [XML 1.0 』のセクション 2.2](https://www.w3.org/TR/REC-xml#charsets)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1322">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <https://www.unicode.org>, or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>  
  
 <span data-ttu-id="31673-1323">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1323">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1324">無効なサロゲート文字ペアが渡されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1324">An invalid surrogate character pair was passed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1325">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1325">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1326">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1326">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteSurrogateCharEntityAsync (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteSurrogateCharEntityAsync(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteSurrogateCharEntityAsync (lowChar As Char, highChar As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteSurrogateCharEntityAsync(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteSurrogateCharEntityAsync (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="highChar" Type="System.Char" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="31673-1327">下位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="31673-1327">The low surrogate.</span></span> <span data-ttu-id="31673-1328">この値は、0xDC00 から 0xDFFF の範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1328">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="31673-1329">上位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="31673-1329">The high surrogate.</span></span> <span data-ttu-id="31673-1330">この値は、0xD800 から 0xDBFF の範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1330">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="31673-1331">サロゲート文字ペアのサロゲート文字エンティティを非同期に生成して書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1331">Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <returns><span data-ttu-id="31673-1332">非同期の <see langword="WriteSurrogateCharEntity" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1332">The task that represents the asynchronous <see langword="WriteSurrogateCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1333">これは <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1333">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1334">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1334">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1335">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1335">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1336">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1336">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1337">または</span><span class="sxs-lookup"><span data-stu-id="31673-1337">-or-</span></span>

<span data-ttu-id="31673-1338"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1338">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1339">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1339">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1340">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1340">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteValue">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1341">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1341">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1342">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1342">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="31673-1343">単一の単純型の値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1343">Writes a single simple-typed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1344"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドは、共通言語ランタイム (CLR) の単純型の値を受け入れ、XML スキーマ定義言語 (XSD) のデータ型変換規則に従って文字列形式に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して出力します。</span><span class="sxs-lookup"><span data-stu-id="31673-1344">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts common language runtime (CLR) simple-typed values, converts them to their string representations according to the XML schema definition language (XSD) data type conversion rules, and writes them out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="31673-1345">これにより、<xref:System.Xml.XPath.XPathDocument>、<xref:System.Xml.XmlReader>、および <xref:System.Xml.XmlWriter> オブジェクト間でデータを渡すときに、単純型の値と再解析のオーバーヘッドを最小限にすることができます。</span><span class="sxs-lookup"><span data-stu-id="31673-1345">This enables you to pipeline simple-type values with minimal reparsing overhead when passing data between <xref:System.Xml.XPath.XPathDocument>, <xref:System.Xml.XmlReader>, and <xref:System.Xml.XmlWriter> objects.</span></span> <span data-ttu-id="31673-1346">この機能は、CLR の単純型と <xref:System.Xml.XmlWriter> インスタンスを処理する場合にも役立ちます。</span><span class="sxs-lookup"><span data-stu-id="31673-1346">This ability is also useful when dealing with CLR simple-types and an <xref:System.Xml.XmlWriter> instance.</span></span> <span data-ttu-id="31673-1347"><xref:System.Xml.XmlConvert> クラスのメソッドを使用して、型指定されたデータを書き出す前に文字列値に変換するのではなく、<xref:System.Xml.XmlWriter.WriteValue%2A> メソッドを呼び出して、型指定された値を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="31673-1347">You can call the <xref:System.Xml.XmlWriter.WriteValue%2A> method to write the typed value instead of using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="31673-1348">非同期操作の場合は、<xref:System.Xml.XmlWriter.WriteValue%2A> の戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1348">For asynchronous operations, convert the return value of <xref:System.Xml.XmlWriter.WriteValue%2A> to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1349">次の表は、CLR 型に対応する既定の XSD データ型を示しています。</span><span class="sxs-lookup"><span data-stu-id="31673-1349">The following table shows the default XSD data types that correspond to CLR types.</span></span>  
  
 <span data-ttu-id="31673-1350">CLR オブジェクトが <xref:System.Collections.IEnumerable>、<xref:System.Collections.IList>、<xref:System.Collections.ICollection> などのリスト型の場合は、値型の配列として扱われます。</span><span class="sxs-lookup"><span data-stu-id="31673-1350">If the CLR object is a list type, such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span>  
  
|<span data-ttu-id="31673-1351">CLR 型</span><span class="sxs-lookup"><span data-stu-id="31673-1351">CLR type</span></span>|<span data-ttu-id="31673-1352">既定の XSD データ型</span><span class="sxs-lookup"><span data-stu-id="31673-1352">Default XSD data type</span></span>|  
|--------------|---------------------------|  
|<xref:System.Boolean?displayProperty=nameWithType>|<span data-ttu-id="31673-1353">xsd:boolean</span><span class="sxs-lookup"><span data-stu-id="31673-1353">xsd:boolean</span></span>|  
|<xref:System.Byte?displayProperty=nameWithType>**|<span data-ttu-id="31673-1354">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="31673-1354">xsd:integer</span></span>|  
|<span data-ttu-id="31673-1355"><xref:System.Byte?displayProperty=nameWithType> 配列</span><span class="sxs-lookup"><span data-stu-id="31673-1355"><xref:System.Byte?displayProperty=nameWithType> array</span></span>|<span data-ttu-id="31673-1356">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="31673-1356">xsd:base64Binary</span></span>|  
|<xref:System.Char?displayProperty=nameWithType>**|<span data-ttu-id="31673-1357">xsd:string</span><span class="sxs-lookup"><span data-stu-id="31673-1357">xsd:string</span></span>|  
|<xref:System.DateTime?displayProperty=nameWithType>|<span data-ttu-id="31673-1358">xsd:dateTime</span><span class="sxs-lookup"><span data-stu-id="31673-1358">xsd:dateTime</span></span>|  
|<xref:System.Decimal?displayProperty=nameWithType>|<span data-ttu-id="31673-1359">xsd:decimal</span><span class="sxs-lookup"><span data-stu-id="31673-1359">xsd:decimal</span></span>|  
|<xref:System.Double?displayProperty=nameWithType>|<span data-ttu-id="31673-1360">xsd:double</span><span class="sxs-lookup"><span data-stu-id="31673-1360">xsd:double</span></span>|  
|<xref:System.Int16?displayProperty=nameWithType>**|<span data-ttu-id="31673-1361">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="31673-1361">xsd:integer</span></span>|  
|<xref:System.Int32?displayProperty=nameWithType>|<span data-ttu-id="31673-1362">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="31673-1362">xsd:integer</span></span>|  
|<xref:System.Int64?displayProperty=nameWithType>|<span data-ttu-id="31673-1363">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="31673-1363">xsd:integer</span></span>|  
|<xref:System.Single?displayProperty=nameWithType>|<span data-ttu-id="31673-1364">xsd:float</span><span class="sxs-lookup"><span data-stu-id="31673-1364">xsd:float</span></span>|  
|<xref:System.String?displayProperty=nameWithType>|<span data-ttu-id="31673-1365">xsd:string</span><span class="sxs-lookup"><span data-stu-id="31673-1365">xsd:string</span></span>|  
|<xref:System.IO.TextReader?displayProperty=nameWithType>|<span data-ttu-id="31673-1366">xsd:string</span><span class="sxs-lookup"><span data-stu-id="31673-1366">xsd:string</span></span>|  
|<xref:System.IO.BinaryReader?displayProperty=nameWithType>|<span data-ttu-id="31673-1367">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="31673-1367">xsd:base64Binary</span></span>|  
  
 <span data-ttu-id="31673-1368">\*\* これらの型は CLS 準拠ではありません。</span><span class="sxs-lookup"><span data-stu-id="31673-1368">\*\*These types are not CLS-compliant.</span></span> <span data-ttu-id="31673-1369">これらには、対応する <xref:System.Xml.XmlWriter.WriteValue%2A> メソッドはありません。</span><span class="sxs-lookup"><span data-stu-id="31673-1369">They do not have corresponding <xref:System.Xml.XmlWriter.WriteValue%2A> methods.</span></span>  
  
 <span data-ttu-id="31673-1370"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1370">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1371">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1371">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : bool -&gt; unit&#xA;override this.WriteValue : bool -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1372">書き込む <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="31673-1372">The <see cref="T:System.Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="31673-1373"><see cref="T:System.Boolean" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1373">Writes a <see cref="T:System.Boolean" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1374">このメソッドは、共通言語ランタイムオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1374">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1375"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-1375">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1376"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1376">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1377">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1377">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="31673-1378"><xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> オーバーロードに配列型を渡して、個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1378">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="31673-1379">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1379">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1380">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1380">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1381">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1381">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1382">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1382">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1383">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1383">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTime -&gt; unit&#xA;override this.WriteValue : DateTime -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1384">書き込む <see cref="T:System.DateTime" /> 値。</span><span class="sxs-lookup"><span data-stu-id="31673-1384">The <see cref="T:System.DateTime" /> value to write.</span></span></param>
        <summary><span data-ttu-id="31673-1385"><see cref="T:System.DateTime" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1385">Writes a <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1386">このメソッドは、共通言語ランタイムオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1386">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1387"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-1387">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1388"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1388">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1389">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1389">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="31673-1390"><xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> オーバーロードに配列型を渡して、個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1390">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="31673-1391">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1391">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1392">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1392">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-1393">次の例では、型指定されたデータを使用して book ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1393">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1394">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1394">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1395">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1395">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1396">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1396">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTimeOffset -&gt; unit&#xA;override this.WriteValue : DateTimeOffset -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1397">書き込む <see cref="T:System.DateTimeOffset" /> 値。</span><span class="sxs-lookup"><span data-stu-id="31673-1397">The <see cref="T:System.DateTimeOffset" /> value to write.</span></span></param>
        <summary><span data-ttu-id="31673-1398"><see cref="T:System.DateTimeOffset" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1398">Writes a <see cref="T:System.DateTimeOffset" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1399">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1399">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1400">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1400">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1401">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1401">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : decimal -&gt; unit&#xA;override this.WriteValue : decimal -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1402">書き込む <see cref="T:System.Decimal" /> 値。</span><span class="sxs-lookup"><span data-stu-id="31673-1402">The <see cref="T:System.Decimal" /> value to write.</span></span></param>
        <summary><span data-ttu-id="31673-1403"><see cref="T:System.Decimal" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1403">Writes a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1404">このメソッドは、共通言語ランタイムオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1404">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1405"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-1405">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1406"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1406">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1407">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1407">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="31673-1408"><xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> オーバーロードに配列型を渡して、個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1408">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="31673-1409">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1409">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1410">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1410">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1411">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1411">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1412">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1412">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1413">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1413">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : double -&gt; unit&#xA;override this.WriteValue : double -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1414">書き込む <see cref="T:System.Double" /> 値。</span><span class="sxs-lookup"><span data-stu-id="31673-1414">The <see cref="T:System.Double" /> value to write.</span></span></param>
        <summary><span data-ttu-id="31673-1415"><see cref="T:System.Double" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1415">Writes a <see cref="T:System.Double" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1416">このメソッドは、共通言語ランタイムオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1416">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1417"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-1417">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1418"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1418">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1419">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1419">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="31673-1420"><xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> オーバーロードに配列型を渡して、個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1420">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="31673-1421">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1421">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1422">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1422">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31673-1423">次の例では、型指定されたデータを使用して book ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1423">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1424">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1424">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1425">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1425">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1426">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1426">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int -&gt; unit&#xA;override this.WriteValue : int -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1427">書き込む <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="31673-1427">The <see cref="T:System.Int32" /> value to write.</span></span></param>
        <summary><span data-ttu-id="31673-1428"><see cref="T:System.Int32" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1428">Writes a <see cref="T:System.Int32" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1429">このメソッドは、共通言語ランタイムオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1429">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1430"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-1430">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1431"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1431">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1432">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1432">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="31673-1433"><xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> オーバーロードに配列型を渡して、個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1433">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="31673-1434">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1434">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1435">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1435">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1436">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1436">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1437">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1437">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1438">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1438">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int64 -&gt; unit&#xA;override this.WriteValue : int64 -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1439">書き込む <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="31673-1439">The <see cref="T:System.Int64" /> value to write.</span></span></param>
        <summary><span data-ttu-id="31673-1440"><see cref="T:System.Int64" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1440">Writes a <see cref="T:System.Int64" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1441">このメソッドは、共通言語ランタイムオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1441">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1442"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-1442">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1443"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1443">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1444">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1444">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="31673-1445"><xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> オーバーロードに配列型を渡して、個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1445">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="31673-1446">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1446">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1447">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1447">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1448">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1448">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1449">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1449">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1450">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1450">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : obj -&gt; unit&#xA;override this.WriteValue : obj -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1451">書き込むオブジェクトの値。</span><span class="sxs-lookup"><span data-stu-id="31673-1451">The object value to write.</span></span>  
  
 <span data-ttu-id="31673-1452">**メモ** .NET Framework 3.5 のリリースでは、このメソッドは <see cref="T:System.DateTimeOffset" /> をパラメーターとして受け入れます。</span><span class="sxs-lookup"><span data-stu-id="31673-1452">**Note** With the release of the .NET Framework 3.5, this method accepts <see cref="T:System.DateTimeOffset" /> as a parameter.</span></span></param>
        <summary><span data-ttu-id="31673-1453">オブジェクト値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1453">Writes the object value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1454">このメソッドは、共通言語ランタイム (CLR) のオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1454">This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1455">CLR オブジェクトが <xref:System.Collections.IEnumerable>、<xref:System.Collections.IList>、<xref:System.Collections.ICollection>などのリスト型である場合、そのオブジェクトは値型の配列として扱われます。</span><span class="sxs-lookup"><span data-stu-id="31673-1455">If the CLR object is a list type such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span> <span data-ttu-id="31673-1456"><xref:System.Xml.XmlWriter> は、XML スキーマ (XSD) のデータ型の規則に従って値を文字列形式に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用してその値を出力します。</span><span class="sxs-lookup"><span data-stu-id="31673-1456">The <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1457">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1457">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1458">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1458">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1459">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1459">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31673-1460"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="31673-1460">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1461">ライターが閉じているかエラー状態です。</span><span class="sxs-lookup"><span data-stu-id="31673-1461">The writer is closed or in error state.</span></span>

<span data-ttu-id="31673-1462">または</span><span class="sxs-lookup"><span data-stu-id="31673-1462">-or-</span></span>

<span data-ttu-id="31673-1463">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1463">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1464">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1464">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : single -&gt; unit&#xA;override this.WriteValue : single -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1465">書き込む単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="31673-1465">The single-precision floating-point number to write.</span></span></param>
        <summary><span data-ttu-id="31673-1466">単精度浮動小数点数を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1466">Writes a single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1467">このメソッドは、共通言語ランタイムオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1467">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1468"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="31673-1468">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="31673-1469"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1469">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1470">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1470">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="31673-1471"><xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> オーバーロードに配列型を渡して、個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1471">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="31673-1472">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1472">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1473">非同期操作の場合は、このメソッドの戻り値を文字列に変換し、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1473">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1474">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1474">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1475">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1475">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1476">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1476">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : string -&gt; unit&#xA;override this.WriteValue : string -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31673-1477">書き込む <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="31673-1477">The <see cref="T:System.String" /> value to write.</span></span></param>
        <summary><span data-ttu-id="31673-1478"><see cref="T:System.String" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1478">Writes a <see cref="T:System.String" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1479">このメソッドは、共通言語ランタイムオブジェクトを受け取り、XML スキーマ定義言語 (XSD) のデータ型変換規則を使用して、入力値を目的の出力の種類に変換します。</span><span class="sxs-lookup"><span data-stu-id="31673-1479">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="31673-1480"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="31673-1480">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="31673-1481">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1481">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="31673-1482"><xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> オーバーロードに配列型を渡して、個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1482">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="31673-1483">テキストのみを出力する <xref:System.Xml.XmlWriter> インスタンスでこのメソッドが呼び出された場合は、型指定された値がテキストにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1483">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="31673-1484">非同期操作の場合は、<xref:System.Xml.XmlWriter.WriteStringAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31673-1484">For asynchronous operations, use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1485">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1485">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1486">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1486">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1487">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1487">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public abstract void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespace : string -&gt; unit" Usage="xmlWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="31673-1488">空白文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="31673-1488">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="31673-1489">派生クラスでオーバーライドされると、指定した空白を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1489">When overridden in a derived class, writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1490">このメソッドは、ドキュメントを手動で書式設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1490">This method is used to manually format your document.</span></span>  
  
 <span data-ttu-id="31673-1491">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="31673-1491">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31673-1492">文字列に空白以外の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="31673-1492">The string contains non-white space characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1493">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1493">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1494">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1494">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteWhitespaceAsync(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteWhitespaceAsync (ws As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteWhitespaceAsync(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteWhitespaceAsync ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="31673-1495">空白文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="31673-1495">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="31673-1496">指定した空白を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="31673-1496">Asynchronously writes out the given white space.</span></span></summary>
        <returns><span data-ttu-id="31673-1497">非同期の <see langword="WriteWhitespace" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="31673-1497">The task that represents the asynchronous <see langword="WriteWhitespace" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1498">これは <xref:System.Xml.XmlWriter.WriteWhitespace%2A>の非同期バージョンであり、同じ機能を備えています。</span><span class="sxs-lookup"><span data-stu-id="31673-1498">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteWhitespace%2A>, with the same functionality.</span></span> <span data-ttu-id="31673-1499">このメソッドを使用するには、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31673-1499">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1500">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1500">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1501">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1501">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="31673-1502">または</span><span class="sxs-lookup"><span data-stu-id="31673-1502">-or-</span></span>

<span data-ttu-id="31673-1503"><see cref="T:System.Xml.XmlWriter" /> フラグを <see cref="P:System.Xml.XmlWriterSettings.Async" /> に設定せずに、 <see langword="true" />非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1503">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="31673-1504">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1504">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="31673-1505">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="31673-1505">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="C#" Value="public abstract string XmlLang { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XmlLang As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ XmlLang { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31673-1506">派生クラスでオーバーライドされると、現在の <see langword="xml:lang" /> スコープを取得します。</span><span class="sxs-lookup"><span data-stu-id="31673-1506">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="31673-1507">現在の <see langword="xml:lang" /> スコープ。</span><span class="sxs-lookup"><span data-stu-id="31673-1507">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1508">このプロパティを使用すると、1つのコンポーネントが、別のコンポーネントがライターを終了した状態を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="31673-1508">This property allows one component to find out in what state another component has left the writer.</span></span> <span data-ttu-id="31673-1509">たとえば、あるコンポーネントが、生成する言語のヘルプテキストを別のコンポーネントに知らせたいとします。</span><span class="sxs-lookup"><span data-stu-id="31673-1509">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="31673-1510">言語情報は、`xml:lang` 属性を記述することによって伝達されます。</span><span class="sxs-lookup"><span data-stu-id="31673-1510">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1511">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1511">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1512">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1512">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlSpace XmlSpace { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XmlSpace As XmlSpace" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31673-1513">派生クラスでオーバーライドされると、現在の <see langword="xml:space" /> スコープを表す <see cref="T:System.Xml.XmlSpace" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="31673-1513">When overridden in a derived class, gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="31673-1514">現在の <see langword="XmlSpace" /> スコープを表す <see langword="xml:space" />。</span><span class="sxs-lookup"><span data-stu-id="31673-1514">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="31673-1515">値</span><span class="sxs-lookup"><span data-stu-id="31673-1515">Value</span></span> 
 </term><description> <span data-ttu-id="31673-1516">意味</span><span class="sxs-lookup"><span data-stu-id="31673-1516">Meaning</span></span> 
 </description></listheader><item><term><see langword="None" /></term><description> <span data-ttu-id="31673-1517"><see langword="xml:space" /> スコープが存在しない場合は、これが既定値になります。</span><span class="sxs-lookup"><span data-stu-id="31673-1517">This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 </description></item><item><term><see langword="Default" /></term><description> <span data-ttu-id="31673-1518">現在のスコープは、<see langword="xml:space" />="default" です。</span><span class="sxs-lookup"><span data-stu-id="31673-1518">The current scope is <see langword="xml:space" />="default".</span></span>  
  
 </description></item><item><term><see langword="Preserve" /></term><description> <span data-ttu-id="31673-1519">現在のスコープは、<see langword="xml:space" />="preserve" です。</span><span class="sxs-lookup"><span data-stu-id="31673-1519">The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31673-1520">これにより、1つのコンポーネントが、別のコンポーネントによってライターがどのような状態になったかを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="31673-1520">This allows one component to find out what state another component has left the writer in.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="31673-1521">先行の非同期操作が完了する前に、 <see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="31673-1521">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="31673-1522">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31673-1522">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
