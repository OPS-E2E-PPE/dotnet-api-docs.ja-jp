<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfc51cc59f1dddad9e01400a81c6bfd64a0fc9dc" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82286058" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlWriterSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.ReaderWriter" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7f7f6-101"><see cref="T:System.Xml.XmlWriter" /> メソッドで作成された <see cref="Overload:System.Xml.XmlWriter.Create" /> オブジェクトでサポートする一連の機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlWriter" /> object created by the <see cref="Overload:System.Xml.XmlWriter.Create" /> method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-102"><xref:System.Xml.XmlWriter.Create%2A> メソッドは、<xref:System.Xml.XmlWriter> インスタンスを取得するために推奨されるメカニズムです。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-102">The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances.</span></span> <span data-ttu-id="7f7f6-103"><xref:System.Xml.XmlWriter.Create%2A> メソッドは、<xref:System.Xml.XmlWriterSettings> クラスを使用して、作成される <xref:System.Xml.XmlWriter> オブジェクトに実装する機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-103">The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7f7f6-104"><xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドで <xref:System.Xml.XmlWriter> オブジェクトを使用している場合は、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> プロパティを使用して、正しい設定の <xref:System.Xml.XmlWriterSettings> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-104">If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings.</span></span> <span data-ttu-id="7f7f6-105">これにより、作成された <xref:System.Xml.XmlWriter> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-105">This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.</span></span>  
  
 <span data-ttu-id="7f7f6-106"><xref:System.Xml.XmlWriterSettings> クラスには、データの一致と出力形式を制御するプロパティが用意されています。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-106">The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.</span></span>  
  
 <span data-ttu-id="7f7f6-107">データの一致チェックと自動修正の場合は、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-107">For data conformance checks and auto-corrections, use these properties:</span></span>  
  
|<span data-ttu-id="7f7f6-108">プロパティ</span><span class="sxs-lookup"><span data-stu-id="7f7f6-108">Property</span></span>|<span data-ttu-id="7f7f6-109">指定対象</span><span class="sxs-lookup"><span data-stu-id="7f7f6-109">Specifies</span></span>|<span data-ttu-id="7f7f6-110">値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-110">Value</span></span>|<span data-ttu-id="7f7f6-111">既定値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-111">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="7f7f6-112">W3C によって定義されているように、文字が有効な XML 文字セットに含まれているかどうかを確認するかどうか。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-112">Whether to check that characters are in the legal XML character set, as defined by W3C.</span></span>|<span data-ttu-id="7f7f6-113">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="7f7f6-113">`true` or `false`</span></span>|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="7f7f6-114">出力が整形式の XML 1.0 ドキュメントまたはフラグメントであるかどうかをチェックするかどうか。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-114">Whether to check that output is a well-formed XML 1.0 document or fragment.</span></span>|<span data-ttu-id="7f7f6-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (ドキュメントレベル)、<xref:System.Xml.ConformanceLevel.Fragment> (フラグメントレベル)、または <xref:System.Xml.ConformanceLevel.Auto> (自動検出)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)</span></span>|<span data-ttu-id="7f7f6-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (ドキュメントレベルの一致)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="7f7f6-117"><xref:System.Xml.XmlWriter.Close%2A> メソッドが呼び出されたときに、閉じていないすべての要素に終了タグを追加するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-117">Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.</span></span>|<span data-ttu-id="7f7f6-118">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="7f7f6-118">`true` or `false`</span></span>|`true`|  
  
 <span data-ttu-id="7f7f6-119">出力形式を指定するには、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-119">To specify output format, use these properties:</span></span>  
  
|<span data-ttu-id="7f7f6-120">プロパティ</span><span class="sxs-lookup"><span data-stu-id="7f7f6-120">Property</span></span>|<span data-ttu-id="7f7f6-121">指定対象</span><span class="sxs-lookup"><span data-stu-id="7f7f6-121">Specifies</span></span>|<span data-ttu-id="7f7f6-122">値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-122">Value</span></span>|<span data-ttu-id="7f7f6-123">既定値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-123">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="7f7f6-124">使用するテキストエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-124">Text encoding to use.</span></span>|<span data-ttu-id="7f7f6-125"><xref:System.Text.Encoding?displayProperty=nameWithType> 値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-125"><xref:System.Text.Encoding?displayProperty=nameWithType> value</span></span>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="7f7f6-126">要素にインデントを指定するかどうか</span><span class="sxs-lookup"><span data-stu-id="7f7f6-126">Whether to indent elements</span></span>|<span data-ttu-id="7f7f6-127">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="7f7f6-127">`true` or `false`</span></span>|<span data-ttu-id="7f7f6-128">`false` (インデントなし)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-128">`false` (no indentation)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="7f7f6-129">インデント時に使用する文字列。 <xref:System.Xml.XmlWriterSettings.Indent%2A> が `true`に設定されている場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-129">Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).</span></span>|<span data-ttu-id="7f7f6-130">String</span><span class="sxs-lookup"><span data-stu-id="7f7f6-130">String</span></span>|<span data-ttu-id="7f7f6-131">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="7f7f6-131">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="7f7f6-132">改行に使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-132">Character string to use for line breaks.</span></span>|<span data-ttu-id="7f7f6-133">String</span><span class="sxs-lookup"><span data-stu-id="7f7f6-133">String</span></span>|<span data-ttu-id="7f7f6-134">`\r\n` (キャリッジリターン、ラインフィード)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-134">`\r\n` (carriage return, line feed)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="7f7f6-135">改行文字を処理する方法。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-135">How to handle newline characters.</span></span>|<span data-ttu-id="7f7f6-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> 値: <xref:System.Xml.NewLineHandling.Entitize> (正規化)、<xref:System.Xml.NewLineHandling.Replace> (置換)、または <xref:System.Xml.NewLineHandling.None> (変更なしのまま)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)</span></span>|<span data-ttu-id="7f7f6-137"><xref:System.Xml.NewLineHandling.Replace> (<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>で指定された文字に置き換える)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-137"><xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="7f7f6-138">個々の行に属性を書き込むかどうかを指定します (<xref:System.Xml.XmlWriterSettings.Indent%2A> が `false`の場合は効果がありません)。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-138">Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).</span></span>|<span data-ttu-id="7f7f6-139">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="7f7f6-139">`true` or `false`</span></span>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="7f7f6-140">XML 宣言を書き込むかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-140">Whether to write an XML declaration.</span></span>|<span data-ttu-id="7f7f6-141">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="7f7f6-141">`true` or `false`</span></span>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-142">次の例では、XML ファイルに書き込む <xref:System.Xml.XmlWriter> を作成し、各属性を新しい行に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-142">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="7f7f6-143">このサンプルでは、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-143">The sample produces the following output:</span></span>  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f7f6-144"><see cref="T:System.Xml.XmlWriterSettings" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-144">Initializes a new instance of the <see cref="T:System.Xml.XmlWriterSettings" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-145">次の表に、<xref:System.Xml.XmlWriterSettings>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-145">The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="7f7f6-146">プロパティ</span><span class="sxs-lookup"><span data-stu-id="7f7f6-146">Property</span></span>|<span data-ttu-id="7f7f6-147">初期値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-147">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="7f7f6-148">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-148">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="7f7f6-149">[https://login.microsoftonline.com/consumers/](`true`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-149">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="7f7f6-150">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-150">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="7f7f6-151">[https://login.microsoftonline.com/consumers/](<xref:System.Xml.ConformanceLevel.Document>)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-151"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="7f7f6-152">[https://login.microsoftonline.com/consumers/](`Encoding.UTF8`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-152">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="7f7f6-153">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-153">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="7f7f6-154">2つのスペース。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-154">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="7f7f6-155">`\r\n` (キャリッジリターン、改行)。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-155">`\r\n` (carriage return, new line).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="7f7f6-156">[https://login.microsoftonline.com/consumers/](<xref:System.Xml.NewLineHandling.Replace>)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-156"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="7f7f6-157">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-157">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="7f7f6-158">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-158">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="7f7f6-159">[https://login.microsoftonline.com/consumers/](`true`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-159">`true`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-160">次の例では、インデントにタブ文字を使用する <xref:System.Xml.XmlWriter> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-160">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlWriterSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-161">非同期 <see cref="T:System.Xml.XmlWriter" /> メソッドを <see cref="T:System.Xml.XmlWriter" /> の特定のインスタンスで使用できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-161">Gets or sets a value that indicates whether asynchronous <see cref="T:System.Xml.XmlWriter" /> methods can be used on a particular <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <value><span data-ttu-id="7f7f6-162">非同期メソッドを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-162"><see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-163">このインスタンスで非同期 <xref:System.Xml.XmlWriter> メソッドを使用する場合は、新しい <xref:System.Xml.XmlWriter> インスタンスを作成するときに、この値を `true` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-163">You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance.</span></span> <span data-ttu-id="7f7f6-164"><xref:System.Xml.XmlWriter> インスタンスが作成されると、<xref:System.Xml.XmlWriterSettings.Async%2A> プロパティは読み取り専用になります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-164">After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="7f7f6-165">このプロパティの既定値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-165">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="7f7f6-166"><xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> のオーバーロードでは、このフラグは無視されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-166">This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="7f7f6-167">つまり、既存の <xref:System.Xml.XmlWriter>に基づいて新しい <xref:System.Xml.XmlWriter> を作成する場合、非同期動作は入力 <xref:System.Xml.XmlWriter>に依存し、<xref:System.Xml.XmlWriterSettings.Async%2A> フラグを使用して非同期動作を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-167">This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="7f7f6-168">Async および Await を使用した非同期プログラミング (C# および Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-168">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-169">ドキュメント内のすべての文字が W3C の「[XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets)」(XML 1.0 勧告) の「2.2 Characters」(2.2 文字) に準拠していることを XML ライターがチェックする必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-169">Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</span></span></summary>
        <value><span data-ttu-id="7f7f6-170">文字をチェックする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-170"><see langword="true" /> to do character checking; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7f7f6-171">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-171">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-172"><xref:System.Xml.XmlWriter> オブジェクトが文字のチェックをサポートしている場合は、W3C[勧告『 xml 1.0 』](https://www.w3.org/TR/REC-xml/#charsets)の「2.2 文字」セクションで指定された有効な XML 文字の範囲外にある文字があると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-172">If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</span></span>  
  
 <span data-ttu-id="7f7f6-173">文字チェックには、XML 名に無効な文字があるかどうかのチェックや、すべての XML 名が有効であるかどうかのチェックは含まれません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-173">Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid.</span></span> <span data-ttu-id="7f7f6-174">これらのチェックは一致チェックの一部であり、常に実行されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-174">These checks are part of conformance checking and are always performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlWriterSettings" Usage="xmlWriterSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f7f6-175"><see cref="T:System.Xml.XmlWriterSettings" /> インスタンスのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-175">Creates a copy of the <see cref="T:System.Xml.XmlWriterSettings" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7f7f6-176">複製された <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-176">The cloned <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-177">複製された <xref:System.Xml.XmlWriterSettings> オブジェクトは、元のオブジェクトの設定に影響を与えることなく変更できます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-177">The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseOutput : bool with get, set" Usage="System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-178"><see cref="T:System.Xml.XmlWriter" /> メソッドを呼び出したときに、<see cref="T:System.IO.TextWriter" /> が、基になるストリームまたは <see cref="M:System.Xml.XmlWriter.Close" /> も閉じる必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-178">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlWriter" /> should also close the underlying stream or <see cref="T:System.IO.TextWriter" /> when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span></span></summary>
        <value><span data-ttu-id="7f7f6-179">基になるストリームまたは <see langword="true" /> も閉じる場合は <see cref="T:System.IO.TextWriter" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-179"><see langword="true" /> to also close the underlying stream or <see cref="T:System.IO.TextWriter" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7f7f6-180">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-180">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-181">この設定は、XML をストリームに書き込み、<xref:System.Xml.XmlWriter> の書き込みが完了した後にストリームの末尾に追加情報を追加する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-181">This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.</span></span>  
  
 <span data-ttu-id="7f7f6-182">このプロパティは、XML コンテンツをストリームまたは <xref:System.IO.TextWriter>に出力する <xref:System.Xml.XmlWriter> インスタンスにのみ適用されます。それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-182">This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-183">次の例では、XML フラグメントをメモリストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-183">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-184">XML ライターが XML 出力をチェックする準拠のレベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-184">Gets or sets the level of conformance that the XML writer checks the XML output for.</span></span></summary>
        <value><span data-ttu-id="7f7f6-185">準拠のレベル (ドキュメント、フラグメント、自動検出) を指定する列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-185">One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection).</span></span> <span data-ttu-id="7f7f6-186">既定では、 <see cref="F:System.Xml.ConformanceLevel.Document" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-186">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-187"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> プロパティは、記述されているストリームが特定のルールセットに準拠していることを確認し、それを保証するように XML ライターを構成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-187">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules.</span></span> <span data-ttu-id="7f7f6-188">XML データは、整形式の XML 1.0 ドキュメントまたはドキュメントフラグメントのルールに準拠しているかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-188">The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment.</span></span> <span data-ttu-id="7f7f6-189">次の表では、3つの設定について説明します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-189">The following table describes the three settings.</span></span> <span data-ttu-id="7f7f6-190">既定値はドキュメントレベルの準拠です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-190">The default is document-level conformance.</span></span>  
  
|<span data-ttu-id="7f7f6-191">設定</span><span class="sxs-lookup"><span data-stu-id="7f7f6-191">Setting</span></span>|<span data-ttu-id="7f7f6-192">説明</span><span class="sxs-lookup"><span data-stu-id="7f7f6-192">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="7f7f6-193">XML 出力が[整形式の xml 1.0 ドキュメントの規則](https://www.w3.org/TR/REC-xml/#sec-well-formed)に準拠していること、および準拠しているプロセッサで処理できることを確認します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-193">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](https://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.</span></span><br /><br /> <span data-ttu-id="7f7f6-194">ドキュメントの一致チェックには、ほとんどのフラグメントレベルのチェックが含まれ、次のことも確認します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-194">The document conformance checks include most of the fragment-level checks and also ensure the following:</span></span><br /><br /> <span data-ttu-id="7f7f6-195">-最上位レベルの項目に、XML 宣言、DTD、要素、コメント、空白、または処理命令以外のノードがありません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-195">-   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="7f7f6-196">-XML データには、最上位レベルの要素ノードが1つだけあります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-196">-   The XML data has one and only one top-level element node.</span></span><br /><br /> <span data-ttu-id="7f7f6-197">XML ライターは、書き込まれた DTD 情報を解析しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-197">The XML writer doesn't parse DTD information that is written.</span></span> <span data-ttu-id="7f7f6-198">ユーザーは、DTD が整形式であることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-198">The user is responsible for ensuring that the DTD is well-formed.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="7f7f6-199">XML 出力が、整形[式の xml 1.0 ドキュメントフラグメントの規則](https://www.w3.org/TR/REC-xml/#wf-entities)に準拠していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-199">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](https://www.w3.org/TR/REC-xml/#wf-entities).</span></span><br /><br /> <span data-ttu-id="7f7f6-200">この設定は、最上位レベルに複数のルート要素またはテキストノードを含む XML データを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-200">This setting accepts XML data that has multiple root elements or text nodes at the top level.</span></span> <span data-ttu-id="7f7f6-201">このレベルのチェックでは、すべてのプロセッサで、読み込むストリームが XML 1.0 の外部解析対象エンティティとして処理できることが保証されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-201">This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.</span></span><br /><br /> <span data-ttu-id="7f7f6-202">ドキュメントフラグメントで DTD 情報を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-202">DTD information isn't allowed in document fragments.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="7f7f6-203">XML ライターが、受信データに基づいた一致チェックのレベルを決定する必要があることを指定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-203">Specifies that the XML writer should determine the level of conformance checking based on the incoming data.</span></span> <span data-ttu-id="7f7f6-204">この設定は、生成された XML が整形式の XML ドキュメントであるかフラグメントであるかがわからない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-204">This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.</span></span><br /><br /> <span data-ttu-id="7f7f6-205">ドキュメントの一致チェックは、次の場合に適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-205">Document conformance checking is applied in the following cases:</span></span><br /><br /> <span data-ttu-id="7f7f6-206"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> メソッドが呼び出される場合は。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-206">-   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.</span></span><br /><span data-ttu-id="7f7f6-207">-DTD 情報が記述されている場合。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-207">-   If DTD information is written.</span></span><br /><br /> <span data-ttu-id="7f7f6-208">XML データに次のいずれかが含まれている場合、フラグメント一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-208">Fragment conformance checking is applied if the XML data contains one of these:</span></span><br /><br /> <span data-ttu-id="7f7f6-209">-ルートレベルのテキスト、CDATA、または EntityReference ノード。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-209">-   Text, CDATA, or EntityReference node at the root level.</span></span><br /><span data-ttu-id="7f7f6-210">-ルートレベルに複数の要素があります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-210">-   More than one element at the root level.</span></span><br /><span data-ttu-id="7f7f6-211">-ルートレベルに要素がありません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-211">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="7f7f6-212">テキスト ノードを書き出そうとしてルート レベルに DTD があるなどの矛盾がある場合には <xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-212">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="7f7f6-213">別の <xref:System.Xml.XmlWriter> オブジェクトをラップしている場合、外側のオブジェクトは追加の準拠のチェックを行いません。これは、基になるオブジェクトに残されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-213">If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.</span></span>|  
  
 <span data-ttu-id="7f7f6-214">指定した準拠レベルに違反する情報が XML ライターによって検出されると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-214">If the XML writer detects any information that would violate the specified level of conformance, it throws an exception.</span></span> <span data-ttu-id="7f7f6-215">場合によっては、XML ライターが準拠エラーを自動的に修正します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-215">In some cases, the XML writer automatically corrects the conformance error.</span></span> <span data-ttu-id="7f7f6-216">たとえば、ライターは、例外をスローせずに、閉じられていない属性を閉じます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-216">For example, the writer closes an unclosed attribute without throwing an exception.</span></span> <span data-ttu-id="7f7f6-217">次の表は、各設定でさまざまな準拠違反がどのように処理されるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-217">The following table shows how various conformance violations are handled in each setting.</span></span>  
  
|<span data-ttu-id="7f7f6-218">条件</span><span class="sxs-lookup"><span data-stu-id="7f7f6-218">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="7f7f6-219">DTD 情報が見つかりました。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-219">DTD information is found.</span></span>|<span data-ttu-id="7f7f6-220">この設定の違反ではありません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-220">Not a violation for this setting.</span></span> <span data-ttu-id="7f7f6-221">ただし、XML ライターは DTD をチェックしません。ユーザーは、DTD が整形式であることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-221">However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.</span></span>|<span data-ttu-id="7f7f6-222"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-222"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-223">ドキュメントの一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-223">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="7f7f6-224"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> が呼び出されます</span><span class="sxs-lookup"><span data-stu-id="7f7f6-224"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.</span></span>|<span data-ttu-id="7f7f6-225">この設定の違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-225">Not considered a violation for this setting.</span></span>|<span data-ttu-id="7f7f6-226"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-226"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-227">ドキュメントの一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-227">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="7f7f6-228"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> は複数回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-228"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.</span></span>|<span data-ttu-id="7f7f6-229"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-229"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-230"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-230"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-231"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-231"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="7f7f6-232">テキスト値が最上位レベルに表示されます (要素ノードまたは属性ノードの下にはありません)。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-232">A text value appears at the top level (not below an element or attribute node).</span></span>|<span data-ttu-id="7f7f6-233"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-233"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-234">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-234">Not considered a violation.</span></span>|<span data-ttu-id="7f7f6-235">フラグメント一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-235">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="7f7f6-236">最上位レベルに複数の要素または要素は表示されません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-236">Multiple elements or no elements appear at the top level.</span></span>|<span data-ttu-id="7f7f6-237"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-237"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-238">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-238">Not considered a violation.</span></span>|<span data-ttu-id="7f7f6-239">フラグメント一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-239">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="7f7f6-240">最上位の項目は空白です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-240">Top-level item is white space.</span></span>|<span data-ttu-id="7f7f6-241">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-241">Not considered a violation.</span></span>|<span data-ttu-id="7f7f6-242">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-242">Not considered a violation.</span></span>|<span data-ttu-id="7f7f6-243">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-243">Not considered a violation.</span></span>|  
|<span data-ttu-id="7f7f6-244">属性ノードを終了するために <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> が呼び出されていません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-244"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.</span></span>|<span data-ttu-id="7f7f6-245">XML ライターによって修正されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-245">Fixed by XML writer.</span></span>|<span data-ttu-id="7f7f6-246">XML ライターによって修正されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-246">Fixed by XML writer.</span></span>|<span data-ttu-id="7f7f6-247">XML ライターによって修正されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-247">Fixed by XML writer.</span></span>|  
|<span data-ttu-id="7f7f6-248">XML ライターが不適切に入れ子にされた状態にあります (たとえば、<xref:System.Xml.XmlWriter.WriteStartElement%2A> の呼び出しの後に <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>)。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-248">The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).</span></span>|<span data-ttu-id="7f7f6-249"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-249"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-250"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-250"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-251"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-251"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="7f7f6-252">最上位レベルの項目は属性です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-252">Top-level item is an attribute.</span></span>|<span data-ttu-id="7f7f6-253"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-253"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-254"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-254"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-255"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-255"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="7f7f6-256">複数の連続したテキスト ノードがある。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-256">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="7f7f6-257">違反とは見なされませんが、テキストノードを連結するのはユーザーの責任です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-257">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="7f7f6-258">違反とは見なされませんが、テキストノードを連結するのはユーザーの責任です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-258">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="7f7f6-259">違反とは見なされませんが、テキストノードを連結するのはユーザーの責任です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-259">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|  
|<span data-ttu-id="7f7f6-260">同じ名前空間プレフィックスが要素内で 2 回宣言されている。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-260">The same namespace prefix is declared twice in an element.</span></span>|<span data-ttu-id="7f7f6-261">XML ライターは、2番目の名前空間の新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-261">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="7f7f6-262">XML ライターは、2番目の名前空間の新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-262">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="7f7f6-263">XML ライターは、2番目の名前空間の新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-263">The XML writer generates a new prefix for the second namespace.</span></span>|  
|<span data-ttu-id="7f7f6-264"><xref:System.Xml.XmlWriter.WriteStartElement%2A> は、そのスコープ内で宣言されていないプレフィックスと名前空間を指定します。または、プレフィックスが別の名前空間に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-264"><xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.</span></span>|<span data-ttu-id="7f7f6-265">XML ライターは、必要な名前空間ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-265">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="7f7f6-266">XML ライターは、必要な名前空間ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-266">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="7f7f6-267">XML ライターは、必要な名前空間ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-267">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="7f7f6-268"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> は、そのスコープ内で宣言されていないプレフィックスと名前空間を指定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-268"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.</span></span>|<span data-ttu-id="7f7f6-269">XML ライターは、必要な名前空間ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-269">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="7f7f6-270">XML ライターは、必要な名前空間ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-270">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="7f7f6-271">XML ライターは、必要な名前空間ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-271">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="7f7f6-272"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> はプレフィックスと名前空間を指定しますが、プレフィックスは別のスコープ内の名前空間に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-272"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.</span></span>|<span data-ttu-id="7f7f6-273">XML ライターは、指定されたプレフィックスを無視し、正しいプレフィックスを検索するか、新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-273">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="7f7f6-274">XML ライターは、指定されたプレフィックスを無視し、正しいプレフィックスを検索するか、新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-274">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="7f7f6-275">XML ライターは、指定されたプレフィックスを無視し、正しいプレフィックスを検索するか、新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-275">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|  
|<span data-ttu-id="7f7f6-276"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> は、スコープ内に存在しない名前空間を使用して要素の内容を書き込むために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-276"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="7f7f6-277"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-277"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-278"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-278"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-279"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-279"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="7f7f6-280"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> は、スコープ内に存在しない名前空間を使用して属性の内容を書き込むために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-280"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="7f7f6-281">XML ライターは、必要な名前空間宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-281">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="7f7f6-282">XML ライターは、必要な名前空間宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-282">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="7f7f6-283">XML ライターは、必要な名前空間宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-283">The XML writer writes the necessary namespace declaration.</span></span>|  
|<span data-ttu-id="7f7f6-284">`xml:space` 属性に有効な値が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-284">The `xml:space` attribute doesn't contain a valid value.</span></span>|<span data-ttu-id="7f7f6-285"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-285"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-286"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-286"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-287"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-287"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="7f7f6-288">無効な名前が検出される。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-288">An invalid name is encountered.</span></span>|<span data-ttu-id="7f7f6-289"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-289"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-290"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-290"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-291"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-291"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="7f7f6-292">`xml` プレフィックスが URI と一致しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-292">The `xml` prefix isn't matched to a URI.</span></span>|<span data-ttu-id="7f7f6-293">XML ライターは、この種類の違反を確認しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-293">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="7f7f6-294">XML ライターは、この種類の違反を確認しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-294">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="7f7f6-295">XML ライターは、この種類の違反を確認しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-295">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="7f7f6-296">`xml` プレフィックスが http://www.w3.org/XML/1998/namespace URI と一致しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-296">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="7f7f6-297"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-297"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-298"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-298"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-299"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-299"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="7f7f6-300">`xmlns` プレフィックスまたはローカル名が URI と一致しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-300">The `xmlns` prefix or local name isn't matched to a URI.</span></span>|<span data-ttu-id="7f7f6-301">XML ライターは、この種類の違反を確認しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-301">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="7f7f6-302">XML ライターは、この種類の違反を確認しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-302">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="7f7f6-303">XML ライターは、この種類の違反を確認しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-303">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="7f7f6-304">`xmlns` プレフィックスまたはローカル名が http://www.w3.org/2000/xmlns URI と一致しません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-304">The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.</span></span>|<span data-ttu-id="7f7f6-305"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-305"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-306"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-306"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="7f7f6-307"><xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-307"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-308">次の例では、XML フラグメントをメモリストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-308">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoNotEscapeUriAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-309"><see cref="T:System.Xml.XmlWriter" /> が URI 属性をエスケープしないかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-309">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes.</span></span></summary>
        <value><span data-ttu-id="7f7f6-310"><see cref="T:System.Xml.XmlWriter" /> が URI 属性をエスケープしない場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-310"><see langword="true" /> if the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7f7f6-311">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-311">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Xml.XmlWriterSettings.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-312">使用するテキスト エンコーディングの種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-312">Gets or sets the type of text encoding to use.</span></span></summary>
        <value><span data-ttu-id="7f7f6-313">使用するテキスト エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-313">The text encoding to use.</span></span> <span data-ttu-id="7f7f6-314">既定では、 <see langword="Encoding.UTF8" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-314">The default is <see langword="Encoding.UTF8" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-315"><xref:System.Xml.XmlWriter> は、文字単位ではなく、文字のバッファーをすべて一度にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-315">The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character.</span></span> <span data-ttu-id="7f7f6-316">エンコーディングエラーが発生した場合に <xref:System.Xml.XmlWriter.Flush%2A> メソッドが呼び出されると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-316">An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.</span></span>  
  
 <span data-ttu-id="7f7f6-317"><xref:System.Xml.XmlWriterSettings.Encoding%2A> プロパティは、指定された <xref:System.IO.Stream> または指定されたファイル名を使用して作成された <xref:System.Xml.XmlWriter> インスタンスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-317">The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name.</span></span> <span data-ttu-id="7f7f6-318">指定した <xref:System.IO.TextWriter>で <xref:System.Xml.XmlWriter> インスタンスが作成された場合、<xref:System.Xml.XmlWriterSettings.Encoding%2A> プロパティは、基になる <xref:System.IO.TextWriter>のエンコーディングによってオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-318">If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="7f7f6-319">たとえば、特定の <xref:System.Xml.XmlWriter>に対してこのプロパティが Unicode (UTF-16) に設定されていても、基になるライターが <xref:System.IO.StreamWriter> (<xref:System.IO.TextWriter>から派生) で、そのエンコーディングが UTF8 に設定されている場合、出力は UTF-8 でエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-319">For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.</span></span>  
  
 <span data-ttu-id="7f7f6-320"><xref:System.Xml.XmlWriter> インスタンスが他の出力パラメーターを使用して作成された場合、<xref:System.Xml.XmlWriterSettings.Encoding%2A> プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-320">If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.</span></span>  
  
 <span data-ttu-id="7f7f6-321">たとえば、行が次のように表示されているとします。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-321">In the following example:</span></span>  
  
-   <span data-ttu-id="7f7f6-322"><xref:System.Xml.XmlWriterSettings.Encoding%2A> の既定値は `Encoding.UTF8` です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-322">The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.</span></span>  
  
-   <span data-ttu-id="7f7f6-323"><xref:System.IO.StreamWriter> が `Encoding.Unicode` に設定され、<xref:System.IO.StreamWriter>のエンコードによって <xref:System.Xml.XmlWriterSettings.Encoding%2A> 設定がオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-323">The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>'s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.</span></span>  
  
-   <span data-ttu-id="7f7f6-324">出力が `Encoding.Unicode`されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-324">The output will be `Encoding.Unicode`.</span></span>  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f7f6-325">信頼できないソースからの <xref:System.Text.Encoding> オブジェクトは受け入れないでください。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-325">Do not accept an <xref:System.Text.Encoding> object from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-326">次の例は、`Enconding` プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-326">The following example shows how to set the `Enconding` property:</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XML_Migration/CS/migration.cs#6)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XML_Migration/VB/migration.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Xml.XmlWriterSettings.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-327">要素にインデントを設定するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-327">Gets or sets a value indicating whether to indent elements.</span></span></summary>
        <value><span data-ttu-id="7f7f6-328">各要素を新しい行に書き込んでインデントを設定する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-328"><see langword="true" /> to write individual elements on new lines and indent; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7f7f6-329">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-329">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-330">このプロパティは、テキストコンテンツを出力する <xref:System.Xml.XmlWriter> インスタンスにのみ適用されます。それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-330">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="7f7f6-331">要素に混合コンテンツが含まれていない限り、要素はインデントされます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-331">The elements are indented as long as the element does not contain mixed content.</span></span> <span data-ttu-id="7f7f6-332"><xref:System.Xml.XmlWriter.WriteString%2A> または <xref:System.Xml.XmlWriter.WriteWhitespace%2A> メソッドが呼び出され、混合要素コンテンツが書き込まれると、<xref:System.Xml.XmlWriter> のインデントが停止します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-332">Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting.</span></span> <span data-ttu-id="7f7f6-333">混合コンテンツ要素が閉じられると、インデントが解除されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-333">The indenting resumes once the mixed content element is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-334">次の例では、インデントにタブ文字を使用する <xref:System.Xml.XmlWriter> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-334">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChars : string with get, set" Usage="System.Xml.XmlWriterSettings.IndentChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-335">インデント処理を行うときに使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-335">Gets or sets the character string to use when indenting.</span></span> <span data-ttu-id="7f7f6-336">この設定は、<see cref="P:System.Xml.XmlWriterSettings.Indent" /> プロパティが <see langword="true" /> に設定されている場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-336">This setting is used when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property is set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="7f7f6-337">インデント処理を行うときに使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-337">The character string to use when indenting.</span></span> <span data-ttu-id="7f7f6-338">これには任意の文字列値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-338">This can be set to any string value.</span></span> <span data-ttu-id="7f7f6-339">ただし、有効な XML にするには、空白、タブ、復帰、ライン フィードなどの有効な空白文字だけを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-339">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span></span> <span data-ttu-id="7f7f6-340">既定値は 2 つのスペースです。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-340">The default is two spaces.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-341">このプロパティは、テキストコンテンツを出力する <xref:System.Xml.XmlWriter> インスタンスにのみ適用されます。それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-341">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="7f7f6-342">インデント文字によって無効な XML が生成される場合、<xref:System.Xml.XmlWriter> は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-342">The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-343">次の例では、インデントにタブ文字を使用する <xref:System.Xml.XmlWriter> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-343">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f7f6-344"><see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> に代入された値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-344">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceHandling : System.Xml.NamespaceHandling with get, set" Usage="System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-345">XML コンテンツの書き込み時に、重複する名前空間宣言を <see cref="T:System.Xml.XmlWriter" /> で削除するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-345">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> should remove duplicate namespace declarations when writing XML content.</span></span> <span data-ttu-id="7f7f6-346">既定の動作では、ライターの名前空間リゾルバーに存在するすべての名前空間宣言がライターによって出力されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-346">The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.</span></span></summary>
        <value><span data-ttu-id="7f7f6-347"><see cref="T:System.Xml.NamespaceHandling" /> で重複する名前空間宣言を削除するかどうかを指定するための <see cref="T:System.Xml.XmlWriter" /> 列挙体。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-347">The <see cref="T:System.Xml.NamespaceHandling" /> enumeration used to specify whether to remove duplicate namespace declarations in the <see cref="T:System.Xml.XmlWriter" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineChars : string with get, set" Usage="System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-348">改行に使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-348">Gets or sets the character string to use for line breaks.</span></span></summary>
        <value><span data-ttu-id="7f7f6-349">改行に使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-349">The character string to use for line breaks.</span></span> <span data-ttu-id="7f7f6-350">これには任意の文字列値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-350">This can be set to any string value.</span></span> <span data-ttu-id="7f7f6-351">ただし、有効な XML にするには、空白、タブ、復帰、ライン フィードなどの有効な空白文字だけを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-351">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span></span> <span data-ttu-id="7f7f6-352">既定値は<c>\r\n</c> (キャリッジリターン、改行) です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-352">The default is <c>\r\n</c> (carriage return, new line).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-353">このプロパティは、テキストコンテンツを出力する <xref:System.Xml.XmlWriter> インスタンスにのみ適用されます。それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-353">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="7f7f6-354">改行文字によって無効な XML が生成される場合、<xref:System.Xml.XmlWriter> は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-354">The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f7f6-355"><see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> に代入された値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-355">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineHandling : System.Xml.NewLineHandling with get, set" Usage="System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-356">出力内の改行を正規化するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-356">Gets or sets a value indicating whether to normalize line breaks in the output.</span></span></summary>
        <value><span data-ttu-id="7f7f6-357"><see cref="T:System.Xml.NewLineHandling" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-357">One of the <see cref="T:System.Xml.NewLineHandling" /> values.</span></span> <span data-ttu-id="7f7f6-358">既定では、 <see cref="F:System.Xml.NewLineHandling.Replace" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-358">The default is <see cref="F:System.Xml.NewLineHandling.Replace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-359">この設定は、テキストの内容または属性値を書き込むときに適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-359">This setting applies when writing text content or attribute values.</span></span> <span data-ttu-id="7f7f6-360">次に、<xref:System.Xml.NewLineHandling> の各値について説明します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-360">Each of the <xref:System.Xml.NewLineHandling> values is described below:</span></span>  
  
-   <span data-ttu-id="7f7f6-361"><xref:System.Xml.NewLineHandling.Entitize> 設定は、正規化された <xref:System.Xml.XmlReader> によって保存されない新しい行文字を文字エンティティに置き換えるように <xref:System.Xml.XmlWriter> に指示します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-361">The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities.</span></span> <span data-ttu-id="7f7f6-362">これは、正規化された <xref:System.Xml.XmlReader>によって出力が読み込まれるラウンドトリップシナリオで役立ちます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-362">This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="7f7f6-363">`\t`、`\n` および `\r` からのラウンドトリップ時の属性値には、<xref:System.Xml.XmlReader>で正規化されたときに属性値のスペースに置き換えられるため、追加の正規化規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-363">Additional normalization rules apply for attribute values when round tripping since `\t`, `\n` and `\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="7f7f6-364"><xref:System.Xml.NewLineHandling.Replace> 設定では、新しい行文字を `\r\n`に置き換えるように <xref:System.Xml.XmlWriter> に指示します。これは、Microsoft Windows オペレーティングシステムで使用される改行形式です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-364">The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\r\n`, which is the new line format used by the Microsoft Windows operating system.</span></span> <span data-ttu-id="7f7f6-365">これにより、メモ帳または Microsoft Word アプリケーションによってファイルが正しく表示されるようになります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-365">This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications.</span></span> <span data-ttu-id="7f7f6-366">また、この設定により、属性の新しい行が文字エンティティに置き換えられ、文字が保持されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-366">This setting also replaces new lines in attributes with character entities to preserve the characters.</span></span> <span data-ttu-id="7f7f6-367">これが既定値です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-367">This is the default value.</span></span>  
  
-   <span data-ttu-id="7f7f6-368"><xref:System.Xml.NewLineHandling.None> 設定は、入力を変更せずに <xref:System.Xml.XmlWriter> に指示します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-368">The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged.</span></span> <span data-ttu-id="7f7f6-369">この設定は、改行処理が不要な場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-369">This setting is used when you do not want any new-line processing.</span></span> <span data-ttu-id="7f7f6-370">これは、正規化を行わない <xref:System.Xml.XmlReader> (たとえば、既定の設定の <xref:System.Xml.XmlTextReader>) によって出力が読み込まれる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-370">This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)</span></span>  
  
 <span data-ttu-id="7f7f6-371">次の表は、<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> プロパティの設定に応じて入力値が指定された場合の <xref:System.Xml.XmlWriter.WriteString%2A> メソッドの出力を示しています。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-371">The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting.</span></span> <span data-ttu-id="7f7f6-372">これらの表は、テキストコンテンツの書き込み時と属性値の書き込み時の出力を示しています。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-372">The tables show the output when writing text content and also when writing an attribute value.</span></span>  
  
 `Text Node Value:`  
  
||<span data-ttu-id="7f7f6-373">\r\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-373">\r\n</span></span>|<span data-ttu-id="7f7f6-374">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-374">\n</span></span>|<span data-ttu-id="7f7f6-375">\r</span><span class="sxs-lookup"><span data-stu-id="7f7f6-375">\r</span></span>|<span data-ttu-id="7f7f6-376">\t</span><span class="sxs-lookup"><span data-stu-id="7f7f6-376">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="7f7f6-377">含まれる</span><span class="sxs-lookup"><span data-stu-id="7f7f6-377">Entitize</span></span>|<span data-ttu-id="7f7f6-378">& #D; \n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-378">&#D;\n</span></span>|<span data-ttu-id="7f7f6-379">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-379">\n</span></span>|<span data-ttu-id="7f7f6-380">& #D;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-380">&#D;</span></span>|<span data-ttu-id="7f7f6-381">\t</span><span class="sxs-lookup"><span data-stu-id="7f7f6-381">\t</span></span>|  
|<span data-ttu-id="7f7f6-382">以前の型</span><span class="sxs-lookup"><span data-stu-id="7f7f6-382">Replace</span></span>|<span data-ttu-id="7f7f6-383">\r\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-383">\r\n</span></span>|<span data-ttu-id="7f7f6-384">\r\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-384">\r\n</span></span>|<span data-ttu-id="7f7f6-385">\r\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-385">\r\n</span></span>|<span data-ttu-id="7f7f6-386">\t</span><span class="sxs-lookup"><span data-stu-id="7f7f6-386">\t</span></span>|  
|<span data-ttu-id="7f7f6-387">なし</span><span class="sxs-lookup"><span data-stu-id="7f7f6-387">None</span></span>|<span data-ttu-id="7f7f6-388">\r\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-388">\r\n</span></span>|<span data-ttu-id="7f7f6-389">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-389">\n</span></span>|<span data-ttu-id="7f7f6-390">\r</span><span class="sxs-lookup"><span data-stu-id="7f7f6-390">\r</span></span>|<span data-ttu-id="7f7f6-391">\t</span><span class="sxs-lookup"><span data-stu-id="7f7f6-391">\t</span></span>|  
  
 `Attribute Value:`  
  
||<span data-ttu-id="7f7f6-392">\r\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-392">\r\n</span></span>|<span data-ttu-id="7f7f6-393">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-393">\n</span></span>|<span data-ttu-id="7f7f6-394">\r</span><span class="sxs-lookup"><span data-stu-id="7f7f6-394">\r</span></span>|<span data-ttu-id="7f7f6-395">\t</span><span class="sxs-lookup"><span data-stu-id="7f7f6-395">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="7f7f6-396">含まれる</span><span class="sxs-lookup"><span data-stu-id="7f7f6-396">Entitize</span></span>|<span data-ttu-id="7f7f6-397">& #D; & #A;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-397">&#D;&#A;</span></span>|<span data-ttu-id="7f7f6-398">& #A;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-398">&#A;</span></span>|<span data-ttu-id="7f7f6-399">& #D;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-399">&#D;</span></span>|<span data-ttu-id="7f7f6-400">&\#9;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-400">&\#9;</span></span>|  
|<span data-ttu-id="7f7f6-401">以前の型</span><span class="sxs-lookup"><span data-stu-id="7f7f6-401">Replace</span></span>|<span data-ttu-id="7f7f6-402">& #D; & #A;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-402">&#D;&#A;</span></span>|<span data-ttu-id="7f7f6-403">& #A;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-403">&#A;</span></span>|<span data-ttu-id="7f7f6-404">& #D;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-404">&#D;</span></span>|<span data-ttu-id="7f7f6-405">&\#9;</span><span class="sxs-lookup"><span data-stu-id="7f7f6-405">&\#9;</span></span>|  
|<span data-ttu-id="7f7f6-406">なし</span><span class="sxs-lookup"><span data-stu-id="7f7f6-406">None</span></span>|<span data-ttu-id="7f7f6-407">\r\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-407">\r\n</span></span>|<span data-ttu-id="7f7f6-408">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-408">\n</span></span>|<span data-ttu-id="7f7f6-409">\r</span><span class="sxs-lookup"><span data-stu-id="7f7f6-409">\r</span></span>|<span data-ttu-id="7f7f6-410">\t</span><span class="sxs-lookup"><span data-stu-id="7f7f6-410">\t</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="7f7f6-411"><xref:System.Xml.XmlWriter> は、CDATA セクション、コメント、または処理命令内にコンテンツを書き込むときに、次の動作をします。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-411">The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction.</span></span> <span data-ttu-id="7f7f6-412"><xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> プロパティが <xref:System.Xml.NewLineHandling.Entitize>に設定されている場合でも、新しい行は文字エンティティには置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-412">New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>.</span></span> <span data-ttu-id="7f7f6-413">これは、文字エンティティが CDATA セクション、コメント、または処理命令で認識されないためです。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-413">This is because character entities are not recognized in CDATA sections, comments or processing instructions.</span></span> <span data-ttu-id="7f7f6-414"><xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> プロパティが <xref:System.Xml.NewLineHandling.None> または <xref:System.Xml.NewLineHandling.Replace>に設定されている場合は、テキストノードの値を書き込む場合と同じ動作になります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-414">If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.</span></span>  
  
 <span data-ttu-id="7f7f6-415">次の表では、各空白文字の入力に対して正規化 <xref:System.Xml.XmlReader> が返す内容について説明します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-415">The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input.</span></span> <span data-ttu-id="7f7f6-416">詳細については、W3C 勧告『 [XML 1.0 』](https://www.w3.org/TR/REC-xml/)の2.11 および3.3.3 のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-416">For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7f7f6-417">標準化されたリーダーとは、<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> メソッドによって作成された <xref:System.Xml.XmlReader> オブジェクトのことです。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-417">A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7f7f6-418">これらのオブジェクトは、常に改行の正規化と属性の完全な正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-418">These objects always perform line break normalization and full normalization of attributes.</span></span> <span data-ttu-id="7f7f6-419"><xref:System.Xml.XmlTextReader> オブジェクトは、<xref:System.Xml.XmlTextReader.Normalization%2A> プロパティが `true`に設定されている場合は、正規化リーダーにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-419">The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.</span></span>  
  
||<span data-ttu-id="7f7f6-420">\r\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-420">\r\n</span></span>|<span data-ttu-id="7f7f6-421">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-421">\n</span></span>|<span data-ttu-id="7f7f6-422">\r</span><span class="sxs-lookup"><span data-stu-id="7f7f6-422">\r</span></span>|<span data-ttu-id="7f7f6-423">\t</span><span class="sxs-lookup"><span data-stu-id="7f7f6-423">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="7f7f6-424">テキストノードの値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-424">Text Node Value</span></span>|<span data-ttu-id="7f7f6-425">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-425">\n</span></span>|<span data-ttu-id="7f7f6-426">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-426">\n</span></span>|<span data-ttu-id="7f7f6-427">\n</span><span class="sxs-lookup"><span data-stu-id="7f7f6-427">\n</span></span>|<span data-ttu-id="7f7f6-428">\t</span><span class="sxs-lookup"><span data-stu-id="7f7f6-428">\t</span></span>|  
|<span data-ttu-id="7f7f6-429">属性値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-429">Attribute Value</span></span>|<span data-ttu-id="7f7f6-430">1つのスペース</span><span class="sxs-lookup"><span data-stu-id="7f7f6-430">single space</span></span>|<span data-ttu-id="7f7f6-431">1つのスペース</span><span class="sxs-lookup"><span data-stu-id="7f7f6-431">single space</span></span>|<span data-ttu-id="7f7f6-432">1つのスペース</span><span class="sxs-lookup"><span data-stu-id="7f7f6-432">single space</span></span>|<span data-ttu-id="7f7f6-433">1つのスペース</span><span class="sxs-lookup"><span data-stu-id="7f7f6-433">single space</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineOnAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-434">新しい行に属性を書き込むかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-434">Gets or sets a value indicating whether to write attributes on a new line.</span></span></summary>
        <value><span data-ttu-id="7f7f6-435">個々の行に属性を書き込む場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-435"><see langword="true" /> to write attributes on individual lines; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7f7f6-436">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-436">The default is <see langword="false" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="7f7f6-437"><see cref="P:System.Xml.XmlWriterSettings.Indent" /> プロパティ値が <see langword="false" /> の場合、この設定は無効です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-437">This setting has no effect when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property value is <see langword="false" />.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="7f7f6-438"><see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> を <see langword="true" /> に設定すると、各属性は、新しい行にインデントを 1 レベル増やして記述されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-438">When <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> is set to <see langword="true" />, each attribute is pre-pended with a new line and one extra level of indentation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-439">このプロパティは、テキストコンテンツを出力する <xref:System.Xml.XmlWriter> インスタンスにのみ適用されます。それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-439">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-440">次の例では、XML ファイルに書き込む <xref:System.Xml.XmlWriter> を作成し、各属性を新しい行に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-440">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="7f7f6-441">このサンプルでは、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-441">The sample produces the following output:</span></span>  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OmitXmlDeclaration : bool with get, set" Usage="System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-442">XML 宣言を省略するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-442">Gets or sets a value indicating whether to omit an XML declaration.</span></span></summary>
        <value><span data-ttu-id="7f7f6-443">XML 宣言を省略する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-443"><see langword="true" /> to omit the XML declaration; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7f7f6-444">既定値は <see langword="false" /> で、XML 宣言が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-444">The default is <see langword="false" />, an XML declaration is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-445">このプロパティは、テキストコンテンツを出力する <xref:System.Xml.XmlWriter> インスタンスにのみ適用されます。それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-445">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="7f7f6-446"><xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> が `false`に設定されている場合、XML 宣言は自動的に書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-446">If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically</span></span>  
  
 <span data-ttu-id="7f7f6-447">XML 宣言は、<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> が `true`に設定されている場合でも、<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> が <xref:System.Xml.ConformanceLevel.Document>に設定されている場合は常に書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-447">The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="7f7f6-448"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> が <xref:System.Xml.ConformanceLevel.Fragment>に設定されている場合、XML 宣言は書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-448">The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="7f7f6-449"><xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> を呼び出して、XML 宣言を明示的に書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-449">You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f7f6-450">次の例では、XML フラグメントをメモリストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-450">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputMethod : System.Xml.XmlOutputMethod" Usage="System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-451"><see cref="T:System.Xml.XmlWriter" /> 出力をシリアル化するために使用するメソッドを取得します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-451">Gets the method used to serialize the <see cref="T:System.Xml.XmlWriter" /> output.</span></span></summary>
        <value><span data-ttu-id="7f7f6-452"><see cref="T:System.Xml.XmlOutputMethod" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-452">One of the <see cref="T:System.Xml.XmlOutputMethod" /> values.</span></span> <span data-ttu-id="7f7f6-453">既定では、 <see cref="F:System.Xml.XmlOutputMethod.Xml" />です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-453">The default is <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-454">このプロパティは、出力をシリアル化するために使用するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-454">This property specifies the method used to serialize the output.</span></span> <span data-ttu-id="7f7f6-455">出力は、HTML ルール、XML 1.0 ルールなどを使用してシリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-455">The output can be serialized using the HTML rules, the XML 1.0 rules, and so on.</span></span> <span data-ttu-id="7f7f6-456">この設定は、XSLT プロセッサによって設定され、Visual Studio によって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-456">This setting is set by the XSLT processor and is used internally by Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlWriterSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f7f6-457">設定クラスのメンバーを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-457">Resets the members of the settings class to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-458">次の表は、<xref:System.Xml.XmlWriterSettings>のインスタンスの既定のプロパティ値を示しています。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-458">The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="7f7f6-459">プロパティ</span><span class="sxs-lookup"><span data-stu-id="7f7f6-459">Property</span></span>|<span data-ttu-id="7f7f6-460">初期値</span><span class="sxs-lookup"><span data-stu-id="7f7f6-460">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="7f7f6-461">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-461">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="7f7f6-462">[https://login.microsoftonline.com/consumers/](`true`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-462">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="7f7f6-463">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-463">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="7f7f6-464">[https://login.microsoftonline.com/consumers/](<xref:System.Xml.ConformanceLevel.Document>)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-464"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="7f7f6-465">[https://login.microsoftonline.com/consumers/](`Encoding.UTF8`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-465">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="7f7f6-466">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-466">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="7f7f6-467">2つのスペース。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-467">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="7f7f6-468">[https://login.microsoftonline.com/consumers/](`\r\n`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-468">`\r\n`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="7f7f6-469">[https://login.microsoftonline.com/consumers/](<xref:System.Xml.NewLineHandling.Replace>)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-469"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="7f7f6-470">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-470">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="7f7f6-471">[https://login.microsoftonline.com/consumers/](`false`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-471">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="7f7f6-472">[https://login.microsoftonline.com/consumers/](`true`)</span><span class="sxs-lookup"><span data-stu-id="7f7f6-472">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEndDocumentOnClose : bool with get, set" Usage="System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f7f6-473"><see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されるときに <see cref="M:System.Xml.XmlWriter.Close" /> がすべての閉じられていない要素タグに終了タグを追加するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-473">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> will add closing tags to all unclosed element tags when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span></span></summary>
        <value><span data-ttu-id="7f7f6-474">閉じられていない要素タグがすべて閉じられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-474"><see langword="true" /> if all unclosed element tags will be closed out; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7f7f6-475">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-475">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f7f6-476">このフラグを `false`に設定した場合、出力 XML ファイルの形式が適切でない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7f7f6-476">If you set this flag to `false`, the output XML file may not be well-formed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
