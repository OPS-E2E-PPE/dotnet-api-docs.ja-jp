<Type Name="XmlUrlResolver" FullName="System.Xml.XmlUrlResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05e9f30add9079bffcd7b176af77cb1fdeb1b48f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75173754" /></Metadata><TypeSignature Language="C#" Value="public class XmlUrlResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlUrlResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlUrlResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlUrlResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlUrlResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlUrlResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e088b-101">URI (Uniform Resource Identifier) で名前が指定された外部 XML リソースを解決します。</span><span class="sxs-lookup"><span data-stu-id="e088b-101">Resolves external XML resources named by a Uniform Resource Identifier (URI).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e088b-102"><xref:System.Xml.XmlUrlResolver> は、エンティティ、ドキュメント型定義 (Dtd)、スキーマなどの外部 XML リソースを解決するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="e088b-102"><xref:System.Xml.XmlUrlResolver> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas.</span></span> <span data-ttu-id="e088b-103">また、拡張スタイルシート言語 (XSL) スタイルシートまたは XML スキーマ定義言語 (XSD) スキーマで見つかった include および import 要素を処理するためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="e088b-103">It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</span></span>  
  
 <span data-ttu-id="e088b-104"><xref:System.Xml.XmlUrlResolver> は、<xref:System.Xml> 名前空間のすべてのクラスの既定の競合回避モジュールです。</span><span class="sxs-lookup"><span data-stu-id="e088b-104"><xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace.</span></span> <span data-ttu-id="e088b-105">これは、`file://` および `http://` プロトコルをサポートし、<xref:System.Net.WebRequest> クラスからの要求をサポートします。</span><span class="sxs-lookup"><span data-stu-id="e088b-105">It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e088b-106"><xref:System.Xml.XmlUrlResolver> オブジェクトはユーザー資格情報など、重要な情報を含むことがあります。</span><span class="sxs-lookup"><span data-stu-id="e088b-106"><xref:System.Xml.XmlUrlResolver> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="e088b-107"><xref:System.Xml.XmlUrlResolver> オブジェクトをキャッシュするときに、<xref:System.Xml.XmlUrlResolver> オブジェクトを信頼されていないコンポーネントに渡さないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e088b-107">You should be careful when you cache <xref:System.Xml.XmlUrlResolver> objects and should not pass <xref:System.Xml.XmlUrlResolver> objects to an untrusted component.</span></span>  
  
## <a name="resolving-dtds"></a><span data-ttu-id="e088b-108">解決 (Dtd を)</span><span class="sxs-lookup"><span data-stu-id="e088b-108">Resolving DTDs</span></span>  
 <span data-ttu-id="e088b-109">XML リーダー (<xref:System.Xml.XmlReader>) が外部 DTD を含む XML ファイルを読み取っている場合は、<xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType> メソッドを呼び出して、DTD のストリーム表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="e088b-109">If an XML reader (<xref:System.Xml.XmlReader>) is reading an XML file that contains an external DTD, it calls the <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType> method to get a stream representation of the DTD.</span></span> <span data-ttu-id="e088b-110">DTD の URI が相対 URI の場合、XML リーダーは <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType> メソッドを呼び出し、指定された `relativeUri` と `baseURi` パラメーターの絶対 URI を返します。</span><span class="sxs-lookup"><span data-stu-id="e088b-110">If the URI of the DTD is a relative URI, the XML reader calls the <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType> method and returns an absolute URI for the given `relativeUri` and `baseURi` parameters.</span></span> <span data-ttu-id="e088b-111"><xref:System.Xml.XmlUrlResolver> が URI の解決方法を把握していない場合は、`null`を返します。</span><span class="sxs-lookup"><span data-stu-id="e088b-111">If the <xref:System.Xml.XmlUrlResolver> doesn't know how to resolve the URI, it returns `null`.</span></span>  
  
 <span data-ttu-id="e088b-112"><xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> メソッドでは、必要に応じて <xref:System.Xml.XmlUrlResolver.Credentials%2A> プロパティ内の情報を使用して、リソースにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="e088b-112">The <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method uses the information in the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property as appropriate to gain access to the resource.</span></span> <span data-ttu-id="e088b-113">セキュリティ上の理由から、このプロパティへの `get` アクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="e088b-113">There is no `get` accessor to this property for security reasons.</span></span> <span data-ttu-id="e088b-114"><xref:System.Xml.XmlResolver>を上書きする場合、 **Getentity**は、 **Credentials**プロパティの資格情報を利用するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="e088b-114">When overwriting <xref:System.Xml.XmlResolver>, **GetEntity** is the method that utilizes the credential information in the **Credentials** property.</span></span>  
  
 <span data-ttu-id="e088b-115">その他のすべての XML リソースの解決は、DTD の解決に非常に似ています。</span><span class="sxs-lookup"><span data-stu-id="e088b-115">Resolving all other XML resources is very similar to resolving DTDs.</span></span> <span data-ttu-id="e088b-116"><xref:System.Xml.XmlResolver> は、外部リソースとの接続をネゴシエートし、コンテンツの <xref:System.IO.Stream> 表現を返します。</span><span class="sxs-lookup"><span data-stu-id="e088b-116"><xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content.</span></span> <span data-ttu-id="e088b-117">ストリームを解釈 <xref:System.Xml.XmlResolver> の呼び出しを行うオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e088b-117">The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream.</span></span>  
  
## <a name="extending-the-xmlurlresolver-class"></a><span data-ttu-id="e088b-118">XmlUrlResolver クラスの拡張</span><span class="sxs-lookup"><span data-stu-id="e088b-118">Extending the XmlUrlResolver class</span></span>  
 <span data-ttu-id="e088b-119"><xref:System.Xml.XmlUrlResolver> の既定の動作では、キャッシュではなくソースから XML データ リソースを解決します。</span><span class="sxs-lookup"><span data-stu-id="e088b-119">The default behavior of the <xref:System.Xml.XmlUrlResolver> class is to resolve an XML data resource from its source, not from cache.</span></span> <span data-ttu-id="e088b-120">場合によっては、キャッシュからデータ リソースを解決することでデータ リソース サーバーへのトリップが不要になるため、アプリケーションのパフォーマンスを高めることができます。</span><span class="sxs-lookup"><span data-stu-id="e088b-120">In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server.</span></span> <span data-ttu-id="e088b-121">このパフォーマンスの向上を重視するか、最新コンテンツの必要性を重視するかを検討する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e088b-121">The performance gains here must be weighed against the need for up-to-date content.</span></span>  
  
 <span data-ttu-id="e088b-122">次の例では、<xref:System.Xml.XmlUrlResolver> を拡張し、新しいクラス `XmlCachingResolver`を構築して、キャッシュからリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="e088b-122">The following example extends <xref:System.Xml.XmlUrlResolver> and builds a new class, `XmlCachingResolver`, to retrieve resources from the cache.</span></span> <span data-ttu-id="e088b-123">そのために、<xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> プロパティと <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="e088b-123">This is done by overriding the <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> property and the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[XmlCachingResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)]
 [!code-vb[XmlCachingResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)]  
  
 <span data-ttu-id="e088b-124">`XmlCachingResolver` クラスのキャッシュ動作を `GetEntity` メソッドに実装します。</span><span class="sxs-lookup"><span data-stu-id="e088b-124">The caching behavior of the `XmlCachingResolver` class is implemented in the `GetEntity` method.</span></span> <span data-ttu-id="e088b-125">そのために、<xref:System.Net.WebRequest> オブジェクトと <xref:System.Net.Cache.HttpRequestCachePolicy> オブジェクトを新しく作成します。</span><span class="sxs-lookup"><span data-stu-id="e088b-125">This is done by creating new <xref:System.Net.WebRequest> and <xref:System.Net.Cache.HttpRequestCachePolicy> objects.</span></span> <span data-ttu-id="e088b-126"><xref:System.Net.Cache.HttpRequestCachePolicy> 列挙体の <xref:System.Net.Cache.HttpRequestCacheLevel.Default> メンバーを使用して、<xref:System.Net.Cache.HttpRequestCacheLevel> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="e088b-126">The <xref:System.Net.Cache.HttpRequestCachePolicy> object is created using the <xref:System.Net.Cache.HttpRequestCacheLevel.Default> member of the <xref:System.Net.Cache.HttpRequestCacheLevel> enumeration.</span></span>  
  
 <span data-ttu-id="e088b-127"><xref:System.Net.WebRequest.CachePolicy%2A> オブジェクトの <xref:System.Net.WebRequest> プロパティに <xref:System.Net.Cache.HttpRequestCachePolicy> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="e088b-127">The <xref:System.Net.WebRequest.CachePolicy%2A> property of the <xref:System.Net.WebRequest> object is set with the <xref:System.Net.Cache.HttpRequestCachePolicy> object.</span></span>  
  
 <span data-ttu-id="e088b-128">`XmlCachingResolver` クラスのインスタンスは、`Boolean` `enableHttpCaching`を使用して作成されます。</span><span class="sxs-lookup"><span data-stu-id="e088b-128">An instance of the `XmlCachingResolver` class is created with the `Boolean` `enableHttpCaching`.</span></span> <span data-ttu-id="e088b-129">この値が `true`に設定されている場合、インスタンスは、可能であれば、既定のキャッシュからリソースを解決します。</span><span class="sxs-lookup"><span data-stu-id="e088b-129">When this value is set to `true`, the instance resolves a resource from the default cache if possible.</span></span> <span data-ttu-id="e088b-130">`enableHttpCaching` が `false`に設定されている場合、インスタンスは既定の動作を使用し、ソースのリソースを解決します。</span><span class="sxs-lookup"><span data-stu-id="e088b-130">When `enableHttpCaching` is set to `false`, the instance uses the default behavior and resolves resources from their source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e088b-131">この例では、.NET Framework 内の XML クラスの拡張性を活用します。</span><span class="sxs-lookup"><span data-stu-id="e088b-131">This example leverages the extensibility of the XML classes in the .NET Framework.</span></span> <span data-ttu-id="e088b-132">他のクラスも、特定のアプリケーションの要件に合わせて拡張し、カスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="e088b-132">Other classes can be extended and customized to suit the needs of a particular application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e088b-133">次の例では、既定の資格情報を持つ <xref:System.Xml.XmlUrlResolver> を使用する <xref:System.Xml.XmlReader> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e088b-133">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlUrlResolver> with default credentials.</span></span>  
  
 [!code-csharp[XmlResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#1)]
 [!code-vb[XmlResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="e088b-134">XML ドキュメントと XML データ</span><span class="sxs-lookup"><span data-stu-id="e088b-134">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlUrlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlUrlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e088b-135"><see cref="T:System.Xml.XmlUrlResolver" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e088b-135">Initializes a new instance of the <see cref="T:System.Xml.XmlUrlResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy {  void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy" Usage="System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e088b-136">基になる <see cref="T:System.Net.WebRequest" /> オブジェクトのキャッシュ ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e088b-136">Gets or sets the cache policy for the underlying <see cref="T:System.Net.WebRequest" /> object.</span></span></summary>
        <value><span data-ttu-id="e088b-137">基になる Web 要求のキャッシュ ポリシー。</span><span class="sxs-lookup"><span data-stu-id="e088b-137">The cache policy for the underlying web request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlUrlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e088b-138">Web 要求を認証するために使用する資格情報を設定します。</span><span class="sxs-lookup"><span data-stu-id="e088b-138">Sets credentials used to authenticate web requests.</span></span></summary>
        <value><span data-ttu-id="e088b-139">Web 要求を認証するために使用する資格情報。</span><span class="sxs-lookup"><span data-stu-id="e088b-139">The credentials to be used to authenticate web requests.</span></span> <span data-ttu-id="e088b-140">このプロパティが設定されていない場合、既定値は <see langword="null" /> です。つまり、<see langword="XmlUrlResolver" /> にはユーザーの資格情報がありません。</span><span class="sxs-lookup"><span data-stu-id="e088b-140">If this property is not set, the value defaults to <see langword="null" />; that is, the <see langword="XmlUrlResolver" /> has no user credentials.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e088b-141">仮想ディレクトリが認証を必要としない場合、このプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="e088b-141">If the virtual directory does not require authentication, this property does not need to be set.</span></span> <span data-ttu-id="e088b-142">それ以外の場合は、ユーザーの資格情報を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e088b-142">Otherwise, the credentials of the user must be supplied.</span></span>  
  
 <span data-ttu-id="e088b-143">異なる Uri に異なる資格情報を関連付け、キャッシュに追加することができます。</span><span class="sxs-lookup"><span data-stu-id="e088b-143">You can associate different credentials with different URIs and add them to a cache.</span></span> <span data-ttu-id="e088b-144">その後、資格情報を使用して、XML の元のソースに関係なく、さまざまな Uri の認証を確認することができます。</span><span class="sxs-lookup"><span data-stu-id="e088b-144">You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.</span></span>  
  
 <span data-ttu-id="e088b-145">次C#のコードは、<xref:System.Xml.XmlUrlResolver.Credentials%2A> プロパティを資格情報キャッシュに設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e088b-145">The following C# code shows how to set the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property to a credential cache.</span></span>  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 <span data-ttu-id="e088b-146">次の例では、資格情報を使用して <xref:System.Xml.XmlUrlResolver> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="e088b-146">The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials.</span></span> <span data-ttu-id="e088b-147"><xref:System.Xml.XmlReader> は、<xref:System.Xml.XmlUrlResolver> オブジェクトの資格情報を使用してネットワークリソースにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="e088b-147">The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.</span></span>  
  
 [!code-csharp[XmlResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#2)]
 [!code-vb[XmlResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlUrlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="e088b-148"><see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> から返された URI。</span><span class="sxs-lookup"><span data-stu-id="e088b-148">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span></span></param>
        <param name="role"><span data-ttu-id="e088b-149">現在は使用されていません。</span><span class="sxs-lookup"><span data-stu-id="e088b-149">Currently not used.</span></span></param>
        <param name="ofObjectToReturn"><span data-ttu-id="e088b-150">返すオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="e088b-150">The type of object to return.</span></span> <span data-ttu-id="e088b-151">現在の実装では、<see cref="T:System.IO.Stream" /> オブジェクトだけを返します。</span><span class="sxs-lookup"><span data-stu-id="e088b-151">The current implementation only returns <see cref="T:System.IO.Stream" /> objects.</span></span></param>
        <summary><span data-ttu-id="e088b-152">URI を実際のリソースを格納しているオブジェクトにマップします。</span><span class="sxs-lookup"><span data-stu-id="e088b-152">Maps a URI to an object that contains the actual resource.</span></span></summary>
        <returns><span data-ttu-id="e088b-153">ストリーム オブジェクト。ストリーム以外の型が指定された場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e088b-153">A stream object or <see langword="null" /> if a type other than stream is specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e088b-154">このメソッドは、呼び出し元が、URI が表すリソースを含むオブジェクトに特定の URI をマップする場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="e088b-154">This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.</span></span>  
  
 <span data-ttu-id="e088b-155">このメソッドの非同期バージョンについては、「<xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e088b-155">For the asynchronous version of this method, see <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e088b-156">アプリケーションでは、IStream <xref:System.Runtime.InteropServices.ComTypes.IStream> を実装して読み取るバイト数を制限することで、<xref:System.Xml.XmlUrlResolver.GetEntity%2A> メソッドに対するメモリのサービス拒否の脅威を軽減できます。</span><span class="sxs-lookup"><span data-stu-id="e088b-156">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method by implementing IStream <xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read.</span></span> <span data-ttu-id="e088b-157">これは、悪意のあるコードが <xref:System.Xml.XmlUrlResolver.GetEntity%2A> メソッドに無限のバイトストリームを渡そうとした場合に保護するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="e088b-157">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e088b-158">次の例は、`GetEntity` メソッドと <xref:System.Xml.XmlResolver.ResolveUri%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="e088b-158">The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.</span></span>  
  
 [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="e088b-159"><paramref name="ofObjectToReturn" /> が <see langword="null" /> でも <see langword="Stream" /> 型でもありません。</span><span class="sxs-lookup"><span data-stu-id="e088b-159"><paramref name="ofObjectToReturn" /> is neither <see langword="null" /> nor a <see langword="Stream" /> type.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="e088b-160">指定した URI が絶対 URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="e088b-160">The specified URI is not an absolute URI.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e088b-161"><paramref name="absoluteUri" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e088b-161"><paramref name="absoluteUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="e088b-162">実行時エラー (サーバー接続の中断など) があります。</span><span class="sxs-lookup"><span data-stu-id="e088b-162">There is a runtime error (for example, an interrupted server connection).</span></span></exception>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlUrlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="role" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="e088b-163"><see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> から返された URI。</span><span class="sxs-lookup"><span data-stu-id="e088b-163">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span></span></param>
        <param name="role"><span data-ttu-id="e088b-164">現在は使用されていません。</span><span class="sxs-lookup"><span data-stu-id="e088b-164">Currently not used.</span></span></param>
        <param name="ofObjectToReturn"><span data-ttu-id="e088b-165">返すオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="e088b-165">The type of object to return.</span></span> <span data-ttu-id="e088b-166">現在の実装では、<see cref="T:System.IO.Stream" /> オブジェクトだけを返します。</span><span class="sxs-lookup"><span data-stu-id="e088b-166">The current implementation only returns <see cref="T:System.IO.Stream" /> objects.</span></span></param>
        <summary><span data-ttu-id="e088b-167">URI を実際のリソースを格納しているオブジェクトに非同期にマップします。</span><span class="sxs-lookup"><span data-stu-id="e088b-167">Asynchronously maps a URI to an object that contains the actual resource.</span></span></summary>
        <returns><span data-ttu-id="e088b-168">ストリーム オブジェクト。ストリーム以外の型が指定された場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e088b-168">A stream object or <see langword="null" /> if a type other than stream is specified.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy {  void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy" Usage="System.Xml.XmlUrlResolver.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e088b-169">基になる <see cref="T:System.Net.WebRequest" /> オブジェクトのネットワーク プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e088b-169">Gets or sets the network proxy for the underlying <see cref="T:System.Net.WebRequest" /> object.</span></span></summary>
        <value><span data-ttu-id="e088b-170">インターネット リソースにアクセスするために使用する <see cref="T:System.Net.IWebProxy" />。</span><span class="sxs-lookup"><span data-stu-id="e088b-170">The <see cref="T:System.Net.IWebProxy" /> to use to access the Internet resource.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlUrlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="relativeUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="e088b-171">相対 URI の解決に使用するベース URI。</span><span class="sxs-lookup"><span data-stu-id="e088b-171">The base URI used to resolve the relative URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="e088b-172">解決対象の URI。</span><span class="sxs-lookup"><span data-stu-id="e088b-172">The URI to resolve.</span></span> <span data-ttu-id="e088b-173">URI は絶対 URI でも相対 URI でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="e088b-173">The URI can be absolute or relative.</span></span> <span data-ttu-id="e088b-174">絶対 URI の場合は、この値が <paramref name="baseUri" /> 値を効率的に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="e088b-174">If absolute, this value effectively replaces the <paramref name="baseUri" /> value.</span></span> <span data-ttu-id="e088b-175">相対 URI の場合、この値は <paramref name="baseUri" /> と結合して絶対 URI を作成します。</span><span class="sxs-lookup"><span data-stu-id="e088b-175">If relative, it combines with the <paramref name="baseUri" /> to make an absolute URI.</span></span></param>
        <summary><span data-ttu-id="e088b-176">ベース URI および 相対 URI を解決して絶対 URI を返します。</span><span class="sxs-lookup"><span data-stu-id="e088b-176">Resolves the absolute URI from the base and relative URIs.</span></span></summary>
        <returns><span data-ttu-id="e088b-177">絶対 URI。相対 URI を解決できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e088b-177">The absolute URI, or <see langword="null" /> if the relative URI cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e088b-178">絶対 URI は、この URI に対して相対的なエンティティに対する後続の要求のベース URI として使用できます。</span><span class="sxs-lookup"><span data-stu-id="e088b-178">The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e088b-179"><paramref name="baseUri" /> が <see langword="null" /> または <paramref name="relativeUri" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e088b-179"><paramref name="baseUri" /> is <see langword="null" /> or <paramref name="relativeUri" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="e088b-180">このメソッドには継承要求があります。</span><span class="sxs-lookup"><span data-stu-id="e088b-180">This method has an inheritance demand.</span></span> <span data-ttu-id="e088b-181"><see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /> メソッドをオーバーライドするには、完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="e088b-181">Full trust is required to override the <see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /> method.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
