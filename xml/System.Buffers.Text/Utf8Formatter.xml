<Type Name="Utf8Formatter" FullName="System.Buffers.Text.Utf8Formatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37c425228dd884aacf8bcb427e8c28fe4c2dd595" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75153786" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Formatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Formatter" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Formatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Formatter abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Formatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="20d5c-101">一般的なデータ型を Utf8 文字列として書式設定するための静的メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-101">Provides static mthods to format common data types as Utf8 strings.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (bool value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(bool value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Boolean,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Boolean, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : bool * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-102">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-102">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-103">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-103">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-104">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-104">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-105">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-105">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-106">UTF8 文字列として <see cref="T:System.Boolean" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-106">Formats a <see cref="T:System.Boolean" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-107">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-107"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="20d5c-108">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-108">Formats supported:</span></span>

|<span data-ttu-id="20d5c-109">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-109">Format string</span></span>|<span data-ttu-id="20d5c-110">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-110">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-111">G (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-111">G (default)</span></span>|<span data-ttu-id="20d5c-112">True/False</span><span class="sxs-lookup"><span data-stu-id="20d5c-112">True/False</span></span>|
|<span data-ttu-id="20d5c-113">l</span><span class="sxs-lookup"><span data-stu-id="20d5c-113">l</span></span>|<span data-ttu-id="20d5c-114">true/false</span><span class="sxs-lookup"><span data-stu-id="20d5c-114">true/false</span></span>|

<span data-ttu-id="20d5c-115">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-115">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (byte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Byte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Byte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : byte * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-116">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-116">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-117">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-117">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-118">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-118">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-119">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-119">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-120">UTF8 文字列として <see cref="T:System.Byte" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-120">Formats a <see cref="T:System.Byte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-121">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-121"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="20d5c-122">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-122">Formats supported:</span></span>

|<span data-ttu-id="20d5c-123">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-123">Format string</span></span>|<span data-ttu-id="20d5c-124">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-124">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-125">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-125">G/g (default)</span></span>| |
|<span data-ttu-id="20d5c-126">D/d</span><span class="sxs-lookup"><span data-stu-id="20d5c-126">D/d</span></span>|<span data-ttu-id="20d5c-127">122</span><span class="sxs-lookup"><span data-stu-id="20d5c-127">122</span></span>|
|<span data-ttu-id="20d5c-128">N/n</span><span class="sxs-lookup"><span data-stu-id="20d5c-128">N/n</span></span>|<span data-ttu-id="20d5c-129">122</span><span class="sxs-lookup"><span data-stu-id="20d5c-129">122</span></span>|       
|<span data-ttu-id="20d5c-130">X/x</span><span class="sxs-lookup"><span data-stu-id="20d5c-130">X/x</span></span>|<span data-ttu-id="20d5c-131">7a</span><span class="sxs-lookup"><span data-stu-id="20d5c-131">7a</span></span>|

<span data-ttu-id="20d5c-132">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-132">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTime value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTime value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTime,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTime, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTime * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-133">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-133">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-134">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-134">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-135">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-135">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-136">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-136">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-137">UTF8 文字列として <see cref="T:System.DateTime" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-137">Formats a <see cref="T:System.DateTime" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-138">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-138"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-139">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-139">Formats supported:</span></span>

|<span data-ttu-id="20d5c-140">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-140">Format string</span></span>|<span data-ttu-id="20d5c-141">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-141">Example result string</span></span>|<span data-ttu-id="20d5c-142">コメント</span><span class="sxs-lookup"><span data-stu-id="20d5c-142">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="20d5c-143">G (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-143">G  (default)</span></span>|<span data-ttu-id="20d5c-144">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="20d5c-144">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="20d5c-145">R</span><span class="sxs-lookup"><span data-stu-id="20d5c-145">R</span></span>|<span data-ttu-id="20d5c-146">火曜日、03年1月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="20d5c-146">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="20d5c-147">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="20d5c-147">(RFC 1123)</span></span>|
|<span data-ttu-id="20d5c-148">l</span><span class="sxs-lookup"><span data-stu-id="20d5c-148">l</span></span>|<span data-ttu-id="20d5c-149">火曜日、03年1月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="20d5c-149">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="20d5c-150">(小文字 RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="20d5c-150">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="20d5c-151">O</span><span class="sxs-lookup"><span data-stu-id="20d5c-151">O</span></span>|<span data-ttu-id="20d5c-152">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="20d5c-152">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="20d5c-153">(ラウンドトライ可能)</span><span class="sxs-lookup"><span data-stu-id="20d5c-153">(Round-trippable)</span></span>|

<span data-ttu-id="20d5c-154">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-154">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTimeOffset value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTimeOffset value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTimeOffset,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTimeOffset, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTimeOffset * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-155">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-155">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-156">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-156">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-157">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-157">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-158">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-158">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-159">UTF8 文字列として <see cref="T:System.DateTimeOffset" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-159">Formats a <see cref="T:System.DateTimeOffset" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-160">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-160"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (decimal value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Decimal value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Decimal,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Decimal, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : decimal * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-161">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-161">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-162">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-162">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-163">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-163">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-164">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-164">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-165">UTF8 文字列として <see cref="T:System.Decimal" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-165">Formats a <see cref="T:System.Decimal" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-166">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-166"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-167">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-167">Formats supported:</span></span>

|<span data-ttu-id="20d5c-168">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-168">Format string</span></span>|<span data-ttu-id="20d5c-169">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-169">Example result string</span></span>|<span data-ttu-id="20d5c-170">コメント</span><span class="sxs-lookup"><span data-stu-id="20d5c-170">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="20d5c-171">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-171">G/g  (default)</span></span>| |  
|<span data-ttu-id="20d5c-172">F/f</span><span class="sxs-lookup"><span data-stu-id="20d5c-172">F/f</span></span>|<span data-ttu-id="20d5c-173">12.45</span><span class="sxs-lookup"><span data-stu-id="20d5c-173">12.45</span></span>|<span data-ttu-id="20d5c-174">固定ポイント</span><span class="sxs-lookup"><span data-stu-id="20d5c-174">Fixed point</span></span>|
|<span data-ttu-id="20d5c-175">E/e</span><span class="sxs-lookup"><span data-stu-id="20d5c-175">E/e</span></span>|<span data-ttu-id="20d5c-176">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="20d5c-176">1.245000e1</span></span>|<span data-ttu-id="20d5c-177">指数</span><span class="sxs-lookup"><span data-stu-id="20d5c-177">Exponential</span></span>|

<span data-ttu-id="20d5c-178">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-178">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (double value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Double,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Double, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : double * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-179">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-179">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-180">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-180">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-181">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-181">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-182">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-182">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-183">UTF8 文字列として <see cref="T:System.Double" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-183">Formats a <see cref="T:System.Double" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-184">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-184"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-185">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-185">Formats supported:</span></span>

|<span data-ttu-id="20d5c-186">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-186">Format string</span></span>|<span data-ttu-id="20d5c-187">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-187">Example result string</span></span>|<span data-ttu-id="20d5c-188">コメント</span><span class="sxs-lookup"><span data-stu-id="20d5c-188">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="20d5c-189">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-189">G/g  (default)</span></span>| |  
|<span data-ttu-id="20d5c-190">F/f</span><span class="sxs-lookup"><span data-stu-id="20d5c-190">F/f</span></span>|<span data-ttu-id="20d5c-191">12.45</span><span class="sxs-lookup"><span data-stu-id="20d5c-191">12.45</span></span>|<span data-ttu-id="20d5c-192">固定ポイント</span><span class="sxs-lookup"><span data-stu-id="20d5c-192">Fixed point</span></span>|
|<span data-ttu-id="20d5c-193">E/e</span><span class="sxs-lookup"><span data-stu-id="20d5c-193">E/e</span></span>|<span data-ttu-id="20d5c-194">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="20d5c-194">1.245000e1</span></span>|<span data-ttu-id="20d5c-195">指数</span><span class="sxs-lookup"><span data-stu-id="20d5c-195">Exponential</span></span>|

<span data-ttu-id="20d5c-196">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-196">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (Guid value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Guid value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Guid,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Guid, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : Guid * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-197">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-197">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-198">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-198">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-199">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-199">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-200">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-200">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-201">UTF8 文字列として <see cref="T:System.Guid" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-201">Formats a <see cref="T:System.Guid" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-202">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-202"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-203">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-203">Formats supported:</span></span>

|<span data-ttu-id="20d5c-204">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-204">Format string</span></span>|<span data-ttu-id="20d5c-205">結果文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-205">Result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-206">D (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-206">D (default)</span></span>|<span data-ttu-id="20d5c-207">nnnnnnnn-nnnn-nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="20d5c-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="20d5c-208">B</span><span class="sxs-lookup"><span data-stu-id="20d5c-208">B</span></span>|<span data-ttu-id="20d5c-209">{nnnnnnnn-nnnn-nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="20d5c-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="20d5c-210">P</span><span class="sxs-lookup"><span data-stu-id="20d5c-210">P</span></span>|<span data-ttu-id="20d5c-211">(nnnnnnnn-nnnn-nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="20d5c-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="20d5c-212">N</span><span class="sxs-lookup"><span data-stu-id="20d5c-212">N</span></span>|<span data-ttu-id="20d5c-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="20d5c-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

<span data-ttu-id="20d5c-214">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-214">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (short value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Short, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int16 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-215">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-215">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-216">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-216">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-217">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-217">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-218">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-218">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-219">UTF8 文字列として <see cref="T:System.Int16" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-219">Formats an <see cref="T:System.Int16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-220">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-220"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-221">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-221">Formats supported:</span></span>

|<span data-ttu-id="20d5c-222">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-222">Format string</span></span>|<span data-ttu-id="20d5c-223">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-223">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-224">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-224">G/g (default)</span></span>| |
|<span data-ttu-id="20d5c-225">D/d</span><span class="sxs-lookup"><span data-stu-id="20d5c-225">D/d</span></span>|<span data-ttu-id="20d5c-226">32767</span><span class="sxs-lookup"><span data-stu-id="20d5c-226">32767</span></span>|
|<span data-ttu-id="20d5c-227">N/n</span><span class="sxs-lookup"><span data-stu-id="20d5c-227">N/n</span></span>|<span data-ttu-id="20d5c-228">32,767</span><span class="sxs-lookup"><span data-stu-id="20d5c-228">32,767</span></span>|       
|<span data-ttu-id="20d5c-229">X/x</span><span class="sxs-lookup"><span data-stu-id="20d5c-229">X/x</span></span>|<span data-ttu-id="20d5c-230">7fff</span><span class="sxs-lookup"><span data-stu-id="20d5c-230">7fff</span></span>|

<span data-ttu-id="20d5c-231">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-231">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (int value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Integer, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-232">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-232">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-233">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-233">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-234">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-234">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-235">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-235">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-236">UTF8 文字列として <see cref="T:System.Int32" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-236">Formats an <see cref="T:System.Int32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-237">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-237"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-238">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-238">Formats supported:</span></span>

|<span data-ttu-id="20d5c-239">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-239">Format string</span></span>|<span data-ttu-id="20d5c-240">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-240">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-241">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-241">G/g (default)</span></span>| |
|<span data-ttu-id="20d5c-242">D/d</span><span class="sxs-lookup"><span data-stu-id="20d5c-242">D/d</span></span>|<span data-ttu-id="20d5c-243">32767</span><span class="sxs-lookup"><span data-stu-id="20d5c-243">32767</span></span>|
|<span data-ttu-id="20d5c-244">N/n</span><span class="sxs-lookup"><span data-stu-id="20d5c-244">N/n</span></span>|<span data-ttu-id="20d5c-245">32,767</span><span class="sxs-lookup"><span data-stu-id="20d5c-245">32,767</span></span>|       
|<span data-ttu-id="20d5c-246">X/x</span><span class="sxs-lookup"><span data-stu-id="20d5c-246">X/x</span></span>|<span data-ttu-id="20d5c-247">7fff</span><span class="sxs-lookup"><span data-stu-id="20d5c-247">7fff</span></span>|
              
<span data-ttu-id="20d5c-248">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-248">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (long value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Long, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int64 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-249">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-249">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-250">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-250">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-251">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-251">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-252">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-252">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-253">UTF8 文字列として <see cref="T:System.Int64" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-253">Formats an <see cref="T:System.Int64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-254">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-254"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-255">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-255">Formats supported:</span></span>

|<span data-ttu-id="20d5c-256">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-256">Format string</span></span>|<span data-ttu-id="20d5c-257">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-257">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-258">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-258">G/g (default)</span></span>| |
|<span data-ttu-id="20d5c-259">D/d</span><span class="sxs-lookup"><span data-stu-id="20d5c-259">D/d</span></span>|<span data-ttu-id="20d5c-260">32767</span><span class="sxs-lookup"><span data-stu-id="20d5c-260">32767</span></span>|
|<span data-ttu-id="20d5c-261">N/n</span><span class="sxs-lookup"><span data-stu-id="20d5c-261">N/n</span></span>|<span data-ttu-id="20d5c-262">32,767</span><span class="sxs-lookup"><span data-stu-id="20d5c-262">32,767</span></span>|       
|<span data-ttu-id="20d5c-263">X/x</span><span class="sxs-lookup"><span data-stu-id="20d5c-263">X/x</span></span>|<span data-ttu-id="20d5c-264">7fff</span><span class="sxs-lookup"><span data-stu-id="20d5c-264">7fff</span></span>|
              
<span data-ttu-id="20d5c-265">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-265">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (sbyte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.SByte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As SByte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : sbyte * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-266">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-266">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-267">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-267">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-268">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-268">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-269">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-269">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-270">UTF8 文字列として <see cref="T:System.SByte" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-270">Formats an <see cref="T:System.SByte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-271">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-271"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-272">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-272">Formats supported:</span></span>

|<span data-ttu-id="20d5c-273">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-273">Format string</span></span>|<span data-ttu-id="20d5c-274">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-274">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-275">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-275">G/g (default)</span></span>| |
|<span data-ttu-id="20d5c-276">D/d</span><span class="sxs-lookup"><span data-stu-id="20d5c-276">D/d</span></span>|<span data-ttu-id="20d5c-277">122</span><span class="sxs-lookup"><span data-stu-id="20d5c-277">122</span></span>|
|<span data-ttu-id="20d5c-278">N/n</span><span class="sxs-lookup"><span data-stu-id="20d5c-278">N/n</span></span>|<span data-ttu-id="20d5c-279">122</span><span class="sxs-lookup"><span data-stu-id="20d5c-279">122</span></span>|       
|<span data-ttu-id="20d5c-280">X/x</span><span class="sxs-lookup"><span data-stu-id="20d5c-280">X/x</span></span>|<span data-ttu-id="20d5c-281">7a</span><span class="sxs-lookup"><span data-stu-id="20d5c-281">7a</span></span>|

<span data-ttu-id="20d5c-282">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-282">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (float value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Single,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Single, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : single * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-283">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-283">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-284">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-284">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-285">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-285">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-286">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-286">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-287">UTF8 文字列として <see cref="T:System.Single" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-287">Formats a <see cref="T:System.Single" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-288">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-288"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-289">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-289">Formats supported:</span></span>

|<span data-ttu-id="20d5c-290">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-290">Format string</span></span>|<span data-ttu-id="20d5c-291">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-291">Example result string</span></span>|<span data-ttu-id="20d5c-292">コメント</span><span class="sxs-lookup"><span data-stu-id="20d5c-292">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="20d5c-293">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-293">G/g  (default)</span></span>| |  
|<span data-ttu-id="20d5c-294">F/f</span><span class="sxs-lookup"><span data-stu-id="20d5c-294">F/f</span></span>|<span data-ttu-id="20d5c-295">12.45</span><span class="sxs-lookup"><span data-stu-id="20d5c-295">12.45</span></span>|<span data-ttu-id="20d5c-296">固定ポイント</span><span class="sxs-lookup"><span data-stu-id="20d5c-296">Fixed point</span></span>|
|<span data-ttu-id="20d5c-297">E/e</span><span class="sxs-lookup"><span data-stu-id="20d5c-297">E/e</span></span>|<span data-ttu-id="20d5c-298">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="20d5c-298">1.245000e1</span></span>|<span data-ttu-id="20d5c-299">指数</span><span class="sxs-lookup"><span data-stu-id="20d5c-299">Exponential</span></span>|

<span data-ttu-id="20d5c-300">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-300">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (TimeSpan value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.TimeSpan value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.TimeSpan,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As TimeSpan, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : TimeSpan * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-301">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-301">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-302">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-302">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-303">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-303">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-304">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-304">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-305">UTF8 文字列として <see cref="T:System.TimeSpan" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-305">Formats a <see cref="T:System.TimeSpan" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-306">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-306"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-307">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-307">Formats supported:</span></span>

|<span data-ttu-id="20d5c-308">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-308">Format string</span></span>|<span data-ttu-id="20d5c-309">結果文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-309">Result string</span></span>|<span data-ttu-id="20d5c-310">コメント</span><span class="sxs-lookup"><span data-stu-id="20d5c-310">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="20d5c-311">c/t/T (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-311">c/t/T (default)</span></span>|<span data-ttu-id="20d5c-312">[-][d.]hh: mm: ss [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="20d5c-312">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="20d5c-313">(定数形式)</span><span class="sxs-lookup"><span data-stu-id="20d5c-313">(constant format)</span></span>|
|<span data-ttu-id="20d5c-314">G</span><span class="sxs-lookup"><span data-stu-id="20d5c-314">G</span></span>|<span data-ttu-id="20d5c-315">[-] d 月 hh: mm: ss. fffffff</span><span class="sxs-lookup"><span data-stu-id="20d5c-315">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="20d5c-316">(一般長)</span><span class="sxs-lookup"><span data-stu-id="20d5c-316">(general long)</span></span>|
|<span data-ttu-id="20d5c-317">g</span><span class="sxs-lookup"><span data-stu-id="20d5c-317">g</span></span>|<span data-ttu-id="20d5c-318">[-][d:][h] h:mm: ss [f [f [f [f [f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="20d5c-318">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="20d5c-319">(一般的な短い)</span><span class="sxs-lookup"><span data-stu-id="20d5c-319">(general short)</span></span>|

<span data-ttu-id="20d5c-320">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-320">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ushort value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UShort, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint16 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-321">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-321">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-322">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-322">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-323">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-323">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-324">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-324">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-325">UTF8 文字列として <see cref="T:System.UInt16" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-325">Formats a <see cref="T:System.UInt16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-326">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-326"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-327">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-327">Formats supported:</span></span>

|<span data-ttu-id="20d5c-328">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-328">Format string</span></span>|<span data-ttu-id="20d5c-329">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-329">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-330">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-330">G/g (default)</span></span>| |
|<span data-ttu-id="20d5c-331">D/d</span><span class="sxs-lookup"><span data-stu-id="20d5c-331">D/d</span></span>|<span data-ttu-id="20d5c-332">32767</span><span class="sxs-lookup"><span data-stu-id="20d5c-332">32767</span></span>|
|<span data-ttu-id="20d5c-333">N/n</span><span class="sxs-lookup"><span data-stu-id="20d5c-333">N/n</span></span>|<span data-ttu-id="20d5c-334">32,767</span><span class="sxs-lookup"><span data-stu-id="20d5c-334">32,767</span></span>|       
|<span data-ttu-id="20d5c-335">X/x</span><span class="sxs-lookup"><span data-stu-id="20d5c-335">X/x</span></span>|<span data-ttu-id="20d5c-336">7fff</span><span class="sxs-lookup"><span data-stu-id="20d5c-336">7fff</span></span>|

<span data-ttu-id="20d5c-337">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-337">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (uint value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UInteger, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint32 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-338">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-338">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-339">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-339">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-340">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-340">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-341">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-341">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-342">UTF8 文字列として <see cref="T:System.UInt32" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-342">Formats a <see cref="T:System.UInt32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-343">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-343"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="20d5c-344">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-344">Formats supported:</span></span>

|<span data-ttu-id="20d5c-345">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-345">Format string</span></span>|<span data-ttu-id="20d5c-346">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-346">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-347">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-347">G/g (default)</span></span>| |
|<span data-ttu-id="20d5c-348">D/d</span><span class="sxs-lookup"><span data-stu-id="20d5c-348">D/d</span></span>|<span data-ttu-id="20d5c-349">32767</span><span class="sxs-lookup"><span data-stu-id="20d5c-349">32767</span></span>|
|<span data-ttu-id="20d5c-350">N/n</span><span class="sxs-lookup"><span data-stu-id="20d5c-350">N/n</span></span>|<span data-ttu-id="20d5c-351">32,767</span><span class="sxs-lookup"><span data-stu-id="20d5c-351">32,767</span></span>|       
|<span data-ttu-id="20d5c-352">X/x</span><span class="sxs-lookup"><span data-stu-id="20d5c-352">X/x</span></span>|<span data-ttu-id="20d5c-353">7fff</span><span class="sxs-lookup"><span data-stu-id="20d5c-353">7fff</span></span>|

<span data-ttu-id="20d5c-354">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-354">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ulong value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As ULong, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint64 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="20d5c-355">書式を変換する値。</span><span class="sxs-lookup"><span data-stu-id="20d5c-355">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="20d5c-356">UTF8 形式の値を書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="20d5c-356">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d5c-357">メソッドが戻るとき、書式設定されたテキストの長さがバイト単位で含まれます。</span><span class="sxs-lookup"><span data-stu-id="20d5c-357">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="20d5c-358">使用する標準書式。</span><span class="sxs-lookup"><span data-stu-id="20d5c-358">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="20d5c-359">UTF8 文字列として <see cref="T:System.UInt64" /> を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-359">Formats a <see cref="T:System.UInt64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="20d5c-360">書式設定操作が成功した場合、<see langword="true" />。<see langword="false" /> が小さすぎる場合、<paramref name="buffer" />。</span><span class="sxs-lookup"><span data-stu-id="20d5c-360"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="20d5c-361">サポートされている形式:</span><span class="sxs-lookup"><span data-stu-id="20d5c-361">Formats supported:</span></span>

|<span data-ttu-id="20d5c-362">書式文字列</span><span class="sxs-lookup"><span data-stu-id="20d5c-362">Format string</span></span>|<span data-ttu-id="20d5c-363">結果文字列の例</span><span class="sxs-lookup"><span data-stu-id="20d5c-363">Example result string</span></span>|
|--|--|
|<span data-ttu-id="20d5c-364">G/g (既定値)</span><span class="sxs-lookup"><span data-stu-id="20d5c-364">G/g (default)</span></span>| |
|<span data-ttu-id="20d5c-365">D/d</span><span class="sxs-lookup"><span data-stu-id="20d5c-365">D/d</span></span>|<span data-ttu-id="20d5c-366">32767</span><span class="sxs-lookup"><span data-stu-id="20d5c-366">32767</span></span>|
|<span data-ttu-id="20d5c-367">N/n</span><span class="sxs-lookup"><span data-stu-id="20d5c-367">N/n</span></span>|<span data-ttu-id="20d5c-368">32,767</span><span class="sxs-lookup"><span data-stu-id="20d5c-368">32,767</span></span>|       
|<span data-ttu-id="20d5c-369">X/x</span><span class="sxs-lookup"><span data-stu-id="20d5c-369">X/x</span></span>|<span data-ttu-id="20d5c-370">7fff</span><span class="sxs-lookup"><span data-stu-id="20d5c-370">7fff</span></span>|

<span data-ttu-id="20d5c-371">メソッドが失敗した場合は、バッファーのサイズを反復的に増やして、成功するまで再試行します。</span><span class="sxs-lookup"><span data-stu-id="20d5c-371">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
