<Type Name="Base64" FullName="System.Buffers.Text.Base64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccc0f2b0304e6730d77627ed112eb0d7358e20b7" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75153825" /></Metadata><TypeSignature Language="C#" Value="public static class Base64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Base64" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64" />
  <TypeSignature Language="C++ CLI" Value="public ref class Base64 abstract sealed" />
  <TypeSignature Language="F#" Value="type Base64 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2c8c7-101">バイナリ データと base 64 で表される UTF-8 でエンコードされたテキスト間の変換を行います。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-101">Converts between binary data and UTF-8 encoded text that is represented in base 64.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; utf8, Span&lt;byte&gt; bytes, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (utf8 As ReadOnlySpan(Of Byte), bytes As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8 (utf8, bytes, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8"><span data-ttu-id="2c8c7-102">デコードが必要な base 64 方式の UTF-8 でエンコードされたテキストを含む入力スパン。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-102">The input span that contains UTF-8 encoded text in base 64 that needs to be decoded.</span></span></param>
        <param name="bytes"><span data-ttu-id="2c8c7-103">操作の結果 (つまり、デコードされたバイナリ データ) を含む出力スパン。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-103">The output span that contains the result of the operation, that is, the decoded binary data.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c8c7-104">操作中に使用された入力バイト数。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-104">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="2c8c7-105">必要な場合、これを使用して後続の呼び出しの入力をスライスできます。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-105">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="2c8c7-106">出力スパンに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-106">The number of bytes written into the output span.</span></span> <span data-ttu-id="2c8c7-107">必要な場合、これを使用して後続の呼び出しの出力をスライスできます。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-107">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="2c8c7-108">デコードするデータ全体が入力スパンに含まれている場合は <see langword="true" /> (既定値)。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-108"><see langword="true" /> (default) if the input span contains the entire data to decode.</span></span> <span data-ttu-id="2c8c7-109">一部のデータが入力スパンに含まれており、後続のデータがある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-109"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="2c8c7-110">base 64 として表される UTF-8 でエンコードされたテキストのスパンをバイナリ データにデコードします。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-110">Decodes the span of UTF-8 encoded text represented as base 64 into binary data.</span></span> <span data-ttu-id="2c8c7-111">入力が 4 の倍数でない場合は、可能な限り 4 の倍数に最も近い値にデコードされます。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-111">If the input is not a multiple of 4, it will decode as much as it can, to the closest multiple of 4.</span></span></summary>
        <returns><span data-ttu-id="2c8c7-112">デコード操作の状態を示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-112">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="2c8c7-113">戻り値は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-113">The return value can be as follows:</span></span>

- <span data-ttu-id="2c8c7-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: 入力範囲全体の処理に成功しました。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="2c8c7-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: 出力範囲に、デコードされた入力を書き込むための十分な領域がありません。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There is not enough space in the output span to write the decoded input.</span></span>
- <span data-ttu-id="2c8c7-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` が `false`、入力が4の倍数ではありません。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false` and the input is not a multiple of 4.</span></span> <span data-ttu-id="2c8c7-117">それ以外の場合、部分的な入力は <xref:System.Buffers.OperationStatus.InvalidData>と見なされます。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-117">Otherwise, the partial input is considered <xref:System.Buffers.OperationStatus.InvalidData>.</span></span>
- <span data-ttu-id="2c8c7-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: 入力には、必要なベース64の範囲外のバイトが含まれているか、2つ以上の埋め込み文字があるか、または不完全である (つまり、4の倍数ではない) 場合、`isFinalBlock` は `true`。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4) and `isFinalBlock` is `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8InPlace (Span&lt;byte&gt; buffer, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8InPlace(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8InPlace (buffer As Span(Of Byte), ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8InPlace(Span&lt;System::Byte&gt; buffer, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8InPlace : Span&lt;byte&gt; * int -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8InPlace (buffer, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2c8c7-119">デコードが必要な base-64 テキスト データを含む入力スパン。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-119">The input span that contains the base-64 text data that needs to be decoded.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="2c8c7-120">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-120">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="2c8c7-121">base 64 方式の UTF-8 でエンコードされたテキストのスパン (インプレース) をバイナリ データにデコードします。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-121">Decodes the span of UTF-8 encoded text in base 64 (in-place) into binary data.</span></span> <span data-ttu-id="2c8c7-122">デコードされたバイナリ出力は、入力に含まれるテキスト データよりも小さくなります (この操作ではデータがデフレートされます)。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-122">The decoded binary output is smaller than the text data contained in the input (the operation deflates the data).</span></span> <span data-ttu-id="2c8c7-123">入力が 4 の倍数でない場合、このメソッドではデータがデコードされません。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-123">If the input is not a multiple of 4, the method will not decode any data.</span></span></summary>
        <returns><span data-ttu-id="2c8c7-124">デコード操作の状態を示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-124">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="2c8c7-125">戻り値は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-125">The return value can be as follows:</span></span>

- <span data-ttu-id="2c8c7-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: 入力範囲全体の処理に成功しました。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="2c8c7-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: 入力には、必要なベース64の範囲外のバイトが含まれているか、無効または2つ以上の埋め込み文字があるか、または不完全である (つまり、4の倍数ではない)。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4).</span></span>

<span data-ttu-id="2c8c7-128">このメソッドは、<xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> と <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> の値を返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-128">This method cannot return the <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> values.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8 (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;byte&gt; utf8, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;unsigned int8&gt; utf8, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8 (bytes As ReadOnlySpan(Of Byte), utf8 As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8 (bytes, utf8, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2c8c7-129">エンコードが必要なバイナリ データを含む入力スパン。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-129">The input span that contains binary data that needs to be encoded.</span></span></param>
        <param name="utf8"><span data-ttu-id="2c8c7-130">操作の結果 (つまり、base 64 方式の UTF-8 でエンコードされたテキスト) を含む出力スパン。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-130">The output span that contains the result of the operation, that is, the UTF-8 encoded text in base 64.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="2c8c7-131">操作中に使用された入力バイト数。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-131">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="2c8c7-132">必要な場合、これを使用して後続の呼び出しの入力をスライスできます。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-132">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="2c8c7-133">出力スパンに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-133">The number of bytes written into the output span.</span></span> <span data-ttu-id="2c8c7-134">必要な場合、これを使用して後続の呼び出しの出力をスライスできます。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-134">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="2c8c7-135">エンコードするデータ全体が入力スパンに含まれている場合は <see langword="true" /> (既定値)。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-135"><see langword="true" /> (the default) if the input span contains the entire data to encode.</span></span> <span data-ttu-id="2c8c7-136">一部のデータが入力スパンに含まれており、後続のデータがある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-136"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="2c8c7-137">バイナリ データのスパンを base 64 として表される UTF-8 でエンコードされたテキストにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-137">Encodes the span of binary data into UTF-8 encoded text represented as base 64.</span></span></summary>
        <returns><span data-ttu-id="2c8c7-138">エンコード操作の状態を示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-138">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="2c8c7-139">戻り値は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-139">The return value can be as follows:</span></span>

- <span data-ttu-id="2c8c7-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: 入力範囲全体の処理に成功しました。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="2c8c7-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: エンコードされた入力に適合するための十分な領域が出力範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the output span to fit the encoded input.</span></span>
- <span data-ttu-id="2c8c7-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` は `false`。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span></span> <span data-ttu-id="2c8c7-143">それ以外の場合、`isFinalBlock` が `true`場合、入力が3の倍数ではない場合、出力は埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-143">Otherwise, if `isFinalBlock` is `true`, the output is padded if the input is not a multiple of 3.</span></span>

<span data-ttu-id="2c8c7-144">Base-64 エンコーディングではできないため、このメソッドは <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> を返すことができません。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-144">This method cannot return <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> since that is not possible for base-64 encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8InPlace (Span&lt;byte&gt; buffer, int dataLength, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, int32 dataLength, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8InPlace (buffer As Span(Of Byte), dataLength As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus EncodeToUtf8InPlace(Span&lt;System::Byte&gt; buffer, int dataLength, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8InPlace : Span&lt;byte&gt; * int * int -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8InPlace (buffer, dataLength, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="dataLength" Type="System.Int32" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2c8c7-145">エンコードが必要なバイナリ データを含む入力スパン。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-145">The input span that contains binary data that needs to be encoded.</span></span> <span data-ttu-id="2c8c7-146">このメソッドではインプレース変換が実行されるので、操作の結果を格納するための十分な大きさが必要です。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-146">Because the method performs an in-place conversion, it needs to be large enough to store the result of the operation.</span></span></param>
        <param name="dataLength"><span data-ttu-id="2c8c7-147">エンコードが必要な、バッファー内に含まれるバイナリ データのバイト数。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-147">The number of bytes of binary data contained within the buffer that needs to be encoded.</span></span> <span data-ttu-id="2c8c7-148">この値はバッファー長より小さくしてください。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-148">This value must be smaller than the buffer length.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="2c8c7-149">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-149">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="2c8c7-150">バイナリ データのスパン (インプレース) を base 64 として表される UTF-8 でエンコードされたテキストにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-150">Encodes the span of binary data (in-place) into UTF-8 encoded text represented as base 64.</span></span> <span data-ttu-id="2c8c7-151">エンコードされたテキスト出力は、入力に含まれるバイナリ データよりも大きくなります (この操作ではデータがインフレートされます)。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-151">The encoded text output is larger than the binary data contained in the input (the operation inflates the data).</span></span></summary>
        <returns><span data-ttu-id="2c8c7-152">エンコード操作の状態を示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-152">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="2c8c7-153">戻り値は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-153">The return value can be as follows:</span></span>

- <span data-ttu-id="2c8c7-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: バッファー全体の処理に成功しました。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire buffer succeeded.</span></span>
- <span data-ttu-id="2c8c7-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: 入力をエンコードした結果を収めるには、バッファーに `dataLength` を超える領域が不足しています。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the buffer beyond `dataLength` to fit the result of encoding the input.</span></span>

<span data-ttu-id="2c8c7-156">このメソッドは、<xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> と <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>を返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-156">This method cannot return <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDecodedFromUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxDecodedFromUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDecodedFromUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDecodedFromUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxDecodedFromUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxDecodedFromUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="2c8c7-157">バイト スパンのサイズ。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-157">The size of the byte span.</span></span></param>
        <summary><span data-ttu-id="2c8c7-158">指定された長さのバイト スパン内の base-64 でエンコードされたテキストをデコードする場合は、結果の最大長 (バイト数) を返します。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-158">Returns the maximum length (in bytes) of the result if you were to decode base-64 encoded text within a byte span with the specified length.</span></span></summary>
        <returns><span data-ttu-id="2c8c7-159">結果の最大長 (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-159">The maximum length (in bytes) of the result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2c8c7-160"><paramref name="length" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-160"><paramref name="length" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxEncodedToUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxEncodedToUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxEncodedToUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxEncodedToUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxEncodedToUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxEncodedToUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="2c8c7-161">バイト スパンのサイズ。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-161">The size of the byte span.</span></span></param>
        <summary><span data-ttu-id="2c8c7-162">指定された長さのバイト スパン内のバイナリ データをエンコードする場合は、結果の最大長 (バイト数) を返します。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-162">Returns the maximum length (in bytes) of the result if you were to encode binary data within a byte span with the specified length.</span></span></summary>
        <returns><span data-ttu-id="2c8c7-163">結果の最大長 (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-163">The maximum length (in bytes) of the result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2c8c7-164"><paramref name="length" /> は 0 未満または 1610612733 より大きくなります (エンコードによってデータが 4/3 倍にインフレートされるため)。</span><span class="sxs-lookup"><span data-stu-id="2c8c7-164"><paramref name="length" /> is less than 0 or larger than 1610612733 (since encode inflates the data by 4/3).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
