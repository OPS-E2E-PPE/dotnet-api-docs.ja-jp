<Type Name="FrameworkCompatibilityPreferences" FullName="System.Windows.FrameworkCompatibilityPreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77764c04361ef93261800e6c7164329d8fcc1566" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73347779" /></Metadata><TypeSignature Language="C#" Value="public static class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FrameworkCompatibilityPreferences extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkCompatibilityPreferences" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkCompatibilityPreferences abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkCompatibilityPreferences = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52f27-101">PresentationFramework アセンブリ内にある WPF 機能に関連する、アプリケーションの動作方法を指定するプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="52f27-101">Contains properties that specify how an application should behave relative to WPF features that are in the PresentationFramework assembly.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreInactiveSelectionHighlightBrushKeysSupported">
      <MemberSignature Language="C#" Value="public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AreInactiveSelectionHighlightBrushKeysSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AreInactiveSelectionHighlightBrushKeysSupported { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AreInactiveSelectionHighlightBrushKeysSupported : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52f27-102">アプリケーションが非アクティブな選択項目の色に <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> および <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> プロパティを使用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="52f27-102">Gets or sets a value that indicates whether the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items.</span></span></summary>
        <value><span data-ttu-id="52f27-103">アプリケーションが、選択された非アクティブの項目の色に <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> プロパティと <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> プロパティを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="52f27-103"><see langword="true" /> if the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items; otherwise, <see langword="false" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52f27-104">このプロパティの既定値は、アプリが対象とする WPF のバージョンによって異なります。</span><span class="sxs-lookup"><span data-stu-id="52f27-104">The default value of this property depends which version of WPF that your app targets.</span></span>  <span data-ttu-id="52f27-105">アプリが WPF 4.0 以前のバージョンを対象としている場合、既定値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="52f27-105">If your app targets WPF 4.0 or earlier, the default is `false`.</span></span>  <span data-ttu-id="52f27-106">アプリが WPF 4.5 を対象としている場合、既定値は `true` です。</span><span class="sxs-lookup"><span data-stu-id="52f27-106">If your app targets WPF 4.5, the default is `true`.</span></span>  <span data-ttu-id="52f27-107">このプロパティを使用して WPF の動作を変更する場合は、アプリケーションから継承するクラスのコンストラクターなど、アプリの有効期間の早い段階でプロパティの値を変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="52f27-107">If you use this property to change the behavior of WPF, you must change the property's value early in the app's lifetime, such in the constructor of the class that inherits from Application.</span></span>  <span data-ttu-id="52f27-108">値が読み取られた後、再度変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="52f27-108">After the value is read, you cannot change it again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepTextBoxDisplaySynchronizedWithTextProperty">
      <MemberSignature Language="C#" Value="public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property KeepTextBoxDisplaySynchronizedWithTextProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeepTextBoxDisplaySynchronizedWithTextProperty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepTextBoxDisplaySynchronizedWithTextProperty : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52f27-109">データ バインドされた <see cref="T:System.Windows.Controls.TextBox" /> が、ソースの <see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティの値と同じ文字列を表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="52f27-109">Gets or sets a value that indicates whether a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property.</span></span></summary>
        <value><span data-ttu-id="52f27-110">データ バインドされた <see cref="T:System.Windows.Controls.TextBox" /> が、<see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティのソースの値と同じ文字列を表示する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="52f27-110"><see langword="true" /> if a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52f27-111">このプロパティの既定値は、アプリが対象とする WPF のバージョンによって異なります。</span><span class="sxs-lookup"><span data-stu-id="52f27-111">The default value of this property depends which version of WPF that your app targets.</span></span>  <span data-ttu-id="52f27-112">アプリが WPF 4.0 以前のバージョンを対象としている場合、既定値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="52f27-112">If your app targets WPF 4.0 or earlier, the default is `false`.</span></span>  <span data-ttu-id="52f27-113">アプリが WPF 4.5 を対象としている場合、既定値は `true` です。</span><span class="sxs-lookup"><span data-stu-id="52f27-113">If your app targets WPF 4.5, the default is `true`.</span></span>  <span data-ttu-id="52f27-114">このプロパティを使用して WPF の動作を変更する場合は、アプリケーションから継承するクラスのコンストラクターなど、アプリの有効期間の早い段階でプロパティの値を変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="52f27-114">If you use this property to change the behavior of WPF, you must change the property's value early in the app's lifetime, such in the constructor of the class that inherits from Application.</span></span>  <span data-ttu-id="52f27-115">値が読み取られた後、再度変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="52f27-115">After the value is read, you cannot change it again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldThrowOnCopyOrCutFailure">
      <MemberSignature Language="C#" Value="public static bool ShouldThrowOnCopyOrCutFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ShouldThrowOnCopyOrCutFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ShouldThrowOnCopyOrCutFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldThrowOnCopyOrCutFailure : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52f27-116"><see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> インスタンス内で失敗したコピーまたは切り取り操作が <see cref="T:System.Runtime.InteropServices.ExternalException" /> という結果になるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="52f27-116">Gets or sets a value that indicates whether a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />.</span></span></summary>
        <value><span data-ttu-id="52f27-117"><see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> インスタンスで失敗したコピーまたは切り取り操作が <see cref="T:System.Runtime.InteropServices.ExternalException" /> という結果の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="52f27-117"><see langword="true" /> if a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52f27-118">**HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** エラーなどのクリップボード操作が失敗した場合、対応する <xref:System.Runtime.InteropServices.ExternalException> (externalexception の一種) がスローされます。</span><span class="sxs-lookup"><span data-stu-id="52f27-118">If a clipboard operation fails, such as with a **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** error, a corresponding <xref:System.Runtime.InteropServices.ExternalException> (which is a type of ExternalException) is thrown.</span></span>  
  
 <span data-ttu-id="52f27-119">Win32 `OpenClipboard` API はグローバルに動作するため、適切に記述されたアプリケーションは、クリップボードの操作が完了するとすぐに、対応する `CloseClipboard` API を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="52f27-119">Because the Win32 `OpenClipboard` API acts globally, well-written applications should call the corresponding `CloseClipboard` API as soon as they have completed their clipboard operations.</span></span> <span data-ttu-id="52f27-120">それ以外の場合、同じセッションで実行されている他のアプリケーションはクリップボード関数にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="52f27-120">Otherwise, other applications running in the same session will be unable to access clipboard functions.</span></span>  
  
 <span data-ttu-id="52f27-121">WPF では、クリップボードへのアクセス拒否は通常、サイレントモードでは無視されます。</span><span class="sxs-lookup"><span data-stu-id="52f27-121">In WPF, such a denial of access to the clipboard is normally ignored silently.</span></span> <span data-ttu-id="52f27-122">ただし、アプリケーションは、<xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> フラグを `true`に設定することによって、障害発生時に `ExternalException` を受け取ることを選択できます。</span><span class="sxs-lookup"><span data-stu-id="52f27-122">However, applications can opt to receive an `ExternalException` upon failure by setting the <xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> flag to `true`.</span></span> <span data-ttu-id="52f27-123">ただし、例外を受け取ることを選択するには、アプリケーションが <xref:System.Windows.Input.ApplicationCommands.Cut%2A> を処理し、<xref:System.Windows.Input.CommandBinding> で <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands を処理し、そのバインディングをアプリケーションのすべての System.windows.controls.primitives.textboxbase.textchanged> コントロール (<xref:System.Windows.Controls.TextBox> および <xref:System.Windows.Controls.RichTextBox>) に適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="52f27-123">However, opting to receive exceptions also requires the application to handle <xref:System.Windows.Input.ApplicationCommands.Cut%2A> and <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands through a <xref:System.Windows.Input.CommandBinding>, and then apply that binding to all TextBoxBase controls (<xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox>)  in the application.</span></span> <span data-ttu-id="52f27-124">アプリケーションでは、CommandBinding の実行ハンドラーでのコピー操作および切り取り操作の結果として ExternalExceptions が処理されるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="52f27-124">The application should ensure that it handles ExternalExceptions resulting from copy and cut operations in the CommandBinding's Executed handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
