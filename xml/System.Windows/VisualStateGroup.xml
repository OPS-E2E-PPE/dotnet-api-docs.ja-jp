<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e7dca855e26d14e53afefb1dbf04dc0ce9773eb" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75180007" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>一度に 1 つしか選択できない <see cref="T:System.Windows.VisualState" /> オブジェクトと、ある状態から別の状態に遷移するために使用する <see cref="T:System.Windows.VisualTransition" /> オブジェクトを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各 <xref:System.Windows.VisualStateGroup> には、<xref:System.Windows.VisualState> オブジェクトのコレクションが含まれています。 コントロールが特定の状態にある場合に、コントロールの外観がどのように変化するかを指定する <xref:System.Windows.Media.Animation.Storyboard> オブジェクトのコレクション <xref:System.Windows.VisualState> 格納されています。 たとえば、<xref:System.Windows.Controls.Button> が押されているときとは異なる外観になっている場合があります。 <xref:System.Windows.Controls.Button> が押されたときにに対応する2つの状態 (`"Pressed"`) と、(`"Normal"`)。  
  
 コントロールに <xref:System.Windows.VisualState> を追加するには、コントロールの `VisualStateManager.VisualStateGroups` 添付プロパティを設定します。 同じ <xref:System.Windows.VisualStateGroup>内で相互に排他的な状態を格納します。 たとえば、<xref:System.Windows.Controls.CheckBox> には、2つの <xref:System.Windows.VisualStateGroup> オブジェクトがあります。 1つには、状態、`Normal`、`MouseOver`、`Pressed`、および `Disabled`が含まれます。 もう1つは、状態、`Checked`、`UnChecked`、および `Indeterminate`を含んでいます。 <xref:System.Windows.Controls.CheckBox> は、同時に状態 `MouseOver` と `UnChecked` にすることができますが、同時に `MouseOver` および `Pressed` の状態にすることはできません。  
  
 <xref:System.Windows.VisualState> オブジェクトを任意の要素に追加できますが、他のユーザーが <xref:System.Windows.Controls.Control>の視覚的な動作を再定義できるようにするには、特に便利な方法です。 <xref:System.Windows.Controls.ControlTemplate>を使用するカスタムコントロールを作成する場合は、そのクラス定義に <xref:System.Windows.TemplateVisualStateAttribute> を追加することによって、コントロールの状態を指定できます。 次に、コントロールの新しい <xref:System.Windows.Controls.ControlTemplate> を作成するすべてのユーザーが、<xref:System.Windows.VisualState> オブジェクトをテンプレートに追加できます。 <xref:System.Windows.TemplateVisualStateAttribute> を使用すると、Expression Blend などのデザイナーツールでコントロールの状態を公開できます。 同じ <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> を持つ状態が同じ <xref:System.Windows.VisualStateGroup>に属しています。  
  
 <xref:System.Windows.Controls.ControlTemplate>で <xref:System.Windows.VisualStateGroup> オブジェクトを使用する方法の詳細については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。 <xref:System.Windows.VisualStateManager>を使用するコントロールを作成する方法の詳細については、「[カスタマイズ可能な外観を持つコントロールの作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)」を参照してください。  
  
 <xref:System.Windows.VisualStateGroup.Transitions%2A> プロパティには、<xref:System.Windows.VisualStateGroup>で定義されている状態の間でコントロールが遷移するときに適用される <xref:System.Windows.VisualTransition> オブジェクトが含まれています。  
  
   
  
## Examples  
 次の例では、1つの <xref:System.Windows.Controls.Grid>を含む <xref:System.Windows.Controls.Button> の単純な <xref:System.Windows.Controls.ControlTemplate> を作成します。 また、`MouseOver` と `Normal` の状態を定義する `CommonStates`という名前の <xref:System.Windows.VisualStateGroup> も含まれています。 <xref:System.Windows.VisualStateGroup> には、ユーザーがマウスポインターを <xref:System.Windows.Controls.Button>上に移動したときに、<xref:System.Windows.Controls.Grid> が緑から赤に変更されるまでに0.5 秒かかることを指定する <xref:System.Windows.VisualTransition> もあります。  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.VisualStateGroup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに現在適用されている <see cref="T:System.Windows.VisualState" /> を取得します。</summary>
        <value>コントロールに現在適用されている <see cref="T:System.Windows.VisualState" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが別の状態に遷移した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、コントロールが新しい状態に遷移し、<xref:System.Windows.VisualStateGroup.CurrentStateChanging> イベントが発生した後に発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが別の状態への遷移を開始したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントは、コントロールが状態の遷移を開始するときに発生します。 状態の変更に <xref:System.Windows.VisualTransition> が適用されている場合、このイベントは遷移の開始時に発生します。 <xref:System.Windows.VisualTransition> が適用されていない場合、このイベントは、コントロールが新しい状態に遷移した後、<xref:System.Windows.VisualStateGroup.CurrentStateChanged> イベントの前に発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.VisualStateGroup" /> の名前を取得または設定します。</summary>
        <value><see cref="T:System.Windows.VisualStateGroup" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの作成者は、そのクラス定義に <xref:System.Windows.TemplateVisualStateAttribute> を追加することによって、コントロールの状態を指定します。 同じ <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> を持つ状態が同じ <xref:System.Windows.VisualStateGroup>に属しています。 <xref:System.Windows.VisualStateGroup> の <xref:System.Windows.VisualStateGroup.Name%2A> を <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> プロパティの値に設定します。  
  
   
  
## Examples  
 次の例では、`CommonStates` と `FocusStates`という名前の2つの <xref:System.Windows.VisualStateGroup> オブジェクトを作成します。 コントロールは、常に各 <xref:System.Windows.VisualStateGroup> から1つの状態になります。 全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>同時に指定できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクションを取得します。</summary>
        <value>同時に指定できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、1つの <xref:System.Windows.Controls.Grid>を含む <xref:System.Windows.Controls.Button> の単純な <xref:System.Windows.Controls.ControlTemplate> を作成します。 また、`MouseOver` と `Normal` の状態を定義する `CommonStates`という名前の <xref:System.Windows.VisualStateGroup> も含まれています。 <xref:System.Windows.VisualStateGroup> には、ユーザーがマウスポインターを <xref:System.Windows.Controls.Button>上に移動したときに、<xref:System.Windows.Controls.Grid> が緑から赤に変更されるまでに0.5 秒かかることを指定する <xref:System.Windows.VisualTransition> もあります。  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualStateGroup.Transitions%2A> 内の <xref:System.Windows.VisualTransition> オブジェクトは、<xref:System.Windows.VisualStateGroup>で定義されている状態の間でコントロールが遷移するときに適用されます。  
  
   
  
## Examples  
 次の例では、1つの <xref:System.Windows.Controls.Grid>を含む <xref:System.Windows.Controls.Button> の単純な <xref:System.Windows.Controls.ControlTemplate> を作成します。 また、`MouseOver` と `Normal` の状態を定義する `CommonStates`という名前の <xref:System.Windows.VisualStateGroup> も含まれています。 <xref:System.Windows.VisualStateGroup> には、ユーザーがマウスポインターを <xref:System.Windows.Controls.Button>上に移動したときに、<xref:System.Windows.Controls.Grid> が緑から赤に変更されるまでに0.5 秒かかることを指定する <xref:System.Windows.VisualTransition> もあります。  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
