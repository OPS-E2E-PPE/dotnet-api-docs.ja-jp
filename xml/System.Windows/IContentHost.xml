<Type Name="IContentHost" FullName="System.Windows.IContentHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3684c0ffe9aeec74662f745540b3353938d1a591" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78836665" /></Metadata><TypeSignature Language="C#" Value="public interface IContentHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContentHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IContentHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContentHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContentHost" />
  <TypeSignature Language="F#" Value="type IContentHost = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>このインターフェイスは、<see cref="T:System.Windows.ContentElement" /> をホストするレイアウトによって実装されます。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRectangles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt; GetRectangles (System.Windows.ContentElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Rect&gt; GetRectangles(class System.Windows.ContentElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.GetRectangles(System.Windows.ContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectangles (child As ContentElement) As ReadOnlyCollection(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Rect&gt; ^ GetRectangles(System::Windows::ContentElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member GetRectangles : System.Windows.ContentElement -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;" Usage="iContentHost.GetRectangles child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.ContentElement" />
      </Parameters>
      <Docs>
        <param name="child">外接する四角形が返される子要素。</param>
        <summary>子要素に外接する四角形のコレクションを返します。</summary>
        <returns>子要素に外接する四角形のコレクション。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">*child* が null である場合。</exception>
        <exception cref="T:System.ArgumentException">要素が直接の子孫ではない場合 (つまり、要素は <see cref="T:System.Windows.IContentHost" /> の子であるか、<see cref="T:System.Windows.ContentElement" /> の直接の子孫である <see cref="T:System.Windows.IContentHost" /> である必要があります)。</exception>
      </Docs>
    </Member>
    <Member MemberName="HostedElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt; HostedElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.IInputElement&gt; HostedElements" />
      <MemberSignature Language="DocId" Value="P:System.Windows.IContentHost.HostedElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostedElements As IEnumerator(Of IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ HostedElements { System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostedElements : System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;" Usage="System.Windows.IContentHost.HostedElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子孫であるすべての <see cref="T:System.Windows.ContentElement" /> 派生クラスと、<see cref="T:System.Windows.UIElement" /> の直接の子孫であるか、またはその子孫 <see cref="T:System.Windows.IContentHost" /> クラスの 1 つであるすべての <see cref="T:System.Windows.ContentElement" /> 派生クラスを格納している列挙体を取得します。</summary>
        <value>子孫であるすべての <see cref="T:System.Windows.ContentElement" /> 派生クラスと、<see cref="T:System.Windows.UIElement" /> の直接の子孫であるか、またはその子孫 <see cref="T:System.Windows.IContentHost" /> クラスの 1 つであるすべての <see cref="T:System.Windows.ContentElement" /> 派生クラスを格納している列挙体。 つまり、<see cref="T:System.Windows.IContentHost" /> が視覚的表現を作成する要素 (<see cref="T:System.Windows.ContentElement" /> 派生クラス)、または <see cref="T:System.Windows.IContentHost" /> がレイアウトを設定する要素 (最初のレベルの子孫 <see cref="T:System.Windows.UIElement" /> 派生クラス)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputHitTest (point As Point) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="abstract member InputHitTest : System.Windows.Point -&gt; System.Windows.IInputElement" Usage="iContentHost.InputHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">ContentHost に対するマウス座標。</param>
        <summary>子要素のヒット テストを実行します。</summary>
        <returns><see cref="T:System.Windows.IInputElement" /> の子孫。そのような要素が存在しない場合は **NULL**。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="public void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit" Usage="iContentHost.OnChildDesiredSizeChanged child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><see cref="P:System.Windows.UIElement.DesiredSize" /> が変更された子要素。</param>
        <summary><see cref="T:System.Windows.UIElement" /> によってホストされる <see cref="T:System.Windows.IContentHost" /> 派生クラスの <see cref="P:System.Windows.UIElement.DesiredSize" /> が変更されたときに呼び出されます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">*child* が null である場合。</exception>
        <exception cref="T:System.ArgumentException">*child* が直接の子孫ではない場合 (つまり、*child*は <see cref="T:System.Windows.IContentHost" /> の子であるか、<see cref="T:System.Windows.ContentElement" /> の直接の子孫である <see cref="T:System.Windows.IContentHost" /> である必要があります)。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
