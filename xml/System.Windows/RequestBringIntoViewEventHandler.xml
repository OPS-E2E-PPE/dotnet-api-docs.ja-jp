<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a09a07311f47fa30fabe4e58f0468a8eb7a6113" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82486609" /></Metadata><TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="40581-101">イベント ハンドラーがアタッチされるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40581-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="40581-102">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="40581-102">The event data.</span></span></param>
    <summary><span data-ttu-id="40581-103"><see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="40581-103">Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40581-104">このイベントの処理は、通常、スクロール可能な領域をサポートしている要素内でのみ実行されます。それ以外の場合は、子要素のコンテンツの目的のサイズを合わせて設定した場合にのみ、そのイベントを意図的に処理することによってのみ実行されます。</span><span class="sxs-lookup"><span data-stu-id="40581-104">Handling this event is typically only done within elements that support a scrollable region, or otherwise deliberately set their rendering size smaller than the combined desired size of their child element content, and is only done by deliberately handling the event once it has routed upwards in the element tree and has reached the first parent that offers scrolling region support.</span></span> <span data-ttu-id="40581-105">通常はユーザーコントロールに適した方法でスクロール領域を処理する既存の実装が <xref:System.Windows.Controls.ScrollViewer>ます。</span><span class="sxs-lookup"><span data-stu-id="40581-105">An existing implementation that handles scrolling regions in a manner that is typically desirable for user controls is <xref:System.Windows.Controls.ScrollViewer>.</span></span> <span data-ttu-id="40581-106"><xref:System.Windows.Controls.ScrollViewer>から派生する場合は、<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> のクラスハンドラーを登録し、イベントの基本クラスの処理を補完することができます。</span><span class="sxs-lookup"><span data-stu-id="40581-106">If you derive from <xref:System.Windows.Controls.ScrollViewer>, you can register a class handler for <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> and supplement the base class handling of the event.</span></span> <span data-ttu-id="40581-107">また、<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>ではなく、クラス定義の <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> イベントを使用またはクラス処理することも検討してください。</span><span class="sxs-lookup"><span data-stu-id="40581-107">You should also consider using or class-handling the class-defined <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> event instead of <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>.</span></span> <span data-ttu-id="40581-108">また、<xref:System.Windows.Controls.ScrollViewer>から派生しない完全なカスタムクラスを作成した場合でも、クラスのインスタンス化で <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> を呼び出すことによって、クラスの処理を追加できます。</span><span class="sxs-lookup"><span data-stu-id="40581-108">Alternatively, if you create an entirely custom class that does not derive from <xref:System.Windows.Controls.ScrollViewer>, you can still add class handling by calling <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> in your class instantiation.</span></span>  <span data-ttu-id="40581-109">クラスの処理の詳細については、「[ルーティングイベントを処理済みとしてマークする」および「クラス処理](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="40581-109">For details on class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="40581-110">コンテンツ要素によって、コンテンツホストによってイベントが発生する可能性があります (<xref:System.Windows.FrameworkContentElement.BringIntoView%2A> を呼び出し、コンテンツホストから <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> を発生させます)。</span><span class="sxs-lookup"><span data-stu-id="40581-110">Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> from the content host).</span></span> <span data-ttu-id="40581-111">同様に、ヘルパーメソッド <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>を使用して論理ツリー要素を表示するように要求することもできます。</span><span class="sxs-lookup"><span data-stu-id="40581-111">Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="40581-112"><xref:System.Windows.Controls.ListBox> は、関連するが異なるメソッド <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>を実装しています。</span><span class="sxs-lookup"><span data-stu-id="40581-112">A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>
