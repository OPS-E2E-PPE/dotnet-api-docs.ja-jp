<Type Name="VisualStateManager" FullName="System.Windows.VisualStateManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4aeac216aaea57f5a5caeebbb9143f4bff6e366f" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82339528" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateManager : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateManager extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateManager&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateManager : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateManager = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="02577-101">コントロールの状態を遷移するための状態とロジックを管理します。</span><span class="sxs-lookup"><span data-stu-id="02577-101">Manages states and the logic for transitioning between states for controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02577-102"><xref:System.Windows.VisualStateManager> を使用すると、コントロールの状態、コントロールが特定の状態にあるときの外観、およびコントロールが状態を変更したときの状態を指定できます。</span><span class="sxs-lookup"><span data-stu-id="02577-102">The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</span></span> <span data-ttu-id="02577-103">たとえば、<xref:System.Windows.Controls.Button> が押されているときとは異なる外観になっている場合があります。</span><span class="sxs-lookup"><span data-stu-id="02577-103">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="02577-104"><xref:System.Windows.Controls.Button> が押されたときにに対応する2つの状態 (`"Pressed"`) と、(`"Normal"`)。</span><span class="sxs-lookup"><span data-stu-id="02577-104">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span> <span data-ttu-id="02577-105">コントロールが状態にある場合の外観は、<xref:System.Windows.VisualState>によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="02577-105">The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>.</span></span> <span data-ttu-id="02577-106">コントロールがその状態のときにコントロールの外観がどのように変化するかを指定する <xref:System.Windows.Media.Animation.Storyboard> オブジェクトのコレクションを格納 <xref:System.Windows.VisualState>。</span><span class="sxs-lookup"><span data-stu-id="02577-106">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state.</span></span> <span data-ttu-id="02577-107">コントロールに `VisualStateManager.VisualStateGroups` 添付プロパティを設定することによって、コントロールに視覚的な状態を追加します。</span><span class="sxs-lookup"><span data-stu-id="02577-107">You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control.</span></span> <span data-ttu-id="02577-108">各 <xref:System.Windows.VisualStateGroup> には、相互に排他的な <xref:System.Windows.VisualState> オブジェクトのコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="02577-108">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive.</span></span> <span data-ttu-id="02577-109">つまり、コントロールは、常に各 <xref:System.Windows.VisualStateGroup>で1つの状態になります。</span><span class="sxs-lookup"><span data-stu-id="02577-109">That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="02577-110"><xref:System.Windows.VisualStateManager> を使用すると、コントロールが特定の状態に入るタイミングを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="02577-110">The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state.</span></span> <span data-ttu-id="02577-111">状態を変更するために呼び出す必要があるメソッドは、実際のシナリオによって異なります。</span><span class="sxs-lookup"><span data-stu-id="02577-111">The method that you should call to change states depends on your scenario.</span></span> <span data-ttu-id="02577-112"><xref:System.Windows.Controls.ControlTemplate>内の <xref:System.Windows.VisualStateManager> を使用するコントロールを作成する場合は、<xref:System.Windows.VisualStateManager.GoToState%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="02577-112">If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span> <span data-ttu-id="02577-113"><xref:System.Windows.VisualStateManager>を使用するコントロールを作成する方法の詳細については、「[カスタマイズ可能な外観を持つコントロールの作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="02577-113">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span> <span data-ttu-id="02577-114"><xref:System.Windows.VisualStateManager> を <xref:System.Windows.Controls.ControlTemplate> の外部で使用する場合 (たとえば、<xref:System.Windows.Controls.UserControl> または1つの要素で <xref:System.Windows.VisualStateManager> を使用する場合) は、<xref:System.Windows.VisualStateManager.GoToElementState%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="02577-114">If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method.</span></span> <span data-ttu-id="02577-115">どちらの場合も、<xref:System.Windows.VisualStateManager> は、関連する状態に関連付けられているストーリーボードを適切に開始および停止するために必要なロジックを実行します。</span><span class="sxs-lookup"><span data-stu-id="02577-115">In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</span></span> <span data-ttu-id="02577-116">たとえば、コントロールが、それぞれにストーリーボードが関連付けられている状態、`State1`、`State2`を定義しているとします。</span><span class="sxs-lookup"><span data-stu-id="02577-116">For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it.</span></span> <span data-ttu-id="02577-117">コントロールが `State1` にあり、`State2` を <xref:System.Windows.VisualStateManager.GoToState%2A> または <xref:System.Windows.VisualStateManager.GoToElementState%2A>に渡すと、<xref:System.Windows.VisualStateManager> によってストーリーボードが開始され `State2` でストーリーボードが停止されます。`State1`</span><span class="sxs-lookup"><span data-stu-id="02577-117">If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.</span></span>  
  
 <span data-ttu-id="02577-118">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] に含まれるコントロールは、<xref:System.Windows.VisualStateManager> を使用して表示状態を変更します。</span><span class="sxs-lookup"><span data-stu-id="02577-118">Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states.</span></span> <span data-ttu-id="02577-119">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]に含まれるコントロールの <xref:System.Windows.Controls.ControlTemplate> を作成する場合は、コントロールの <xref:System.Windows.Controls.ControlTemplate> に <xref:System.Windows.VisualState> オブジェクトを追加して、コントロールの外観を特定の状態で指定できます。</span><span class="sxs-lookup"><span data-stu-id="02577-119">When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state.</span></span> <span data-ttu-id="02577-120">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]に含まれているコントロールの表示状態の名前を確認するには、「[コントロールのスタイルとテンプレート](~/docs/framework/wpf/controls/control-styles-and-templates.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="02577-120">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="02577-121">コントロールのロジックは状態間の遷移を処理するので、新しい <xref:System.Windows.Controls.ControlTemplate>で <xref:System.Windows.VisualState> オブジェクトを定義する以外に、何もする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="02577-121">The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="02577-122">既存のコントロールのコントロールテンプレートを作成する方法の詳細については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="02577-122">For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 <span data-ttu-id="02577-123">状態間の遷移のために独自のロジックを実装する場合は、<xref:System.Windows.VisualStateManager>から継承し、<xref:System.Windows.VisualStateManager.GoToStateCore%2A> メソッドをオーバーライドし、カスタムロジックを使用するコントロールの添付プロパティ <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02577-123">If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> attached property on the control that uses the custom logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02577-124">次の例では、<xref:System.Windows.Shapes.Rectangle> を作成し、`CommonStates` という名前の <xref:System.Windows.VisualStateGroup> を `VisualStateManager.VisualStatesGroups` 添付プロパティに追加します。</span><span class="sxs-lookup"><span data-stu-id="02577-124">The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property.</span></span> <span data-ttu-id="02577-125">この例では、`CommonStates`<xref:System.Windows.VisualStateGroup>内の `MouseOver` と `Normal`<xref:System.Windows.VisualState> オブジェクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="02577-125">The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="02577-126">ユーザーがマウスポインターを <xref:System.Windows.Shapes.Rectangle>の上に移動すると、1秒間に赤から緑に変わります。</span><span class="sxs-lookup"><span data-stu-id="02577-126">When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second.</span></span> <span data-ttu-id="02577-127">ユーザーがマウスを四角形の外に移動すると、<xref:System.Windows.Controls.Grid> は直ちに赤に戻ります。</span><span class="sxs-lookup"><span data-stu-id="02577-127">When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red.</span></span> <span data-ttu-id="02577-128">`Normal` の状態が <xref:System.Windows.Media.Animation.Storyboard>を定義していないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="02577-128">Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="02577-129"><xref:System.Windows.Media.Animation.Storyboard> は必要ありません。 <xref:System.Windows.Shapes.Rectangle> が `MouseOver` 状態から `Normal` 状態に遷移すると、<xref:System.Windows.Media.Animation.Storyboard> の `MouseOver` が停止し、<xref:System.Windows.Media.SolidColorBrush.Color%2A> の <xref:System.Windows.Media.SolidColorBrush> プロパティが赤に戻るためです。</span><span class="sxs-lookup"><span data-stu-id="02577-129">A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.</span></span>  
  
 [!code-xaml[VSMCustomControl#VSMNoTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmnotemplate)]  
  
 <span data-ttu-id="02577-130">次の例は、前の例で定義されているイベントハンドラーを示しています。 <xref:System.Windows.VisualStateManager.GoToElementState%2A> メソッドを呼び出して、状態を遷移させることができます。</span><span class="sxs-lookup"><span data-stu-id="02577-130">The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states.</span></span> <span data-ttu-id="02577-131">前の例の四角形が <xref:System.Windows.Controls.ControlTemplate>の一部であった場合、この例では <xref:System.Windows.VisualStateManager.GoToState%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="02577-131">If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span>  
  
 [!code-csharp[VSMCustomControl#GoToElementState](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#gotoelementstate)]
 [!code-vb[VSMCustomControl#GoToElementState](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#gotoelementstate)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02577-132"><see cref="T:System.Windows.VisualStateManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="02577-132">Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManager">
      <MemberSignature Language="C#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="ILAsm" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.CustomVisualStateManager" />
      <MemberSignature Language="VB.NET" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="F#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" Usage="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02577-133">コントロールの状態を遷移させる <see cref="T:System.Windows.VisualStateManager" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="02577-133">Gets or sets the <see cref="T:System.Windows.VisualStateManager" /> object that transitions between the states of a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02577-134"><xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> が `null`場合、<xref:System.Windows.VisualStateManager> は独自のロジックを使用して状態を遷移します。</span><span class="sxs-lookup"><span data-stu-id="02577-134">If <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> is `null`, the <xref:System.Windows.VisualStateManager> uses its own logic to transition between states.</span></span> <span data-ttu-id="02577-135">状態間の遷移のために独自のロジックを実装する場合は、<xref:System.Windows.VisualStateManager> から継承するクラスを作成し、<xref:System.Windows.VisualStateManager.GoToStateCore%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="02577-135">If you want to implement your own logic for transitioning between states, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="02577-136">カスタムクラスを使用するには、<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> プロパティをカスタム型のオブジェクトに設定します。</span><span class="sxs-lookup"><span data-stu-id="02577-136">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomVisualStateManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomVisualStateManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomVisualStateManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomVisualStateManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02577-137"><see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="02577-137">Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.VisualStateManager GetCustomVisualStateManager(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomVisualStateManager (obj As FrameworkElement) As VisualStateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::VisualStateManager ^ GetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetCustomVisualStateManager : System.Windows.FrameworkElement -&gt; System.Windows.VisualStateManager" Usage="System.Windows.VisualStateManager.GetCustomVisualStateManager obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VisualStateManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="02577-138"><see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティの取得元の要素。</span><span class="sxs-lookup"><span data-stu-id="02577-138">The element to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property from.</span></span></param>
        <summary><span data-ttu-id="02577-139"><see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="02577-139">Gets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="02577-140">コントロールの状態を切り替える表示状態マネージャー。</span><span class="sxs-lookup"><span data-stu-id="02577-140">The visual state manager that transitions between the states of a control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualStateGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetVisualStateGroups(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVisualStateGroups (obj As FrameworkElement) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ GetVisualStateGroups(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetVisualStateGroups : System.Windows.FrameworkElement -&gt; System.Collections.IList" Usage="System.Windows.VisualStateManager.GetVisualStateGroups obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="02577-141"><see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 添付プロパティの取得元の要素。</span><span class="sxs-lookup"><span data-stu-id="02577-141">The element to get the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property from.</span></span></param>
        <summary><span data-ttu-id="02577-142"><see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 添付プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="02577-142">Gets the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="02577-143">指定したオブジェクトに関連付けられた <see cref="T:System.Windows.VisualStateGroup" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="02577-143">The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToElementState">
      <MemberSignature Language="C#" Value="public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToElementState(class System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToElementState (stateGroupsRoot As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToElementState(System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToElementState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToElementState (stateGroupsRoot, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stateGroupsRoot"><span data-ttu-id="02577-144"><see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</span><span class="sxs-lookup"><span data-stu-id="02577-144">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <param name="stateName"><span data-ttu-id="02577-145">切り替え先の状態。</span><span class="sxs-lookup"><span data-stu-id="02577-145">The state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="02577-146"><see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02577-146"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="02577-147">要素を 2 つの状態の間で遷移させます。</span><span class="sxs-lookup"><span data-stu-id="02577-147">Transitions the element between two states.</span></span> <span data-ttu-id="02577-148">このメソッドを使用して、コントロールによって定義された状態ではなく、アプリケーションによって定義された状態に遷移します。</span><span class="sxs-lookup"><span data-stu-id="02577-148">Use this method to transition states that are defined by an application, rather than defined by a control.</span></span></summary>
        <returns><span data-ttu-id="02577-149">コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02577-149"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02577-150"><xref:System.Windows.VisualStateManager.GoToElementState%2A> メソッドを呼び出して、<xref:System.Windows.Controls.ControlTemplate> 外の要素の状態を変更します (たとえば、<xref:System.Windows.DataTemplate> または <xref:System.Windows.Window>で <xref:System.Windows.VisualStateManager> を使用する場合)。</span><span class="sxs-lookup"><span data-stu-id="02577-150">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>).</span></span> <span data-ttu-id="02577-151"><xref:System.Windows.Controls.ControlTemplate>内の <xref:System.Windows.VisualStateManager> を使用するコントロールの状態を変更する場合は、<xref:System.Windows.VisualStateManager.GoToState%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="02577-151">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02577-152">次の例では、1 ~ 100 の数値を推測するようにユーザーに求めるアプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="02577-152">The following example creates an application that prompts the user to guess a number between 1 and 100.</span></span>  <span data-ttu-id="02577-153">ユーザーが数値を入力すると、アプリケーションは、推定値が大きすぎるか、少なすぎるか、または正しいかを示します。</span><span class="sxs-lookup"><span data-stu-id="02577-153">When the user enters a number, the application indicates whether the guess is too high, too low, or correct.</span></span>  <span data-ttu-id="02577-154">次の [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] では、アプリケーションのユーザーインターフェイスを作成し、`TooLow`、`TooHigh`、`Correct`、`Guessing`という4つの状態を定義します。</span><span class="sxs-lookup"><span data-stu-id="02577-154">The following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`.</span></span> <span data-ttu-id="02577-155">アプリケーションが開始されると、`Guessing` 状態になります。</span><span class="sxs-lookup"><span data-stu-id="02577-155">When the application begins, it is in the `Guessing` state.</span></span> <span data-ttu-id="02577-156">.</span><span class="sxs-lookup"><span data-stu-id="02577-156">.</span></span>  
  
 [!code-xaml[VSMGoToElementState#GoToElementStateXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml#gotoelementstatexaml)]  
  
 <span data-ttu-id="02577-157">次のコードは、アプリケーションのロジックを示しています。</span><span class="sxs-lookup"><span data-stu-id="02577-157">The following code shows the logic of the application.</span></span>  <span data-ttu-id="02577-158">ユーザーが数値を入力してボタンをクリックすると、アプリケーションは <xref:System.Windows.VisualStateManager.GoToElementState%2A> を呼び出して `TooHigh`、`TooLow`、または `Correct` に移行し、推測に関するフィードバックをユーザーに提供します。</span><span class="sxs-lookup"><span data-stu-id="02577-158">When the user enters a number and clicks the button, the application calls <xref:System.Windows.VisualStateManager.GoToElementState%2A> to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.</span></span>  <span data-ttu-id="02577-159">この例を試すには、アプリケーションの開始時に `GenerateNumber` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="02577-159">To try this example, call the `GenerateNumber` method when the application begins.</span></span>  
  
 [!code-csharp[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml.cs#gotoelementstatecode)]
 [!code-vb[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmgotoelementstate/visualbasic/mainwindow.xaml.vb#gotoelementstatecode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02577-160"><paramref name="stateGroupsRoot" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="02577-160"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="02577-161">- または -</span><span class="sxs-lookup"><span data-stu-id="02577-161">-or-</span></span> 
 <span data-ttu-id="02577-162"><paramref name="stateName" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="02577-162"><paramref name="stateName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GoToState">
      <MemberSignature Language="C#" Value="public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToState(class System.Windows.FrameworkElement control, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToState (control As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToState(System::Windows::FrameworkElement ^ control, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToState (control, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="02577-163">状態を遷移するコントロール。</span><span class="sxs-lookup"><span data-stu-id="02577-163">The control to transition between states.</span></span></param>
        <param name="stateName"><span data-ttu-id="02577-164">切り替え先の状態。</span><span class="sxs-lookup"><span data-stu-id="02577-164">The state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="02577-165"><see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02577-165"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="02577-166">コントロールを 2 つの状態間で切り替えます。</span><span class="sxs-lookup"><span data-stu-id="02577-166">Transitions the control between two states.</span></span> <span data-ttu-id="02577-167"><see cref="T:System.Windows.Controls.ControlTemplate" /> を持つコントロールの状態を遷移させるには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="02577-167">Use this method to transition states on control that has a <see cref="T:System.Windows.Controls.ControlTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="02577-168">コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02577-168"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02577-169"><xref:System.Windows.Controls.ControlTemplate>内の <xref:System.Windows.VisualStateManager> を使用するコントロールの状態を変更する場合は、<xref:System.Windows.VisualStateManager.GoToState%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="02577-169">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="02577-170"><xref:System.Windows.VisualStateManager.GoToElementState%2A> メソッドを呼び出して、<xref:System.Windows.Controls.ControlTemplate> 外の要素の状態を変更します (たとえば、<xref:System.Windows.Controls.UserControl> または1つの要素で <xref:System.Windows.VisualStateManager> を使用する場合)。</span><span class="sxs-lookup"><span data-stu-id="02577-170">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02577-171">次の例は、<xref:System.Windows.VisualStateManager.GoToState%2A> メソッドを使用して状態を切り替えるコントロールを示しています。</span><span class="sxs-lookup"><span data-stu-id="02577-171">The following example demonstrates a control that uses the <xref:System.Windows.VisualStateManager.GoToState%2A> method to transition between states.</span></span> <span data-ttu-id="02577-172">全体の例については、「[カスタマイズ可能な外観を持つコントロールを作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="02577-172">For the entire example, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span>  
  
 [!code-csharp[VSMCustomControl#UpdateStates](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#updatestates)]
 [!code-vb[VSMCustomControl#UpdateStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#updatestates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02577-173"><paramref name="control" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="02577-173"><paramref name="control" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="02577-174">- または -</span><span class="sxs-lookup"><span data-stu-id="02577-174">-or-</span></span> 
 <span data-ttu-id="02577-175"><paramref name="stateName" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="02577-175"><paramref name="stateName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GoToStateCore">
      <MemberSignature Language="C#" Value="protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GoToStateCore(class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot, string stateName, class System.Windows.VisualStateGroup group, class System.Windows.VisualState state, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GoToStateCore (control As FrameworkElement, stateGroupsRoot As FrameworkElement, stateName As String, group As VisualStateGroup, state As VisualState, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GoToStateCore(System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, System::Windows::VisualStateGroup ^ group, System::Windows::VisualState ^ state, bool useTransitions);" />
      <MemberSignature Language="F#" Value="abstract member GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool&#xA;override this.GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool" Usage="visualStateManager.GoToStateCore (control, stateGroupsRoot, stateName, group, state, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="state" Type="System.Windows.VisualState" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="02577-176">状態を遷移するコントロール。</span><span class="sxs-lookup"><span data-stu-id="02577-176">The control to transition between states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="02577-177"><see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</span><span class="sxs-lookup"><span data-stu-id="02577-177">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <param name="stateName"><span data-ttu-id="02577-178">遷移後の状態の名前。</span><span class="sxs-lookup"><span data-stu-id="02577-178">The name of the state to transition to.</span></span></param>
        <param name="group"><span data-ttu-id="02577-179">状態が属する <see cref="T:System.Windows.VisualStateGroup" />。</span><span class="sxs-lookup"><span data-stu-id="02577-179">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</span></span></param>
        <param name="state"><span data-ttu-id="02577-180">遷移後の状態の表現。</span><span class="sxs-lookup"><span data-stu-id="02577-180">The representation of the state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="02577-181"><see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02577-181"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="02577-182">コントロールは 2 つの状態の間で遷移します。</span><span class="sxs-lookup"><span data-stu-id="02577-182">Transitions a control between states.</span></span></summary>
        <returns><span data-ttu-id="02577-183">コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02577-183"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02577-184"><xref:System.Windows.VisualStateManager.GoToStateCore%2A> メソッドは、遷移に関連付けられているストーリーボードを適切に開始および停止するために必要なロジックを実行します。</span><span class="sxs-lookup"><span data-stu-id="02577-184">The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</span></span> <span data-ttu-id="02577-185">コントロールが <xref:System.Windows.VisualStateManager.GoToState%2A> を呼び出してその状態を変更すると、<xref:System.Windows.VisualStateManager> は次の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="02577-185">When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:</span></span>  
  
-   <span data-ttu-id="02577-186">まず、コントロールが遷移している <xref:System.Windows.VisualState> に <xref:System.Windows.Media.Animation.Storyboard>がある場合は、ストーリーボードが開始されます。</span><span class="sxs-lookup"><span data-stu-id="02577-186">First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins.</span></span> <span data-ttu-id="02577-187">次に、コントロールの送信元の <xref:System.Windows.VisualState> に <xref:System.Windows.Media.Animation.Storyboard>がある場合は、ストーリーボードが終了します。</span><span class="sxs-lookup"><span data-stu-id="02577-187">Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.</span></span>  
  
-   <span data-ttu-id="02577-188">コントロールが既に `stateName` 状態にある場合、<xref:System.Windows.VisualStateManager.GoToState%2A> は動作せず、`true`を返します。</span><span class="sxs-lookup"><span data-stu-id="02577-188">If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.</span></span>  
  
-   <span data-ttu-id="02577-189">`control`の <xref:System.Windows.Controls.ControlTemplate> に `stateName` が存在しない場合、<xref:System.Windows.VisualStateManager.GoToState%2A> はアクションを実行せず、`false`を返します。</span><span class="sxs-lookup"><span data-stu-id="02577-189">If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.</span></span>  
  
 <span data-ttu-id="02577-190">独自の <xref:System.Windows.VisualStateManager> を実装して、状態間の遷移に対してさまざまなロジックを提供できます。</span><span class="sxs-lookup"><span data-stu-id="02577-190">You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states.</span></span> <span data-ttu-id="02577-191">たとえば、前に説明したロジックを変更したり、カスタムアニメーションの種類を切り替えるロジックを提供したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="02577-191">For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</span></span>  <span data-ttu-id="02577-192"><xref:System.Windows.VisualStateManager>を実装するには、<xref:System.Windows.VisualStateManager> から継承するクラスを作成し、<xref:System.Windows.VisualStateManager.GoToStateCore%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="02577-192">To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="02577-193">カスタムクラスを使用するには、<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> プロパティをカスタム型のオブジェクトに設定します。</span><span class="sxs-lookup"><span data-stu-id="02577-193">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanged">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanged(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanged (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanged(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanged : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanged (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup"><span data-ttu-id="02577-194"><see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントが発生したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="02577-194">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span></span></param>
        <param name="oldState"><span data-ttu-id="02577-195">コントロールの遷移元の状態。</span><span class="sxs-lookup"><span data-stu-id="02577-195">The state that the control is transitioning from.</span></span></param>
        <param name="newState"><span data-ttu-id="02577-196">コントロールの遷移先の状態。</span><span class="sxs-lookup"><span data-stu-id="02577-196">The state that the control is transitioning to.</span></span></param>
        <param name="control"><span data-ttu-id="02577-197">状態が遷移しているコントロール。</span><span class="sxs-lookup"><span data-stu-id="02577-197">The control that is transitioning states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="02577-198"><see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</span><span class="sxs-lookup"><span data-stu-id="02577-198">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <summary><span data-ttu-id="02577-199">指定された <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> オブジェクトで <see cref="T:System.Windows.VisualStateGroup" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="02577-199">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02577-200"><xref:System.Windows.VisualStateGroup> がコントロールの <xref:System.Windows.Controls.ControlTemplate> に設定されている場合、`control` パラメーターは <xref:System.Windows.Controls.ControlTemplate>を所有するコントロールに設定されます。</span><span class="sxs-lookup"><span data-stu-id="02577-200">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="02577-201"><xref:System.Windows.VisualStateGroup> が <xref:System.Windows.FrameworkElement>に設定されている場合は、`control` が `null`、`stateGroupsRoot` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02577-201">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02577-202"><paramref name="stateGroupsRoot" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="02577-202"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="02577-203">- または -</span><span class="sxs-lookup"><span data-stu-id="02577-203">-or-</span></span> 
 <span data-ttu-id="02577-204"><paramref name="newState" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="02577-204"><paramref name="newState" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="02577-205">派生クラスで <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="02577-205">When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanging">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanging(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanging (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanging(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanging : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanging (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup"><span data-ttu-id="02577-206"><see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントが発生したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="02577-206">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span></span></param>
        <param name="oldState"><span data-ttu-id="02577-207">コントロールの遷移元の状態。</span><span class="sxs-lookup"><span data-stu-id="02577-207">The state that the control is transitioning from.</span></span></param>
        <param name="newState"><span data-ttu-id="02577-208">コントロールの遷移先の状態。</span><span class="sxs-lookup"><span data-stu-id="02577-208">The state that the control is transitioning to.</span></span></param>
        <param name="control"><span data-ttu-id="02577-209">状態が遷移しているコントロール。</span><span class="sxs-lookup"><span data-stu-id="02577-209">The control that is transitioning states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="02577-210"><see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</span><span class="sxs-lookup"><span data-stu-id="02577-210">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <summary><span data-ttu-id="02577-211">指定された <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> オブジェクトで <see cref="T:System.Windows.VisualStateGroup" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="02577-211">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02577-212"><xref:System.Windows.VisualStateGroup> がコントロールの <xref:System.Windows.Controls.ControlTemplate> に設定されている場合、`control` パラメーターは <xref:System.Windows.Controls.ControlTemplate>を所有するコントロールに設定されます。</span><span class="sxs-lookup"><span data-stu-id="02577-212">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="02577-213"><xref:System.Windows.VisualStateGroup> が <xref:System.Windows.FrameworkElement>に設定されている場合は、`control` が `null`、`stateGroupsRoot` パラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02577-213">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02577-214"><paramref name="stateGroupsRoot" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="02577-214"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="02577-215">- または -</span><span class="sxs-lookup"><span data-stu-id="02577-215">-or-</span></span> 
 <span data-ttu-id="02577-216"><paramref name="newState" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="02577-216"><paramref name="newState" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="02577-217">派生クラスで <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="02577-217">When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCustomVisualStateManager(class System.Windows.FrameworkElement obj, class System.Windows.VisualStateManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCustomVisualStateManager (obj As FrameworkElement, value As VisualStateManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj, System::Windows::VisualStateManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCustomVisualStateManager : System.Windows.FrameworkElement * System.Windows.VisualStateManager -&gt; unit" Usage="System.Windows.VisualStateManager.SetCustomVisualStateManager (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
        <Parameter Name="value" Type="System.Windows.VisualStateManager" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="02577-218">プロパティを設定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="02577-218">The object to set the property on.</span></span></param>
        <param name="value"><span data-ttu-id="02577-219">コントロールの状態を切り替える表示状態マネージャー。</span><span class="sxs-lookup"><span data-stu-id="02577-219">The visual state manager that transitions between the states of a control.</span></span></param>
        <summary><span data-ttu-id="02577-220"><see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="02577-220">Sets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroups">
      <MemberSignature Language="C#" Value="see GetVisualStateGroups" />
      <MemberSignature Language="ILAsm" Value="see GetVisualStateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.VisualStateGroups" />
      <MemberSignature Language="VB.NET" Value="see GetVisualStateGroups" />
      <MemberSignature Language="F#" Value="see GetVisualStateGroups" Usage="see GetVisualStateGroups" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02577-221"><see cref="T:System.Windows.VisualStateGroup" /> オブジェクトのコレクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="02577-221">Gets or sets a collection of <see cref="T:System.Windows.VisualStateGroup" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 
## Remarks  
 <span data-ttu-id="02577-222">各 <xref:System.Windows.VisualStateGroup> には、<xref:System.Windows.VisualState> オブジェクトのコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="02577-222">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="02577-223">コントロールが特定の状態にある場合に、コントロールの外観がどのように変化するかを指定する <xref:System.Windows.Media.Animation.Storyboard> オブジェクトのコレクション <xref:System.Windows.VisualState> 格納されています。</span><span class="sxs-lookup"><span data-stu-id="02577-223">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state.</span></span> <span data-ttu-id="02577-224">たとえば、<xref:System.Windows.Controls.Button> が押されているときとは異なる外観になっている場合があります。</span><span class="sxs-lookup"><span data-stu-id="02577-224">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="02577-225"><xref:System.Windows.Controls.Button> が押されたときにに対応する2つの状態 (`"Pressed"`) と、(`"Normal"`)。</span><span class="sxs-lookup"><span data-stu-id="02577-225">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span>  
  
 <span data-ttu-id="02577-226">コントロールに <xref:System.Windows.VisualState> を追加するには、コントロールの <xref:System.Windows.VisualStateManager.VisualStateGroups%2A> 添付プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="02577-226">You add <xref:System.Windows.VisualState> to a control by setting the <xref:System.Windows.VisualStateManager.VisualStateGroups%2A> attached property on the control.</span></span> <span data-ttu-id="02577-227">同じ <xref:System.Windows.VisualStateGroup>内で相互に排他的な状態を格納します。</span><span class="sxs-lookup"><span data-stu-id="02577-227">You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="02577-228">たとえば、<xref:System.Windows.Controls.CheckBox> には、2つの <xref:System.Windows.VisualStateGroup> オブジェクトがあります。</span><span class="sxs-lookup"><span data-stu-id="02577-228">For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects.</span></span> <span data-ttu-id="02577-229">1つには、状態、`Normal`、`MouseOver`、`Pressed`、および `Disabled`が含まれます。</span><span class="sxs-lookup"><span data-stu-id="02577-229">One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`.</span></span> <span data-ttu-id="02577-230">もう1つは、状態、`Checked`、`UnChecked`、および `Indeterminate`を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="02577-230">The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`.</span></span> <span data-ttu-id="02577-231"><xref:System.Windows.Controls.CheckBox> は、同時に状態 `MouseOver` と `UnChecked` にすることができますが、同時に `MouseOver` および `Pressed` の状態にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="02577-231">The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.</span></span>  
  
 <span data-ttu-id="02577-232"><xref:System.Windows.VisualState> オブジェクトを任意の要素に追加できますが、他のユーザーが <xref:System.Windows.Controls.Control>の視覚的な動作を再定義できるようにするには、特に便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="02577-232">Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="02577-233"><xref:System.Windows.Controls.ControlTemplate>を使用するカスタムコントロールを作成する場合は、そのクラス定義に <xref:System.Windows.TemplateVisualStateAttribute> を追加することによって、コントロールの状態を指定できます。</span><span class="sxs-lookup"><span data-stu-id="02577-233">If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition.</span></span> <span data-ttu-id="02577-234">次に、コントロールの新しい <xref:System.Windows.Controls.ControlTemplate> を作成するすべてのユーザーが、<xref:System.Windows.VisualState> オブジェクトをテンプレートに追加できます。</span><span class="sxs-lookup"><span data-stu-id="02577-234">Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template.</span></span> <span data-ttu-id="02577-235">同じ <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> を持つ状態が同じ <xref:System.Windows.VisualStateGroup>に属しています。</span><span class="sxs-lookup"><span data-stu-id="02577-235">States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="02577-236"><xref:System.Windows.Controls.ControlTemplate>で <xref:System.Windows.VisualStateGroup> オブジェクトを使用する方法の詳細については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="02577-236">For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span> <span data-ttu-id="02577-237"><xref:System.Windows.VisualStateManager>を使用するコントロールを作成する方法の詳細については、「[カスタマイズ可能な外観を持つコントロールの作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="02577-237">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span>  
     
## Examples  
 <span data-ttu-id="02577-238">次の例では、1つの <xref:System.Windows.Controls.Grid>を含む <xref:System.Windows.Controls.Button> の単純な <xref:System.Windows.Controls.ControlTemplate> を作成します。</span><span class="sxs-lookup"><span data-stu-id="02577-238">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="02577-239">また、`MouseOver` と `Normal` の状態を定義する `CommonStates`という名前の <xref:System.Windows.VisualStateGroup> も含まれています。</span><span class="sxs-lookup"><span data-stu-id="02577-239">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="02577-240"><xref:System.Windows.VisualStateGroup> には、ユーザーがマウスポインターを <xref:System.Windows.Controls.Button>上に移動したときに、<xref:System.Windows.Controls.Grid> が緑から赤に変更されるまでに0.5 秒かかることを指定する <xref:System.Windows.VisualTransition> もあります。</span><span class="sxs-lookup"><span data-stu-id="02577-240">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroupsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualStateGroupsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualStateGroupsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualStateGroupsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualStateGroupsProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02577-241"><see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="02577-241">Identifies the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
