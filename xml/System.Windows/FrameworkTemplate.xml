<Type Name="FrameworkTemplate" FullName="System.Windows.FrameworkTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ff0e7eb1961166eafa9eeb88834810623e20656" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78836678" /></Metadata><TypeSignature Language="C#" Value="public abstract class FrameworkTemplate : System.Windows.Threading.DispatcherObject, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FrameworkTemplate extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.INameScope, class System.Windows.Markup.IQueryAmbient" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkTemplate" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FrameworkTemplate&#xA;Inherits DispatcherObject&#xA;Implements INameScope, IQueryAmbient" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkTemplate abstract : System::Windows::Threading::DispatcherObject, System::Windows::Markup::INameScope, System::Windows::Markup::IQueryAmbient" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type FrameworkTemplate = class&#xA;    inherit DispatcherObject&#xA;    interface INameScope&#xA;    interface IQueryAmbient" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public abstract class FrameworkTemplate : System.Windows.Threading.DispatcherObject, System.Windows.Markup.INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FrameworkTemplate extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FrameworkTemplate&#xA;Inherits DispatcherObject&#xA;Implements INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkTemplate abstract : System::Windows::Threading::DispatcherObject, System::Windows::Markup::INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type FrameworkTemplate = class&#xA;    inherit DispatcherObject&#xA;    interface INameScope" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("VisualTree")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="23da3-101"><see cref="T:System.Windows.FrameworkElement" /> オブジェクトと <see cref="T:System.Windows.FrameworkContentElement" /> オブジェクトの両方またはいずれかのツリーをインスタンス化できるようにします。</span><span class="sxs-lookup"><span data-stu-id="23da3-101">Enables the instantiation of a tree of <see cref="T:System.Windows.FrameworkElement" /> and/or <see cref="T:System.Windows.FrameworkContentElement" /> objects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FrameworkTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FrameworkTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23da3-102"><see cref="T:System.Windows.FrameworkTemplate" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="23da3-102">Initializes a new instance of the <see cref="T:System.Windows.FrameworkTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name, System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindName(string name, class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String, templatedParent As FrameworkElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name, System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberSignature Language="F#" Value="member this.FindName : string * System.Windows.FrameworkElement -&gt; obj" Usage="frameworkTemplate.FindName (name, templatedParent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="23da3-103">文字列名。</span><span class="sxs-lookup"><span data-stu-id="23da3-103">The string name.</span></span></param>
        <param name="templatedParent"><span data-ttu-id="23da3-104">このテンプレートが適用される <see cref="T:System.Windows.FrameworkElement" /> のコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="23da3-104">The context of the <see cref="T:System.Windows.FrameworkElement" /> where this template is applied.</span></span></param>
        <summary><span data-ttu-id="23da3-105">このテンプレート内で定義された、指定した名前に関連付けられている要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="23da3-105">Finds the element associated with the specified name defined within this template.</span></span></summary>
        <returns><span data-ttu-id="23da3-106">指定した名前に関連付けられた要素。</span><span class="sxs-lookup"><span data-stu-id="23da3-106">The element associated with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23da3-107">詳細については、「 [WPF Xaml 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)」の「スタイルとテンプレートの Xaml 名前スコープ」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="23da3-107">For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContent">
      <MemberSignature Language="C#" Value="public bool HasContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.HasContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasContent : bool" Usage="System.Windows.FrameworkTemplate.HasContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23da3-108">最適化されたコンテンツがこのテンプレートに含まれているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="23da3-108">Gets a value that indicates whether this template has optimized content.</span></span></summary>
        <value><span data-ttu-id="23da3-109">最適化されたコンテンツがこのテンプレートに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="23da3-109"><see langword="true" /> if this template has optimized content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.FrameworkTemplate.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23da3-110">このオブジェクトが不変の状態で変更不可能であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="23da3-110">Gets a value that indicates whether this object is in an immutable state so it cannot be changed.</span></span></summary>
        <value><span data-ttu-id="23da3-111">このオブジェクトが不変の状態である場合は <see langword="true" />。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="23da3-111"><see langword="true" /> if this object is in an immutable state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadContent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject LoadContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject LoadContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.LoadContent" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadContent () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ LoadContent();" />
      <MemberSignature Language="F#" Value="member this.LoadContent : unit -&gt; System.Windows.DependencyObject" Usage="frameworkTemplate.LoadContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23da3-112">テンプレートのコンテンツをオブジェクトのインスタンスとして読み込み、コンテンツのルート要素を返します。</span><span class="sxs-lookup"><span data-stu-id="23da3-112">Loads the content of the template as an instance of an object and returns the root element of the content.</span></span></summary>
        <returns><span data-ttu-id="23da3-113">コンテンツのルート要素。</span><span class="sxs-lookup"><span data-stu-id="23da3-113">The root element of the content.</span></span> <span data-ttu-id="23da3-114">これを複数回呼び出すと、別々のインスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="23da3-114">Calling this multiple times returns separate instances.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="frameworkTemplate.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="23da3-115">登録する名前。</span><span class="sxs-lookup"><span data-stu-id="23da3-115">The name to register.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="23da3-116">指定された名前にマップするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="23da3-116">The object to be mapped to the provided name.</span></span></param>
        <summary><span data-ttu-id="23da3-117">現在の名前スコープに新しい名前とオブジェクトのペアを登録します。</span><span class="sxs-lookup"><span data-stu-id="23da3-117">Registers a new name/object pair into the current name scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23da3-118">詳細については、「 [WPF Xaml 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)」の「スタイルとテンプレートの Xaml 名前スコープ」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="23da3-118">For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.FrameworkTemplate.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23da3-119">このテンプレートのスコープ内で使用できるリソースのコレクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="23da3-119">Gets or sets the collection of resources that can be used within the scope of this template.</span></span></summary>
        <value><span data-ttu-id="23da3-120">このテンプレートのスコープ内で使用できるリソース。</span><span class="sxs-lookup"><span data-stu-id="23da3-120">The resources that can be used within the scope of this template.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="23da3-121">XAML プロパティ要素の使用</span><span class="sxs-lookup"><span data-stu-id="23da3-121">XAML Property Element Usage</span></span>  
  
```xaml 
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>
```

<span data-ttu-id="23da3-122">または</span><span class="sxs-lookup"><span data-stu-id="23da3-122">-or-</span></span>

```xaml
<object>  
  <object.Resources>  
    <ResourceDictionary Source="externalDictionarySource"/>  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="23da3-123">XAML の値</span><span class="sxs-lookup"><span data-stu-id="23da3-123">XAML Values</span></span>  
 <span data-ttu-id="23da3-124">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="23da3-124">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="23da3-125">1つまたは複数のリソース要素。</span><span class="sxs-lookup"><span data-stu-id="23da3-125">One or more resource elements.</span></span> <span data-ttu-id="23da3-126">XAML の[StaticResource Markup extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)または[dynamicresource Markup extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)構文で後で参照するには、リソース要素に `x:Key` 属性が必要です。</span><span class="sxs-lookup"><span data-stu-id="23da3-126">To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in XAML, a resource element MUST have an `x:Key` attribute.</span></span>  
  
 <span data-ttu-id="23da3-127">\<ResourceDictionary ソース = "*Externaldictionarysource*"/></span><span class="sxs-lookup"><span data-stu-id="23da3-127">\<ResourceDictionary Source="*externalDictionarySource*"/></span></span>  
 <span data-ttu-id="23da3-128"><xref:System.Windows.ResourceDictionary>を定義する外部ファイル。</span><span class="sxs-lookup"><span data-stu-id="23da3-128">An external file that defines a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seal">
      <MemberSignature Language="C#" Value="public void Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.Seal" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seal();" />
      <MemberSignature Language="F#" Value="member this.Seal : unit -&gt; unit" Usage="frameworkTemplate.Seal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23da3-129">テンプレートをロックし、変更できないようにします。</span><span class="sxs-lookup"><span data-stu-id="23da3-129">Locks the template so it cannot be changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeResources">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeResources (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeResources(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeResources (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeResources(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeResources : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="frameworkTemplate.ShouldSerializeResources manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="23da3-130"><see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="23da3-130">The <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />.</span></span></param>
        <summary><span data-ttu-id="23da3-131">シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.FrameworkTemplate.Resources" /> プロパティの値をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="23da3-131">Returns a value that indicates whether serialization processes should serialize the value of the <see cref="P:System.Windows.FrameworkTemplate.Resources" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="23da3-132"><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkTemplate.Resources" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="23da3-132"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkTemplate.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeVisualTree">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeVisualTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeVisualTree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.ShouldSerializeVisualTree" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeVisualTree () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeVisualTree();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeVisualTree : unit -&gt; bool" Usage="frameworkTemplate.ShouldSerializeVisualTree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23da3-133">シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> プロパティの値をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="23da3-133">Returns a value that indicates whether serialization processes should serialize the value of the <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="23da3-134"><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkTemplate.VisualTree" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="23da3-134"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.CanSeal">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.CanSeal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.CanSeal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.System#Windows#ISealable#CanSeal" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanSeal As Boolean Implements ISealable.CanSeal" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::CanSeal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Windows.ISealable.CanSeal : bool" Usage="System.Windows.ISealable.CanSeal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.IsSealed">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.System#Windows#ISealable#IsSealed" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSealed As Boolean Implements ISealable.IsSealed" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Windows.ISealable.IsSealed : bool" Usage="System.Windows.ISealable.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.Seal">
      <MemberSignature Language="C#" Value="void ISealable.Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.ISealable.Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.System#Windows#ISealable#Seal" />
      <MemberSignature Language="VB.NET" Value="Sub Seal () Implements ISealable.Seal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.ISealable.Seal() = System::Windows::ISealable::Seal;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.ISealable.Seal : unit -&gt; unit&#xA;override this.System.Windows.ISealable.Seal : unit -&gt; unit" Usage="frameworkTemplate.System.Windows.ISealable.Seal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.INameScope.FindName">
      <MemberSignature Language="C#" Value="object INameScope.FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Markup.INameScope.FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindName (name As String) As Object Implements INameScope.FindName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Windows.Markup.INameScope.FindName(System::String ^ name) = System::Windows::Markup::INameScope::FindName;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.INameScope.FindName : string -&gt; obj&#xA;override this.System.Windows.Markup.INameScope.FindName : string -&gt; obj" Usage="frameworkTemplate.System.Windows.Markup.INameScope.FindName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="23da3-135">要求されたオブジェクトの名前の識別子。</span><span class="sxs-lookup"><span data-stu-id="23da3-135">The name identifier for the object being requested.</span></span></param>
        <summary><span data-ttu-id="23da3-136">指定された識別名を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="23da3-136">Returns an object that has the provided identifying name.</span></span></summary>
        <returns><span data-ttu-id="23da3-137">見つかった場合はオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="23da3-137">The object, if found.</span></span> <span data-ttu-id="23da3-138">その名前のオブジェクトが見つからなかった場合は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="23da3-138">Returns <see langword="null" /> if no object of that name was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23da3-139">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="23da3-139">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="23da3-140">これは、<xref:System.Windows.FrameworkTemplate> のインスタンスが <xref:System.Windows.Markup.INameScope> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="23da3-140">It can be used only when the <xref:System.Windows.FrameworkTemplate> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable : string -&gt; bool&#xA;override this.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable : string -&gt; bool" Usage="frameworkTemplate.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="23da3-141">要求されたアンビエント プロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="23da3-141">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="23da3-142">指定されたアンビエント プロパティを現在のスコープで使用できるかどうかを照会します。</span><span class="sxs-lookup"><span data-stu-id="23da3-142">Queries whether a specified ambient property is available in the current scope.</span></span></summary>
        <returns><span data-ttu-id="23da3-143">要求されたアンビエント プロパティを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="23da3-143"><see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Template">
      <MemberSignature Language="C#" Value="public System.Windows.TemplateContent Template { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TemplateContent Template" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.Template" />
      <MemberSignature Language="VB.NET" Value="Public Property Template As TemplateContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TemplateContent ^ Template { System::Windows::TemplateContent ^ get(); void set(System::Windows::TemplateContent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Template : System.Windows.TemplateContent with get, set" Usage="System.Windows.FrameworkTemplate.Template" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TemplateContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23da3-144">ライターがテンプレートを定義または適用するときに、テンプレートの XAML ノードを記録または再生するオブジェクトへの参照を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="23da3-144">Gets or sets a reference to the object that records or plays the XAML nodes for the template when the template is defined or applied by a writer.</span></span></summary>
        <value><span data-ttu-id="23da3-145">テンプレートの XAML ノードを記録または再生するオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="23da3-145">A reference to the object that records or plays the XAML nodes for the template.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.TemplateContent" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="frameworkTemplate.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="23da3-146">削除するマッピングの名前。</span><span class="sxs-lookup"><span data-stu-id="23da3-146">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="23da3-147">XAML 名前スコープから名前とオブジェクトのマッピングを削除します。</span><span class="sxs-lookup"><span data-stu-id="23da3-147">Removes a name/object mapping from the XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23da3-148">詳細については、「 [WPF Xaml 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)」の「スタイルとテンプレートの Xaml 名前スコープ」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="23da3-148">For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTemplatedParent">
      <MemberSignature Language="C#" Value="protected virtual void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateTemplatedParent(class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateTemplatedParent (templatedParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateTemplatedParent(System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberSignature Language="F#" Value="abstract member ValidateTemplatedParent : System.Windows.FrameworkElement -&gt; unit&#xA;override this.ValidateTemplatedParent : System.Windows.FrameworkElement -&gt; unit" Usage="frameworkTemplate.ValidateTemplatedParent templatedParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="templatedParent"><span data-ttu-id="23da3-149">このテンプレートが適用される要素。</span><span class="sxs-lookup"><span data-stu-id="23da3-149">The element this template is applied to.</span></span></param>
        <summary><span data-ttu-id="23da3-150">派生クラスでオーバーライドされると、このテンプレートが適用される要素のルールを提供します。</span><span class="sxs-lookup"><span data-stu-id="23da3-150">When overridden in a derived class, supplies rules for the element this template is applied to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23da3-151">基本実装では、テンプレート化された親が null 以外の <xref:System.Windows.FrameworkElement>である必要があることを指定します。</span><span class="sxs-lookup"><span data-stu-id="23da3-151">The base implementation specifies that the templated parent must be a non-null <xref:System.Windows.FrameworkElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTree">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElementFactory VisualTree { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElementFactory VisualTree" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.VisualTree" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTree As FrameworkElementFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElementFactory ^ VisualTree { System::Windows::FrameworkElementFactory ^ get(); void set(System::Windows::FrameworkElementFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTree : System.Windows.FrameworkElementFactory with get, set" Usage="System.Windows.FrameworkTemplate.VisualTree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElementFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23da3-152">テンプレートのルート ノードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="23da3-152">Gets or sets the root node of the template.</span></span></summary>
        <value><span data-ttu-id="23da3-153">テンプレートのルート ノード。</span><span class="sxs-lookup"><span data-stu-id="23da3-153">The root node of the template.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_VisualTree"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="23da3-154">XAML プロパティ要素の使用</span><span class="sxs-lookup"><span data-stu-id="23da3-154">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <VisualTreeRootNode > VisualTreeNodeContents  
  </VisualTreeRootNode >  
</object>  
```  
  
<a name="xamlValues_VisualTree"></a>   
## <a name="xaml-values"></a><span data-ttu-id="23da3-155">XAML の値</span><span class="sxs-lookup"><span data-stu-id="23da3-155">XAML Values</span></span>  
 <span data-ttu-id="23da3-156">*VisualTreeRootNode*</span><span class="sxs-lookup"><span data-stu-id="23da3-156">*VisualTreeRootNode*</span></span>  
 <span data-ttu-id="23da3-157"><xref:System.Windows.FrameworkTemplate> サブクラスの直下の子として1つの XAML 要素。</span><span class="sxs-lookup"><span data-stu-id="23da3-157">A single XAML element as the immediate child of the <xref:System.Windows.FrameworkTemplate> subclass.</span></span> <span data-ttu-id="23da3-158">テンプレートには単一のルートノードが必要です。</span><span class="sxs-lookup"><span data-stu-id="23da3-158">Templates must have a single root node.</span></span> <span data-ttu-id="23da3-159">便利なテンプレートを生成するために、 *VisualTreeRootNode*として選択された要素は、独自のコンテンツモデルをサポートする必要があります。多くの場合、複数の子要素をサポートするモデルです。</span><span class="sxs-lookup"><span data-stu-id="23da3-159">In order to generate a useful template, the element chosen as *VisualTreeRootNode* is expected to support a content model of its own, often a model that supports multiple child elements.</span></span>  
  
 <span data-ttu-id="23da3-160">*VisualTreeNodeContents*</span><span class="sxs-lookup"><span data-stu-id="23da3-160">*VisualTreeNodeContents*</span></span>  
 <span data-ttu-id="23da3-161">目的のテンプレートを完成させる1つ以上の要素。</span><span class="sxs-lookup"><span data-stu-id="23da3-161">One or more elements that complete the intended template.</span></span> <span data-ttu-id="23da3-162">*VisualTreeRootNode*として選択された要素が単一の子をサポートする場合、 *VisualTreeNodeContents*として宣言できる要素は1つだけです。</span><span class="sxs-lookup"><span data-stu-id="23da3-162">If the element chosen as *VisualTreeRootNode* only supports a single child, then there can only be one element declared as *VisualTreeNodeContents*.</span></span> <span data-ttu-id="23da3-163">また、選択した*VisualTreeRootNode*でテキストコンテンツプロパティがサポートされている場合は、テキストコンテンツを提供することもできます (珍しいことはありません)。</span><span class="sxs-lookup"><span data-stu-id="23da3-163">It is also possible (though uncommon) to provide text content if the chosen *VisualTreeRootNode* supports a text content property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
