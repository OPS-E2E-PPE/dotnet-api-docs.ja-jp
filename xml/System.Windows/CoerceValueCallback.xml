<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3549f194d7f55a1cd29ab7244ea240a4064e7850" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82342569" /></Metadata><TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">プロパティが存在するオブジェクト。 コールバックが呼び出されると、プロパティ システムがこの値を渡します。</param>
    <param name="baseValue">強制が試行される前のプロパティの新しい値。</param>
    <summary>依存関係プロパティの値が再評価されたり強制が明示的に要求されたりした場合に必ず呼び出されるメソッドのテンプレートを提供します。</summary>
    <returns>強制された (適切な型の) 値。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.CoerceValueCallback> に基づくコールバックは、いくつかの異なる手法を使用して依存関係プロパティに割り当てることができます。 これらの各手法では、最初に新しいプロパティメタデータオブジェクト (<xref:System.Windows.PropertyMetadata>、または <xref:System.Windows.FrameworkPropertyMetadata>などの派生クラス) を作成する必要があります。 `coerceValueCallback` パラメーターを受け取るコンストラクターシグネチャを使用してメタデータオブジェクトを作成し、そのパラメーターをコールバックハンドラーに割り当てます。 または、任意のシグネチャによってメタデータを作成し、メタデータを使用する前に <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> プロパティを設定します。  
  
 このメタデータがある場合は、次のことができます。  
  
-   <xref:System.Windows.DependencyProperty.Register%2A>のシグネチャを使用して、新しいクラスで新しい依存関係プロパティを定義し、`typeMetadata` 値としてメタデータを提供します。  
  
-   依存関係プロパティを所有するクラスから派生する場合は、既存の依存関係プロパティのメタデータ (呼び出し <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) をオーバーライドします。  
  
-   新しいメタデータを使用して、<xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>を呼び出して、既存の依存関係プロパティを新しい <xref:System.Windows.DependencyObject> クラスに追加します。  
  
 このコールバックの実装では、`baseValue` の値を確認し、値または型のいずれかに基づいて、さらに強制変換する必要がある値かどうかを判断する必要があります。  
  
 依存関係プロパティの <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> は、プロパティシステムまたは他の呼び出し元が <xref:System.Windows.DependencyObject> インスタンスで <xref:System.Windows.DependencyObject.CoerceValue%2A> を呼び出すたびに呼び出され、そのプロパティの識別子を `dp`として指定します。  
  
 プロパティ値に対する変更は、プロパティシステムの任意の参加要素から取得された可能性があります。 これには、スタイル、汎用無効化、トリガー、プロパティ値の継承、およびローカルの値の設定が含まれます。  
  
 一般に、特定の依存関係プロパティに対して複数の <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> を指定することは避けてください (オーバーライドするか、既に <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>がある依存関係プロパティの新しいメタデータで追加します)。 コールバックの1つだけが動作することができます。動作しているコールバックは、<xref:System.Windows.DependencyObject> 呼び出し元と比較して、継承の最派生クラスに適用されたものになります。 所有者階層の上位に存在していた依存関係プロパティのメタデータに割り当てられた他のコールバックは、メタデータがオーバーライドされると置き換えられます。  
  
   
  
## Examples  
 次の例には、別のプロパティの値など、他の入力に基づいて依存関係プロパティの格納されている値を強制するための、このコールバックの実装が含まれています。 この場合、コールバックは、`ShirtType` プロパティが、ボタンを持つシャツの種類に対応しているかどうかを確認します。その場合、`ButtonColor`の初期の既定の色を設定します。シャツの種類にボタンがない場合は、`ButtonColor` の値を開始値に変換します。これにより、[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (表示されません) が有効な選択肢からドロップダウンリストを削除します。  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>
