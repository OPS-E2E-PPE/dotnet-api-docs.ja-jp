<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a11afafa54c2cb480b0e00966ea852f13fa1113a" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82486942" /></Metadata><TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <TypeSignature Language="F#" Value="type HierarchicalDataTemplate = class&#xA;    inherit DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Controls.TreeViewItem" /> や <see cref="T:System.Windows.Controls.MenuItem" /> などの <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> をサポートする <see cref="T:System.Windows.DataTemplate" /> を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例で、`ListLeagueList` は `League` オブジェクトのリストです。 各 `League` オブジェクトには、`Name` と、`Division` オブジェクトのコレクションがあります。 各 `Division` には、`Name` と `Team` オブジェクトのコレクションがあり、各 `Team` オブジェクトには `Name` があります。  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 この例では、<xref:System.Windows.HierarchicalDataTemplate>を使用して、他のリストを含むリストデータを簡単に表示できることを示しています。 次に示すのは、この例のスクリーンショットです。  
  
 ![HierarchicalDataTemplate サンプルのスクリーンショット](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate のサンプルのスクリーンショット")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.HierarchicalDataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.HierarchicalDataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.HierarchicalDataTemplate : obj -&gt; System.Windows.HierarchicalDataTemplate" Usage="new System.Windows.HierarchicalDataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">このテンプレートの対象となる型。</param>
        <summary>テンプレートの対象となる型を指定して、<see cref="T:System.Windows.HierarchicalDataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `dataType` パラメーターは、[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] オブジェクト、または [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 要素を表す文字列のいずれかです。 詳しくは、「[バインディング ソースの概要](~/docs/framework/wpf/data/binding-sources-overview.md)」をご覧ください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子項目の代替項目コンテナーの数を取得または設定します。</summary>
        <value>項目の次のレベルに対する代替項目コンテナーの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> プロパティと <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> プロパティを使用すると、2つ以上の代替項目コンテナーの外観を指定できます。 たとえば、<xref:System.Windows.Controls.ItemsControl>の3番目の項目ごとに交互の背景色を指定できます。  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> は、<xref:System.Windows.Controls.ItemsControl>内の各項目コンテナーに割り当てられます。  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> は0から開始され、<xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>-1 になるまで増加し、0で再起動します。 たとえば、<xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> が3で <xref:System.Windows.Controls.ItemsControl>に7つの項目がある場合、次の表に各項目の <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> を示します。  
  
|<xref:System.Windows.Controls.ItemsControl> 内の項目の位置|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> プロパティを設定すると、子項目は、この <xref:System.Windows.HierarchicalDataTemplate> 適用されている項目ではなく、その範囲内の <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> を取得する必要があることを示します。 たとえば、`aHeaderedItemsControl` と呼ばれる <xref:System.Windows.Controls.HeaderedItemsControl> が <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> セットの <xref:System.Windows.HierarchicalDataTemplate> を使用する場合、`aHeaderedItemsControl` の子項目の項目コンテナーには <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>の項目コンテナーではなく、`aHeaderedItemsControl`が設定されます。  
  
 代替項目コンテナーに対してさまざまな外観を指定するために使用できる方法がいくつかあります。 1つの方法は、項目コンテナーのプロパティを <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>にバインドすることです。 次に、<xref:System.Windows.Controls.AlternationConverter> を使用して、特定の <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 値を持つ項目コンテナーに適用する値を指定できます。 また、トリガーを使用すると、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>の値に応じて、項目コンテナーのプロパティの値を変更することもできます。  
  
   
  
## Examples  
 次の例では、3つのレベルのデータにバインドされている <xref:System.Windows.Controls.TreeView> を作成し、各項目を <xref:System.Windows.Controls.TextBlock>に表示します。  1番目のレベルの <xref:System.Windows.Controls.TextBlock> オブジェクトのプロパティ値は同じですが、2番目のレベルの <xref:System.Windows.Controls.TextBlock> オブジェクトは、<xref:System.Windows.Controls.TextBlock.FontStyle%2A> プロパティに交互の値を使用し、3番目のレベルの <xref:System.Windows.Controls.TextBlock> オブジェクトは、<xref:System.Windows.Controls.TextBlock.Background%2A> プロパティに交互の値を使用します。  
  
 最初のレベルの <xref:System.Windows.HierarchicalDataTemplate>、`Level1Data`では <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> プロパティが2に設定されているため、2番目のレベルの <xref:System.Windows.Controls.TreeViewItem> オブジェクトの <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> は、0と1の間で交互に使用されます。 2番目の `Level2Data`レベルの <xref:System.Windows.HierarchicalDataTemplate> では、<xref:System.Windows.Controls.TextBlock> の <xref:System.Windows.Controls.TextBlock.FontStyle%2A> が <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> にバインドされています。また、<xref:System.Windows.Controls.AlternationConverter> を交互の <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> に変換するための <xref:System.Windows.Controls.TextBlock.FontStyle%2A>が提供されています。  `Level2Data` と `Level3Data`の間にも同様の関係が存在します。 <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> は `Level2Data`で3に設定され、<xref:System.Windows.Controls.TextBlock> の `Level3Ddata` には <xref:System.Windows.Controls.TextBlock.Background%2A> にバインドされている <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>のプロパティがあります。  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各子項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" /> を取得または設定します。</summary>
        <value>各子項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> プロパティを設定すると、各項目コンテナーは <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>と同じ <xref:System.Windows.Controls.ValidationRule> オブジェクトを持つ <xref:System.Windows.Data.BindingGroup> を取得しますが、<xref:System.Windows.Data.BindingGroup.Items%2A> や <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>など、バインド内のデータを記述するプロパティは、<xref:System.Windows.Controls.ItemsControl>内の各項目のデータに固有です。  データの検証や項目のエラーのチェックなどの操作を実行するには、項目コンテナーの <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> にアクセスする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各子項目の項目コンテナーに適用される <see cref="T:System.Windows.Style" /> を取得または設定します。</summary>
        <value>各子項目の項目コンテナーに適用される <see cref="T:System.Windows.Style" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティまたは <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> プロパティを使用して、データ項目を含む要素の外観に影響を与えるスタイルを設定します。 たとえば、<xref:System.Windows.Controls.TreeView>の場合、生成されたコンテナーはコントロール <xref:System.Windows.Controls.TreeViewItem> ます。<xref:System.Windows.Controls.Menu>の場合、コントロールは <xref:System.Windows.Controls.MenuItem> ます。  
  
   
  
## Examples  
 次の例では、最初のレベルの項目に対して1つのスタイルを使用し、2番目のレベルの項目に対して別のスタイルを使用する <xref:System.Windows.Controls.TreeView> を作成します。  最初のレベルのスタイルは、<xref:System.Windows.Controls.TreeView>の <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> プロパティで設定されます。  2番目のレベルのスタイルは、<xref:System.Windows.HierarchicalDataTemplate>の <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> プロパティで設定されます。  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 次の例では、前の例で使用したデータを作成します。  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各項目コンテナーに適用できるスタイルについて、スタイル選択のカスタム ロジックを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.StyleSelector" /> として使用するスタイルを選択する <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ項目を含む要素の外観に影響を与えるスタイルを設定するには、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> プロパティを使用します。 たとえば、<xref:System.Windows.Controls.TreeView>の場合、生成されたコンテナーはコントロール <xref:System.Windows.Controls.TreeViewItem> ます。<xref:System.Windows.Controls.Menu>の場合、コントロールは <xref:System.Windows.Controls.MenuItem> ます。 複数のスタイルが定義されていて、適用するスタイルを選択するためのロジックを指定する必要がある場合は、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> プロパティではなく、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> プロパティを使用します。 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> プロパティが設定されている場合、このプロパティは無視されることに注意してください。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.HierarchicalDataTemplate> の <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> を使用して、<xref:System.Windows.Controls.TreeView>の2番目のレベルの項目の2つのスタイルのいずれかを選択する <xref:System.Windows.Controls.TreeView> を作成します。  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 次の例は、前の例で使用した <xref:System.Windows.Controls.StyleSelector> を示しています。  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 次の例では、前の例で使用したデータを作成します。  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ階層内の次のレベルを表すコレクションを検索する場所を示す、このデータ テンプレートのバインドを取得または設定します。</summary>
        <value>既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、データ階層内の次のレベルを表すコレクションを検索する場所を示すために、生成された <xref:System.Windows.Controls.HeaderedItemsControl> (<xref:System.Windows.Controls.MenuItem> や <xref:System.Windows.Controls.TreeViewItem>など) の <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティに適用されます。  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] については、<xref:System.Windows.Data.Binding> の種類を参照してください。  
  
   
  
## Examples  
 次の例で、`ListLeagueList` は `League` オブジェクトのリストです。 各 `League` オブジェクトには、`Name` と、`Division` オブジェクトのコレクションがあります。 各 `Division` には、`Name` と `Team` オブジェクトのコレクションがあり、各 `Team` オブジェクトには `Name` があります。  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 この例では、<xref:System.Windows.HierarchicalDataTemplate>を使用して、他のリストを含むリストデータを簡単に表示できることを示しています。 次に示すのは、この例のスクリーンショットです。  
  
 ![HierarchicalDataTemplate サンプルのスクリーンショット](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate のサンプルのスクリーンショット")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ階層の次のレベル内の項目が文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
        <value>データ階層の次のレベル内の項目が文字列として表示される場合に、その書式を指定する複合文字列。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ階層の次のレベルにある項目の表示方法を示すために、生成された <see cref="T:System.Windows.DataTemplate" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> を取得または設定します。</summary>
        <value>データ階層の次のレベルにある項目の表示方法を示すために、生成された <see cref="T:System.Windows.DataTemplate" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ階層の次のレベルにある項目を表示するテンプレートの選択方法を示すために、生成された <see cref="T:System.Windows.Controls.DataTemplateSelector" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> を取得または設定します。</summary>
        <value>データ階層の次のレベルにある項目を表示するテンプレートの選択方法を示すために、生成された <see cref="T:System.Windows.Controls.DataTemplateSelector" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
