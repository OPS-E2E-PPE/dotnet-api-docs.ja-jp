<Type Name="RoutedEventHandler" FullName="System.Windows.RoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63fd3aa099bc13b7bdcf30cff4537cc4f3f42522" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83919961" /></Metadata><TypeSignature Language="C#" Value="public delegate void RoutedEventHandler(object sender, RoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RoutedEventHandler(sender As Object, e As RoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RoutedEventHandler(System::Object ^ sender, RoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RoutedEventHandler = delegate of obj * RoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベント ハンドラーがアタッチされるオブジェクト。</param>
    <param name="e">イベントのデータ。</param>
    <summary>すべてのルーティング イベントに共通なデータ以外の特定のイベント データを持たない、さまざまなルーティング イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.RoutedEventHandler> デリゲートは、イベントデータ内のイベント固有の情報を報告しないルーティングイベントに使用されます。 このようなルーティングイベントは多数あります。例として、<xref:System.Windows.Controls.Primitives.ButtonBase.Click> や <xref:System.Windows.FrameworkElement.Loaded>などがあります。  
  
 一般的な [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] イベントではなく、ルーティングイベントのハンドラーを記述する場合の最も顕著な違いは、イベントの `sender` (ハンドラーがアタッチされて呼び出される要素) がイベントのソースであるとは限らないということです。 ソースは、イベントデータ (<xref:System.Windows.RoutedEventArgs.Source%2A>) のプロパティとして報告されます。 `sender` と <xref:System.Windows.RoutedEventArgs.Source%2A> の違いは、要素ツリーを介したルーティングイベントの走査中に、異なる要素にルーティングされるイベントの結果です。  
  
 ダイレクトまたはバブルルーティングイベントのルーティング動作に関心がなく、最初に発生した要素に対してのみルーティングイベントを処理する場合は、オブジェクト参照に `sender` または <xref:System.Windows.RoutedEventArgs.Source%2A> を使用できます。 この場合、`sender` と <xref:System.Windows.RoutedEventArgs.Source%2A> は同じオブジェクトです。  
  
 ルーティングイベントの固有の機能を利用し、それに応じてハンドラーを記述する場合は、イベントハンドラーの記述時に使用するイベントデータの最も重要な2つのプロパティが <xref:System.Windows.RoutedEventArgs.Source%2A> および <xref:System.Windows.RoutedEventArgs.Handled%2A>ます。  
  
 入力イベントと [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] コントロールクラスの特定の組み合わせでは、イベントを発生させる要素は、それを処理する機会を持つ最初の要素ではありません。 入力イベントにイベントのプレビューバージョンがある場合、要素ツリーのルートは最初の機会を持ち、共有イベントデータ内で `true` するように <xref:System.Windows.RoutedEventArgs.Handled%2A> を設定できます。また、イベントルートの残りの要素に入力イベントがどのように報告されるかに影響を与える可能性があります。 プレビュー処理の動作では、特定のルーティングイベントが想定どおりに発生しないという外観を与えることができます。 詳細については、「[プレビューイベント](/dotnet/framework/wpf/advanced/preview-events)と[入力の概要](/dotnet/framework/wpf/advanced/input-overview)」を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
