<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dca55f9434f76e3f097d5bdddc958b0aeb80c5ca" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82444671" /></Metadata><TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type LogicalTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>論理ツリー内のオブジェクトのクエリを実行するために静的ヘルパー メソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.LogicalTreeHelper> クラスには、オブジェクトの子コレクションを返すために使用するメソッド、または論理ツリーのサブノード内から特定のオブジェクトを返すメソッドが用意されています。 ただし、通常実行するオブジェクトツリー操作の多くは、<xref:System.Windows.FrameworkElement> または <xref:System.Windows.FrameworkContentElement>の同様のメソッドまたはプロパティによっても公開されます。 たとえば、次のようにしてみます。  
  
-   論理子オブジェクトの列挙子を返す静的な <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> メソッドを呼び出す代わりに、そのオブジェクトのコンテンツモデルで公開されている専用のコレクションを使用します。 コンテンツモデルをサポートするほとんどすべてのオブジェクトは、子オブジェクトのコレクションを含むいくつかのプロパティを公開し、そのコレクションに直接コレクションインターフェイスをサポートします。  
  
-   静的 <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> メソッドを呼び出して、名前を指定して子オブジェクトを取得するのではなく、特定のオブジェクトに対して <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> または <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> メソッドを呼び出します。  
  
 <xref:System.Windows.LogicalTreeHelper> は、論理ツリーを複数のレベルで再帰的に上または下に移動し、さまざまな親または子オブジェクトを検査するための一貫した方法を使用する分析シナリオに最も役立ちます。 この場合、コンテンツモデルが混在していて、より多くのコンテンツモデル固有の Api を使用すると、複雑になる可能性があります。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member BringIntoView : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.LogicalTreeHelper.BringIntoView current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">表示する UI 要素。</param>
        <summary>要求された UI 要素の表示を試行して、結果を報告するためにターゲット上で <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、この静的ユーティリティメソッドではなく <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> または <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> インスタンスメソッドを呼び出す方が便利です。 インスタンスメソッドの動作は、静的メソッドの動作と同じです。  
  
 指定された `current` UI 要素が <xref:System.Windows.FrameworkContentElement>であっても、生成されたイベントは同じ <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> イベントになります。イベントのイベントデータを確認することによって、元の <xref:System.Windows.FrameworkContentElement> を識別できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="static member FindLogicalNode : System.Windows.DependencyObject * string -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.FindLogicalNode (logicalTreeNode, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode">検索を開始するオブジェクト。 このオブジェクトは、<see cref="T:System.Windows.FrameworkElement" /> と <see cref="T:System.Windows.FrameworkContentElement" /> のどちらかである必要があります。</param>
        <param name="elementName">検索するオブジェクトの名前。</param>
        <summary>指定された名前を持つオブジェクトを検索して返します。 検索は指定されたオブジェクトから開始され、論理ツリーのサブノードに続きます。</summary>
        <returns>一致する名前が見つかった場合は、その名前を持つオブジェクト。論理ツリー内に一致する名前が見つからなかった場合は、<see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> と <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> のメソッドは、<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>に似ていますが、さまざまなロジックによって動作します。  
  
-   <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> の検索方向は、子オブジェクト (ツリーの下) に向かっています。`FindName` メソッドの検索方向は、親オブジェクト (ツリーの上) に向かっています。  
  
-   `FindName` メソッドは、XAML 名前スコープの概念によって管理されます。 `FindName` を使用すると、XAML 名前空間に一意性が適用されるため、その名前のオブジェクトが1つだけ存在することが保証されます。 これに対し、<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> では XAML 名前スコープが無視され、検索中に XAML 名前スコープの境界を越える可能性があります。 そのため、境界を越えた場合は、`elementName` 名の一意性は保証されません。 XAML 名前スコープの詳細については、「 [WPF Xaml 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>論理ツリーを処理して、指定したオブジェクトの直接の子オブジェクトのコレクションを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.DependencyObject -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">論理ツリーの処理の起点になるオブジェクト。 これは、<see cref="T:System.Windows.FrameworkElement" /> か <see cref="T:System.Windows.FrameworkContentElement" /> のいずれかにする必要があります。</param>
        <summary>論理ツリーを処理して、指定したオブジェクトの直接の子オブジェクトのコレクションを返します。</summary>
        <returns>指定したオブジェクトの論理ツリーに属する直接の子オブジェクトの列挙可能なコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このシグネチャとヘルパーメソッドは、主に `current` が <xref:System.Windows.FrameworkElement> であるか <xref:System.Windows.FrameworkContentElement> であるかわからない場合に使用します。また、そのオブジェクトのクラスが独自のコンテンツモデルコレクションをサポートしているかどうかわからない場合にもよく使用します。 クエリを実行するオブジェクトの種類を特定できる場合は、その型に存在することがわかっている特定のコンテンツプロパティを確認します。 たとえば、クエリを実行するオブジェクトが <xref:System.Windows.Controls.ItemsControl>であることがわかっている場合は、<xref:System.Windows.Controls.ItemsControl.Items%2A> プロパティをチェックして、コレクションインターフェイスをサポートする厳密に型指定されたコレクションを取得します。これは、列挙子よりも便利です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkContentElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current">論理ツリーの処理の起点になるオブジェクト。</param>
        <summary>論理ツリーを処理して、指定した <see cref="T:System.Windows.FrameworkContentElement" /> の直接の子オブジェクトのコレクションを返します。</summary>
        <returns>論理ツリー内の <paramref name="current" /> から始まる、直接の子オブジェクトの列挙可能なコレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current">論理ツリーの処理の起点になるオブジェクト。</param>
        <summary>論理ツリーを処理して、指定した <see cref="T:System.Windows.FrameworkElement" /> の直接の子オブジェクトのコレクションを返します。</summary>
        <returns>論理ツリー内の <paramref name="current" /> から始まる、直接の子オブジェクトの列挙可能なコレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.GetParent current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">親オブジェクトを検索する対象となるオブジェクト。 これは、<see cref="T:System.Windows.FrameworkElement" /> または <see cref="T:System.Windows.FrameworkContentElement" /> である必要があります。</param>
        <summary>論理ツリーを処理して、指定したオブジェクトの親オブジェクトを返します。</summary>
        <returns>要求された親オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> または <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> プロパティの適切な型バージョン (<xref:System.Windows.FrameworkElement> または <xref:System.Windows.FrameworkContentElement>) を取得するラッパーにすぎません。したがって、`current` の種類を判断できない場合は、代わりにそれぞれのインスタンスのプロパティを確認することをお勧めします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
