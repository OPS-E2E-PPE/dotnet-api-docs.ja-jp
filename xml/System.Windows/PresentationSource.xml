<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d31a43773a5c891341ce3856ccd779b183bbec6f" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78808624" /></Metadata><TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PresentationSource extends System.Windows.Threading.DispatcherObject" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type PresentationSource = class&#xA;    inherit DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="872e5-101">別の技術からのコンテンツを相互運用シナリオの一部として表示するクラスの抽象基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="872e5-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span></span> <span data-ttu-id="872e5-102">また、このクラスはそれらのソースを操作するための静的メソッド、および基本的なビジュアル層のプレゼンテーション アーキテクチャも提供します。</span><span class="sxs-lookup"><span data-stu-id="872e5-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="872e5-103">派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="872e5-103">Provides initialization for base class values when called by the constructor of a derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberSignature Language="F#" Value="member this.AddSource : unit -&gt; unit" Usage="presentationSource.AddSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="872e5-104"><see cref="T:System.Windows.PresentationSource" /> 派生クラスのインスタンスを既知のプレゼンテーション ソースのリストに追加します。</span><span class="sxs-lookup"><span data-stu-id="872e5-104">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="872e5-105">このメソッドは、追跡する必要があることを示すために、派生クラスによって呼び出される必要があります。</span><span class="sxs-lookup"><span data-stu-id="872e5-105">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.AddSourceChangedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="872e5-106">ハンドラーを追加する対象の要素。</span><span class="sxs-lookup"><span data-stu-id="872e5-106">The element to add the handler to.</span></span></param>
        <param name="handler"><span data-ttu-id="872e5-107">追加するハンドラー実装。</span><span class="sxs-lookup"><span data-stu-id="872e5-107">The handler implementation to add.</span></span></param>
        <summary><span data-ttu-id="872e5-108"><see langword="SourceChanged" /> イベントのハンドラーを、指定した要素に追加します。</span><span class="sxs-lookup"><span data-stu-id="872e5-108">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="872e5-109">このイベントの構文ブロックに関係なく、適切な [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 添付プロパティの使用はありません。</span><span class="sxs-lookup"><span data-stu-id="872e5-109">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="872e5-110">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]でハンドラーを追加しようとしないでください。コード内のハンドラーは、プレゼンテーション (<xref:System.Windows.PresentationSource>) コンテンツのホストとして機能するオブジェクトにのみ配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="872e5-110">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="872e5-111">このようなハンドラーは、オブジェクトの初期化中にのみアタッチし、Dispose メソッドまたは同等のオブジェクトのクリーンアップで明示的に削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="872e5-111">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="872e5-112">これはルーティングイベントですが、このイベントには、通常のルーティングイベントの動作とは異なる特別な制限があります。これは、これを処理することに関係する一般的なアプリケーションシナリオの要素の数が比較的少ないためです。場合.</span><span class="sxs-lookup"><span data-stu-id="872e5-112">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="872e5-113"><xref:System.Windows.UIElement> または <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> メソッドを使用してハンドラーを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="872e5-113">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="872e5-114"><xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A> を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="872e5-114">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="872e5-115">イベントC#自体はパブリックとして公開されないため、`+=` および `-=` のイベントハンドラーの構文、および関連する言語固有のハンドラーの構文はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="872e5-115">The C# `+=` and `-=` event handler syntaxes, and related language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="872e5-116">ハンドラーを直接追加および削除するための <xref:System.Windows.PresentationSource> ユーティリティメソッドのみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="872e5-116">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="872e5-117">クラスハンドラーは使用できません。</span><span class="sxs-lookup"><span data-stu-id="872e5-117">Class handlers are not allowed.</span></span> <span data-ttu-id="872e5-118">具体的には、クラスコンストラクターでこのイベントに対して <xref:System.Windows.EventManager.RegisterClassHandler%2A> を呼び出すことはできません。これは、SourceChanged の識別子フィールドが存在するにもかかわらず、識別子がパブリックではないためです。</span><span class="sxs-lookup"><span data-stu-id="872e5-118">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="872e5-119">ハンドラーのいずれかが引数を処理済みとしてマークしようとしても、すべての登録済みハンドラーは SourceChanged イベントを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="872e5-119">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberSignature Language="F#" Value="member this.ClearContentRenderedListeners : unit -&gt; unit" Usage="presentationSource.ClearContentRenderedListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="872e5-120"><see cref="E:System.Windows.PresentationSource.ContentRendered" /> イベントのリスナーのリストを <see langword="null" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="872e5-120">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Media.CompositionTarget" Usage="System.Windows.PresentationSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="872e5-121">ソースに表示されているビジュアルのビジュアル ターゲットを取得します。</span><span class="sxs-lookup"><span data-stu-id="872e5-121">Gets the visual target for the visuals being presented in the source.</span></span></summary>
        <value><span data-ttu-id="872e5-122">ビジュアル ターゲット (<see cref="T:System.Windows.Media.CompositionTarget" /> 派生クラスのインスタンス)。</span><span class="sxs-lookup"><span data-stu-id="872e5-122">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="872e5-123">このプロパティの戻り値は、<xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>の実装に依存します。</span><span class="sxs-lookup"><span data-stu-id="872e5-123">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="872e5-124">派生クラスでは、型固有の値を提供するために、このプロパティをシャドウすることを選択できます。</span><span class="sxs-lookup"><span data-stu-id="872e5-124">Derived classes can choose to shadow this property to offer a type-specific value.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="872e5-125">コンテンツがレンダリングされ、ユーザー操作を受け入れる準備が整ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="872e5-125">Occurs when content is rendered and ready for user interaction.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSources : System.Collections.IEnumerable" Usage="System.Windows.PresentationSource.CurrentSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="872e5-126">ソースのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="872e5-126">Returns a list of sources.</span></span></summary>
        <value><span data-ttu-id="872e5-127">弱い参照のリスト。</span><span class="sxs-lookup"><span data-stu-id="872e5-127">A list of weak references.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="872e5-128">返された一覧は、<xref:System.Windows.PresentationSource.AddSource%2A>で追加された、読み取り専用のスレッドセーフコピーに対する列挙子をサポートします。</span><span class="sxs-lookup"><span data-stu-id="872e5-128">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="872e5-129">列挙子は、リスト内のすべての dead 弱い参照をスキップします。</span><span class="sxs-lookup"><span data-stu-id="872e5-129">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDependencyObject (dependencyObject As DependencyObject) As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member FromDependencyObject : System.Windows.DependencyObject -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromDependencyObject dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="872e5-130">ソースの検索対象となる <see cref="T:System.Windows.DependencyObject" />。</span><span class="sxs-lookup"><span data-stu-id="872e5-130">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span></span></param>
        <summary><span data-ttu-id="872e5-131">指定した <see cref="T:System.Windows.DependencyObject" /> が表示されているソースを返します。</span><span class="sxs-lookup"><span data-stu-id="872e5-131">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span></span></summary>
        <returns><span data-ttu-id="872e5-132">依存関係オブジェクトが表示されている <see cref="T:System.Windows.PresentationSource" />。</span><span class="sxs-lookup"><span data-stu-id="872e5-132">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromVisual (visual As Visual) As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="static member FromVisual : System.Windows.Media.Visual -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="872e5-133">ソースの検索対象となる <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="872e5-133">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span></span></param>
        <summary><span data-ttu-id="872e5-134">指定した <see cref="T:System.Windows.Media.Visual" /> が表示されているソースを返します。</span><span class="sxs-lookup"><span data-stu-id="872e5-134">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span></span></summary>
        <returns><span data-ttu-id="872e5-135">ビジュアルが表示されている <see cref="T:System.Windows.PresentationSource" />。<see langword="null" /> が破棄されている場合は <paramref name="visual" />。</span><span class="sxs-lookup"><span data-stu-id="872e5-135">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="872e5-136"><paramref name="visual" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="872e5-136"><paramref name="visual" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="abstract member GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="presentationSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="872e5-137">派生クラスでオーバーライドされると、指定したソースのビジュアル ターゲットを返します。</span><span class="sxs-lookup"><span data-stu-id="872e5-137">When overridden in a derived class, returns a visual target for the given source.</span></span></summary>
        <returns><span data-ttu-id="872e5-138">ビジュアルを描画するターゲットである <see cref="T:System.Windows.Media.CompositionTarget" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="872e5-138">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="872e5-139"><see cref="P:System.Windows.PresentationSource.CompositionTarget" /> 読み取り専用プロパティが返す値を宣言するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="872e5-139">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span></span>  
  
<span data-ttu-id="872e5-140">オーバーライドは、相互運用シナリオで使用される <see cref="T:System.Windows.Media.CompositionTarget" /> 派生クラス型の型固有のインスタンスを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="872e5-140">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.PresentationSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="872e5-141">派生クラスでオーバーライドされると、オブジェクトが破棄されているかどうかを宣言する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="872e5-141">When overridden in a derived class, gets a value that declares whether the object is disposed.</span></span></summary>
        <value><span data-ttu-id="872e5-142">オブジェクトが破棄されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="872e5-142"><see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="872e5-143">派生クラスは <see cref="T:System.IDisposable" /> を実装するか、同等の動作を提供することが想定されています。</span><span class="sxs-lookup"><span data-stu-id="872e5-143">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberSignature Language="F#" Value="member this.RemoveSource : unit -&gt; unit" Usage="presentationSource.RemoveSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="872e5-144"><see cref="T:System.Windows.PresentationSource" /> 派生クラスのインスタンスを既知のプレゼンテーション ソースのリストから削除します。</span><span class="sxs-lookup"><span data-stu-id="872e5-144">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.RemoveSourceChangedHandler (e, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="872e5-145">ハンドラーの削除元となる要素。</span><span class="sxs-lookup"><span data-stu-id="872e5-145">The element to remove the handler from.</span></span></param>
        <param name="handler"><span data-ttu-id="872e5-146">削除するハンドラー実装。</span><span class="sxs-lookup"><span data-stu-id="872e5-146">The handler implementation to remove.</span></span></param>
        <summary><span data-ttu-id="872e5-147"><see langword="SourceChanged" /> イベントのハンドラーを、指定した要素から削除します。</span><span class="sxs-lookup"><span data-stu-id="872e5-147">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="872e5-148">これはルーティングイベントですが、このイベントには、通常のルーティングイベントの動作とは異なる特別な制限があります。これは、これを処理することに関係する一般的なアプリケーションシナリオの要素の数が比較的少ないためです。場合.</span><span class="sxs-lookup"><span data-stu-id="872e5-148">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="872e5-149"><xref:System.Windows.UIElement> または <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> メソッドを使用してハンドラーを削除することはできません。</span><span class="sxs-lookup"><span data-stu-id="872e5-149">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="872e5-150"><xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A> を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="872e5-150">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="872e5-151">イベントC#自体はパブリックとして公開されないため、`+=` および `-=` のイベントハンドラーの構文や、その他の言語固有のハンドラーの構文はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="872e5-151">The C# `+=` and `-=` event handler syntaxes, and other language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="872e5-152">ハンドラーを直接追加および削除するための <xref:System.Windows.PresentationSource> ユーティリティメソッドのみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="872e5-152">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberSignature Language="F#" Value="member this.RootChanged : System.Windows.Media.Visual * System.Windows.Media.Visual -&gt; unit" Usage="presentationSource.RootChanged (oldRoot, newRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot"><span data-ttu-id="872e5-153">変更前のルート <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="872e5-153">The old root <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <param name="newRoot"><span data-ttu-id="872e5-154">変更後のルート <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="872e5-154">The new root <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="872e5-155">ルート <see cref="T:System.Windows.Media.Visual" /> が変更されたことを示す通知を提供します。</span><span class="sxs-lookup"><span data-stu-id="872e5-155">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="872e5-156">派生クラスは、ルート <xref:System.Windows.Media.Visual> が変更されたことを示すために、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="872e5-156">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="872e5-157">このメソッドを呼び出すと、これらのルートビジュアルが派生クラス <xref:System.Windows.FrameworkElement> 場合にのみ、指定されたルートビジュアルで2つのオブジェクトの有効期間イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="872e5-157">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="872e5-158">古いルートビジュアルによって <xref:System.Windows.FrameworkElement.Unloaded> イベントが発生し、要素のツリーが下方向に処理され、このイベントが各子要素にブロードキャストされます。</span><span class="sxs-lookup"><span data-stu-id="872e5-158">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="872e5-159">新しいルートビジュアルによって <xref:System.Windows.FrameworkElement.Loaded> イベントが発生し、要素のツリーが下方向に処理され、このイベントが各子要素にブロードキャストされます。</span><span class="sxs-lookup"><span data-stu-id="872e5-159">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.PresentationSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="872e5-160">派生クラスでオーバーライドされると、ソースで表示されているルート ビジュアルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="872e5-160">When overridden in a derived class, gets or sets the root visual being presented in the source.</span></span></summary>
        <value><span data-ttu-id="872e5-161">ルート ビジュアル。</span><span class="sxs-lookup"><span data-stu-id="872e5-161">The root visual.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
