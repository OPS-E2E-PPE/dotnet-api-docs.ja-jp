<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02f757d7526c1fe8264dc15ce568bf21db4c051a" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82443176" /></Metadata><TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="efe91-101">コントロールが特定の状態のときの外観を表します。</span><span class="sxs-lookup"><span data-stu-id="efe91-101">Represents the visual appearance of the control when it is in a specific state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe91-102">コントロールが特定の状態にある場合のコントロールの外観を指定 <xref:System.Windows.VisualState>。</span><span class="sxs-lookup"><span data-stu-id="efe91-102">A <xref:System.Windows.VisualState> specifies how the control looks when it is in a certain state.</span></span> <span data-ttu-id="efe91-103">たとえば、<xref:System.Windows.Controls.Button> が押されている場合、その境界線は通常とは異なる色になることがあります。</span><span class="sxs-lookup"><span data-stu-id="efe91-103">For example, when a <xref:System.Windows.Controls.Button> is pressed, its border might be a different color than normal.</span></span>  <span data-ttu-id="efe91-104"><xref:System.Windows.VisualState> クラスには、コントロールの外観を変更する <xref:System.Windows.VisualState.Storyboard%2A> プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="efe91-104">The <xref:System.Windows.VisualState> class has a <xref:System.Windows.VisualState.Storyboard%2A> property that changes the appearance of the control.</span></span> <span data-ttu-id="efe91-105">コントロールが <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> プロパティによって指定された状態になると、<xref:System.Windows.VisualState.Storyboard%2A> が開始されます。</span><span class="sxs-lookup"><span data-stu-id="efe91-105">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="efe91-106">コントロールが状態を終了すると、<xref:System.Windows.VisualState.Storyboard%2A> が停止します。</span><span class="sxs-lookup"><span data-stu-id="efe91-106">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
 <span data-ttu-id="efe91-107"><xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> プロパティには <xref:System.Windows.VisualState> オブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="efe91-107">The <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> property contains <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="efe91-108"><xref:System.Windows.VisualStateGroup> オブジェクトは <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> 添付プロパティに追加されます。これは <xref:System.Windows.FrameworkElement>ので定義されています。</span><span class="sxs-lookup"><span data-stu-id="efe91-108"><xref:System.Windows.VisualStateGroup> objects are added to the <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> attached property, which is defined on the on a <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="efe91-109"><xref:System.Windows.VisualState> オブジェクトを任意の <xref:System.Windows.FrameworkElement>に追加できますが、通常は <xref:System.Windows.Controls.Control>の <xref:System.Windows.Controls.ControlTemplate> で使用されます。</span><span class="sxs-lookup"><span data-stu-id="efe91-109">You can add <xref:System.Windows.VisualState> objects to any <xref:System.Windows.FrameworkElement>, but they are typically are used in a <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="efe91-110">既存のコントロールの <xref:System.Windows.Controls.ControlTemplate> と <xref:System.Windows.VisualState> オブジェクトを作成する方法の詳細については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="efe91-110">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span> <span data-ttu-id="efe91-111"><xref:System.Windows.Controls.ControlTemplate>の外部で <xref:System.Windows.VisualState> オブジェクトを使用する例については、<xref:System.Windows.VisualStateManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="efe91-111">For an example of using <xref:System.Windows.VisualState> objects outside of a <xref:System.Windows.Controls.ControlTemplate>, see the <xref:System.Windows.VisualStateManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe91-112">次の例では、`CommonStates` と呼ばれる <xref:System.Windows.Controls.Button> の <xref:System.Windows.Controls.ControlTemplate> に <xref:System.Windows.VisualStateGroup> を作成し、状態、<xref:System.Windows.VisualState>、`Normal`、および `Pressed`に対して `MouseOver`オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="efe91-112">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="efe91-113"><xref:System.Windows.Controls.Button> は、`CommonStates`<xref:System.Windows.VisualStateGroup>内の `Disabled` と呼ばれる状態も定義しますが、この例では簡潔にするために省略しています。</span><span class="sxs-lookup"><span data-stu-id="efe91-113">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="efe91-114">全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="efe91-114">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efe91-115"><see cref="T:System.Windows.VisualState" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="efe91-115">Initializes a new instance of the <see cref="T:System.Windows.VisualState" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efe91-116"><see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="efe91-116">Gets or sets the name of the <see cref="T:System.Windows.VisualState" />.</span></span></summary>
        <value><span data-ttu-id="efe91-117"><see cref="T:System.Windows.VisualState" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="efe91-117">The name of the <see cref="T:System.Windows.VisualState" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe91-118">要素の表示状態を指定するには、<xref:System.Windows.VisualState> の <xref:System.Windows.VisualState.Name%2A> を <xref:System.Windows.VisualStateManager>に渡します。</span><span class="sxs-lookup"><span data-stu-id="efe91-118">You specify which visual state an element should enter by passing the <xref:System.Windows.VisualState.Name%2A> of the <xref:System.Windows.VisualState> to the <xref:System.Windows.VisualStateManager>.</span></span>  
  
 <span data-ttu-id="efe91-119"><xref:System.Windows.Controls.Control> が <xref:System.Windows.Controls.ControlTemplate>で <xref:System.Windows.VisualStateManager> を使用する場合、コントロールの作成者は、<xref:System.Windows.Controls.ControlTemplate> をクラスシグネチャに配置することによって、その <xref:System.Windows.TemplateVisualStateAttribute> でどの <xref:System.Windows.VisualState> オブジェクトを検索する必要があるかを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="efe91-119">When a <xref:System.Windows.Controls.Control> uses the <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.ControlTemplate>, the control author should specify which <xref:System.Windows.VisualState> objects the control expects to find in its <xref:System.Windows.Controls.ControlTemplate> by putting the <xref:System.Windows.TemplateVisualStateAttribute> on its class signature.</span></span> <span data-ttu-id="efe91-120"><xref:System.Windows.Controls.ControlTemplate> 作成者は、新しい <xref:System.Windows.VisualState> オブジェクトを定義し、<xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> プロパティによって指定された値に <xref:System.Windows.VisualState.Name%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="efe91-120"><xref:System.Windows.Controls.ControlTemplate> authors define new <xref:System.Windows.VisualState> objects and set the <xref:System.Windows.VisualState.Name%2A> property to the value specified by the <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="efe91-121">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]に含まれているコントロールの表示状態の名前を確認するには、「[コントロールのスタイルとテンプレート](~/docs/framework/wpf/controls/control-styles-and-templates.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="efe91-121">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="efe91-122">既存のコントロールの <xref:System.Windows.Controls.ControlTemplate> と <xref:System.Windows.VisualState> オブジェクトを作成する方法の詳細については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="efe91-122">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe91-123">次の例では、`CommonStates` と呼ばれる <xref:System.Windows.Controls.Button> の <xref:System.Windows.Controls.ControlTemplate> に <xref:System.Windows.VisualStateGroup> を作成し、状態、<xref:System.Windows.VisualState>、`Normal`、および `Pressed`に対して `MouseOver`オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="efe91-123">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="efe91-124"><xref:System.Windows.Controls.Button> は、`CommonStates`<xref:System.Windows.VisualStateGroup>内の `Disabled` と呼ばれる状態も定義しますが、この例では簡潔にするために省略しています。</span><span class="sxs-lookup"><span data-stu-id="efe91-124">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="efe91-125">全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="efe91-125">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efe91-126">コントロールが <see cref="T:System.Windows.Media.Animation.Storyboard" /> で表される状態のときに、コントロールの外観を定義する <see cref="T:System.Windows.VisualState" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="efe91-126">Gets or sets a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span></span></summary>
        <value><span data-ttu-id="efe91-127">コントロールが <see cref="T:System.Windows.VisualState" /> で表される状態のときに、コントロールの外観を定義するストーリーボード。</span><span class="sxs-lookup"><span data-stu-id="efe91-127">A storyboard that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span></span> <span data-ttu-id="efe91-128">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="efe91-128">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe91-129">コントロールが <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> プロパティによって指定された状態になると、<xref:System.Windows.VisualState.Storyboard%2A> が開始されます。</span><span class="sxs-lookup"><span data-stu-id="efe91-129">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="efe91-130">コントロールが状態を終了すると、<xref:System.Windows.VisualState.Storyboard%2A> が停止します。</span><span class="sxs-lookup"><span data-stu-id="efe91-130">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe91-131">次の例では、1つの <xref:System.Windows.Controls.Grid>を含む <xref:System.Windows.Controls.Button> の単純な <xref:System.Windows.Controls.ControlTemplate> を作成します。</span><span class="sxs-lookup"><span data-stu-id="efe91-131">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span>  <span data-ttu-id="efe91-132">`MouseOver` と呼ばれる <xref:System.Windows.VisualState> には、ユーザーが <xref:System.Windows.Controls.Button>上にマウスを置いたときに、<xref:System.Windows.Controls.Grid> の色を緑から赤に変更するストーリーボードがあります。</span><span class="sxs-lookup"><span data-stu-id="efe91-132">The <xref:System.Windows.VisualState> called `MouseOver` has a Storyboard that changes the color of the <xref:System.Windows.Controls.Grid> from green to red when the user puts the mouse over the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="efe91-133">`Normal` と呼ばれる <xref:System.Windows.VisualState> は、ユーザーがマウスをボタンの外に移動したときに、<xref:System.Windows.Controls.Grid> が緑色に戻るようにするために用意されています。</span><span class="sxs-lookup"><span data-stu-id="efe91-133">The <xref:System.Windows.VisualState> called `Normal` is included so that when the user moves the mouse off the button, the <xref:System.Windows.Controls.Grid> returns to green.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
