<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="171026b625ffffdcdcbaf1c1d4f61e45fe231c82" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968531" /></Metadata><TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <TypeSignature Language="F#" Value="type ComponentResourceKey = class&#xA;    inherit ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28c46-101">外部アセンブリ内のクラス名、および追加識別子に基づいてリソース キーを定義または参照します。</span><span class="sxs-lookup"><span data-stu-id="28c46-101">Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c46-102">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] については、「 [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="28c46-102">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension).</span></span>  
  
 <span data-ttu-id="28c46-103">このクラスは、アセンブリ内の型および識別子を基にしたキーの作成に役立つオブジェクト型を実装します。</span><span class="sxs-lookup"><span data-stu-id="28c46-103">This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.</span></span> <span data-ttu-id="28c46-104">型を定義または参照するため、特定の <xref:System.Windows.ResourceDictionary>を要求する必要はなく、アセンブリ内に複数のリソースのセットが存在することがあり、それぞれの <xref:System.Windows.ComponentResourceKey>の型によって区別されます。</span><span class="sxs-lookup"><span data-stu-id="28c46-104">Because you define or reference the type, you do not need to request a specific <xref:System.Windows.ResourceDictionary>, and more than one set of resources can exist in the assembly, each differentiated by the type of their <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="28c46-105"><xref:System.Windows.ComponentResourceKey>を定義するには、次の2つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="28c46-105">There are two ways to define a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="28c46-106">アクセスしやすいキーを使用する場合は、外部リソースアセンブリに存在する <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> で構成された <xref:System.Windows.ComponentResourceKey>を返すコントロールクラスコードの静的プロパティと <xref:System.Windows.ComponentResourceKey.ResourceId%2A>を定義できます。</span><span class="sxs-lookup"><span data-stu-id="28c46-106">If you want an easily accessible key, you can define a static property on your control class code that returns a <xref:System.Windows.ComponentResourceKey>, constructed with a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> that exists in the external resource assembly, and a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</span></span> <span data-ttu-id="28c46-107">キーを使用すると、アセンブリ内のコントロールに対して、カスタムの外部リソースアセンブリを交換することによって、代替の既定のスタイルを定義できます。</span><span class="sxs-lookup"><span data-stu-id="28c46-107">The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.</span></span> <span data-ttu-id="28c46-108">また、カスタマイズエントリポイントを公開するために、より大きなコントロールスタイルまたはテンプレート内に名前付きリソースパーツを定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="28c46-108">You can also define a named resource part within a larger control style or template to expose a customization entry point.</span></span> <span data-ttu-id="28c46-109">これは、コントロールのテーマリソースディクショナリを定義する場合に特に便利です。</span><span class="sxs-lookup"><span data-stu-id="28c46-109">This is particularly useful if you are defining a theme resource dictionary for your control.</span></span>  
  
 <span data-ttu-id="28c46-110">また、詳細な構文で [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension)を直接使用して、キーの緩いインスタンスを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="28c46-110">You can also use the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension) in verbose syntax directly to create a loose instance of the key.</span></span> <span data-ttu-id="28c46-111">これは、カスタマイズするために探索が少ない他のアセンブリからプライベートリソースを宣言する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="28c46-111">This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28c46-112"><see cref="T:System.Windows.ComponentResourceKey" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="28c46-112">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28c46-113"><see cref="T:System.Windows.ComponentResourceKey" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="28c46-113">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c46-114">パラメーターなしのコンストラクターは通常は使用されません。これは、<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> 値と <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 値が適切に初期化されている必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="28c46-114">The parameterless constructor is not generally used, because a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> value and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value are required for proper initialization.</span></span> <span data-ttu-id="28c46-115">パラメーターなしのコンストラクターは、主に、名前付きパラメーター形式での[ComponentResourceKey マークアップ拡張機能](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension)の XAML の使用をサポートするために存在します。</span><span class="sxs-lookup"><span data-stu-id="28c46-115">The parameterless constructor exists primarily to support [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension) XAML usage in named parameter form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.ComponentResourceKey : Type * obj -&gt; System.Windows.ComponentResourceKey" Usage="new System.Windows.ComponentResourceKey (typeInTargetAssembly, resourceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly"><span data-ttu-id="28c46-116">リソース キーを定義する型。</span><span class="sxs-lookup"><span data-stu-id="28c46-116">The type that defines the resource key.</span></span></param>
        <param name="resourceId"><span data-ttu-id="28c46-117">この <see cref="T:System.Windows.ComponentResourceKey" /> を <paramref name="typeInTargetAssembly" /> 型に関連付けられている他のキーと区別する一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="28c46-117">A unique identifier to differentiate this <see cref="T:System.Windows.ComponentResourceKey" /> from others associated with the <paramref name="typeInTargetAssembly" /> type.</span></span></param>
        <summary><span data-ttu-id="28c46-118">キーを定義する <see cref="T:System.Windows.ComponentResourceKey" /> と、追加のリソース識別子として使用するオブジェクトを指定して、<see cref="T:System.Type" /> の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="28c46-118">Initializes a new instance of a <see cref="T:System.Windows.ComponentResourceKey" /> , specifying the <see cref="T:System.Type" /> that defines the key, and an object to use as an additional resource identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c46-119">このコンストラクターは2つのシナリオに存在し、最初のシナリオは最も重要です。</span><span class="sxs-lookup"><span data-stu-id="28c46-119">This constructor exist for two scenarios, with the first scenario being the most important:</span></span>  
  
-   <span data-ttu-id="28c46-120">カスタムコントロールクラスのパブリック静的フィールドとして公開される <xref:System.Windows.ComponentResourceKey> の作成をサポートします。</span><span class="sxs-lookup"><span data-stu-id="28c46-120">Supports creating a <xref:System.Windows.ComponentResourceKey> that is then exposed as a public static field on a custom control class.</span></span> <span data-ttu-id="28c46-121">これにより、テンプレートプロパティ値の `{x:Static}` 使用法を通じて、テンプレート内の独自に定義されたリソースに対するコントロールのアクセスが簡単になります。</span><span class="sxs-lookup"><span data-stu-id="28c46-121">This simplifies a control's access to its own defined resources in the template through `{x:Static}` usages for template property values.</span></span>  
  
-   <span data-ttu-id="28c46-122">位置指定パラメーター形式での[ComponentResourceKey マークアップ拡張](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension)XAML の使用をサポートします。これは、コンポーネントリソースを参照するサードパーティが使用できる1つの手法です。</span><span class="sxs-lookup"><span data-stu-id="28c46-122">Supports [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension) XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28c46-123">次の例では、スタイルのカスタマイズエントリポイントを提供するために、コントロールクラスの静的なキーとして公開される <xref:System.Windows.ComponentResourceKey> を作成します。</span><span class="sxs-lookup"><span data-stu-id="28c46-123">The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.</span></span>  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Windows.ComponentResourceKey.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28c46-124">このキーに関連付けられている値を検索するアセンブリのディクショナリを示すアセンブリ オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="28c46-124">Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</span></span></summary>
        <value><span data-ttu-id="28c46-125">リフレクション クラスとして取得されたアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="28c46-125">The retrieved assembly, as a reflection class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="componentResourceKey.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="28c46-126">現在の <see cref="T:System.Windows.ComponentResourceKey" /> と比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="28c46-126">Object to compare with the current <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></param>
        <summary><span data-ttu-id="28c46-127">指定されたオブジェクトが現在の <see cref="T:System.Windows.ComponentResourceKey" /> と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="28c46-127">Determines whether the provided object is equal to the current <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns><span data-ttu-id="28c46-128">オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28c46-128"><see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c46-129">2つのキーは、両方が直接設定可能なすべてのプロパティ (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>、<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>) に対して同じ値を持っている場合に等しくなります。</span><span class="sxs-lookup"><span data-stu-id="28c46-129">Two keys are equal if they both have the same values for all their immediate settable properties (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="componentResourceKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28c46-130">この <see cref="T:System.Windows.ComponentResourceKey" />のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="28c46-130">Returns a hash code for this <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns><span data-ttu-id="28c46-131">符号付き 32 ビット整数値。</span><span class="sxs-lookup"><span data-stu-id="28c46-131">A signed 32-bit integer value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceId : obj with get, set" Usage="System.Windows.ComponentResourceKey.ResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28c46-132">このキーをこの型に関連付けられている他のキーと区別する、一意の識別子を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="28c46-132">Gets or sets a unique identifier to differentiate this key from others associated with this type.</span></span></summary>
        <value><span data-ttu-id="28c46-133">一意識別子。</span><span class="sxs-lookup"><span data-stu-id="28c46-133">A unique identifier.</span></span> <span data-ttu-id="28c46-134">通常、これは文字列です。</span><span class="sxs-lookup"><span data-stu-id="28c46-134">Typically this is a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c46-135">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] については、「 [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="28c46-135">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension).</span></span>  
  
 <span data-ttu-id="28c46-136">通常、<xref:System.Windows.ComponentResourceKey.ResourceId%2A> 値に使用される文字列は、 [XamlName 文法](/dotnet/framework/xaml-services/xamlname-grammar)に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="28c46-136">Typically, the string used for a <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value conforms to the [XamlName Grammar](/dotnet/framework/xaml-services/xamlname-grammar).</span></span>  
  
## Examples  
 <span data-ttu-id="28c46-137">次の例では、<xref:System.Windows.ComponentResourceKey.ResourceId%2A> を使用して、このキーをこの型に関連付けられている他のキーと区別する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="28c46-137">The following example shows how to use the <xref:System.Windows.ComponentResourceKey.ResourceId%2A> to differentiate this key from others associated with this type.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="componentResourceKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28c46-138"><see cref="T:System.Windows.ComponentResourceKey" /> の文字列表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="28c46-138">Gets the string representation of a <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns><span data-ttu-id="28c46-139">文字列表記です。</span><span class="sxs-lookup"><span data-stu-id="28c46-139">The string representation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInTargetAssembly : Type with get, set" Usage="System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28c46-140">リソース キーを定義する <see cref="T:System.Type" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="28c46-140">Gets or sets the <see cref="T:System.Type" /> that defines the resource key.</span></span></summary>
        <value><span data-ttu-id="28c46-141">リソース キーを定義する型。</span><span class="sxs-lookup"><span data-stu-id="28c46-141">The type that defines the resource key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c46-142">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] については、「 [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="28c46-142">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension).</span></span>  
  
 <span data-ttu-id="28c46-143"><xref:System.Windows.ComponentResourceKey> 要素は、外部アセンブリからアクセスされるリソースのキーを定義するためにカスタムコンポーネントによって使用されます。これは、その型を含むアセンブリを対象とすることに基づいて行われます。</span><span class="sxs-lookup"><span data-stu-id="28c46-143">The <xref:System.Windows.ComponentResourceKey> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.</span></span> <span data-ttu-id="28c46-144">カスタムコンポーネントでは、多くの場合、リソースが配置されているアセンブリ内に存在する必要がある新しい型を定義します。</span><span class="sxs-lookup"><span data-stu-id="28c46-144">Custom components often define new types which must be in the assembly where the resource is located.</span></span> <span data-ttu-id="28c46-145">通常、これらの型には他の実装はありません。型は、<xref:System.Windows.ComponentResourceKey>の参照要件を満たすためにのみ存在します。</span><span class="sxs-lookup"><span data-stu-id="28c46-145">Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
## Examples  
 <span data-ttu-id="28c46-146">次の例は、 [ComponentResourceKey マークアップ拡張機能](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension)を使用して <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> と <xref:System.Windows.ComponentResourceKey.ResourceId%2A> を含む <xref:System.Windows.ComponentResourceKey> を定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="28c46-146">The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](/dotnet/framework/wpf/advanced/componentresourcekey-markup-extension).</span></span> <span data-ttu-id="28c46-147">このリソースは外部アセンブリに配置され、要求内の <xref:System.Windows.ComponentResourceKey> 類似したを使用してリソースを要求するキー使用法によってアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="28c46-147">This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
