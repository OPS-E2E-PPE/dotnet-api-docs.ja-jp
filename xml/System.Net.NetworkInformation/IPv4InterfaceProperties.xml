<Type Name="IPv4InterfaceProperties" FullName="System.Net.NetworkInformation.IPv4InterfaceProperties">
  <Metadata><Meta Name="ms.openlocfilehash" Value="368a134ddcb396552bd13d840beea3d596eae91b" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83458031" /></Metadata><TypeSignature Language="C#" Value="public abstract class IPv4InterfaceProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPv4InterfaceProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPv4InterfaceProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPv4InterfaceProperties abstract" />
  <TypeSignature Language="F#" Value="type IPv4InterfaceProperties = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.NetworkInformation" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f8722-101">インターネット プロトコル Version 4 (IPv4) をサポートしているネットワーク インターフェイスに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="f8722-101">Provides information about network interfaces that support Internet Protocol version 4 (IPv4).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-102">このクラスは、IPv4 をサポートするネットワークインターフェイスの構成情報とアドレス情報へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="f8722-102">This class provides access to configuration and address information for network interfaces that support IPv4.</span></span> <span data-ttu-id="f8722-103">このクラスのインスタンスは作成しません。これらは、<xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> メソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="f8722-103">You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method.</span></span>  
  
 <span data-ttu-id="f8722-104">IPV6 のプロパティについては、「<xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8722-104">For IPV6 properties, see <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8722-105">次のコード例では、<xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> オブジェクトを取得し、そのデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="f8722-105">The following code example gets an <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPv4InterfaceProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPv4InterfaceProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8722-106"><see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f8722-106">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-107">このコンストラクターは、<xref:System.Net.NetworkInformation.IPv4InterfaceProperties>から派生したクラスによってのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="f8722-107">This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public abstract int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Index" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8722-108">IPv4 (Internet Protocol Version 4) アドレスに関連付けられているネットワーク インターフェイスのインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f8722-108">Gets the index of the network interface associated with the Internet Protocol version 4 (IPv4) address.</span></span></summary>
        <value><span data-ttu-id="f8722-109">IPv4 インターフェイスのインデックスを格納している <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="f8722-109">An <see cref="T:System.Int32" /> that contains the index of the IPv4 interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-110">このプロパティの値が0の場合、IPv4 はこのインターフェイスでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f8722-110">If the value of this property is zero, IPv4 is not supported by this interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8722-111">次のコード例では、<xref:System.Net.NetworkInformation.IPv4InterfaceProperties> オブジェクトを取得し、そのデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="f8722-111">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutomaticPrivateAddressingActive">
      <MemberSignature Language="C#" Value="public abstract bool IsAutomaticPrivateAddressingActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutomaticPrivateAddressingActive" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAutomaticPrivateAddressingActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAutomaticPrivateAddressingActive : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8722-112">このインターフェイスに自動プライベート IP アドレス指定 (APIPA) のアドレスがあるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8722-112">Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface has an automatic private IP addressing (APIPA) address.</span></span></summary>
        <value><span data-ttu-id="f8722-113">インターフェイスが APIPA アドレスを使用している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8722-113"><see langword="true" /> if the interface uses an APIPA address; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-114">自動プライベート IP アドレス指定を使用すると、動的ホスト構成プロトコル (DHCP) サーバーにアクセスできないコンピューターには、パブリックアドレスと競合しない IP アドレスが自動的に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="f8722-114">Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses.</span></span> <span data-ttu-id="f8722-115">これらのアドレスは、169.254.0.0 から169.254.255.255 の範囲内です。</span><span class="sxs-lookup"><span data-stu-id="f8722-115">These addresses are in the range 169.254.0.0 to 169.254.255.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8722-116">次のコード例では、<xref:System.Net.NetworkInformation.IPv4InterfaceProperties> オブジェクトを取得し、そのデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="f8722-116">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutomaticPrivateAddressingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsAutomaticPrivateAddressingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutomaticPrivateAddressingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAutomaticPrivateAddressingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAutomaticPrivateAddressingEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8722-117">このインターフェイスで自動プライベート IP アドレス指定 (APIPA) が有効になっているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8722-117">Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled.</span></span></summary>
        <value><span data-ttu-id="f8722-118">インターフェイスが APIPA を使用している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8722-118"><see langword="true" /> if the interface uses APIPA; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-119">自動プライベート IP アドレス指定を使用すると、動的ホスト構成プロトコル (DHCP) サーバーにアクセスできないコンピューターには、パブリックアドレスと競合しない IP アドレスが自動的に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="f8722-119">Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses.</span></span> <span data-ttu-id="f8722-120">これらのアドレスは、169.254.0.0 から169.254.255.255 の範囲内です。</span><span class="sxs-lookup"><span data-stu-id="f8722-120">These addresses are in the range 169.254.0.0 to 169.254.255.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8722-121">次のコード例では、<xref:System.Net.NetworkInformation.IPv4InterfaceProperties> オブジェクトを取得し、そのデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="f8722-121">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDhcpEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsDhcpEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDhcpEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDhcpEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDhcpEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDhcpEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8722-122">インターフェイスが DHCP (Dynamic Host Configuration Protocol) サーバーを使用して IP アドレスを取得するように構成されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8722-122">Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address.</span></span></summary>
        <value><span data-ttu-id="f8722-123">インターフェイスが DHCP サーバーから IP アドレスを取得するように構成されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8722-123"><see langword="true" /> if the interface is configured to obtain an IP address from a DHCP server; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-124">このプロパティを `true`すると、コンピューターがネットワーク接続を確立するときに、DHCP サーバーによってその IP アドレスがインターフェイスに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="f8722-124">When this property is `true`, a DHCP server assigns the IP address to the interface when the computer establishes its network connections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8722-125">次のコード例では、<xref:System.Net.NetworkInformation.IPv4InterfaceProperties> オブジェクトを取得し、そのデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="f8722-125">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForwardingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsForwardingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForwardingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsForwardingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsForwardingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForwardingEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8722-126">このインターフェイスがパケットを転送 (ルーティング) できるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8722-126">Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface can forward (route) packets.</span></span></summary>
        <value><span data-ttu-id="f8722-127">インターフェイスがパケットをルーティングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8722-127"><see langword="true" /> if this interface routes packets; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-128">ルーティングが無効になっている場合、インターフェイスによって保持されていない宛先アドレスを持つインターフェイスによって受信されたパケットは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="f8722-128">If routing is disabled, packets that are received by the interface with a destination address that is not held by the interface are discarded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8722-129">次のコード例では、<xref:System.Net.NetworkInformation.IPv4InterfaceProperties> オブジェクトを取得し、そのデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="f8722-129">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mtu">
      <MemberSignature Language="C#" Value="public abstract int Mtu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Mtu" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Mtu As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Mtu { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Mtu : int" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8722-130">このネットワーク インターフェイスの最大 MTU (Maximum Transmission Unit) を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8722-130">Gets the maximum transmission unit (MTU) for this network interface.</span></span></summary>
        <value><span data-ttu-id="f8722-131">MTU を示す <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f8722-131">An <see cref="T:System.Int64" /> value that specifies the MTU.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-132">ネットワークインターフェイスの MTU は、転送できる最大のパケットです。</span><span class="sxs-lookup"><span data-stu-id="f8722-132">The MTU of a network interface is the largest packet that can be transmitted.</span></span> <span data-ttu-id="f8722-133">これはオクテット (8 ビットバイト) で計測されます。</span><span class="sxs-lookup"><span data-stu-id="f8722-133">It is measured in octets (8-bit bytes).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8722-134">次のコード例では、<xref:System.Net.NetworkInformation.IPv4InterfaceProperties> オブジェクトを取得し、そのデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="f8722-134">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesWins">
      <MemberSignature Language="C#" Value="public abstract bool UsesWins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesWins" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UsesWins As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool UsesWins { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesWins : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8722-135">インターフェイスが WINS (Windows Internet Name Service) を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8722-135">Gets a <see cref="T:System.Boolean" /> value that indicates whether an interface uses Windows Internet Name Service (WINS).</span></span></summary>
        <value><span data-ttu-id="f8722-136">インターフェイスが WINS を使用している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8722-136"><see langword="true" /> if the interface uses WINS; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8722-137">WINS には、IPv4 アドレスマッピングに動的 NetBIOS 名を登録して照会するための分散データベースが用意されています。</span><span class="sxs-lookup"><span data-stu-id="f8722-137">WINS provides a distributed database for registering and querying dynamic NetBIOS names to IPv4 address mappings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8722-138">次のコード例では、<xref:System.Net.NetworkInformation.IPv4InterfaceProperties> オブジェクトを取得し、そのデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="f8722-138">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
