<Type Name="IDynamicExpression" FullName="System.Linq.Expressions.IDynamicExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da1bdac7da9df3298413b9d5b0c032e0c3a57c86" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75131790" /></Metadata><TypeSignature Language="C#" Value="public interface IDynamicExpression : System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicExpression implements class System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IDynamicExpression" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicExpression&#xA;Implements IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicExpression : System::Linq::Expressions::IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IDynamicExpression = interface&#xA;    interface IArgumentProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Linq.Expressions.IArgumentProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>DynamicExpression ツリー ノードの引数にアクセスするための内部のインターフェイスに加え、CallSite および再書き込み機能も提供します。  この API を使用しないでください。  これは、DLL リファクタリングのためパブリックのみで、内部パフォーマンスの最適化のためだけに存在します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCallSite">
      <MemberSignature Language="C#" Value="public object CreateCallSite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateCallSite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IDynamicExpression.CreateCallSite" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCallSite () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateCallSite();" />
      <MemberSignature Language="F#" Value="abstract member CreateCallSite : unit -&gt; obj" Usage="iDynamicExpression.CreateCallSite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>必要に応じて、CallSite を作成し、DynamicExpression のポリモーフィック インライン キャッシュの CallSite を返します。  この型は使用しないでください。  これは、アセンブリ リファクタリングのためパブリックのみで、パフォーマンスの最適化のために内部で使用されます。</summary>
        <returns>DynamicExpression のポリモーフィック インライン キャッシュの CallSite。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateType">
      <MemberSignature Language="C#" Value="public Type DelegateType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DelegateType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IDynamicExpression.DelegateType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DelegateType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DelegateType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DelegateType : Type" Usage="System.Linq.Expressions.IDynamicExpression.DelegateType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的な式のポリモーフィック インライン キャッシュに使用される規則の種類である、CallSite で使用されるデリゲート型を取得します。</summary>
        <value>CallSite で使用されるデリゲート型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewrite">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Rewrite (System.Linq.Expressions.Expression[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Rewrite(class System.Linq.Expressions.Expression[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Rewrite (args As Expression()) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ Rewrite(cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Rewrite : System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.Expression" Usage="iDynamicExpression.Rewrite args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Linq.Expressions.Expression[]" />
      </Parameters>
      <Docs>
        <param name="args">このノードを置き換えるために使用する引数。</param>
        <summary>動的な式の引数を指定された値と置き換えて、このノードを書き換えます。  <paramref name="args" /> の数は現在の式の数に一致する必要があります。  この型は使用しないでください。  これは、アセンブリ リファクタリングのためパブリックのみで、パフォーマンスの最適化のために内部で使用されます。  このヘルパー メソッドでは、呼び出しサイトで使用されている DynamicExpression から派生する特定の実装クラスに依存しないように、ノードを書き換えることがでます。</summary>
        <returns>書き換えられたノードを返しますが、変更が行われていない場合は、同じノードを返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
