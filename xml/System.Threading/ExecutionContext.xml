<Type Name="ExecutionContext" FullName="System.Threading.ExecutionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab33ca5a3a6b95ec9cc28b35fa705836302f6cbb" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75158752" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExecutionContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ExecutionContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ExecutionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExecutionContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutionContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ExecutionContext = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c3845-101">現在のスレッドの実行コンテキストを管理します。</span><span class="sxs-lookup"><span data-stu-id="c3845-101">Manages the execution context for the current thread.</span></span> <span data-ttu-id="c3845-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="c3845-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-103"><xref:System.Threading.ExecutionContext> クラスは、実行の論理スレッドに関連するすべての情報に対して1つのコンテナーを提供します。</span><span class="sxs-lookup"><span data-stu-id="c3845-103">The <xref:System.Threading.ExecutionContext> class provides a single container for all information relevant to a logical thread of execution.</span></span> <span data-ttu-id="c3845-104">これには、セキュリティコンテキスト、呼び出しコンテキスト、および同期コンテキストが含まれます。</span><span class="sxs-lookup"><span data-stu-id="c3845-104">This includes security context, call context, and synchronization context.</span></span>  
  
 <span data-ttu-id="c3845-105"><xref:System.Threading.ExecutionContext> クラスは、ユーザーコードがユーザー定義の非同期ポイント間でこのコンテキストをキャプチャして転送するための機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="c3845-105">The <xref:System.Threading.ExecutionContext> class provides the functionality for user code to capture and transfer this context across user-defined asynchronous points.</span></span> <span data-ttu-id="c3845-106">共通言語ランタイムは、マネージプロセス内の実行時に定義された非同期ポイント間で <xref:System.Threading.ExecutionContext> が一貫して転送されるようにします。</span><span class="sxs-lookup"><span data-stu-id="c3845-106">The common language runtime ensures that the <xref:System.Threading.ExecutionContext> is consistently transferred across runtime-defined asynchronous points within the managed process.</span></span>  
  
 <span data-ttu-id="c3845-107">実行コンテキストは、COM アパートメントに相当するマネージマネージ型です。</span><span class="sxs-lookup"><span data-stu-id="c3845-107">An execution context is the managed equivalent of a COM apartment.</span></span> <span data-ttu-id="c3845-108">アプリケーションドメイン内では、スレッドが転送されるたびに、実行コンテキスト全体を転送する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3845-108">Within an application domain, the entire execution context must be transferred whenever a thread is transferred.</span></span> <span data-ttu-id="c3845-109">このような状況は、<xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> メソッドによる転送中、ほとんどのスレッドプール操作、および Windows メッセージポンプを介したスレッドマーシャリングの Windows フォームに発生します。</span><span class="sxs-lookup"><span data-stu-id="c3845-109">This situation occurs during transfers made by the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method, most thread pool operations, and Windows Forms thread marshaling through the Windows message pump.</span></span> <span data-ttu-id="c3845-110">これは、アンセーフスレッドプール操作 (<xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A> メソッドなど) では発生しません。これは、圧縮スタックを転送しません。</span><span class="sxs-lookup"><span data-stu-id="c3845-110">It does not occur in unsafe thread pool operations (such as the <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A> method), which do not transfer the compressed stack.</span></span> <span data-ttu-id="c3845-111">圧縮されたスタックがどこにある場合でも、マネージプリンシパル、同期、ロケール、およびユーザーコンテキストもフローします。</span><span class="sxs-lookup"><span data-stu-id="c3845-111">Wherever the compressed stack flows, the managed principal, synchronization, locale, and user context also flow.</span></span> <span data-ttu-id="c3845-112"><xref:System.Threading.ExecutionContext> クラスには、実行コンテキストを取得するための <xref:System.Threading.ExecutionContext.Capture%2A> メソッドと <xref:System.Threading.ExecutionContext.CreateCopy%2A> メソッド、および現在のスレッドの実行コンテキストを設定するための <xref:System.Threading.ExecutionContext.Run%2A> メソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="c3845-112">The <xref:System.Threading.ExecutionContext> class provides the <xref:System.Threading.ExecutionContext.Capture%2A> and <xref:System.Threading.ExecutionContext.CreateCopy%2A> methods to get the execution context and the <xref:System.Threading.ExecutionContext.Run%2A> method to set the execution context for the current thread.</span></span>  
  
 <span data-ttu-id="c3845-113">スレッドに関連付けられている <xref:System.Threading.ExecutionContext> を別のスレッドに設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="c3845-113">An <xref:System.Threading.ExecutionContext> that is associated with a thread cannot be set on another thread.</span></span> <span data-ttu-id="c3845-114">これを行おうとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c3845-114">Attempting to do so will result in an exception being thrown.</span></span> <span data-ttu-id="c3845-115"><xref:System.Threading.ExecutionContext> をあるスレッドから別のスレッドに伝達するには、<xref:System.Threading.ExecutionContext>のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3845-115">To propagate the <xref:System.Threading.ExecutionContext> from one thread to another, make a copy of the <xref:System.Threading.ExecutionContext>.</span></span>  
  
 <span data-ttu-id="c3845-116">内部的には、<xref:System.Runtime.Remoting.Messaging.LogicalCallContext>に関連付けられているすべてのデータが <xref:System.Threading.ExecutionContext> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="c3845-116">Internally, the <xref:System.Threading.ExecutionContext> stores all data that is associated with the <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</span></span> <span data-ttu-id="c3845-117">これにより、<xref:System.Threading.ExecutionContext> をコピーして転送するときに、<xref:System.Runtime.Remoting.Messaging.LogicalCallContext> データを伝達できます。</span><span class="sxs-lookup"><span data-stu-id="c3845-117">This allows the <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> data to be propagated when the <xref:System.Threading.ExecutionContext> is copied and transferred.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Threading.ExecutionContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ExecutionContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ExecutionContext ^ Capture();" />
      <MemberSignature Language="F#" Value="static member Capture : unit -&gt; System.Threading.ExecutionContext" Usage="System.Threading.ExecutionContext.Capture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3845-118">現在のスレッドから実行コンテキストをキャプチャします。</span><span class="sxs-lookup"><span data-stu-id="c3845-118">Captures the execution context from the current thread.</span></span></summary>
        <returns><span data-ttu-id="c3845-119">現在のスレッドの実行コンテキストを表す <see cref="T:System.Threading.ExecutionContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3845-119">An <see cref="T:System.Threading.ExecutionContext" /> object representing the execution context for the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-120">キャプチャされた実行コンテキストは、<xref:System.Threading.ExecutionContext.Run%2A> メソッドの `executionContext` パラメーターとして使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3845-120">The captured execution context can be used as the `executionContext` parameter for the <xref:System.Threading.ExecutionContext.Run%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Threading.ExecutionContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.ExecutionContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::ExecutionContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="member this.CreateCopy : unit -&gt; System.Threading.ExecutionContext" Usage="executionContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3845-121">現在の実行コンテキストのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3845-121">Creates a copy of the current execution context.</span></span></summary>
        <returns><span data-ttu-id="c3845-122">現在の実行コンテキストを表す <see cref="T:System.Threading.ExecutionContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3845-122">An <see cref="T:System.Threading.ExecutionContext" /> object representing the current execution context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-123">このメソッドは、あるスレッドから別のスレッドに実行コンテキストを伝達する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="c3845-123">This method is useful for propagating an execution context from one thread to another.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3845-124">このコンテキストは使用されているため、コピーできません。</span><span class="sxs-lookup"><span data-stu-id="c3845-124">This context cannot be copied because it is used.</span></span> <span data-ttu-id="c3845-125">コピーできるのは、新しくキャプチャされたコンテキストだけです。</span><span class="sxs-lookup"><span data-stu-id="c3845-125">Only newly captured contexts can be copied.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="executionContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3845-126"><see cref="T:System.Threading.ExecutionContext" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="c3845-126">Releases all resources used by the current instance of the <see cref="T:System.Threading.ExecutionContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-127">`Dispose` を使い終わったら、<xref:System.Threading.ExecutionContext>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c3845-127">Call `Dispose` when you are finished using the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="c3845-128">`Dispose`メソッドによって、<xref:System.Threading.ExecutionContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="c3845-128">The `Dispose` method leaves the <xref:System.Threading.ExecutionContext> in an unusable state.</span></span> <span data-ttu-id="c3845-129">`Dispose`呼び出し後は、<xref:System.Threading.ExecutionContext>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Threading.ExecutionContext> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3845-129">After calling `Dispose`, you must release all references to the <xref:System.Threading.ExecutionContext> so the garbage collector can reclaim the memory that the <xref:System.Threading.ExecutionContext> was occupying.</span></span>  
  
 <span data-ttu-id="c3845-130">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3845-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3845-131">`Dispose`への最後の参照を解放する前に、必ず<xref:System.Threading.ExecutionContext>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c3845-131">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="c3845-132">そうしないと、ガベージ コレクターが <xref:System.Threading.ExecutionContext> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="c3845-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ExecutionContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="c3845-133">アンマネージ リソースのクリーンアップ</span><span class="sxs-lookup"><span data-stu-id="c3845-133">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="executionContext.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="c3845-134">シリアル化情報が設定される <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3845-134">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="c3845-135">シリアル化の対象コンテキストを表す <see cref="T:System.Runtime.Serialization.StreamingContext" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="c3845-135">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure representing the destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="c3845-136">現在の実行コンテキストのインスタンスを再作成するのに必要な論理コンテキスト情報を使用して、指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="c3845-136">Sets the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of the current execution context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-137">論理呼び出しコンテキスト情報を持つ <xref:System.Runtime.Serialization.SerializationInfo> を <xref:System.Threading.ExecutionContext.GetObjectData%2A> 設定します。</span><span class="sxs-lookup"><span data-stu-id="c3845-137"><xref:System.Threading.ExecutionContext.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="c3845-138">逆シリアル化中に、実行コンテキストオブジェクトは、ストリームを介して送信される <xref:System.Runtime.Serialization.SerializationInfo> から再構成されます。</span><span class="sxs-lookup"><span data-stu-id="c3845-138">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="c3845-139">詳細については、「 <xref:System.Runtime.Serialization.SerializationInfo>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3845-139">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3845-140"><paramref name="info" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3845-140"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="c3845-141">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="c3845-141">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="c3845-142">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="c3845-142">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="c3845-143">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="c3845-143">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsFlowSuppressed : unit -&gt; bool" Usage="System.Threading.ExecutionContext.IsFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3845-144">実行コンテキストのフローが現在抑制されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="c3845-144">Indicates whether the flow of the execution context is currently suppressed.</span></span></summary>
        <returns><span data-ttu-id="c3845-145">フローが抑制されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3845-145"><see langword="true" /> if the flow is suppressed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-146"><xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A> メソッドは、非同期操作中に <xref:System.Threading.ExecutionContext> を転送するかどうかを決定するために、インフラストラクチャコンポーネントによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="c3845-146">The <xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Threading.ExecutionContext> during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberSignature Language="F#" Value="static member RestoreFlow : unit -&gt; unit" Usage="System.Threading.ExecutionContext.RestoreFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3845-147">複数の非同期スレッド間における実行コンテキストのフローを復元します。</span><span class="sxs-lookup"><span data-stu-id="c3845-147">Restores the flow of the execution context across asynchronous threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-148"><xref:System.Threading.ExecutionContext.RestoreFlow%2A> は、前の <xref:System.Threading.ExecutionContext.SuppressFlow%2A> メソッド呼び出しの効果を反転させます。</span><span class="sxs-lookup"><span data-stu-id="c3845-148"><xref:System.Threading.ExecutionContext.RestoreFlow%2A> reverses the effect of a prior <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method call.</span></span>  
  
 <span data-ttu-id="c3845-149">このメソッドは、<xref:System.Threading.ExecutionContext.SuppressFlow%2A> メソッドによって返される <xref:System.Threading.AsyncFlowControl> 構造体の <xref:System.Threading.AsyncFlowControl.Undo%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c3845-149">This method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A> method of the <xref:System.Threading.AsyncFlowControl> structure returned by the <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method.</span></span>  <span data-ttu-id="c3845-150"><xref:System.Threading.AsyncFlowControl.Undo%2A> メソッドを使用して、<xref:System.Threading.ExecutionContext.RestoreFlow%2A> メソッドではなく、実行コンテキストのフローを復元する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3845-150">You should use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method to restore the flow of the execution context, not the <xref:System.Threading.ExecutionContext.RestoreFlow%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3845-151">コンテキストのフローは抑制されていないため、復元できません。</span><span class="sxs-lookup"><span data-stu-id="c3845-151">The context flow cannot be restored because it is not being suppressed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Threading.ExecutionContext executionContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Threading::ExecutionContext ^ executionContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member Run : System.Threading.ExecutionContext * System.Threading.ContextCallback * obj -&gt; unit" Usage="System.Threading.ExecutionContext.Run (executionContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Threading.ExecutionContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="c3845-152">設定する <see cref="T:System.Threading.ExecutionContext" />。</span><span class="sxs-lookup"><span data-stu-id="c3845-152">The <see cref="T:System.Threading.ExecutionContext" /> to set.</span></span></param>
        <param name="callback"><span data-ttu-id="c3845-153">指定した実行コンテキストで実行するメソッドを表す <see cref="T:System.Threading.ContextCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="c3845-153">A <see cref="T:System.Threading.ContextCallback" /> delegate that represents the method to be run in the provided execution context.</span></span></param>
        <param name="state"><span data-ttu-id="c3845-154">コールバック メソッドに渡すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3845-154">The object to pass to the callback method.</span></span></param>
        <summary><span data-ttu-id="c3845-155">現在のスレッドで指定した実行コンテキストを使用してメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="c3845-155">Runs a method in a specified execution context on the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-156">メソッドが完了すると、実行コンテキストが以前の状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="c3845-156">The execution context is returned to its previous state when the method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3845-157"><paramref name="executionContext" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3845-157"><paramref name="executionContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c3845-158">または</span><span class="sxs-lookup"><span data-stu-id="c3845-158">-or-</span></span> 
 <span data-ttu-id="c3845-159">キャプチャ操作で <paramref name="executionContext" /> が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="c3845-159"><paramref name="executionContext" /> was not acquired through a capture operation.</span></span>  
  
<span data-ttu-id="c3845-160">または</span><span class="sxs-lookup"><span data-stu-id="c3845-160">-or-</span></span> 
 <span data-ttu-id="c3845-161"><paramref name="executionContext" /> は、<see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /> 呼び出しの引数として既に使用されています。</span><span class="sxs-lookup"><span data-stu-id="c3845-161"><paramref name="executionContext" /> has already been used as the argument to a <see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /> call.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="c3845-162">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="c3845-162">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="c3845-163">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="c3845-163">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberSignature Language="F#" Value="static member SuppressFlow : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Threading.ExecutionContext.SuppressFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3845-164">複数の非同期スレッド間における実行コンテキストのフローを抑制します。</span><span class="sxs-lookup"><span data-stu-id="c3845-164">Suppresses the flow of the execution context across asynchronous threads.</span></span></summary>
        <returns><span data-ttu-id="c3845-165">フローを復元するための <see cref="T:System.Threading.AsyncFlowControl" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="c3845-165">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3845-166">このメソッドを使用して、現在のスレッドでの <xref:System.Threading.ExecutionContext> のフローを抑制します。</span><span class="sxs-lookup"><span data-stu-id="c3845-166">Use this method to suppress the flow of the <xref:System.Threading.ExecutionContext> on the current thread.</span></span>  
  
 <span data-ttu-id="c3845-167"><xref:System.Threading.ExecutionContext>のフローを復元するには、返された <xref:System.Threading.AsyncFlowControl> 構造体に対して <xref:System.Threading.AsyncFlowControl.Undo%2A> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3845-167">You must use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to restore the flow of the <xref:System.Threading.ExecutionContext>.</span></span>  
  
 <span data-ttu-id="c3845-168">このメソッドは、<xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> のアクセス許可の <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> で保護されています。</span><span class="sxs-lookup"><span data-stu-id="c3845-168">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="c3845-169">完全に信頼されたコンポーネントは、このメソッドを呼び出して、非同期呼び出し中に <xref:System.Threading.ExecutionContext> のフローを抑制できます。</span><span class="sxs-lookup"><span data-stu-id="c3845-169">A fully trusted component can call this method to suppress the flow of the <xref:System.Threading.ExecutionContext> during asynchronous calls.</span></span> <span data-ttu-id="c3845-170">フローが抑制されている間、<xref:System.Security.SecurityContext.Capture%2A> メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="c3845-170">While the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3845-171">コンテキストのフローは既に抑制されています。</span><span class="sxs-lookup"><span data-stu-id="c3845-171">The context flow is already suppressed.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="c3845-172">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="c3845-172">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="c3845-173">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="c3845-173">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Threading.AsyncFlowControl" />
      </Docs>
    </Member>
  </Members>
</Type>
