<Type Name="MutexAcl" FullName="System.Threading.MutexAcl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b40861fbe5ed422d3f5b21f3a00d7a697e2374c" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82505739" /></Metadata><TypeSignature Language="C#" Value="public static class MutexAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MutexAcl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.MutexAcl" />
  <TypeSignature Language="VB.NET" Value="Public Class MutexAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAcl abstract sealed" />
  <TypeSignature Language="F#" Value="type MutexAcl = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Threading.Mutex Create (bool initiallyOwned, string name, out bool createdNew, System.Security.AccessControl.MutexSecurity mutexSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Mutex Create(bool initiallyOwned, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.MutexSecurity mutexSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.MutexAcl.Create(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (initiallyOwned As Boolean, name As String, ByRef createdNew As Boolean, mutexSecurity As MutexSecurity) As Mutex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Mutex ^ Create(bool initiallyOwned, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::MutexSecurity ^ mutexSecurity);" />
      <MemberSignature Language="F#" Value="static member Create : bool * string * bool * System.Security.AccessControl.MutexSecurity -&gt; System.Threading.Mutex" Usage="System.Threading.MutexAcl.Create (initiallyOwned, name, createdNew, mutexSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Mutex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initiallyOwned" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
        <Parameter Name="mutexSecurity" Type="System.Security.AccessControl.MutexSecurity" />
      </Parameters>
      <Docs>
        <param name="initiallyOwned"><span data-ttu-id="def2c-101">この呼び出しの結果として名前付きシステム ミューテックスが作成された場合に、呼び出し元スレッドに名前付きシステム ミューテックスの初期所有権を付与する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="def2c-101"><see langword="true" /> to give the calling thread initial ownership of the named system mutex if the named system mutex is created as a result of this call; otherwise, <see langword="false" />.</span></span></param>
        <param name="name"><span data-ttu-id="def2c-102">システム ミューテックスの省略可能な名前。</span><span class="sxs-lookup"><span data-stu-id="def2c-102">The optional name of the system mutex.</span></span> <span data-ttu-id="def2c-103">この引数が <see langword="null" /> または <see cref="F:System.String.Empty" /> に設定されている場合、ローカル ミューテックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="def2c-103">If this argument is set to <see langword="null" /> or <see cref="F:System.String.Empty" />, a local mutex is created.</span></span></param>
        <param name="createdNew"><span data-ttu-id="def2c-104">ローカル ミューテックスが作成された場合、つまり <paramref name="name" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> の場合、このメソッドから戻るときにこの引数は常に <see langword="true" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="def2c-104">When this method returns, this argument is always set to <see langword="true" /> if a local mutex is created; that is, when <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="def2c-105"><paramref name="name" /> に有効な空でない値が含まれている場合、システム ミューテックスが作成されるときにこの引数は <see langword="true" /> に設定されます。または、既存のシステム ミューテックスがその名前で見つかった場合は <see langword="false" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="def2c-105">If <paramref name="name" /> has a valid non-empty value, this argument is set to <see langword="true" /> when the system mutex is created, or it is set to <see langword="false" /> if an existing system mutex is found with that name.</span></span> <span data-ttu-id="def2c-106">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="def2c-106">This parameter is passed uninitialized.</span></span></param>
        <param name="mutexSecurity"><span data-ttu-id="def2c-107">適用する省略可能なミューテックス アクセス制御セキュリティ。</span><span class="sxs-lookup"><span data-stu-id="def2c-107">The optional mutex access control security to apply.</span></span></param>
        <summary><span data-ttu-id="def2c-108"><see cref="T:System.Threading.Mutex" /> インスタンスを取得または作成します。これにより、ミューテックスの作成時に必要に応じて <see cref="T:System.Security.AccessControl.MutexSecurity" /> を設定するように指定できます。</span><span class="sxs-lookup"><span data-stu-id="def2c-108">Gets or creates <see cref="T:System.Threading.Mutex" /> instance, allowing a <see cref="T:System.Security.AccessControl.MutexSecurity" /> to be optionally specified to set it during the mutex creation.</span></span></summary>
        <returns><span data-ttu-id="def2c-109">名前がある場合はシステム ミューテックスを、名前がない場合はローカル ミューテックスを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="def2c-109">An object that represents a system mutex, if named, or a local mutex, if nameless.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="def2c-110">.NET Framework のみ: 名前の長さが上限を超えています。</span><span class="sxs-lookup"><span data-stu-id="def2c-110">.NET Framework only: The length of the name exceeds the maximum limit.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="def2c-111">システム全体の '<paramref name="name" />' が指定されたミューテックス ハンドルを作成できません。</span><span class="sxs-lookup"><span data-stu-id="def2c-111">A mutex handle with system-wide <paramref name="name" /> cannot be created.</span></span> <span data-ttu-id="def2c-112">別の型のミューテックス ハンドルに同じ名前が指定されている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="def2c-112">A mutex handle of a different type might have the same name.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
