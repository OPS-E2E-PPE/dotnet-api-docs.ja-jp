<Type Name="EventWaitHandleAcl" FullName="System.Threading.EventWaitHandleAcl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51dd14fe37bb95ed938e040d29d3f82142f8db70" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82505859" /></Metadata><TypeSignature Language="C#" Value="public static class EventWaitHandleAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventWaitHandleAcl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.EventWaitHandleAcl" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWaitHandleAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAcl abstract sealed" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAcl = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle Create (bool initialState, System.Threading.EventResetMode mode, string name, out bool createdNew, System.Security.AccessControl.EventWaitHandleSecurity eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle Create(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandleAcl.Create(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean, eventSecurity As EventWaitHandleSecurity) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ Create(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberSignature Language="F#" Value="static member Create : bool * System.Threading.EventResetMode * string * bool * System.Security.AccessControl.EventWaitHandleSecurity -&gt; System.Threading.EventWaitHandle" Usage="System.Threading.EventWaitHandleAcl.Create (initialState, mode, name, createdNew, eventSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" />
      </Parameters>
      <Docs>
        <param name="initialState">名前の付いたイベントがこの呼び出しの結果として作成された場合に、初期状態をシグナル状態に設定するには <see langword="true" />、非シグナル状態に設定するには <see langword="false" />。</param>
        <param name="mode">イベントが自動的にまたは手動でリセットされるかを指定する列挙値の 1 つ。</param>
        <param name="name">イベントが他のプロセスと共有される場合は、名前。それ以外の場合は、<see langword="null" /> または空の文字列。</param>
        <param name="createdNew">ローカル イベントが作成された場合、つまり <paramref name="name" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> の場合、このメソッドから戻るときにこの引数は常に <see langword="true" /> に設定されます。 <paramref name="name" /> に有効な空でない値が含まれている場合、システム イベントが作成されるときにこの引数は <see langword="true" /> に設定されます。または、既存のシステム イベントがその名前で見つかった場合は <see langword="false" /> に設定されます。</param>
        <param name="eventSecurity">適用する省略可能な Windows アクセス制御セキュリティ。</param>
        <summary><see cref="T:System.Threading.EventWaitHandle" /> インスタンスを取得または作成します。これにより、イベントの作成時に必要に応じて <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> インスタンスを設定するように指定できます。</summary>
        <returns>要求されたイベント待機ハンドルを表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`name` が渡され、システムイベントが既に存在する場合、既存のイベントが返されます。 `name` が `null` または <xref:System.String.Empty>の場合は、新しいプロセスローカルイベントが作成されます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">.NET Framework のみ: <paramref name="name" /> の長さが MAX_PATH (260 文字) を超えています。

- または -

.NET Framework のみ: <paramref name="mode" /> 列挙値が適正範囲外でした。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> 列挙値が適正範囲外でした。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="name" /> に指定されたパスの一部が見つかりませんでした。</exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">指定された <paramref name="name" /> のシステム全体の同期イベントが見つかりませんでした。
または、システム全体の名前 <paramref name="name" /> が指定された <see cref="T:System.Threading.EventWaitHandle" /> を作成できません。 別の型の <see cref="T:System.Threading.EventWaitHandle" /> に同じ名前が指定されている可能性があります。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
