<Type Name="ThreadState" FullName="System.Threading.ThreadState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b844b4e3868373c949f90ba1817ae5bf1d308a1d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82289321" /></Metadata><TypeSignature Language="C#" Value="public enum ThreadState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadState extends System.Enum" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadState" />
  <TypeSignature Language="VB.NET" Value="Public Enum ThreadState" />
  <TypeSignature Language="C++ CLI" Value="public enum class ThreadState" />
  <TypeSignature Language="F#" Value="type ThreadState = " />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ThreadState extends System.Enum" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="07bdd-101"><see cref="T:System.Threading.Thread" /> の実行状態を指定します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-101">Specifies the execution states of a <see cref="T:System.Threading.Thread" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  <span data-ttu-id="07bdd-102">`ThreadState` 列挙体は、スレッドに対して可能なすべての実行状態のセットを定義します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-102">The `ThreadState` enumeration defines a set of all possible execution states for threads.</span></span> <span data-ttu-id="07bdd-103">これは、いくつかのデバッグシナリオでのみ重要です。</span><span class="sxs-lookup"><span data-stu-id="07bdd-103">It's of interest only in a few debugging scenarios.</span></span> <span data-ttu-id="07bdd-104">スレッドの動作を同期するために、コードでスレッドの状態を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="07bdd-104">Your code should never use the thread state to synchronize the activities of threads.</span></span>  
  
  <span data-ttu-id="07bdd-105">スレッドが作成されると、スレッドは終了するまで、少なくとも1つの状態になります。</span><span class="sxs-lookup"><span data-stu-id="07bdd-105">Once a thread is created, it's in at least one of the states until it terminates.</span></span> <span data-ttu-id="07bdd-106">共通言語ランタイム内で作成されたスレッドは、初期状態では <xref:System.Threading.ThreadState.Unstarted> 状態になりますが、外部またはアンマネージスレッドは、ランタイムに入るスレッドは既に <xref:System.Threading.ThreadState.Running> 状態にあります。</span><span class="sxs-lookup"><span data-stu-id="07bdd-106">Threads created within the common language runtime are initially in the <xref:System.Threading.ThreadState.Unstarted> state, while external, or unmanaged, threads that come into the runtime are already in the <xref:System.Threading.ThreadState.Running> state.</span></span> <span data-ttu-id="07bdd-107">スレッドは <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>を呼び出すことによって、<xref:System.Threading.ThreadState.Unstarted> 状態から <xref:System.Threading.ThreadState.Running> 状態に遷移します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-107">A thread is transitioned from the <xref:System.Threading.ThreadState.Unstarted> state into the <xref:System.Threading.ThreadState.Running> state by calling <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="07bdd-108">スレッドは、 <xref:System.Threading.ThreadState.Unstarted> への呼び出しの結果として <xref:System.Threading.Thread.Start%2A>状態から出ると、 <xref:System.Threading.ThreadState.Unstarted> 状態に戻ることはできません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-108">Once a thread leaves the <xref:System.Threading.ThreadState.Unstarted> state as the result of a call to <xref:System.Threading.Thread.Start%2A>, it can never return to the <xref:System.Threading.ThreadState.Unstarted> state.</span></span>  

  <span data-ttu-id="07bdd-109">スレッドは、特定の時点で複数の状態になることがあります。</span><span class="sxs-lookup"><span data-stu-id="07bdd-109">A thread can be in more than one state at a given time.</span></span> <span data-ttu-id="07bdd-110">たとえば、<xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType>への呼び出しでスレッドがブロックされ、別のスレッドがブロックされたスレッドで <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType> を呼び出すと、ブロックされたスレッドは同時に <xref:System.Threading.ThreadState.WaitSleepJoin> と <xref:System.Threading.ThreadState.AbortRequested> の両方の状態になります。</span><span class="sxs-lookup"><span data-stu-id="07bdd-110">For example, if a thread is blocked on a call to <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType>, and another thread calls <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType> on the blocked thread, the blocked thread will be in both the <xref:System.Threading.ThreadState.WaitSleepJoin> and <xref:System.Threading.ThreadState.AbortRequested> states at the same time.</span></span> <span data-ttu-id="07bdd-111">この場合、スレッドが <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType> への呼び出しから戻るか、中断されるとすぐに、中止を開始する <xref:System.Threading.ThreadAbortException> が返されます。</span><span class="sxs-lookup"><span data-stu-id="07bdd-111">In this case, as soon as the thread returns from the call to <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType> or is interrupted, it will receive the <xref:System.Threading.ThreadAbortException> to begin aborting.</span></span> <span data-ttu-id="07bdd-112">`ThreadState` 値のすべての組み合わせが有効であるとは限りません。たとえば、スレッドを <xref:System.Threading.ThreadState.Aborted> と <xref:System.Threading.ThreadState.Unstarted> の両方の状態にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-112">Not all combinations of `ThreadState` values are valid; for example, a thread cannot be in both the <xref:System.Threading.ThreadState.Aborted> and <xref:System.Threading.ThreadState.Unstarted> states.</span></span>  

  <span data-ttu-id="07bdd-113">また、スレッドは <xref:System.Threading.ThreadState.Stopped> 状態から出ることはできません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-113">A thread can never leave the <xref:System.Threading.ThreadState.Stopped> state.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="07bdd-114">スレッド状態の列挙体には、<xref:System.Threading.ThreadState?displayProperty=nameWithType> と <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>の2つがあります。</span><span class="sxs-lookup"><span data-stu-id="07bdd-114">There are two thread state enumerations: <xref:System.Threading.ThreadState?displayProperty=nameWithType> and <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07bdd-115">次の表に、状態の変更を引き起こすアクションを示します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-115">The following table shows the actions that cause a change of state.</span></span>  
  
|<span data-ttu-id="07bdd-116">操作</span><span class="sxs-lookup"><span data-stu-id="07bdd-116">Action</span></span>|<span data-ttu-id="07bdd-117">ThreadState</span><span class="sxs-lookup"><span data-stu-id="07bdd-117">ThreadState</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="07bdd-118">スレッドは、共通言語ランタイム内で作成されます。</span><span class="sxs-lookup"><span data-stu-id="07bdd-118">A thread is created within the common language runtime.</span></span>|<xref:System.Threading.ThreadState.Unstarted>|  
|<span data-ttu-id="07bdd-119">別のスレッドが新しいスレッドで <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> メソッドを呼び出すと、呼び出しはを返します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-119">Another thread calls the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method on the new thread, and the call returns.</span></span><br /><br /> <span data-ttu-id="07bdd-120"><xref:System.Threading.Thread.Start%2A> メソッドは、新しいスレッドが実行を開始するまでは戻りません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-120">The <xref:System.Threading.Thread.Start%2A> method does not return until the new thread has started running.</span></span> <span data-ttu-id="07bdd-121"><xref:System.Threading.Thread.Start%2A>の呼び出し中に、新しいスレッドがどの時点で実行を開始するかを知る方法はありません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-121">There is no way to know at what point the new thread will start running, during the call to <xref:System.Threading.Thread.Start%2A>.</span></span>|<xref:System.Threading.ThreadState.Running>|  
|<span data-ttu-id="07bdd-122">スレッドはを呼び出し <xref:System.Threading.Thread.Sleep%2A></span><span class="sxs-lookup"><span data-stu-id="07bdd-122">The thread calls <xref:System.Threading.Thread.Sleep%2A></span></span>|<xref:System.Threading.ThreadState.WaitSleepJoin>|  
|<span data-ttu-id="07bdd-123">スレッドが別のオブジェクトで <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType> を呼び出す。</span><span class="sxs-lookup"><span data-stu-id="07bdd-123">The thread calls <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType> on another object.</span></span>|<xref:System.Threading.ThreadState.WaitSleepJoin>|  
|<span data-ttu-id="07bdd-124">スレッドが別のスレッドで <xref:System.Threading.Thread.Join%2A> を呼び出す。</span><span class="sxs-lookup"><span data-stu-id="07bdd-124">The thread calls <xref:System.Threading.Thread.Join%2A> on another thread.</span></span>|<xref:System.Threading.ThreadState.WaitSleepJoin>|  
|<span data-ttu-id="07bdd-125">別のスレッドがを呼び出す <xref:System.Threading.Thread.Interrupt%2A></span><span class="sxs-lookup"><span data-stu-id="07bdd-125">Another thread calls <xref:System.Threading.Thread.Interrupt%2A></span></span>|<xref:System.Threading.ThreadState.Running>|  
|<span data-ttu-id="07bdd-126">別のスレッドがを呼び出す <xref:System.Threading.Thread.Suspend%2A></span><span class="sxs-lookup"><span data-stu-id="07bdd-126">Another thread calls <xref:System.Threading.Thread.Suspend%2A></span></span>|<xref:System.Threading.ThreadState.SuspendRequested>|  
|<span data-ttu-id="07bdd-127">スレッドが <xref:System.Threading.Thread.Suspend%2A> 要求に応答する。</span><span class="sxs-lookup"><span data-stu-id="07bdd-127">The thread responds to a <xref:System.Threading.Thread.Suspend%2A> request.</span></span>|<xref:System.Threading.ThreadState.Suspended>|  
|<span data-ttu-id="07bdd-128">別のスレッドがを呼び出す <xref:System.Threading.Thread.Resume%2A></span><span class="sxs-lookup"><span data-stu-id="07bdd-128">Another thread calls <xref:System.Threading.Thread.Resume%2A></span></span>|<xref:System.Threading.ThreadState.Running>|  
|<span data-ttu-id="07bdd-129">別のスレッドがを呼び出す <xref:System.Threading.Thread.Abort%2A></span><span class="sxs-lookup"><span data-stu-id="07bdd-129">Another thread calls <xref:System.Threading.Thread.Abort%2A></span></span>|<xref:System.Threading.ThreadState.AbortRequested>|  
|<span data-ttu-id="07bdd-130">スレッドが <xref:System.Threading.Thread.Abort%2A> 要求に応答します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-130">The thread responds to an <xref:System.Threading.Thread.Abort%2A> request.</span></span>|<xref:System.Threading.ThreadState.Stopped>|  
|<span data-ttu-id="07bdd-131">スレッドが終了しました。</span><span class="sxs-lookup"><span data-stu-id="07bdd-131">A thread is terminated.</span></span>|<xref:System.Threading.ThreadState.Stopped>|  
  
 <span data-ttu-id="07bdd-132">上記の状態に加えて、スレッドがバックグラウンドとフォアグラウンドのどちらで実行されているかを示す <xref:System.Threading.ThreadState.Background> 状態もあります。</span><span class="sxs-lookup"><span data-stu-id="07bdd-132">In addition to the states noted above, there is also the <xref:System.Threading.ThreadState.Background> state, which indicates whether the thread is running in the background or foreground.</span></span> <span data-ttu-id="07bdd-133">詳細については、「[フォアグラウンド スレッドとバックグラウンド スレッド](~/docs/standard/threading/foreground-and-background-threads.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="07bdd-133">For more information, see [Foreground and Background Threads](~/docs/standard/threading/foreground-and-background-threads.md).</span></span>  
   
 <span data-ttu-id="07bdd-134">スレッドの <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> プロパティは、スレッドの現在の状態を提供します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-134">The <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> property of a thread provides the current state of a thread.</span></span> <span data-ttu-id="07bdd-135">アプリケーションは、スレッドが実行されているかどうかを判断するためにビットマスクを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="07bdd-135">Applications must use a bit mask to determine whether a thread is running.</span></span> <span data-ttu-id="07bdd-136"><xref:System.Threading.ThreadState.Running> の値がゼロ (0) であるため、スレッドが次のコードで実行されているかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="07bdd-136">Since the value for <xref:System.Threading.ThreadState.Running> is zero (0), test whether a thread is running by the following code:</span></span>

```csharp
(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0
```

```vb
(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0
```
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
  </Docs>
  <Members>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="Aborted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Aborted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Aborted" />
      <MemberSignature Language="VB.NET" Value="Aborted" />
      <MemberSignature Language="C++ CLI" Value="Aborted" />
      <MemberSignature Language="F#" Value="Aborted = 256" Usage="System.Threading.ThreadState.Aborted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-137">スレッド状態に <see cref="F:System.Threading.ThreadState.AbortRequested" /> が含まれ、そのスレッドは停止していますが、状態はまだ <see cref="F:System.Threading.ThreadState.Stopped" /> に変わっていません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-137">The thread state includes <see cref="F:System.Threading.ThreadState.AbortRequested" /> and the thread is now dead, but its state has not yet changed to <see cref="F:System.Threading.ThreadState.Stopped" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AbortRequested">
      <MemberSignature Language="C#" Value="AbortRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState AbortRequested = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.AbortRequested" />
      <MemberSignature Language="VB.NET" Value="AbortRequested" />
      <MemberSignature Language="C++ CLI" Value="AbortRequested" />
      <MemberSignature Language="F#" Value="AbortRequested = 128" Usage="System.Threading.ThreadState.AbortRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-138">スレッド上で <see cref="M:System.Threading.Thread.Abort(System.Object)" /> メソッドを呼び出しますが、そのスレッドの終了を試みる保留中の <see cref="T:System.Threading.ThreadAbortException" /> をスレッドが受け取っていません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-138">The <see cref="M:System.Threading.Thread.Abort(System.Object)" /> method has been invoked on the thread, but the thread has not yet received the pending <see cref="T:System.Threading.ThreadAbortException" /> that will attempt to terminate it.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="Background" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Background = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Background" />
      <MemberSignature Language="VB.NET" Value="Background" />
      <MemberSignature Language="C++ CLI" Value="Background" />
      <MemberSignature Language="F#" Value="Background = 4" Usage="System.Threading.ThreadState.Background" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-139">スレッドは、フォアグラウンド スレッドではなく、バックグランド スレッドとして実行します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-139">The thread is being executed as a background thread, as opposed to a foreground thread.</span></span> <span data-ttu-id="07bdd-140">この状態は、<see cref="P:System.Threading.Thread.IsBackground" /> プロパティを設定して制御されます。</span><span class="sxs-lookup"><span data-stu-id="07bdd-140">This state is controlled by setting the <see cref="P:System.Threading.Thread.IsBackground" /> property.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="Running" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Running = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Running" />
      <MemberSignature Language="VB.NET" Value="Running" />
      <MemberSignature Language="C++ CLI" Value="Running" />
      <MemberSignature Language="F#" Value="Running = 0" Usage="System.Threading.ThreadState.Running" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-141">スレッドは開始されており、まだ停止していません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-141">The thread has been started and not yet stopped.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="Stopped" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Stopped = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Stopped" />
      <MemberSignature Language="VB.NET" Value="Stopped" />
      <MemberSignature Language="C++ CLI" Value="Stopped" />
      <MemberSignature Language="F#" Value="Stopped = 16" Usage="System.Threading.ThreadState.Stopped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-142">スレッドを停止します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-142">The thread has stopped.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StopRequested">
      <MemberSignature Language="C#" Value="StopRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState StopRequested = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.StopRequested" />
      <MemberSignature Language="VB.NET" Value="StopRequested" />
      <MemberSignature Language="C++ CLI" Value="StopRequested" />
      <MemberSignature Language="F#" Value="StopRequested = 1" Usage="System.Threading.ThreadState.StopRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-143">スレッドの停止を要求します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-143">The thread is being requested to stop.</span></span> <span data-ttu-id="07bdd-144">これは、内部でだけ使用します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-144">This is for internal use only.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Suspended">
      <MemberSignature Language="C#" Value="Suspended" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Suspended = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Suspended" />
      <MemberSignature Language="VB.NET" Value="Suspended" />
      <MemberSignature Language="C++ CLI" Value="Suspended" />
      <MemberSignature Language="F#" Value="Suspended = 64" Usage="System.Threading.ThreadState.Suspended" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-145">スレッドは中断しています。</span><span class="sxs-lookup"><span data-stu-id="07bdd-145">The thread has been suspended.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SuspendRequested">
      <MemberSignature Language="C#" Value="SuspendRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState SuspendRequested = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.SuspendRequested" />
      <MemberSignature Language="VB.NET" Value="SuspendRequested" />
      <MemberSignature Language="C++ CLI" Value="SuspendRequested" />
      <MemberSignature Language="F#" Value="SuspendRequested = 2" Usage="System.Threading.ThreadState.SuspendRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-146">スレッドの中断を要求します。</span><span class="sxs-lookup"><span data-stu-id="07bdd-146">The thread is being requested to suspend.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unstarted">
      <MemberSignature Language="C#" Value="Unstarted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Unstarted = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Unstarted" />
      <MemberSignature Language="VB.NET" Value="Unstarted" />
      <MemberSignature Language="C++ CLI" Value="Unstarted" />
      <MemberSignature Language="F#" Value="Unstarted = 8" Usage="System.Threading.ThreadState.Unstarted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-147">スレッド上に <see cref="M:System.Threading.Thread.Start" /> メソッドを呼び出しません。</span><span class="sxs-lookup"><span data-stu-id="07bdd-147">The <see cref="M:System.Threading.Thread.Start" /> method has not been invoked on the thread.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WaitSleepJoin">
      <MemberSignature Language="C#" Value="WaitSleepJoin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState WaitSleepJoin = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.WaitSleepJoin" />
      <MemberSignature Language="VB.NET" Value="WaitSleepJoin" />
      <MemberSignature Language="C++ CLI" Value="WaitSleepJoin" />
      <MemberSignature Language="F#" Value="WaitSleepJoin = 32" Usage="System.Threading.ThreadState.WaitSleepJoin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="07bdd-148">スレッドがブロックされています。</span><span class="sxs-lookup"><span data-stu-id="07bdd-148">The thread is blocked.</span></span> <span data-ttu-id="07bdd-149">これは、<see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> または <see cref="M:System.Threading.Thread.Join" /> の呼び出し、ロックの要求 (たとえば、<see cref="M:System.Threading.Monitor.Enter(System.Object)" /> や <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> の呼び出しによる)、または <see cref="T:System.Threading.ManualResetEvent" /> などのスレッド同期オブジェクトの待機の結果である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="07bdd-149">This could be the result of calling <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> or <see cref="M:System.Threading.Thread.Join" />, of requesting a lock - for example, by calling <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> or <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> - or of waiting on a thread synchronization object such as <see cref="T:System.Threading.ManualResetEvent" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
