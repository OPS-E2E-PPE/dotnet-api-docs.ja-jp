<Type Name="Overlapped" FullName="System.Threading.Overlapped">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57ba6cd499435327e2f08edcb2206a02335b8f16" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82491965" /></Metadata><TypeSignature Language="C#" Value="public class Overlapped" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Overlapped extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Overlapped" />
  <TypeSignature Language="VB.NET" Value="Public Class Overlapped" />
  <TypeSignature Language="C++ CLI" Value="public ref class Overlapped" />
  <TypeSignature Language="F#" Value="type Overlapped = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Overlapped</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="47d21-101"><see cref="T:System.Threading.Overlapped" /> インスタンスから <see cref="T:System.Threading.NativeOverlapped" /> 構造体に情報を転送するメソッドを含む、Win32 <c>OVERLAPPED</c> 構造体のマネージド表現を提供します。</span><span class="sxs-lookup"><span data-stu-id="47d21-101">Provides a managed representation of a Win32 <c>OVERLAPPED</c> structure, including methods to transfer information from an <see cref="T:System.Threading.Overlapped" /> instance to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-102"><xref:System.Threading.Overlapped.Pack%2A> メソッドと <xref:System.Threading.Overlapped.UnsafePack%2A> メソッドは、<xref:System.Threading.Overlapped> オブジェクトから、非同期ファイル i/o の Windows API 関数に渡すことができる <xref:System.Threading.NativeOverlapped> 構造体に情報を転送します。</span><span class="sxs-lookup"><span data-stu-id="47d21-102">The <xref:System.Threading.Overlapped.Pack%2A> and <xref:System.Threading.Overlapped.UnsafePack%2A> methods transfer information from an <xref:System.Threading.Overlapped> object to a <xref:System.Threading.NativeOverlapped> structure that can be passed to Windows API functions for asynchronous file I/O.</span></span> <span data-ttu-id="47d21-103"><xref:System.Threading.Overlapped.Unpack%2A> メソッドは、<xref:System.Threading.NativeOverlapped> 構造体から <xref:System.Threading.Overlapped> クラスのインスタンスに情報を転送します。</span><span class="sxs-lookup"><span data-stu-id="47d21-103">The <xref:System.Threading.Overlapped.Unpack%2A> method transfers information from a <xref:System.Threading.NativeOverlapped> structure to an instance of the <xref:System.Threading.Overlapped> class.</span></span>  
  
 <span data-ttu-id="47d21-104"><xref:System.Threading.Overlapped> オブジェクトのプロパティへの変更は、関連付けられた <xref:System.Threading.NativeOverlapped> 構造に影響します。また、その逆も同様です。</span><span class="sxs-lookup"><span data-stu-id="47d21-104">Changes to the properties of an <xref:System.Threading.Overlapped> object affect its associated <xref:System.Threading.NativeOverlapped> structure, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47d21-105"><see cref="T:System.Threading.Overlapped" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="47d21-105">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47d21-106"><see cref="T:System.Threading.Overlapped" /> クラスの新しい空のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="47d21-106">Initializes a new, empty instance of the <see cref="T:System.Threading.Overlapped" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 offsetLo, int32 offsetHi, int32 hEvent, class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (offsetLo As Integer, offsetHi As Integer, hEvent As Integer, ar As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped(int offsetLo, int offsetHi, int hEvent, IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="new System.Threading.Overlapped : int * int * int * IAsyncResult -&gt; System.Threading.Overlapped" Usage="new System.Threading.Overlapped (offsetLo, offsetHi, hEvent, ar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Not 64bit compatible.  Please use the constructor that takes IntPtr for the event handle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("This constructor is not 64-bit compatible.  Use the constructor that takes an IntPtr for the event handle.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This constructor is not 64-bit compatible.  Use the constructor that takes an IntPtr for the event handle.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("This constructor is not 64-bit compatible.  Use the constructor that takes an IntPtr for the event handle.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="offsetLo" Type="System.Int32" />
        <Parameter Name="offsetHi" Type="System.Int32" />
        <Parameter Name="hEvent" Type="System.Int32" />
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="offsetLo"><span data-ttu-id="47d21-107">転送を開始するファイル位置の下位ワード。</span><span class="sxs-lookup"><span data-stu-id="47d21-107">The low word of the file position at which to start the transfer.</span></span></param>
        <param name="offsetHi"><span data-ttu-id="47d21-108">転送を開始するファイル位置の上位ワード。</span><span class="sxs-lookup"><span data-stu-id="47d21-108">The high word of the file position at which to start the transfer.</span></span></param>
        <param name="hEvent"><span data-ttu-id="47d21-109">I/O 操作が完了したときに通知されるイベントのハンドル。</span><span class="sxs-lookup"><span data-stu-id="47d21-109">The handle to an event that is signaled when the I/O operation is complete.</span></span></param>
        <param name="ar"><span data-ttu-id="47d21-110"><see cref="T:System.IAsyncResult" /> インターフェイスを実装し、I/O 操作に関するステータス情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47d21-110">An object that implements the <see cref="T:System.IAsyncResult" /> interface and provides status information on the I/O operation.</span></span></param>
        <summary><span data-ttu-id="47d21-111">ファイル位置、I/O 操作が完了したときに通知されるイベントの 32 ビット整数ハンドル、および操作結果を返すためのインターフェイスを指定して、<see cref="T:System.Threading.Overlapped" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="47d21-111">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-112"><xref:System.Threading.WaitHandle> クラスから派生したマネージ同期イベントのハンドルを取得するには、<xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="47d21-112">Use the <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> property to get the handle of any managed synchronization event that derives from the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 <span data-ttu-id="47d21-113"><xref:System.IAsyncResult> の実装により、i/o 操作に関する状態情報が提供されます。</span><span class="sxs-lookup"><span data-stu-id="47d21-113">Your implementation of <xref:System.IAsyncResult> provides status information on the I/O operation.</span></span> <span data-ttu-id="47d21-114">`ar` パラメーターのコンストラクターに渡し、後で <xref:System.Threading.Overlapped.AsyncResult%2A> プロパティを使用して取得します。</span><span class="sxs-lookup"><span data-stu-id="47d21-114">Pass it to the constructor in the `ar` parameter, and retrieve it later with the <xref:System.Threading.Overlapped.AsyncResult%2A> property.</span></span> <span data-ttu-id="47d21-115"><xref:System.Threading.Overlapped.Pack%2A> または <xref:System.Threading.Overlapped.UnsafePack%2A> メソッドにコールバックメソッドが指定されている場合、コールバックは、受け取った <xref:System.Threading.NativeOverlapped> 構造をアンパックして <xref:System.IAsyncResult> を取得できます。</span><span class="sxs-lookup"><span data-stu-id="47d21-115">If a callback method is specified for the <xref:System.Threading.Overlapped.Pack%2A> or <xref:System.Threading.Overlapped.UnsafePack%2A> method, the callback can retrieve your <xref:System.IAsyncResult> by unpacking the <xref:System.Threading.NativeOverlapped> structure it receives.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 offsetLo, int32 offsetHi, native int hEvent, class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (offsetLo As Integer, offsetHi As Integer, hEvent As IntPtr, ar As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped(int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="new System.Threading.Overlapped : int * int * nativeint * IAsyncResult -&gt; System.Threading.Overlapped" Usage="new System.Threading.Overlapped (offsetLo, offsetHi, hEvent, ar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="offsetLo" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offsetHi" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hEvent" Type="System.IntPtr" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ar" Type="System.IAsyncResult" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="offsetLo"><span data-ttu-id="47d21-116">転送を開始するファイル位置の下位ワード。</span><span class="sxs-lookup"><span data-stu-id="47d21-116">The low word of the file position at which to start the transfer.</span></span></param>
        <param name="offsetHi"><span data-ttu-id="47d21-117">転送を開始するファイル位置の上位ワード。</span><span class="sxs-lookup"><span data-stu-id="47d21-117">The high word of the file position at which to start the transfer.</span></span></param>
        <param name="hEvent"><span data-ttu-id="47d21-118">I/O 操作が完了したときに通知されるイベントのハンドル。</span><span class="sxs-lookup"><span data-stu-id="47d21-118">The handle to an event that is signaled when the I/O operation is complete.</span></span></param>
        <param name="ar"><span data-ttu-id="47d21-119"><see cref="T:System.IAsyncResult" /> インターフェイスを実装し、I/O 操作に関するステータス情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47d21-119">An object that implements the <see cref="T:System.IAsyncResult" /> interface and provides status information on the I/O operation.</span></span></param>
        <summary><span data-ttu-id="47d21-120">ファイル位置、I/O 操作が完了したときに通知されるイベントのハンドル、および操作結果を返すためのインターフェイスを指定して、<see cref="T:System.Threading.Overlapped" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="47d21-120">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-121"><xref:System.Threading.WaitHandle> クラスから派生したマネージ同期オブジェクトのハンドルを取得するには、<xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> プロパティを使用して <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> オブジェクトを取得し、<xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="47d21-121">To get the handle of a managed synchronization object that derives from the <xref:System.Threading.WaitHandle> class, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> property to get a <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object, and then call the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> method.</span></span>  
  
 <span data-ttu-id="47d21-122"><xref:System.IAsyncResult> の実装により、i/o 操作に関する状態情報が提供されます。</span><span class="sxs-lookup"><span data-stu-id="47d21-122">Your implementation of <xref:System.IAsyncResult> provides status information on the I/O operation.</span></span> <span data-ttu-id="47d21-123">`ar` パラメーターのコンストラクターに渡し、後で <xref:System.Threading.Overlapped.AsyncResult%2A> プロパティを使用して取得します。</span><span class="sxs-lookup"><span data-stu-id="47d21-123">Pass it to the constructor in the `ar` parameter, and retrieve it later with the <xref:System.Threading.Overlapped.AsyncResult%2A> property.</span></span> <span data-ttu-id="47d21-124"><xref:System.Threading.Overlapped.Pack%2A> または <xref:System.Threading.Overlapped.UnsafePack%2A> メソッドにコールバックメソッドが指定されている場合、コールバックは、受け取った <xref:System.Threading.NativeOverlapped> 構造をアンパックして <xref:System.IAsyncResult> を取得できます。</span><span class="sxs-lookup"><span data-stu-id="47d21-124">If a callback method is specified for the <xref:System.Threading.Overlapped.Pack%2A> or <xref:System.Threading.Overlapped.UnsafePack%2A> method, the callback can retrieve your <xref:System.IAsyncResult> by unpacking the <xref:System.Threading.NativeOverlapped> structure it receives.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Threading.Overlapped.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47d21-125">I/O 操作に関するステータス情報を提供するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47d21-125">Gets or sets the object that provides status information on the I/O operation.</span></span></summary>
        <value><span data-ttu-id="47d21-126"><see cref="T:System.IAsyncResult" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47d21-126">An object that implements the <see cref="T:System.IAsyncResult" /> interface.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandle">
      <MemberSignature Language="C#" Value="public int EventHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.EventHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property EventHandle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EventHandle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EventHandle : int with get, set" Usage="System.Threading.Overlapped.EventHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Not 64bit compatible.  Use EventHandleIntPtr instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("This property is not 64-bit compatible.  Use EventHandleIntPtr instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This property is not 64-bit compatible.  Use EventHandleIntPtr instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("This property is not 64-bit compatible.  Use EventHandleIntPtr instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47d21-127">I/O 操作が完了したときに通知される同期イベントの 32 ビット整数ハンドルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47d21-127">Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.</span></span></summary>
        <value><span data-ttu-id="47d21-128">同期イベントのハンドルを表す <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="47d21-128">An <see cref="T:System.Int32" /> value representing the handle of the synchronization event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-129">このプロパティは、64ビットのプラットフォームでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="47d21-129">This property cannot be used on 64-bit platforms.</span></span> <span data-ttu-id="47d21-130">代わりに、<xref:System.Threading.Overlapped.EventHandleIntPtr%2A> プロパティを使用してください。</span><span class="sxs-lookup"><span data-stu-id="47d21-130">Use the <xref:System.Threading.Overlapped.EventHandleIntPtr%2A> property instead.</span></span>  
  
 <span data-ttu-id="47d21-131"><xref:System.Threading.WaitHandle> クラスから派生したマネージ同期イベントのハンドルを取得するには、<xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="47d21-131">Use the <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> property to get the handle of any managed synchronization event that derives from the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandleIntPtr">
      <MemberSignature Language="C#" Value="public IntPtr EventHandleIntPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int EventHandleIntPtr" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.EventHandleIntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property EventHandleIntPtr As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr EventHandleIntPtr { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.EventHandleIntPtr : nativeint with get, set" Usage="System.Threading.Overlapped.EventHandleIntPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47d21-132">I/O 操作が完了したときに通知される同期イベントのハンドルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47d21-132">Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.</span></span></summary>
        <value><span data-ttu-id="47d21-133">イベントのハンドルを表す <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="47d21-133">An <see cref="T:System.IntPtr" /> representing the handle of the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-134"><xref:System.Threading.WaitHandle> クラスから派生したマネージ同期オブジェクトのハンドルを取得するには、<xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> プロパティを使用して <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> オブジェクトを取得し、<xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="47d21-134">To get the handle of a managed synchronization object that derives from the <xref:System.Threading.WaitHandle> class, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> property to get a <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object, and then call the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Free(valuetype System.Threading.NativeOverlapped* nativeOverlappedPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Free(System::Threading::NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="F#" Value="static member Free : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; unit" Usage="System.Threading.Overlapped.Free nativeOverlappedPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeOverlappedPtr" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="nativeOverlappedPtr"><span data-ttu-id="47d21-135">解放する <see cref="T:System.Threading.NativeOverlapped" /> 構造体を指すポインター。</span><span class="sxs-lookup"><span data-stu-id="47d21-135">A pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure to be freed.</span></span></param>
        <summary><span data-ttu-id="47d21-136"><see cref="Overload:System.Threading.Overlapped.Pack" /> メソッドによって割り当てられたネイティブなオーバーラップ構造体に関連付けられているアンマネージ メモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="47d21-136">Frees the unmanaged memory associated with a native overlapped structure allocated by the <see cref="Overload:System.Threading.Overlapped.Pack" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-137"><xref:System.Threading.Overlapped.Pack%2A> メソッドから受け取るすべての <xref:System.Threading.NativeOverlapped> ポインターで、<xref:System.Threading.Overlapped.Free%2A> メソッドを1回だけ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="47d21-137">You must call the <xref:System.Threading.Overlapped.Free%2A> method exactly once on every <xref:System.Threading.NativeOverlapped> pointer you receive from the <xref:System.Threading.Overlapped.Pack%2A> method.</span></span> <span data-ttu-id="47d21-138"><xref:System.Threading.Overlapped.Free%2A> メソッドを呼び出さないと、メモリがリークします。</span><span class="sxs-lookup"><span data-stu-id="47d21-138">If you don't call the <xref:System.Threading.Overlapped.Free%2A> method, you will leak memory.</span></span> <span data-ttu-id="47d21-139"><xref:System.Threading.Overlapped.Free%2A> メソッドを複数回呼び出すと、メモリが破損します。</span><span class="sxs-lookup"><span data-stu-id="47d21-139">If you call the <xref:System.Threading.Overlapped.Free%2A> method more than once, memory will be corrupted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47d21-140"><paramref name="nativeOverlappedPtr" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47d21-140"><paramref name="nativeOverlappedPtr" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OffsetHigh">
      <MemberSignature Language="C#" Value="public int OffsetHigh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffsetHigh" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.OffsetHigh" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetHigh As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OffsetHigh { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetHigh : int with get, set" Usage="System.Threading.Overlapped.OffsetHigh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47d21-141">転送を開始するファイル位置の上位ワードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47d21-141">Gets or sets the high-order word of the file position at which to start the transfer.</span></span> <span data-ttu-id="47d21-142">ファイル位置は、ファイルの開始位置からのバイト オフセットです。</span><span class="sxs-lookup"><span data-stu-id="47d21-142">The file position is a byte offset from the start of the file.</span></span></summary>
        <value><span data-ttu-id="47d21-143">ファイル位置の上位ワードを表す <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="47d21-143">An <see cref="T:System.Int32" /> value representing the high word of the file position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetLow">
      <MemberSignature Language="C#" Value="public int OffsetLow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffsetLow" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.OffsetLow" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetLow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OffsetLow { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetLow : int with get, set" Usage="System.Threading.Overlapped.OffsetLow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47d21-144">転送を開始するファイル位置の下位ワードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47d21-144">Gets or sets the low-order word of the file position at which to start the transfer.</span></span> <span data-ttu-id="47d21-145">ファイル位置は、ファイルの開始位置からのバイト オフセットです。</span><span class="sxs-lookup"><span data-stu-id="47d21-145">The file position is a byte offset from the start of the file.</span></span></summary>
        <value><span data-ttu-id="47d21-146">ファイル位置の下位ワードを表す <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="47d21-146">An <see cref="T:System.Int32" /> value representing the low word of the file position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Pack">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47d21-147">現在のインスタンスを <see cref="T:System.Threading.NativeOverlapped" /> 構造体にパックします。</span><span class="sxs-lookup"><span data-stu-id="47d21-147">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* Pack(class System.Threading.IOCompletionCallback iocb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* Pack(System::Threading::IOCompletionCallback ^ iocb);" />
      <MemberSignature Language="F#" Value="member this.Pack : System.Threading.IOCompletionCallback -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.Pack iocb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use Pack(iocb, userData) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("This method is not safe.  Use Pack (iocb, userData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This method is not safe.  Use Pack (iocb, userData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("This method is not safe.  Use Pack (iocb, userData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
      </Parameters>
      <Docs>
        <param name="iocb"><span data-ttu-id="47d21-148">非同期 I/O 操作が完了したときに呼び出すコールバック メソッドを表す <see cref="T:System.Threading.IOCompletionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="47d21-148">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span></span></param>
        <summary><span data-ttu-id="47d21-149">非同期 I/O 操作が完了したときに呼び出すデリゲートを指定して、現在のインスタンスを <see cref="T:System.Threading.NativeOverlapped" /> 構造体にパックします。</span><span class="sxs-lookup"><span data-stu-id="47d21-149">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.</span></span></summary>
        <returns><span data-ttu-id="47d21-150"><see cref="T:System.Threading.NativeOverlapped" /> 構造体へのアンマネージ ポインター。</span><span class="sxs-lookup"><span data-stu-id="47d21-150">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-151">このメソッドによって返されるアンマネージポインターは、重複 i/o 操作でオペレーティングシステムに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="47d21-151">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="47d21-152"><xref:System.Threading.NativeOverlapped> 構造は、<xref:System.Threading.Overlapped.Unpack%2A> が呼び出されるまで物理メモリで固定されます。</span><span class="sxs-lookup"><span data-stu-id="47d21-152">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="47d21-153">呼び出し元は、バッファーのピン留めします。</span><span class="sxs-lookup"><span data-stu-id="47d21-153">The caller is responsible for pinning the buffer.</span></span> <span data-ttu-id="47d21-154">ただし、アプリケーション ドメインがアンロードされた場合は、固定されたバッファーへのハンドルが破棄されて、バッファーが解放され、解放されたアドレスへ書き込むための I/O 操作が残ります。</span><span class="sxs-lookup"><span data-stu-id="47d21-154">If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address.</span></span> <span data-ttu-id="47d21-155">このため、ランタイムがバッファーをピン留めする <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>メソッド オーバーロードを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="47d21-155">For this reason, it is better to use the <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29> method overload, in which the runtime pins the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47d21-156">現在の <see cref="T:System.Threading.Overlapped" /> は既にパックされています。</span><span class="sxs-lookup"><span data-stu-id="47d21-156">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* Pack(class System.Threading.IOCompletionCallback iocb, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* Pack(System::Threading::IOCompletionCallback ^ iocb, System::Object ^ userData);" />
      <MemberSignature Language="F#" Value="member this.Pack : System.Threading.IOCompletionCallback * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.Pack (iocb, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iocb"><span data-ttu-id="47d21-157">非同期 I/O 操作が完了したときに呼び出すコールバック メソッドを表す <see cref="T:System.Threading.IOCompletionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="47d21-157">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span></span></param>
        <param name="userData"><span data-ttu-id="47d21-158">操作の入力バッファーまたは出力バッファーを表す、オブジェクトまたはオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="47d21-158">An object or array of objects representing the input or output buffer for the operation.</span></span> <span data-ttu-id="47d21-159">各オブジェクトが、バイトの配列などのバッファーを表します。</span><span class="sxs-lookup"><span data-stu-id="47d21-159">Each object represents a buffer, for example an array of bytes.</span></span></param>
        <summary><span data-ttu-id="47d21-160">非同期 I/O 操作が完了したときに呼び出すデリゲートと、バッファーとして機能するマネージド オブジェクトを指定して、現在のインスタンスを <see cref="T:System.Threading.NativeOverlapped" /> 構造体にパックします。</span><span class="sxs-lookup"><span data-stu-id="47d21-160">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.</span></span></summary>
        <returns><span data-ttu-id="47d21-161"><see cref="T:System.Threading.NativeOverlapped" /> 構造体へのアンマネージ ポインター。</span><span class="sxs-lookup"><span data-stu-id="47d21-161">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-162">このメソッドによって返されるアンマネージポインターは、重複 i/o 操作でオペレーティングシステムに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="47d21-162">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="47d21-163"><xref:System.Threading.NativeOverlapped> 構造は、<xref:System.Threading.Overlapped.Unpack%2A> が呼び出されるまで物理メモリで固定されます。</span><span class="sxs-lookup"><span data-stu-id="47d21-163">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="47d21-164">`userData` で指定するバッファーは、非同期 i/o を実行するアンマネージオペレーティングシステム関数に渡されたバッファーと同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="47d21-164">The buffer or buffers specified in `userData` must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47d21-165">ランタイムは、i/o 操作の間、`userData` で指定されたバッファーを固定します。</span><span class="sxs-lookup"><span data-stu-id="47d21-165">The runtime pins the buffer or buffers specified in `userData` for the duration of the I/O operation.</span></span> <span data-ttu-id="47d21-166">アプリケーションドメインがアンロードされると、ランタイムは i/o 操作が完了するまでメモリを固定したままにします。</span><span class="sxs-lookup"><span data-stu-id="47d21-166">If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47d21-167">現在の <see cref="T:System.Threading.Overlapped" /> は既にパックされています。</span><span class="sxs-lookup"><span data-stu-id="47d21-167">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unpack">
      <MemberSignature Language="C#" Value="public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Overlapped Unpack(valuetype System.Threading.NativeOverlapped* nativeOverlappedPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Overlapped ^ Unpack(System::Threading::NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="F#" Value="static member Unpack : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; System.Threading.Overlapped" Usage="System.Threading.Overlapped.Unpack nativeOverlappedPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Overlapped</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeOverlappedPtr" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="nativeOverlappedPtr"><span data-ttu-id="47d21-168"><see cref="T:System.Threading.NativeOverlapped" /> 構造体へのアンマネージ ポインター。</span><span class="sxs-lookup"><span data-stu-id="47d21-168">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></param>
        <summary><span data-ttu-id="47d21-169">指定したアンマネージド <see cref="T:System.Threading.NativeOverlapped" /> 構造体をマネージド <see cref="T:System.Threading.Overlapped" /> オブジェクトに展開します。</span><span class="sxs-lookup"><span data-stu-id="47d21-169">Unpacks the specified unmanaged <see cref="T:System.Threading.NativeOverlapped" /> structure into a managed <see cref="T:System.Threading.Overlapped" /> object.</span></span></summary>
        <returns><span data-ttu-id="47d21-170">ネイティブ構造体から展開された情報を含む <see cref="T:System.Threading.Overlapped" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47d21-170">An <see cref="T:System.Threading.Overlapped" /> object containing the information unpacked from the native structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-171"><xref:System.Threading.NativeOverlapped> 構造体は、<xref:System.Threading.Overlapped.Free%2A> メソッドを呼び出すまで物理メモリから解放されません。</span><span class="sxs-lookup"><span data-stu-id="47d21-171">The <xref:System.Threading.NativeOverlapped> structure is not freed from physical memory until you call the <xref:System.Threading.Overlapped.Free%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47d21-172"><paramref name="nativeOverlappedPtr" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47d21-172"><paramref name="nativeOverlappedPtr" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnsafePack">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47d21-173">現在のインスタンスを <see cref="T:System.Threading.NativeOverlapped" /> 構造体にパックします。</span><span class="sxs-lookup"><span data-stu-id="47d21-173">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span> <span data-ttu-id="47d21-174">コール スタックは反映しません。</span><span class="sxs-lookup"><span data-stu-id="47d21-174">Does not propagate the calling stack.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnsafePack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* UnsafePack(class System.Threading.IOCompletionCallback iocb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* UnsafePack(System::Threading::IOCompletionCallback ^ iocb);" />
      <MemberSignature Language="F#" Value="member this.UnsafePack : System.Threading.IOCompletionCallback -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.UnsafePack iocb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use UnsafePack(iocb, userData) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("This method is not safe.  Use UnsafePack (iocb, userData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This method is not safe.  Use UnsafePack (iocb, userData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("This method is not safe.  Use UnsafePack (iocb, userData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
      </Parameters>
      <Docs>
        <param name="iocb"><span data-ttu-id="47d21-175">非同期 I/O 操作が完了したときに呼び出すコールバック メソッドを表す <see cref="T:System.Threading.IOCompletionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="47d21-175">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span></span></param>
        <summary><span data-ttu-id="47d21-176">非同期 I/O 操作が完了したときに呼び出すデリゲートを指定して、現在のインスタンスを <see cref="T:System.Threading.NativeOverlapped" /> 構造体にパックします。</span><span class="sxs-lookup"><span data-stu-id="47d21-176">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure specifying the delegate to invoke when the asynchronous I/O operation is complete.</span></span> <span data-ttu-id="47d21-177">コール スタックは反映しません。</span><span class="sxs-lookup"><span data-stu-id="47d21-177">Does not propagate the calling stack.</span></span></summary>
        <returns><span data-ttu-id="47d21-178"><see cref="T:System.Threading.NativeOverlapped" /> 構造体へのアンマネージ ポインター。</span><span class="sxs-lookup"><span data-stu-id="47d21-178">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-179">このメソッドによって返されるアンマネージポインターは、重複 i/o 操作でオペレーティングシステムに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="47d21-179">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="47d21-180"><xref:System.Threading.NativeOverlapped> 構造は、<xref:System.Threading.Overlapped.Unpack%2A> が呼び出されるまで物理メモリで固定されます。</span><span class="sxs-lookup"><span data-stu-id="47d21-180">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="47d21-181">呼び出し元は、バッファーのピン留めします。</span><span class="sxs-lookup"><span data-stu-id="47d21-181">The caller is responsible for pinning the buffer.</span></span> <span data-ttu-id="47d21-182">ただし、アプリケーション ドメインがアンロードされた場合は、固定されたバッファーへのハンドルが破棄されて、バッファーが解放され、解放されたアドレスへ書き込むための I/O 操作が残ります。</span><span class="sxs-lookup"><span data-stu-id="47d21-182">If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address.</span></span> <span data-ttu-id="47d21-183">このため、ランタイムがバッファをピン留めする<xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>メソッド オーバー ロードを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="47d21-183">For this reason, it is better to use the <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29> method overload, in which the runtime pins the buffer.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="47d21-184"><xref:System.Threading.Overlapped.UnsafePack%2A> メソッドを使用すると、セキュリティホールが誤って表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="47d21-184">Using the <xref:System.Threading.Overlapped.UnsafePack%2A> method could inadvertently open up a security hole.</span></span> <span data-ttu-id="47d21-185">コードアクセスセキュリティは、スタック上のすべての呼び出し元のアクセス許可に基づいてアクセス許可をチェックします。</span><span class="sxs-lookup"><span data-stu-id="47d21-185">Code access security bases its permission checks on the permissions of all the callers on the stack.</span></span> <span data-ttu-id="47d21-186"><xref:System.Threading.Overlapped.UnsafePack%2A> メソッドは、呼び出し元のスタックを伝達しません。</span><span class="sxs-lookup"><span data-stu-id="47d21-186">The <xref:System.Threading.Overlapped.UnsafePack%2A> method does not propagate the calling stack.</span></span> <span data-ttu-id="47d21-187">悪意のあるコードがこれを悪用して、アクセス許可のチェックを回避できる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="47d21-187">Malicious code might be able to exploit this to avoid permission checks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47d21-188">現在の <see cref="T:System.Threading.Overlapped" /> は既にパックされています。</span><span class="sxs-lookup"><span data-stu-id="47d21-188">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnsafePack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* UnsafePack(class System.Threading.IOCompletionCallback iocb, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* UnsafePack(System::Threading::IOCompletionCallback ^ iocb, System::Object ^ userData);" />
      <MemberSignature Language="F#" Value="member this.UnsafePack : System.Threading.IOCompletionCallback * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.UnsafePack (iocb, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iocb"><span data-ttu-id="47d21-189">非同期 I/O 操作が完了したときに呼び出すコールバック メソッドを表す <see cref="T:System.Threading.IOCompletionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="47d21-189">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span></span></param>
        <param name="userData"><span data-ttu-id="47d21-190">操作の入力バッファーまたは出力バッファーを表す、オブジェクトまたはオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="47d21-190">An object or array of objects representing the input or output buffer for the operation.</span></span> <span data-ttu-id="47d21-191">各オブジェクトが、バイトの配列などのバッファーを表します。</span><span class="sxs-lookup"><span data-stu-id="47d21-191">Each object represents a buffer, for example an array of bytes.</span></span></param>
        <summary><span data-ttu-id="47d21-192">非同期 I/O 操作が完了したときに呼び出すデリゲートと、バッファーとして機能するマネージド オブジェクトを指定して、現在のインスタンスを <see cref="T:System.Threading.NativeOverlapped" /> 構造体にパックします。</span><span class="sxs-lookup"><span data-stu-id="47d21-192">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer.</span></span> <span data-ttu-id="47d21-193">コール スタックは反映しません。</span><span class="sxs-lookup"><span data-stu-id="47d21-193">Does not propagate the calling stack.</span></span></summary>
        <returns><span data-ttu-id="47d21-194"><see cref="T:System.Threading.NativeOverlapped" /> 構造体へのアンマネージ ポインター。</span><span class="sxs-lookup"><span data-stu-id="47d21-194">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d21-195">このメソッドによって返されるアンマネージポインターは、重複 i/o 操作でオペレーティングシステムに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="47d21-195">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="47d21-196"><xref:System.Threading.NativeOverlapped> 構造は、<xref:System.Threading.Overlapped.Unpack%2A> が呼び出されるまで物理メモリで固定されます。</span><span class="sxs-lookup"><span data-stu-id="47d21-196">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="47d21-197">`userData` で指定するバッファーは、非同期 i/o を実行するアンマネージオペレーティングシステム関数に渡されたバッファーと同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="47d21-197">The buffer or buffers specified in `userData` must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</span></span>  
  
 <span data-ttu-id="47d21-198">ランタイムは、i/o 操作の間、`userData` で指定されたバッファーを固定します。</span><span class="sxs-lookup"><span data-stu-id="47d21-198">The runtime pins the buffer or buffers specified in`userData` for the duration of the I/O operation.</span></span> <span data-ttu-id="47d21-199">アプリケーションドメインがアンロードされると、ランタイムは i/o 操作が完了するまでメモリを固定したままにします。</span><span class="sxs-lookup"><span data-stu-id="47d21-199">If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="47d21-200"><xref:System.Threading.Overlapped.UnsafePack%2A> メソッドを使用すると、セキュリティホールが誤って表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="47d21-200">Using the <xref:System.Threading.Overlapped.UnsafePack%2A> method could inadvertently open up a security hole.</span></span> <span data-ttu-id="47d21-201">コードアクセスセキュリティは、スタック上のすべての呼び出し元のアクセス許可に基づいてアクセス許可をチェックします。</span><span class="sxs-lookup"><span data-stu-id="47d21-201">Code access security bases its permission checks on the permissions of all the callers on the stack.</span></span> <span data-ttu-id="47d21-202"><xref:System.Threading.Overlapped.UnsafePack%2A> メソッドは、呼び出し元のスタックを伝達しません。</span><span class="sxs-lookup"><span data-stu-id="47d21-202">The <xref:System.Threading.Overlapped.UnsafePack%2A> method does not propagate the calling stack.</span></span> <span data-ttu-id="47d21-203">悪意のあるコードがこれを悪用して、アクセス許可のチェックを回避できる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="47d21-203">Malicious code might be able to exploit this to avoid permission checks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47d21-204">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="47d21-204">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47d21-205">現在の <see cref="T:System.Threading.Overlapped" /> は既にパックされています。</span><span class="sxs-lookup"><span data-stu-id="47d21-205">The current <see cref="T:System.Threading.Overlapped" /> is already packed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
