<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6fbe8cf7fb5f85c4f91f246d65bab1921115e191" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75142892" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f92ae-101"><see cref="T:System.Data.IDbDataAdapter" /> インターフェイスの実装を支援します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="f92ae-102"><see cref="T:System.Data.Common.DbDataAdapter" /> の継承クラスは、厳密な型指定を行う関数のセットを実装しますが、**DataAdapter** を完全に実装するために必要な機能の大部分は継承します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-103"><xref:System.Data.Common.DbDataAdapter> クラスは <xref:System.Data.Common.DataAdapter> クラスを継承し、<xref:System.Data.IDbDataAdapter> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="f92ae-104">クラスは、リレーショナルデータベースで使用するように設計された**DataAdapter**を実装するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="f92ae-105">アプリケーションは <xref:System.Data.Common.DbDataAdapter> クラスのインスタンスを直接作成しませんが、そのインスタンスを継承するクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="f92ae-106"><xref:System.Data.Common.DbDataAdapter> を継承するクラスは、継承されたメンバーを実装する必要があり、通常は、プロバイダー固有の機能を追加するための追加メンバーを定義します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="f92ae-107">たとえば、<xref:System.Data.Common.DbDataAdapter> クラスは <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティを定義し、<xref:System.Data.Common.DbDataAdapter> クラスは <xref:System.Data.IDataAdapter.Fill%2A> メソッドの8個のオーバーロードを定義します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="f92ae-108">次に、<xref:System.Data.OleDb.OleDbDataAdapter> クラスは <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを継承します。また、ADO レコードセットオブジェクトをパラメーターとして受け取る <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> の2つの追加のオーバーロードも定義します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-109"><see cref="T:System.Data.Common.DbDataAdapter" /> クラスから継承する場合は、次のコンストラクターを実装することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="f92ae-110">アイテム</span><span class="sxs-lookup"><span data-stu-id="f92ae-110">Item</span></span> 
 </term><description> <span data-ttu-id="f92ae-111">説明</span><span class="sxs-lookup"><span data-stu-id="f92ae-111">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f92ae-112">*場合*DataAdapter ()</span><span class="sxs-lookup"><span data-stu-id="f92ae-112">*Prv*DataAdapter()</span></span> 
 </term><description> <span data-ttu-id="f92ae-113">*場合*DataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-113">Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f92ae-114">*場合*DataAdapter (*場合*コマンド*selectCommand*)</span><span class="sxs-lookup"><span data-stu-id="f92ae-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span> 
 </term><description> <span data-ttu-id="f92ae-115">指定した SQL SELECT ステートメントを使用して、*場合*DataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-115">Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f92ae-116">*場合*DataAdapter (string *Selectcommandtext*、String *selectcommandtext*)</span><span class="sxs-lookup"><span data-stu-id="f92ae-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span> 
 </term><description> <span data-ttu-id="f92ae-117">SQL SELECT ステートメントと接続文字列を使用して、*場合*DataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-117">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f92ae-118">*場合*DataAdapter (string *Selectcommandtext*、*場合*Connection *selectcommandtext*)</span><span class="sxs-lookup"><span data-stu-id="f92ae-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span> 
 </term><description> <span data-ttu-id="f92ae-119">SQL SELECT ステートメントと*場合*Connection オブジェクトを使用して、*場合*DataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-119">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="f92ae-120">.NET Framework データプロバイダー間の一貫性を高めるには、*場合*DataAdapter の形式で継承クラスに名前を付けます。*場合*は、特定の .NET Framework データプロバイダーの名前空間のすべてのクラスに指定された均一なプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="f92ae-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="f92ae-121">たとえば、"Sql"**は、system.string 名前空間**の <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラスのプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="f92ae-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-122">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-122">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-123">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-123">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f92ae-124"><see langword="DataAdapter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-124">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-125">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-125">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f92ae-126">**DataAdapter** クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-126">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-127"><xref:System.Data.Common.DbDataAdapter>のインスタンスを作成すると、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-127">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="f92ae-128">プロパティ</span><span class="sxs-lookup"><span data-stu-id="f92ae-128">Properties</span></span>|<span data-ttu-id="f92ae-129">初期値</span><span class="sxs-lookup"><span data-stu-id="f92ae-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="f92ae-130">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="f92ae-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="f92ae-131">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="f92ae-131">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="f92ae-132">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="f92ae-132">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="f92ae-133">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="f92ae-133">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="f92ae-134">プロパティの別の呼び出しを使用して、これらのプロパティの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-134">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-135">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-135">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-136">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-136">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="f92ae-137">新しい <see langword="DataAdapter" /> の作成に使用する <see langword="DataAdapter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f92ae-137">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="f92ae-138">既存の同じ型のオブジェクトから、<see langword="DataAdapter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-138">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-139"><xref:System.Data.Common.DbDataAdapter> コンストラクターのこのオーバーロードは、複製実装で使用するために同様のコンストラクターを実装するときに、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-139">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-140">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-140">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-141">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-141">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="f92ae-142">バッチに追加する <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-142">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="f92ae-143"><see cref="T:System.Data.IDbCommand" /> を現在のバッチに追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-143">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="f92ae-144"><see cref="T:System.Data.IDbCommand" /> を追加する前のバッチ内のコマンド数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-144">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-145"><xref:System.Data.Common.DbDataAdapter>では、このメソッドは <xref:System.NotSupportedException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-145">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f92ae-146"><xref:System.Data.Common.DbDataAdapter> から継承するクラスは、このメソッドをオーバーライドしてバッチのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-146">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f92ae-147">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-147">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-148">このメソッドは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-148">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f92ae-149"><see cref="T:System.Data.Common.DbDataAdapter" /> から継承するクラスがバッチをサポートする場合、このクラスはこのメソッドをオーバーライドして、ユーザーがバッチにコマンドを追加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-149">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-150">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-150">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-151">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-151">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f92ae-152">バッチからすべての <see cref="T:System.Data.IDbCommand" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-152">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-153"><xref:System.Data.Common.DbDataAdapter>では、このメソッドは <xref:System.NotSupportedException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-153">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f92ae-154"><xref:System.Data.Common.DbDataAdapter> から継承するクラスは、このメソッドをオーバーライドしてバッチのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-154">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f92ae-155">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-155">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-156">このメソッドは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-156">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f92ae-157"><see cref="T:System.Data.Common.DbDataAdapter" /> から継承するクラスがバッチをサポートする場合、このクラスはこのメソッドをオーバーライドして、ユーザーがバッチからすべてのコマンドを削除できるようにします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-157">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-158">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-158">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-159">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-159">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="f92ae-160">データ ソースの更新に使用した <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-160">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="f92ae-161"><see cref="T:System.Data.IDbCommand" /> 処理中に実行した <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-161">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="f92ae-162">コマンドが UPDATE、INSERT、DELETE、または SELECT ステートメントのいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-162">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="f92ae-163"><see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f92ae-163">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="f92ae-164"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-164">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="f92ae-165"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="f92ae-165">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-166">派生クラスで <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-166">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-167">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-167">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="f92ae-168">データ ソースを更新する <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-168">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="f92ae-169"><see cref="T:System.Data.IDbCommand" /> 処理中に実行する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-169">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="f92ae-170">コマンドが UPDATE、INSERT、DELETE、または SELECT ステートメントのいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-170">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="f92ae-171"><see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f92ae-171">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="f92ae-172"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-172">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="f92ae-173"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="f92ae-173">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-174">派生クラスで <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-174">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-175">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-175">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-176">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-176">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-177"><see cref="T:System.Data.Common.DataAdapter" /> オブジェクトがテーブル マップに使用する既定の名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-177">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-178">"Table" は、テーブルマッピングの <xref:System.Data.Common.DataAdapter> オブジェクトによって使用される既定の名前です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-178">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="f92ae-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> は、アプリケーションが <xref:System.Data.Common.DbDataAdapter.Fill%2A>で使用されるテーブルマッピングを追加するときに、<xref:System.Data.DataTable> 名を指定しない場合です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-180">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-180">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-181">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-181">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-182">データ セットからレコードを削除するコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-182">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="f92ae-183"><see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-183">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-184"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合は、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A> が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-184">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-185">次の例では、派生クラス <xref:System.Data.OleDb.OleDbDataAdapter> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-185">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-186">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-186">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-187">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-187">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-188">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-188">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f92ae-189">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f92ae-190"><see cref="T:System.Data.Common.DbDataAdapter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-190">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-191">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-191">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-192">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-192">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f92ae-193">現在のバッチを実行します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-193">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="f92ae-194">バッチ内の直前のコマンドの戻り値。</span><span class="sxs-lookup"><span data-stu-id="f92ae-194">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-195"><xref:System.Data.Common.DbDataAdapter>では、このメソッドは <xref:System.NotSupportedException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-195">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f92ae-196"><xref:System.Data.Common.DbDataAdapter> から継承するクラスは、このメソッドをオーバーライドしてバッチのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-196">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-197">このメソッドは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-197">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f92ae-198"><see cref="T:System.Data.Common.DbDataAdapter" /> から継承するクラスがバッチをサポートする場合、このクラスは、ユーザーがバッチを実行できるようにこのメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-198">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="f92ae-199">このメソッドを実装すると、アダプターのコマンドがバッチに結合され、バッチが実行されて、バッチの戻り値が返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-199">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-200">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-200">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-201">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-201">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-202">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-202">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f92ae-203"><see cref="T:System.Data.DataSet" /> または <see cref="T:System.Data.DataTable" /> にデータを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-203">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-204">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-204">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-205">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-205">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="f92ae-206"><see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-206">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-207"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-207">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f92ae-208">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-208">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-209"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、SELECT ステートメントを使用してデータソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-209">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="f92ae-210">Select コマンドに関連付けられている <xref:System.Data.IDbConnection> オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-210">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-211"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に <xref:System.Data.IDbConnection> が閉じられている場合は、データを取得して閉じた後で、そのデータが開かれます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-211">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="f92ae-212"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-212">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-213">データテーブルの読み込み中にエラーまたは例外が発生した場合、エラーが発生する前に追加された行はデータテーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-213">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="f92ae-214">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-214">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="f92ae-215">コマンドが行を返さない場合、<xref:System.Data.DataSet>にテーブルは追加されず、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-215">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="f92ae-216"><xref:System.Data.Common.DbDataAdapter> オブジェクトが <xref:System.Data.DataTable>の入力中に重複する列を検出すると、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-216">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-217">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-217">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f92ae-218">指定されたクエリが複数の結果を返す場合、クエリを返す各行の結果セットは別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-218">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="f92ae-219">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-219">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f92ae-220">行を返さないクエリに対してテーブルが作成されていないため、insert クエリを処理してから select クエリを実行すると、select クエリに対して作成されたテーブルには、最初に作成されたテーブルであるため、"Table" という名前が付けられます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-220">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="f92ae-221">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-221">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-222"><xref:System.Data.DataSet> を設定するために使用される SELECT ステートメントが複数の結果 (バッチ SQL ステートメントなど) を返す場合、結果の1つにエラーが含まれていると、それ以降の結果はすべてスキップされ、<xref:System.Data.DataSet>には追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-222">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f92ae-223">後続の <xref:System.Data.Common.DbDataAdapter.Fill%2A> 呼び出しを使用して <xref:System.Data.DataSet>の内容を更新する場合は、次の2つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-223">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="f92ae-224">SQL ステートメントは、<xref:System.Data.DataSet>を設定するために最初に使用したものと一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-224">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="f92ae-225">**キー**列の情報が存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-225">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="f92ae-226">主キーの情報が存在する場合は、重複行が調整され、<xref:System.Data.DataSet>に対応する <xref:System.Data.DataTable> に1回だけ表示されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-226">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-227">主キーの情報は、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、<xref:System.Data.DataTable>の <xref:System.Data.DataTable.PrimaryKey%2A> プロパティを指定する、または <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> プロパティを `AddWithKey`に設定することによって設定できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-227">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f92ae-228">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-228">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-229">重複行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-229">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f92ae-230">詳細については、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-230">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-231">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-231">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-232">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-232">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-233">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-233">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-234">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-234">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f92ae-235">テーブル マップに使用する <see cref="T:System.Data.DataTable" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-235">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f92ae-236"><see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-236">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="f92ae-237"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-237">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f92ae-238">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-238">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、関連付けられた <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティによって指定された SELECT ステートメントを使用して、データソースから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f92ae-240">SELECT ステートメントに関連付けられている接続オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-240">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-241"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が閉じられた場合は、データを取得して閉じた状態で接続が開かれます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-241">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-242"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-242">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-243">次に、<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作は、<xref:System.Data.DataSet>内の変換先 <xref:System.Data.DataTable> オブジェクトに行を追加し、存在しない場合は <xref:System.Data.DataTable> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-243">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="f92ae-244"><xref:System.Data.DataTable> オブジェクトを作成する場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作では通常、列名のメタデータのみが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-244">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="f92ae-245">ただし、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A> プロパティが `AddWithKey`に設定されている場合は、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-245">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f92ae-246"><xref:System.Data.DataTable>を設定しているときに <xref:System.Data.Common.DbDataAdapter> が重複する列を検出した場合、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-246">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-247">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-247">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f92ae-248">複数の結果セットが <xref:System.Data.DataSet> に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-248">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="f92ae-249">パラメーターとして `DataTable` を受け取る <xref:System.Data.Common.DbDataAdapter.Fill%2A> のオーバーロードは、最初の結果のみを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-249">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="f92ae-250">複数の結果を取得するために、パラメーターとして `DataSet` を受け取る <xref:System.Data.Common.DbDataAdapter.Fill%2A> のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-250">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="f92ae-251"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、<xref:System.Data.DataSet> に大文字と小文字のみが異なる名前を持つ複数の <xref:System.Data.DataTable> オブジェクトが含まれているシナリオをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-251">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f92ae-252">このような場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> は、対応するテーブルを検索するために大文字と小文字を区別する比較を実行し、完全一致が存在しない場合は新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-252">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f92ae-253">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-253">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f92ae-254"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出され、<xref:System.Data.DataSet> の名前 <xref:System.Data.DataTable> が大文字と小文字のみで異なる場合は、その <xref:System.Data.DataTable> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-254">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f92ae-255">このシナリオでは、比較で大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-255">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f92ae-256">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-256">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f92ae-257">同じ <xref:System.Data.DataTable>で <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを複数回使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-257">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-258">主キーが存在する場合、受信した行は、既に存在する一致する行とマージされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-258">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f92ae-259">主キーが存在しない場合は、受信行が <xref:System.Data.DataTable>に追加されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-259">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-260">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-260">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-261">重複行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-261">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f92ae-262">詳細については、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-262">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-263">複数の結果を返すバッチ SQL ステートメントを処理する場合、.NET Framework データプロバイダーの <xref:System.Data.Common.DbDataAdapter.Fill%2A> と <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果についてのみスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-263">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-264">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-264">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-265"><see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> メソッドのこのオーバーロードは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-265">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-266">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-266">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-267">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-267">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-268">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-268">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f92ae-269">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-269">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f92ae-270"><see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の列と一致するように <see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-270">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="f92ae-271"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-271">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f92ae-272">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-272">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、SELECT ステートメントを使用してデータソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="f92ae-274">Select コマンドに関連付けられている <xref:System.Data.IDbConnection> オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-274">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-275"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に <xref:System.Data.IDbConnection> が閉じられている場合は、データを取得して閉じた後で閉じます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-275">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-276"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-276">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-277">コマンドが行を返さない場合、<xref:System.Data.DataSet>にテーブルは追加されず、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-277">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="f92ae-278"><xref:System.Data.Common.DbDataAdapter> オブジェクトが <xref:System.Data.DataTable>の設定中に重複する列を検出すると、"columnname1"、"columnname2"、"columnname3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-278">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="f92ae-279">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-279">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f92ae-280">指定したクエリで複数の結果が返された場合は、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-280">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-281">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-281">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f92ae-282">行を返さないクエリに対してテーブルが作成されていないため、挿入クエリを処理してから select クエリを実行すると、select クエリに対して作成されたテーブルには "Table" という名前が付けられます。これは最初に作成されたテーブルであるためです。</span><span class="sxs-lookup"><span data-stu-id="f92ae-282">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="f92ae-283">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-283">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-284"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、<xref:System.Data.DataSet> に大文字と小文字のみが異なる名前を持つ複数の <xref:System.Data.DataTable> オブジェクトが含まれているシナリオをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-284">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f92ae-285">このような場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> は、対応するテーブルを検索するために大文字と小文字を区別する比較を実行し、完全一致が存在しない場合は新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-285">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f92ae-286">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-286">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f92ae-287"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出され、<xref:System.Data.DataSet> の名前 <xref:System.Data.DataTable> が大文字と小文字のみで異なる場合は、その <xref:System.Data.DataTable> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-287">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f92ae-288">このシナリオでは、比較で大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-288">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f92ae-289">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-289">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f92ae-290">データテーブルの読み込み中にエラーまたは例外が発生した場合、エラーが発生する前に追加された行はデータテーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-290">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="f92ae-291">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-291">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="f92ae-292"><xref:System.Data.DataSet> を設定するために使用される SELECT ステートメントでバッチ SQL ステートメントなどの複数の結果が返される場合は、次の点に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-292">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="f92ae-293">結果の1つにエラーが含まれている場合、後続の結果はすべてスキップされ、<xref:System.Data.DataSet>には追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-293">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f92ae-294">後続の <xref:System.Data.Common.DbDataAdapter.Fill%2A> 呼び出しを使用して <xref:System.Data.DataSet>の内容を更新する場合は、次の2つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-294">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="f92ae-295">SQL ステートメントは、<xref:System.Data.DataSet>を設定するために最初に使用したものと一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-295">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="f92ae-296">**キー**列の情報が存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-296">The **Key** column information must be present.</span></span> <span data-ttu-id="f92ae-297">主キーの情報が存在する場合は、重複行が調整され、<xref:System.Data.DataSet>に対応する <xref:System.Data.DataTable> に1回だけ表示されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-297">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-298">主キーの情報は、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、<xref:System.Data.DataTable>の <xref:System.Data.DataTable.PrimaryKey%2A> プロパティを指定する、または <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> プロパティを `AddWithKey`に設定することによって設定できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-298">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f92ae-299">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-300">重複行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f92ae-301">詳細については、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-302">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-303">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-304">次の例では、派生クラス <xref:System.Data.OleDb.OleDbDataAdapter>を使用して、categories テーブルの行を <xref:System.Data.DataSet> に入力します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-304">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="f92ae-305">この例では、<xref:System.Data.OleDb.OleDbDataAdapter> と <xref:System.Data.DataSet>が作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-305">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="f92ae-306">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-306">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-307">派生クラスで <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-307">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-308">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-308">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-309">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-309">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f92ae-310">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-310">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="dataReader"><span data-ttu-id="f92ae-311"><see cref="T:System.Data.IDataReader" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-311">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <summary><span data-ttu-id="f92ae-312">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.Data.DataTable" /> の名前を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.IDataReader" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-312">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" /> and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="f92ae-313"><see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-313">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="f92ae-314">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-314">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f92ae-315">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-315">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="f92ae-316">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="f92ae-316">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="f92ae-317"><see cref="T:System.Data.CommandBehavior" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-317">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f92ae-318">指定した <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.DataTable" />、および <see cref="T:System.Data.IDbCommand" /> を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.CommandBehavior" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-318">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-319"><see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-319">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="f92ae-320">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-320">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-321"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、関連付けられた <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティによって指定された SELECT ステートメントを使用して、データソースから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-321">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f92ae-322">SELECT ステートメントに関連付けられている接続オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-322">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-323"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が閉じられた場合は、データを取得して閉じたときに、接続が開かれます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-323">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="f92ae-324"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-324">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-325">次に、<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作は、<xref:System.Data.DataSet>内の指定された変換先 <xref:System.Data.DataTable> オブジェクトに行を追加し、存在しない場合は <xref:System.Data.DataTable> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-325">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="f92ae-326"><xref:System.Data.DataTable> オブジェクトを作成する場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作では通常、列名のメタデータのみが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-326">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="f92ae-327">ただし、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A> プロパティが `AddWithKey`に設定されている場合は、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-327">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f92ae-328"><xref:System.Data.DataTable>を設定するときに <xref:System.Data.Common.DbDataAdapter> オブジェクトが重複する列を検出すると、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-328">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-329">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-329">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f92ae-330">パラメーターとして `DataTable` を受け取る <xref:System.Data.Common.DbDataAdapter.Fill%2A> のオーバーロードは、最初の結果のみを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-330">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="f92ae-331">複数の結果を取得するために、パラメーターとして `DataSet` を受け取る <xref:System.Data.Common.DbDataAdapter.Fill%2A> のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-331">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="f92ae-332">同じ <xref:System.Data.DataTable>で <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを複数回使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-332">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-333">主キーが存在する場合、受信した行は、既に存在する一致する行とマージされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-333">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f92ae-334">主キーが存在しない場合は、受信行が <xref:System.Data.DataTable>に追加されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-334">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-335">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-335">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-336">重複行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-336">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f92ae-337">詳細については、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-337">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-338">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-338">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-339">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-339">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-340"><see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> メソッドのこのオーバーロードは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-340">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-341">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-341">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-342">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-342">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="f92ae-343">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f92ae-343">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f92ae-344">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-344">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="f92ae-345">データ ソースから読み込む <see cref="T:System.Data.DataTable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f92ae-345">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="f92ae-346">指定したレコード位置で開始し、指定した最大数のレコードを読み込んで、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-346">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="f92ae-347"><see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-347">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="f92ae-348">この値には、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-348">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-349"><xref:System.Data.Common.DataAdapter.Fill%2A> メソッドは、関連付けられた <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティによって指定された SELECT ステートメントを使用して、データソースから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-349">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f92ae-350">SELECT ステートメントに関連付けられている接続オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-350">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-351"><xref:System.Data.Common.DataAdapter.Fill%2A> が呼び出される前に接続が閉じられた場合は、データを取得するために開かれた後、閉じられます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-351">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="f92ae-352"><xref:System.Data.Common.DataAdapter.Fill%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-352">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-353">次に、<xref:System.Data.Common.DataAdapter.Fill%2A> 操作は、<xref:System.Data.DataSet>内の変換先 <xref:System.Data.DataTable> オブジェクトに行を追加し、存在しない場合は <xref:System.Data.DataTable> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-353">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="f92ae-354"><xref:System.Data.DataTable> オブジェクトを作成する場合、<xref:System.Data.Common.DataAdapter.Fill%2A> 操作では通常、列名のメタデータのみが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-354">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="f92ae-355">ただし、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A> プロパティが `AddWithKey`に設定されている場合は、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-355">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f92ae-356">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-356">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-357">重複行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-357">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f92ae-358">詳細については、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-358">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="f92ae-359"><xref:System.Data.DataTable>の設定中にデータアダプターで重複する列が検出されると、"columnname1"、"columnname2"、"columnname3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-359">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="f92ae-360">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-360">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f92ae-361">複数の結果セットが <xref:System.Data.DataSet>に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-361">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-362">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-362">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f92ae-363">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-363">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-364"><xref:System.Data.DataSet> を設定するために使用される SELECT ステートメントが複数の結果 (バッチ SQL ステートメントなど) を返す場合、結果の1つにエラーが含まれていると、それ以降の結果はすべてスキップされ、<xref:System.Data.DataSet>には追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-364">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f92ae-365">同じ <xref:System.Data.DataTable>で <xref:System.Data.Common.DataAdapter.Fill%2A> メソッドを複数回使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-365">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-366">主キーが存在する場合、受信した行は、既に存在する一致する行とマージされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-366">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f92ae-367">主キーが存在しない場合は、受信行が <xref:System.Data.DataTable>に追加されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-367">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-368">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-368">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-369">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-369">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-370">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-370">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-371">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-371">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-372">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-372">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="f92ae-373">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f92ae-373">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f92ae-374">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-374">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f92ae-375">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-375">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f92ae-376"><see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="f92ae-377"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-377">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f92ae-378">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-378">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-379">`maxRecords` 値が0の場合、開始レコードの後に見つかったすべてのレコードが取得されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-379">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="f92ae-380">`maxRecords` が残りの行の数よりも大きい場合は、残りの行のみが返され、エラーは発行されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-380">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="f92ae-381">対応する select コマンドが複数の結果を返すステートメントである場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> は最初の結果にのみ `maxRecords` を適用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-381">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="f92ae-382"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、SELECT ステートメントを使用してデータソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-382">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="f92ae-383">SELECT ステートメントに関連付けられている <xref:System.Data.IDbConnection> オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-383">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-384"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に <xref:System.Data.IDbConnection> が閉じられている場合は、データを取得して閉じた後で、そのデータが開かれます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-384">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="f92ae-385"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-385">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-386">コマンドが行を返さない場合、<xref:System.Data.DataSet>にテーブルは追加されませんが、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-386">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="f92ae-387"><xref:System.Data.DataTable>を設定するときに <xref:System.Data.Common.DbDataAdapter> オブジェクトが重複する列を検出すると、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-387">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-388">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-388">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f92ae-389">指定したクエリで複数の結果が返された場合は、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-389">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-390">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-390">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f92ae-391">行を返さないクエリに対してテーブルが作成されていないため、insert クエリを処理してから select クエリを実行すると、select クエリに対して作成されたテーブルには "Table" という名前が付けられます。これは、最初に作成されたテーブルであるためです。</span><span class="sxs-lookup"><span data-stu-id="f92ae-391">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="f92ae-392">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-392">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-393"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、<xref:System.Data.DataSet> に大文字と小文字のみが異なる名前を持つ複数の <xref:System.Data.DataTable> オブジェクトが含まれているシナリオをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-393">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f92ae-394">このような場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> は、対応するテーブルを検索するために大文字と小文字を区別する比較を実行し、完全一致が存在しない場合は新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-394">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f92ae-395">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-395">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f92ae-396"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出され、<xref:System.Data.DataSet> の名前 <xref:System.Data.DataTable> が大文字と小文字のみで異なる場合は、その <xref:System.Data.DataTable> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-396">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f92ae-397">このシナリオでは、比較で大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-397">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f92ae-398">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-398">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f92ae-399">データテーブルの読み込み中にエラーまたは例外が発生した場合、エラーが発生する前に追加された行はデータテーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-399">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="f92ae-400">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-400">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="f92ae-401"><xref:System.Data.DataSet> を設定するために使用される SELECT ステートメントが複数の結果 (バッチ SQL ステートメントなど) を返す場合は、次の点に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-401">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="f92ae-402">バッチ SQL ステートメントから複数の結果を処理する場合、`maxRecords` は最初の結果にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-402">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="f92ae-403">これは、チャプター結果を含む行にも当てはまります (OLE DB の .NET Framework Data Provider)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-403">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="f92ae-404">最上位レベルの結果は `maxRecords`によって制限されますが、すべての子行が追加されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-404">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="f92ae-405">結果の1つにエラーが含まれている場合、後続の結果はすべてスキップされ、<xref:System.Data.DataSet>には追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-405">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f92ae-406">後続の <xref:System.Data.Common.DbDataAdapter.Fill%2A> 呼び出しを使用して <xref:System.Data.DataSet>の内容を更新する場合は、次の2つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-406">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="f92ae-407">SQL ステートメントは、<xref:System.Data.DataSet>を設定するために最初に使用したものと一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-407">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="f92ae-408">**キー**列の情報が存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-408">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="f92ae-409">主キーの情報が存在する場合は、重複行が調整され、<xref:System.Data.DataSet>に対応する <xref:System.Data.DataTable> に1回だけ表示されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-409">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-410">主キーの情報は、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、<xref:System.Data.DataTable>の <xref:System.Data.DataTable.PrimaryKey%2A> プロパティを指定する、または <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> プロパティを `AddWithKey`に設定することによって設定できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-410">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f92ae-411">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-411">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-412">重複行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-412">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f92ae-413">詳細については、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-413">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-414">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-414">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-415">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-415">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-416">`DataSet` には、`maxRecords`によって示されるレコード数を超える値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-416">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="f92ae-417">ただし、クエリによって生成された結果セット全体がサーバーから返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-417">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-418">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter>の派生クラスを使用して、 **Categories**テーブルから行10から始まる15行の <xref:System.Data.DataSet> に入力します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-418">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="f92ae-419">この例では、<xref:System.Data.OleDb.OleDbDataAdapter> と <xref:System.Data.DataSet>が作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-419">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="f92ae-420"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-420">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-421">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-421">The source table is invalid.</span></span>  
  
 <span data-ttu-id="f92ae-422">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-422">-or-</span></span>  
  
 <span data-ttu-id="f92ae-423">connection が無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-423">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f92ae-424">接続が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="f92ae-424">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f92ae-425"><paramref name="startRecord" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-425">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="f92ae-426">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-426">-or-</span></span> 
<span data-ttu-id="f92ae-427"><paramref name="maxRecords" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-427">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-428">派生クラスで <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-428">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-429">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-429">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-430">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-430">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="srcTable" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="startRecord" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-431">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-431">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f92ae-432">テーブル マップに使用する <see cref="T:System.Data.DataTable" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-432">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <param name="dataReader"><span data-ttu-id="f92ae-433"><see cref="T:System.Data.IDataReader" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-433">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <param name="startRecord"><span data-ttu-id="f92ae-434">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f92ae-434">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f92ae-435">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-435">The maximum number of records to retrieve.</span></span></param>
        <summary><span data-ttu-id="f92ae-436"><see cref="T:System.Data.DataSet" />、<see cref="T:System.Data.DataSet" />、<see cref="T:System.Data.DataTable" /> の名前を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.IDataReader" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-436">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" />, <see cref="T:System.Data.DataTable" />, and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="f92ae-437"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-437">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f92ae-438">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-438">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startRecord" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="f92ae-439">データ ソースから読み込む <see cref="T:System.Data.DataTable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f92ae-439">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="f92ae-440">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f92ae-440">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f92ae-441">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-441">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="f92ae-442"><see cref="T:System.Data.IDbCommand" /> オブジェクトにデータを読み込むために実行する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-442">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="f92ae-443"><see cref="T:System.Data.CommandBehavior" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-443">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f92ae-444"><see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-444">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="f92ae-445">データ テーブルで追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-445">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-446">`maxRecords` 値が0の場合、開始レコードの後に見つかったすべてのレコードが取得されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-446">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="f92ae-447">`maxRecords` が残りの行の数よりも大きい場合は、残りの行だけが返され、エラーは発行されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-447">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="f92ae-448"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、SELECT ステートメントを使用してデータソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-448">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="f92ae-449">SELECT ステートメントに関連付けられている <xref:System.Data.IDbConnection> オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-449">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-450"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に <xref:System.Data.IDbConnection> が閉じられている場合は、データを取得して閉じた後で閉じます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-450">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-451"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-451">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-452">コマンドが行を返さない場合、<xref:System.Data.DataSet>にテーブルは追加されませんが、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-452">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="f92ae-453"><xref:System.Data.DataTable>を設定するときに <xref:System.Data.Common.DbDataAdapter> オブジェクトが重複する列を検出すると、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-453">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-454">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-454">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f92ae-455">指定したクエリで複数の結果が返された場合は、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-455">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-456">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-456">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f92ae-457">行を返さないクエリに対してテーブルが作成されていないため、挿入クエリを処理してから select クエリを実行すると、select クエリに対して作成されたテーブルには "Table" という名前が付けられます。これは最初に作成されたテーブルであるためです。</span><span class="sxs-lookup"><span data-stu-id="f92ae-457">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="f92ae-458">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-458">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-459"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、<xref:System.Data.DataSet> に大文字と小文字のみが異なる名前を持つ複数の <xref:System.Data.DataTable> オブジェクトが含まれているシナリオをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-459">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f92ae-460">このような場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> は、対応するテーブルを検索するために大文字と小文字を区別する比較を実行し、完全一致が存在しない場合は新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-460">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f92ae-461">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-461">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f92ae-462"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出され、<xref:System.Data.DataSet> の名前 <xref:System.Data.DataTable> が大文字と小文字のみで異なる場合は、その <xref:System.Data.DataTable> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-462">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f92ae-463">このシナリオでは、比較で大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-463">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f92ae-464">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-464">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f92ae-465">データテーブルの読み込み中にエラーまたは例外が発生した場合、エラーが発生する前に追加された行はデータテーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-465">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="f92ae-466">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-466">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="f92ae-467"><xref:System.Data.DataTable> オブジェクトを設定するために使用される SELECT ステートメントで、バッチ SQL ステートメントなどの複数の結果が返される場合は、次の点に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-467">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="f92ae-468">バッチ SQL ステートメントから複数の結果を処理する場合、`maxRecords` は最初の結果にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-468">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="f92ae-469">これは、チャプター結果を含む行にも当てはまります (OLE DB の .NET Framework Data Provider)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-469">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="f92ae-470">最上位レベルの結果は `maxRecords`によって制限されますが、すべての子行が追加されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-470">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="f92ae-471">結果の1つにエラーが含まれている場合は、後続のすべての結果がスキップされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-471">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-472">`DataSet` には、`maxRecords`によって示されるレコード数を超える値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-472">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="f92ae-473">ただし、クエリによって生成された結果セット全体がサーバーから返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-473">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="f92ae-474"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-474">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-475">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-475">The source table is invalid.</span></span>  
  
 <span data-ttu-id="f92ae-476">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-476">-or-</span></span>  
  
 <span data-ttu-id="f92ae-477">connection が無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-477">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f92ae-478">接続が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="f92ae-478">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f92ae-479"><paramref name="startRecord" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-479">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="f92ae-480">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-480">-or-</span></span> 
<span data-ttu-id="f92ae-481"><paramref name="maxRecords" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-481">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-482">派生クラスで <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-482">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-483">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-483">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-484">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-484">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-485">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-485">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="f92ae-486">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f92ae-486">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f92ae-487">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-487">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f92ae-488">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-488">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="f92ae-489">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="f92ae-489">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="f92ae-490"><see cref="T:System.Data.CommandBehavior" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-490">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f92ae-491"><see cref="T:System.Data.DataSet" /> 名、ソース テーブル名、コマンド文字列、およびコマンド動作を使用して、データ ソース内の列と一致するように、<see cref="T:System.Data.DataSet" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-491">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="f92ae-492"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-492">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f92ae-493">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-493">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-494"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、関連付けられた <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティによって指定された SELECT ステートメントを使用して、データソースから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-494">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f92ae-495">SELECT ステートメントに関連付けられている接続オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-495">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-496"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が閉じられた場合は、データを取得して閉じた状態で接続が開かれます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-496">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-497"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-497">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-498">次に、<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作は、<xref:System.Data.DataSet>内の変換先 <xref:System.Data.DataTable> オブジェクトに行を追加し、存在しない場合は <xref:System.Data.DataTable> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-498">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="f92ae-499"><xref:System.Data.DataTable> オブジェクトを作成する場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作では通常、列名のメタデータのみが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-499">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="f92ae-500">ただし、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A> プロパティが `AddWithKey`に設定されている場合は、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-500">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f92ae-501"><xref:System.Data.DataTable>を設定しているときに <xref:System.Data.Common.DbDataAdapter> が重複する列を検出した場合、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-501">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-502">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-502">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f92ae-503">複数の結果セットが <xref:System.Data.DataSet> に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-503">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-504">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-504">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f92ae-505">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-505">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-506"><xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドは、<xref:System.Data.DataSet> に大文字と小文字のみが異なる名前を持つ複数の <xref:System.Data.DataTable> オブジェクトが含まれているシナリオをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-506">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f92ae-507">このような場合、<xref:System.Data.Common.DbDataAdapter.Fill%2A> は、対応するテーブルを検索するために大文字と小文字を区別する比較を実行し、完全一致が存在しない場合は新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-507">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f92ae-508">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-508">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f92ae-509"><xref:System.Data.Common.DbDataAdapter.Fill%2A> が呼び出され、<xref:System.Data.DataSet> の名前 <xref:System.Data.DataTable> が大文字と小文字のみで異なる場合は、その <xref:System.Data.DataTable> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-509">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f92ae-510">このシナリオでは、比較で大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-510">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f92ae-511">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-511">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f92ae-512">同じ <xref:System.Data.DataTable>で <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを複数回使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-512">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-513">主キーが存在する場合、受信した行は、既に存在する一致する行とマージされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-513">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f92ae-514">主キーが存在しない場合は、受信行が <xref:System.Data.DataTable>に追加されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-514">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-515">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-515">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-516">重複行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-516">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f92ae-517">詳細については、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-517">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-518">複数の結果を返すバッチ SQL ステートメントを処理する場合、.NET Framework データプロバイダーの <xref:System.Data.Common.DbDataAdapter.Fill%2A> と <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果についてのみスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-519">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-519">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f92ae-520"><paramref name="startRecord" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-520">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="f92ae-521">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-521">-or-</span></span> 
<span data-ttu-id="f92ae-522"><paramref name="maxRecords" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-522">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-523"><see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> メソッドのこのオーバーロードは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-523">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-524">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-524">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-525">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-525">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-526">データ アダプターにデータを読み込むコマンドの動作を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-526">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="f92ae-527">データ アダプターにデータを読み込むコマンドの <see cref="T:System.Data.CommandBehavior" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-527">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-528">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-528">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-529">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-529">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-530">格納操作中にエラーが発生したときに返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-530">Returned when an error occurs during a fill operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f92ae-531"><see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataSet" /> に追加し、データ ソース内のスキーマと一致するようにスキーマを設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-531">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-532">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-532">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-533">スキーマの挿入先の <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-533">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f92ae-534">スキーマを挿入する方法を指定する <see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-534">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="f92ae-535">"Table" という名前の <see cref="T:System.Data.DataTable" /> を指定された <see cref="T:System.Data.DataSet" /> に追加し、指定された <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソースにあるスキーマと一致するようにスキーマを構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-535">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-536"><see cref="T:System.Data.DataTable" /> に追加された <see cref="T:System.Data.DataSet" /> オブジェクトのコレクションへの参照。</span><span class="sxs-lookup"><span data-stu-id="f92ae-536">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-537">このメソッドは、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>を使用して、データソースからスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-537">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="f92ae-538"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作は、転送先 <xref:System.Data.DataSet>に <xref:System.Data.DataTable> を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-538">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-539">次に、<xref:System.Data.DataTable>の <xref:System.Data.DataColumnCollection> に列を追加し、データソースに次の <xref:System.Data.DataColumn> プロパティが存在する場合はそのプロパティを構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-539">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f92ae-540"><xref:System.Data.DataColumn.AutoIncrement%2A> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-540"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f92ae-541"><xref:System.Data.DataColumn.AutoIncrementStep%2A> と <xref:System.Data.DataColumn.AutoIncrementSeed%2A> を個別に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-541">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f92ae-542">また <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は、次の規則に従って <xref:System.Data.DataTable.PrimaryKey%2A> と <xref:System.Data.DataTable.Constraints%2A> のプロパティも構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f92ae-543"><xref:System.Data.IDbDataAdapter.SelectCommand%2A>によって1つ以上の主キー列が返された場合は、<xref:System.Data.DataTable>の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-543">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f92ae-544">主キー列が返されず、一意の列がの場合は、一意の列が主キーとして使用されます。の場合は、すべての一意の列が null 値の場合に限ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-544">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f92ae-545">Null 値が許容される列がある場合は、<xref:System.Data.UniqueConstraint> が <xref:System.Data.ConstraintCollection>に追加されますが、<xref:System.Data.DataTable.PrimaryKey%2A> プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-545">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f92ae-546">主キー列と一意の列の両方が返された場合は、主キー列が <xref:System.Data.DataTable>の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-546">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-547">前の規則に従って、主キーと一意の制約が <xref:System.Data.ConstraintCollection> に追加されることに注意してくださいが、その他の制約の種類は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-547">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f92ae-548">SQL Server テーブルの1つまたは複数の列に一意のクラスター化インデックスが定義されていて、primary key 制約が別の列のセットに対して定義されている場合、クラスター化インデックス内の列の名前が返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-548">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f92ae-549">主キー列の名前または名前を取得するには、主キーインデックスの名前を指定する SELECT ステートメントでクエリヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-549">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f92ae-550">クエリヒントの指定の詳細については、「[クエリヒント (transact-sql)](https://msdn.microsoft.com/library/ms181714.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-550">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f92ae-551">主キーの情報は、キー列が一致する行を検索および置換するために <xref:System.Data.Common.DbDataAdapter.Fill%2A> 中に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-551">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="f92ae-552">これが目的の動作でない場合は、スキーマ情報を要求せずに <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-552">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="f92ae-553"><xref:System.Data.DataTable>を設定しているときに <xref:System.Data.IDataAdapter> が重複する列を検出した場合、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-553">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-554">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-554">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f92ae-555">複数の結果セットが <xref:System.Data.DataSet> に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-555">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-556">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-556">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f92ae-557">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-557">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-558">Select コマンドに関連付けられている <xref:System.Data.IDbConnection> オブジェクトは有効である必要がありますが、を開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-558">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="f92ae-559"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に <xref:System.Data.IDbConnection> が閉じられている場合は、データを取得して閉じた後で閉じます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-559">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-560"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-560">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-561">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-561">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-562">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-562">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f92ae-563"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-563">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f92ae-564">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-564">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f92ae-565">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-565">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="f92ae-566">次の例では、派生クラスを使用して、<xref:System.Data.SqlClient.SqlDataAdapter>、<xref:System.Data.DataSet> にスキーマを格納し、<xref:System.Data.DataSet>を返します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-566">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-567">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="f92ae-567">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-568">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-568">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f92ae-569">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-569">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f92ae-570"><see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-570">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="f92ae-571">指定された <see cref="T:System.Data.DataTable" /> に基づいて、指定された <see cref="T:System.Data.SchemaType" /> のスキーマを構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-571">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-572">データ ソースから返されたスキーマ情報を含む <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-572">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-573"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> メソッドは、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>を使用して、データソースからスキーマを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-573">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="f92ae-574"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> に関連付けられている接続オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-574">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-575"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に接続が閉じられた場合は、データを取得して閉じた状態で接続が開かれます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-575">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-576"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-576">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-577"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作は <xref:System.Data.DataTable>を返します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-577">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f92ae-578">次に、<xref:System.Data.DataTable>の <xref:System.Data.DataColumnCollection> に列を追加し、データソースに次の <xref:System.Data.DataColumn> プロパティが存在する場合はそのプロパティを構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-578">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f92ae-579"><xref:System.Data.DataColumn.AutoIncrement%2A> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-579"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f92ae-580"><xref:System.Data.DataColumn.AutoIncrementStep%2A> と <xref:System.Data.DataColumn.AutoIncrementSeed%2A> を個別に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-580">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f92ae-581">また <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は、次の規則に従って <xref:System.Data.DataTable.PrimaryKey%2A> と <xref:System.Data.DataTable.Constraints%2A> のプロパティも構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f92ae-582">`DataTable`に対して <xref:System.Data.DataTable.PrimaryKey%2A> が既に定義されている場合、または `DataTable` にデータが含まれている場合、`PrimaryKey` プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-582">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="f92ae-583"><xref:System.Data.IDbDataAdapter.SelectCommand%2A>によって1つ以上の主キー列が返された場合は、`DataTable`の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-583">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="f92ae-584">主キー列が返されず、一意の列がの場合は、一意の列が主キーとして使用されます。の場合は、すべての一意の列が null 値の場合に限ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-584">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f92ae-585">Null 値が許容される列がある場合は、<xref:System.Data.UniqueConstraint> が <xref:System.Data.ConstraintCollection>に追加されますが、`PrimaryKey` プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-585">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="f92ae-586">主キー列と一意の列の両方が返された場合は、主キー列が `DataTable`の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-586">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="f92ae-587">前の規則に従って、主キーと一意の制約が <xref:System.Data.ConstraintCollection> に追加されることに注意してくださいが、その他の制約の種類は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-587">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="f92ae-588">このプロセスでは、サーバーへのラウンドトリップがいくつか必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-588">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="f92ae-589">SQL Server テーブルの1つまたは複数の列に一意のクラスター化インデックスが定義されていて、primary key 制約が別の列のセットに対して定義されている場合、クラスター化インデックス内の列の名前が返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-589">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f92ae-590">主キー列の名前または名前を取得するには、主キーインデックスの名前を指定する SELECT ステートメントでクエリヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-590">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f92ae-591">クエリヒントの指定の詳細については、「[クエリヒント (transact-sql)](https://msdn.microsoft.com/library/ms181714.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-591">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f92ae-592"><xref:System.Data.DataTable>を設定しているときに <xref:System.Data.Common.DbDataAdapter> が重複する列を検出した場合、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-592">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-593">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-593">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f92ae-594">複数の結果セットが <xref:System.Data.DataSet> に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-594">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-595">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-595">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f92ae-596">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-596">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は行を返しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="f92ae-598"><xref:System.Data.DataTable>に行を追加するには、<xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-598">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-599">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-599">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-600">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-600">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f92ae-601"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-601">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f92ae-602">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-602">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f92ae-603">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-603">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="f92ae-604">次の例では、派生クラスを使用して、<xref:System.Data.SqlClient.SqlDataAdapter>、<xref:System.Data.DataSet> にスキーマを格納し、<xref:System.Data.DataTable>を返します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-604">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-605">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="f92ae-605">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-606">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-606">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-607">スキーマの挿入先の <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-607">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f92ae-608">スキーマを挿入する方法を指定する <see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-608">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f92ae-609">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-609">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f92ae-610">指定した <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataSet" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> および <see cref="T:System.Data.DataTable" /> に基づいて、データ ソースにあるスキーマと一致するようにスキーマを構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-610">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-611"><see cref="T:System.Data.DataTable" /> に追加された <see cref="T:System.Data.DataSet" /> オブジェクトのコレクションへの参照。</span><span class="sxs-lookup"><span data-stu-id="f92ae-611">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-612">このメソッドは、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>を使用して、データソースからスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-612">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="f92ae-613"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作は、転送先 <xref:System.Data.DataSet>に <xref:System.Data.DataTable> を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-614">次に、<xref:System.Data.DataTable>の <xref:System.Data.DataColumnCollection> に列を追加し、データソースに次の <xref:System.Data.DataColumn> プロパティが存在する場合はそのプロパティを構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f92ae-615"><xref:System.Data.DataColumn.AutoIncrement%2A> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f92ae-616"><xref:System.Data.DataColumn.AutoIncrementStep%2A> と <xref:System.Data.DataColumn.AutoIncrementSeed%2A> を個別に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f92ae-617">また <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は、次の規則に従って <xref:System.Data.DataTable.PrimaryKey%2A> と <xref:System.Data.DataTable.Constraints%2A> のプロパティも構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f92ae-618"><xref:System.Data.IDbDataAdapter.SelectCommand%2A>によって1つ以上の主キー列が返された場合は、<xref:System.Data.DataTable>の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f92ae-619">主キー列が返されず、一意の列がの場合は、一意の列が主キーとして使用されます。の場合は、すべての一意の列が null 値の場合に限ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f92ae-620">Null 値が許容される列がある場合は、<xref:System.Data.UniqueConstraint> が <xref:System.Data.ConstraintCollection>に追加されますが、<xref:System.Data.DataTable.PrimaryKey%2A> プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f92ae-621">主キー列と一意の列の両方が返された場合は、主キー列が <xref:System.Data.DataTable>の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-622">前の規則に従って、主キーと一意の制約が <xref:System.Data.ConstraintCollection> に追加されることに注意してくださいが、その他の制約の種類は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f92ae-623">SQL Server テーブルの1つまたは複数の列に一意のクラスター化インデックスが定義されていて、primary key 制約が別の列のセットに対して定義されている場合、クラスター化インデックス内の列の名前が返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f92ae-624">主キー列の名前または名前を取得するには、主キーインデックスの名前を指定する SELECT ステートメントでクエリヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f92ae-625">クエリヒントの指定の詳細については、「[クエリヒント (transact-sql)](https://msdn.microsoft.com/library/ms181714.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-625">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f92ae-626">主キーの情報は、キー列が一致する行を検索および置換するために <xref:System.Data.Common.DbDataAdapter.Fill%2A> 中に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-626">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="f92ae-627">これが目的の動作でない場合は、スキーマ情報を要求せずに <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-627">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="f92ae-628"><xref:System.Data.DataTable>を設定しているときに <xref:System.Data.Common.DbDataAdapter> が重複する列を検出した場合、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-628">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-629">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-629">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f92ae-630">複数の結果セットが <xref:System.Data.DataSet> に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-630">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-631">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-631">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f92ae-632">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-632">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-633"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> メソッドは、<xref:System.Data.DataSet> に大文字と小文字のみが異なる名前を持つ複数の <xref:System.Data.DataTable> オブジェクトが含まれているシナリオをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-633">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f92ae-634">このような場合、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は、対応するテーブルを検索するために大文字と小文字を区別する比較を実行し、完全一致が存在しない場合は新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-634">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f92ae-635">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-635">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f92ae-636"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出され、<xref:System.Data.DataSet> の名前 <xref:System.Data.DataTable> が大文字と小文字のみで異なる場合は、その <xref:System.Data.DataTable> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-636">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f92ae-637">このシナリオでは、比較で大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-637">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f92ae-638">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-638">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f92ae-639">Select コマンドに関連付けられている <xref:System.Data.IDbConnection> オブジェクトは有効である必要がありますが、を開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-639">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="f92ae-640"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に <xref:System.Data.IDbConnection> が閉じられている場合は、データを取得して閉じた後で閉じます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-640">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-641"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-641">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-642">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-642">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-643">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-643">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f92ae-644"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-644">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f92ae-645">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-645">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f92ae-646">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-646">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="f92ae-647">次の例では、派生クラスを使用して、<xref:System.Data.SqlClient.SqlDataAdapter>、<xref:System.Data.DataSet> にスキーマを格納し、<xref:System.Data.DataSet>を返します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-647">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f92ae-648">スキーマの取得元のソース テーブルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-648">A source table from which to get the schema could not be found.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-649">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="f92ae-649">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-650">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-650">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f92ae-651">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-651">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f92ae-652"><see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-652">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="f92ae-653">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="f92ae-653">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="f92ae-654"><see cref="T:System.Data.CommandBehavior" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-654">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f92ae-655">指定した <see cref="T:System.Data.DataTable" />、コマンド文字列、および <see cref="T:System.Data.SchemaType" /> 値に基づいて、指定した <see cref="T:System.Data.CommandBehavior" /> のスキーマを設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-655">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="f92ae-656">データ ソースから返されたスキーマ情報が格納された <see cref="T:System.Data.DataTable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f92ae-656">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-657"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> メソッドは、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>を使用して、データソースからスキーマを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-657">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="f92ae-658"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> に関連付けられている接続オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-658">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-659"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に接続が閉じられた場合は、データを取得して閉じた状態で接続が開かれます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-659">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-660"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-660">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-661"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作は、転送先 <xref:System.Data.DataSet>に <xref:System.Data.DataTable> を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-661">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-662">次に、<xref:System.Data.DataTable>の <xref:System.Data.DataColumnCollection> に列を追加し、データソースに次の <xref:System.Data.DataColumn> プロパティが存在する場合はそのプロパティを構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-662">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f92ae-663"><xref:System.Data.DataColumn.AutoIncrement%2A> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-663"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f92ae-664"><xref:System.Data.DataColumn.AutoIncrementStep%2A> と <xref:System.Data.DataColumn.AutoIncrementSeed%2A> を個別に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-664">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f92ae-665">また <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は、次の規則に従って <xref:System.Data.DataTable.PrimaryKey%2A> と <xref:System.Data.DataTable.Constraints%2A> のプロパティも構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f92ae-666"><xref:System.Data.IDbDataAdapter.SelectCommand%2A>によって1つ以上の主キー列が返された場合は、<xref:System.Data.DataTable>の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-666">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f92ae-667">主キー列が返されず、一意の列がの場合は、一意の列が主キーとして使用されます。の場合は、すべての一意の列が null 値の場合に限ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-667">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f92ae-668">Null 値が許容される列がある場合は、<xref:System.Data.UniqueConstraint> が <xref:System.Data.ConstraintCollection>に追加されますが、<xref:System.Data.DataTable.PrimaryKey%2A> プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-668">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f92ae-669">主キー列と一意の列の両方が返された場合は、主キー列が <xref:System.Data.DataTable>の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-669">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-670">前の規則に従って、主キーと一意の制約が <xref:System.Data.ConstraintCollection> に追加されることに注意してくださいが、その他の制約の種類は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-670">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f92ae-671">SQL Server テーブルの1つまたは複数の列に一意のクラスター化インデックスが定義されていて、primary key 制約が別の列のセットに対して定義されている場合、クラスター化インデックス内の列の名前が返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-671">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f92ae-672">主キー列の名前または名前を取得するには、主キーインデックスの名前を指定する SELECT ステートメントでクエリヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-672">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f92ae-673">クエリヒントの指定の詳細については、「[クエリヒント (transact-sql)](https://msdn.microsoft.com/library/ms181714.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-673">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f92ae-674"><xref:System.Data.DataTable>を設定しているときに <xref:System.Data.IDataAdapter> が重複する列を検出した場合、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-674">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-675">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-675">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f92ae-676">複数の結果セットが <xref:System.Data.DataSet> に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-676">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-677">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-677">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f92ae-678">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-678">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は行を返しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="f92ae-680"><xref:System.Data.DataTable>に行を追加するには、<xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-680">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-681">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-681">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-682">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-682">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f92ae-683"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-683">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f92ae-684">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-684">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f92ae-685">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-685">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-686">この <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> メソッドの実装は保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-686">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-687">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-687">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-688">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-688">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-689">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-689">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f92ae-690"><see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-690">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="f92ae-691">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="f92ae-691">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f92ae-692">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-692">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="f92ae-693"><see cref="T:System.Data.CommandBehavior" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-693">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f92ae-694">指定した <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataSet" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソース内のスキーマと一致するようにスキーマを設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-694">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-695">データ ソースから返されたスキーマ情報が格納された、<see cref="T:System.Data.DataTable" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f92ae-695">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-696"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> メソッドは、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>を使用して、データソースからスキーマを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-696">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="f92ae-697"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> に関連付けられている接続オブジェクトは有効である必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-697">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f92ae-698"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に接続が閉じられた場合は、データを取得して閉じた状態で接続が開かれます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-698">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f92ae-699"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出される前に接続が開いている場合は、開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-699">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f92ae-700"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作は、転送先 <xref:System.Data.DataSet>に <xref:System.Data.DataTable> を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-700">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-701">次に、<xref:System.Data.DataTable>の <xref:System.Data.DataColumnCollection> に列を追加し、データソースに次の <xref:System.Data.DataColumn> プロパティが存在する場合はそのプロパティを構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-701">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f92ae-702"><xref:System.Data.DataColumn.AutoIncrement%2A> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-702"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f92ae-703"><xref:System.Data.DataColumn.AutoIncrementStep%2A> と <xref:System.Data.DataColumn.AutoIncrementSeed%2A> を個別に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-703">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f92ae-704">また <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は、次の規則に従って <xref:System.Data.DataTable.PrimaryKey%2A> と <xref:System.Data.DataTable.Constraints%2A> のプロパティも構成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f92ae-705"><xref:System.Data.IDbDataAdapter.SelectCommand%2A>によって1つ以上の主キー列が返された場合は、<xref:System.Data.DataTable>の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-705">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f92ae-706">主キー列が返されず、一意の列がの場合は、一意の列が主キーとして使用されます。の場合は、すべての一意の列が null 値の場合に限ります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-706">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f92ae-707">Null 値が許容される列がある場合は、<xref:System.Data.UniqueConstraint> が <xref:System.Data.ConstraintCollection>に追加されますが、<xref:System.Data.DataTable.PrimaryKey%2A> プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-707">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f92ae-708">主キー列と一意の列の両方が返された場合は、主キー列が <xref:System.Data.DataTable>の主キー列として使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-708">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-709">前の規則に従って、主キーと一意の制約が <xref:System.Data.ConstraintCollection> に追加されることに注意してくださいが、その他の制約の種類は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-709">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f92ae-710">SQL Server テーブルの1つまたは複数の列に一意のクラスター化インデックスが定義されていて、primary key 制約が別の列のセットに対して定義されている場合、クラスター化インデックス内の列の名前が返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-710">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f92ae-711">主キー列の名前または名前を取得するには、主キーインデックスの名前を指定する SELECT ステートメントでクエリヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-711">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f92ae-712">クエリヒントの指定の詳細については、「[クエリヒント (transact-sql)](https://msdn.microsoft.com/library/ms181714.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-712">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f92ae-713"><xref:System.Data.DataTable>を設定しているときに <xref:System.Data.IDataAdapter> が重複する列を検出した場合、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-713">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f92ae-714">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-714">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f92ae-715">複数の結果セットが <xref:System.Data.DataSet> に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-715">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f92ae-716">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="f92ae-716">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f92ae-717">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-717">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f92ae-718"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> メソッドは、<xref:System.Data.DataSet> に大文字と小文字のみが異なる名前を持つ複数の <xref:System.Data.DataTable> オブジェクトが含まれているシナリオをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-718">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f92ae-719">このような場合、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は、対応するテーブルを検索するために大文字と小文字を区別する比較を実行し、完全一致が存在しない場合は新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-719">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f92ae-720">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-720">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f92ae-721"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> が呼び出され、<xref:System.Data.DataSet> の名前 <xref:System.Data.DataTable> が大文字と小文字のみで異なる場合は、その <xref:System.Data.DataTable> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-721">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f92ae-722">このシナリオでは、比較で大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-722">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f92ae-723">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-723">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f92ae-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> は行を返しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="f92ae-725"><xref:System.Data.DataTable>に行を追加するには、<xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-725">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-726">複数の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB の .NET Framework Data Provider の <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> の実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-726">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f92ae-727">複数の結果のスキーマ情報を取得するには、<xref:System.Data.MissingSchemaAction> を `AddWithKey`に設定して <xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-727">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f92ae-728"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-728">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f92ae-729">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-729">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f92ae-730">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-730">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-731">この <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> メソッドの実装は保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-731">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-732">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-732">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-733">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-733">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="f92ae-734">パラメーターを取得するコマンドのインデックス。</span><span class="sxs-lookup"><span data-stu-id="f92ae-734">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="f92ae-735">コマンド内のパラメーターのインデックス。</span><span class="sxs-lookup"><span data-stu-id="f92ae-735">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="f92ae-736">現在のバッチのコマンドの 1 つから <see cref="T:System.Data.IDataParameter" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-736">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="f92ae-737">指定された <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-737">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-738"><xref:System.Data.Common.DbDataAdapter>では、このメソッドは <xref:System.NotSupportedException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-738">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f92ae-739"><xref:System.Data.Common.DbDataAdapter> から継承するクラスは、このメソッドをオーバーライドしてバッチのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-739">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f92ae-740">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-740">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-741">このメソッドは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-741">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f92ae-742"><see cref="T:System.Data.Common.DbDataAdapter" /> から継承するクラスがバッチをサポートする場合、このクラスは、ユーザーがバッチを実行できるようにこのメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-742">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="f92ae-743">実装では、要求されたコマンドを検索するために提供された <paramref name="commandIdentifier" /> を使用し、指定された <paramref name="parameterIndex" /> を使用して要求されたパラメーターを検索します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-743">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="f92ae-744">たとえば、<paramref name="commandIdentifier" /> が0で <paramref name="parameterIndex" /> が0の場合は、バッチ内の最初のコマンドの最初のパラメーターが返されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-744">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-745">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-745">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-746">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-746">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int * int * Exception -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int * int * Exception -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="error" Type="System.Exception" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="f92ae-747">バッチ内の個々のコマンドの、0 から始まる列の序数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-747">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="f92ae-748">バッチ内に指定されたコマンドの影響を受ける、データ ストア内の行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-748">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="f92ae-749">指定されたコマンドの実行中にスローされた <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-749">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="f92ae-750">例外がスローされなかった場合は、<see langword="null" /> (Visual Basic では <see langword="Nothing" />) を返します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-750">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="f92ae-751">バッチ更新内の、個々の更新の試行に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-751">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="f92ae-752">バッチ更新内の、個々の更新の試行に関する情報。</span><span class="sxs-lookup"><span data-stu-id="f92ae-752">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-753">バッチ更新ロジックをサポートするデータプロバイダーは、<xref:System.Data.Common.DbDataAdapter> クラスの一連の仮想メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-753">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="f92ae-754">`GetBatchedRecordsAffected` は、これらの仮想メソッドの1つを表します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-754">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="f92ae-755">`DbDataAdapter` クラスは、`GetBatchedRecordsAffected` に依存して、バッチ内の個々の更新試行の成功または失敗を判断します。これにより、対応する各 <xref:System.Data.DataRow> をそれに応じてマークできます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-755">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-756">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-756">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f92ae-757">SQL SELECT ステートメントの実行時にユーザーが設定したパラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-757">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="f92ae-758">ユーザーが設定したパラメーターが格納された <see cref="T:System.Data.IDataParameter" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f92ae-758">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-759">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-759">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f92ae-760"><see cref="T:System.Data.Common.DbDataAdapter" /> のバッチ処理を初期化します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-760">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-761"><xref:System.Data.Common.DbDataAdapter>では、このメソッドは <xref:System.NotSupportedException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-761">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f92ae-762"><xref:System.Data.Common.DbDataAdapter> から継承するクラスは、このメソッドをオーバーライドしてバッチのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-762">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f92ae-763">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-763">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-764">このメソッドは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-764">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f92ae-765"><see cref="T:System.Data.Common.DbDataAdapter" /> から継承するクラスがバッチをサポートしている場合、そのクラスはこのメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-765">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="f92ae-766">このメソッドは、バッチ処理をサポートするために必要なリソースを初期化する機会をクラスに提供します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-766">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="f92ae-767">たとえば、クラスは、バッチ内の一連のコマンドを保持するデータ構造を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-767">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-768">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-768">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-769">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-769">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-770">データ ソースに新しいレコードを挿入するために使用するコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-770">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="f92ae-771">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-771">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-772"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合、<xref:System.Data.IDbDataAdapter.InsertCommand%2A> は自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-772">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-773">次の例では、派生クラス <xref:System.Data.OleDb.OleDbDataAdapter> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-773">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-774">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-774">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-775">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-775">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-776">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-776">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f92ae-777">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="f92ae-777">The data for the event.</span></span></param>
        <summary><span data-ttu-id="f92ae-778"><see cref="E:System.Data.Common.DataAdapter.FillError" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-778">Raises the <see cref="E:System.Data.Common.DataAdapter.FillError" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRowUpdated (value As RowUpdatedEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f92ae-779">イベント データを格納している <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-779">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f92ae-780">.NET Framework データ プロバイダーの <see langword="RowUpdated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-780">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-781">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-781">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f92ae-782">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-782">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-783">派生クラスで <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-783">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-784">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-784">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-785">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-785">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRowUpdating (value As RowUpdatingEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f92ae-786">イベント データを格納している <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-786">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f92ae-787">.NET Framework データ プロバイダーの <see langword="RowUpdating" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-787">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-788">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-788">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f92ae-789">概要については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-789">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-790">派生クラスで <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-790">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-791">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-791">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-792">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-792">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-793">データ ソース内のレコードを選択するコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-793">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="f92ae-794">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-794">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f92ae-795">次の例では、派生クラス <xref:System.Data.OleDb.OleDbDataAdapter> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-795">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-796">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-796">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-797">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-797">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-798">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-798">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-799">データ セットからレコードを削除する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-799">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="f92ae-800"><see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-800">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-801">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-801">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f92ae-802">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-802">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="f92ae-803">詳細については、「 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-803">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-804">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-804">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-805">データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-805">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="f92ae-806">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-806">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-807">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-807">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f92ae-808">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-808">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="f92ae-809">詳細については、「 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-809">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-810">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-810">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-811">データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-811">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="f92ae-812">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-812">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-813">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-813">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f92ae-814">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-814">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="f92ae-815">詳細については、「 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-815">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-816">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-816">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-817">データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-817">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="f92ae-818">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-818">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-819">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-819">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f92ae-820">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-820">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="f92ae-821">詳細については、「 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-821">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-822">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-822">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f92ae-823">現在のインスタンスのコピーである新しいオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-823">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="f92ae-824">このインスタンスのコピーである新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f92ae-824">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-825">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-825">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f92ae-826">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-826">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="f92ae-827">詳細については、「 <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-827">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-828">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-828">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f92ae-829"><see cref="T:System.Data.Common.DbDataAdapter" /> のバッチ処理を終了します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-829">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-830"><xref:System.Data.Common.DbDataAdapter>では、このメソッドは <xref:System.NotSupportedException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-830">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f92ae-831"><xref:System.Data.Common.DbDataAdapter> から継承するクラスは、このメソッドをオーバーライドしてバッチのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-831">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f92ae-832">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-832">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f92ae-833">このメソッドは保護されており、.NET Framework データプロバイダーによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-833">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f92ae-834"><see cref="T:System.Data.Common.DbDataAdapter" /> から継承するクラスがバッチをサポートしている場合、そのクラスはこのメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-834">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="f92ae-835">このメソッドは、バッチ処理をサポートするために割り当てられたリソースを破棄する機会をクラスに提供します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-835">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="f92ae-836">たとえば、クラスは、バッチ内のコマンドを保持するデータ構造の割り当てを解除することができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-836">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-837">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-837">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-838">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-838">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f92ae-839"><see cref="T:System.Data.DataSet" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-839">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-840">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-840">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="f92ae-841">データ ソースの更新に使用する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f92ae-841">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="f92ae-842">指定した <see cref="T:System.Data.DataSet" /> 内の配列での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-842">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-843"><see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-843">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-844">アプリケーションが <xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドを呼び出すと、<xref:System.Data.Common.DbDataAdapter> は <xref:System.Data.DataRow.RowState%2A> プロパティを調べ、<xref:System.Data.DataSet>で構成されているインデックスの順序に基づいて、必要な INSERT、UPDATE、または DELETE ステートメントを各行に対して繰り返し実行します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-844">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-845">たとえば、<xref:System.Data.DataTable>内の行の順序が原因で、DELETE ステートメントを実行してから INSERT ステートメントを実行し、別の DELETE ステートメントを実行 <xref:System.Data.Common.DbDataAdapter.Update%2A> ことがあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-845">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-846">これらのステートメントはバッチ処理として実行されないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-846">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f92ae-847">アプリケーションでは、ステートメントの種類 (更新前の挿入など) のシーケンスを制御する必要がある場合に、<xref:System.Data.DataSet.GetChanges%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-847">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f92ae-848">詳細については、「 [dataadapter を使用したデータソースの更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-848">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f92ae-849">INSERT、UPDATE、または DELETE ステートメントが指定されていない場合、<xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドによって例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-849">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f92ae-850">ただし、<xref:System.Data.SqlClient.SqlCommandBuilder> または <xref:System.Data.OleDb.OleDbCommandBuilder> オブジェクトを作成すると、.NET Framework データプロバイダーの `SelectCommand` プロパティを設定した場合に、単一テーブルの更新の SQL ステートメントが自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-850">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f92ae-851">その後、設定していない追加の SQL ステートメントは、 **CommandBuilder**によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-851">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f92ae-852">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-852">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-853">詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-853">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f92ae-854"><xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドは、更新を実行する前に、最初のマッピングに記載されているテーブルから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-854">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f92ae-855"><xref:System.Data.Common.DbDataAdapter.Update%2A> は、<xref:System.Data.IDbCommand.UpdatedRowSource%2A> プロパティの値を使用して行を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-855">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f92ae-856">返されたその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-856">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f92ae-857">任意のデータが <xref:System.Data.DataSet>に読み込まれると、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生し、ユーザーは、調整された <xref:System.Data.DataSet> 行とコマンドによって返される出力パラメーターを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-857">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f92ae-858">行が正常に更新されると、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-858">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f92ae-859"><xref:System.Data.Common.DbDataAdapter.Update%2A>を使用する場合、実行の順序は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-859">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f92ae-860"><xref:System.Data.DataRow> 内の値は、パラメーター値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-860">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f92ae-861"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-861">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f92ae-862">コマンドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-862">The command executes.</span></span>  
  
4.  <span data-ttu-id="f92ae-863">コマンドが `FirstReturnedRecord`に設定されている場合、最初に返された結果が <xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-863">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f92ae-864">出力パラメーターがある場合は、<xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-864">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f92ae-865"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-865">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f92ae-866"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="f92ae-866"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f92ae-867"><xref:System.Data.Common.DbDataAdapter> に関連付けられた各コマンドには、通常、parameters コレクションが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-867">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f92ae-868">パラメーターは、.NET Framework データプロバイダーの `Parameter` クラスの `SourceColumn` および `SourceVersion` プロパティを使用して、現在の行にマップされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-868">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f92ae-869">`SourceColumn` は、現在の行のパラメーター値を取得するために <xref:System.Data.Common.DbDataAdapter> が参照する <xref:System.Data.DataTable> 列を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-869">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f92ae-870">`SourceColumn` は、テーブルマッピングが適用される前に、マップされていない列名を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-870">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f92ae-871">`SourceColumn` が存在しない列を参照している場合、実行されるアクションは、次のいずれかの <xref:System.Data.MissingMappingAction> 値に依存します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-871">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f92ae-872">列挙値</span><span class="sxs-lookup"><span data-stu-id="f92ae-872">Enumeration value</span></span>|<span data-ttu-id="f92ae-873">実行されたアクション</span><span class="sxs-lookup"><span data-stu-id="f92ae-873">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f92ae-874">マッピングが存在しない場合は、<xref:System.Data.DataSet> でソース列の名前とテーブル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-874">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f92ae-875"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-875">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f92ae-876">マッピングが明示的に設定されている場合は、通常、入力パラメーターに対して欠落しているマッピングがエラーの原因になります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-876">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f92ae-877"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-877">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f92ae-878">`SourceColumn` プロパティは、出力パラメーターまたは入出力パラメーターの値を `DataSet`にマップするためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-878">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f92ae-879">存在しない列を参照している場合は、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-879">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f92ae-880">.NET Framework データプロバイダーの `Parameter` クラスの `SourceVersion` プロパティは、列の値の元のバージョン、現在のバージョン、または提案されたバージョンのどちらを使用するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-880">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f92ae-881">この機能は、オプティミスティック同時実行制御違反を確認するために、UPDATE ステートメントの WHERE 句に元の値を含めるために使用されることがよくあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-881">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-882">行の更新中にエラーが発生した場合は、例外がスローされ、更新の実行が中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-882">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f92ae-883">エラーが発生したときに例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.DbDataAdapter.Update%2A>を呼び出す前に、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-883">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f92ae-884">また、DataAdapter の `RowUpdated` イベント内の行ごとにエラーに対応することもできます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-884">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f92ae-885">`RowUpdated` イベント内に例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.RowUpdatedEventArgs> の <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> プロパティを <xref:System.Data.UpdateStatus.Continue>に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-885">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-886">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter>の派生クラスを使用して、データソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-886">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f92ae-887"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-887">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-888">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-888">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="f92ae-889">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-889">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="f92ae-890">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-890">-or-</span></span> 
<span data-ttu-id="f92ae-891">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-891">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="f92ae-892">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-892">-or-</span></span> 
<span data-ttu-id="f92ae-893">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-893">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f92ae-894">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f92ae-894">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-895">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-895">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-896">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-896">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-897">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-897">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-898">データ ソースの更新に使用した <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-898">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="f92ae-899">指定した <see cref="T:System.Data.DataSet" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-899">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-900"><see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-900">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-901">アプリケーションが <xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドを呼び出すと、<xref:System.Data.Common.DbDataAdapter> は <xref:System.Data.DataRow.RowState%2A> プロパティを調べ、<xref:System.Data.DataSet>で構成されているインデックスの順序に基づいて、必要な INSERT、UPDATE、または DELETE ステートメントを各行に対して繰り返し実行します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-901">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-902">たとえば、<xref:System.Data.DataTable>内の行の順序が原因で、DELETE ステートメントを実行してから INSERT ステートメントを実行し、別の DELETE ステートメントを実行 <xref:System.Data.Common.DbDataAdapter.Update%2A> ことがあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-902">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-903">これらのステートメントはバッチ処理として実行されないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-903">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f92ae-904">アプリケーションでは、ステートメントの種類 (更新前の挿入など) のシーケンスを制御する必要がある場合に、<xref:System.Data.DataSet.GetChanges%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-904">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f92ae-905">詳細については、「 [dataadapter を使用したデータソースの更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-905">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f92ae-906">INSERT、UPDATE、または DELETE ステートメントが指定されていない場合、<xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドによって例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-906">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f92ae-907">ただし、<xref:System.Data.SqlClient.SqlCommandBuilder> または <xref:System.Data.OleDb.OleDbCommandBuilder> オブジェクトを作成すると、.NET Framework データプロバイダーの `SelectCommand` プロパティを設定した場合に、単一テーブルの更新の SQL ステートメントが自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-907">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f92ae-908">その後、設定していない追加の SQL ステートメントは、 **CommandBuilder**によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-908">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f92ae-909">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-909">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-910">詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-910">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f92ae-911"><xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドは、更新を実行する前に、最初のマッピングに記載されているテーブルから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-911">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f92ae-912"><xref:System.Data.Common.DbDataAdapter.Update%2A> は、<xref:System.Data.IDbCommand.UpdatedRowSource%2A> プロパティの値を使用して行を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-912">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f92ae-913">返されたその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-913">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f92ae-914">任意のデータが <xref:System.Data.DataSet>に読み込まれると、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生し、ユーザーは、調整された <xref:System.Data.DataSet> 行とコマンドによって返される出力パラメーターを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-914">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f92ae-915">行が正常に更新されると、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-915">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f92ae-916"><xref:System.Data.Common.DbDataAdapter.Update%2A>を使用する場合、実行の順序は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-916">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f92ae-917"><xref:System.Data.DataRow> 内の値は、パラメーター値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-917">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f92ae-918"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-918">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f92ae-919">コマンドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-919">The command executes.</span></span>  
  
4.  <span data-ttu-id="f92ae-920">コマンドが `FirstReturnedRecord`に設定されている場合、最初に返された結果が <xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-920">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f92ae-921">出力パラメーターがある場合は、<xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-921">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f92ae-922"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-922">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f92ae-923"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="f92ae-923"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f92ae-924"><xref:System.Data.Common.DbDataAdapter> に関連付けられた各コマンドには、通常、parameters コレクションが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-924">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f92ae-925">パラメーターは、.NET Framework データプロバイダーの `Parameter` クラスの `SourceColumn` および `SourceVersion` プロパティを使用して、現在の行にマップされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-925">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f92ae-926">`SourceColumn` は、現在の行のパラメーター値を取得するために <xref:System.Data.Common.DbDataAdapter> が参照する <xref:System.Data.DataTable> 列を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-926">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f92ae-927">`SourceColumn` は、テーブルマッピングが適用される前に、マップされていない列名を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-927">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f92ae-928">`SourceColumn` が存在しない列を参照している場合、実行されるアクションは、次のいずれかの <xref:System.Data.MissingMappingAction> 値に依存します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-928">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f92ae-929">列挙値</span><span class="sxs-lookup"><span data-stu-id="f92ae-929">Enumeration value</span></span>|<span data-ttu-id="f92ae-930">実行されたアクション</span><span class="sxs-lookup"><span data-stu-id="f92ae-930">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f92ae-931">マッピングが存在しない場合は、<xref:System.Data.DataSet> でソース列の名前とテーブル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-931">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f92ae-932"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-932">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f92ae-933">マッピングが明示的に設定されている場合は、通常、入力パラメーターに対して欠落しているマッピングがエラーの原因になります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-933">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f92ae-934"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-934">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f92ae-935">`SourceColumn` プロパティは、出力パラメーターまたは入出力パラメーターの値を `DataSet`にマップするためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-935">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f92ae-936">存在しない列を参照している場合は、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-936">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f92ae-937">.NET Framework データプロバイダーの `Parameter` クラスの `SourceVersion` プロパティは、列の値の元のバージョン、現在のバージョン、または提案されたバージョンのどちらを使用するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-937">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f92ae-938">この機能は、オプティミスティック同時実行制御違反を確認するために、UPDATE ステートメントの WHERE 句に元の値を含めるために使用されることがよくあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-938">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-939">行の更新中にエラーが発生した場合は、例外がスローされ、更新の実行が中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-939">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f92ae-940">エラーが発生したときに例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.DbDataAdapter.Update%2A>を呼び出す前に、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-940">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f92ae-941">また、DataAdapter の `RowUpdated` イベント内の行ごとにエラーに対応することもできます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-941">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f92ae-942">`RowUpdated` イベント内に例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.RowUpdatedEventArgs> の <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> プロパティを <xref:System.Data.UpdateStatus.Continue>に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-942">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-943">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter>の派生クラスを使用して、データソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-943">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-944">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-944">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f92ae-945">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f92ae-945">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-946">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-946">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-947">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-947">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-948">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-948">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f92ae-949">データ ソースの更新に使用した <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-949">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="f92ae-950">指定した <see cref="T:System.Data.DataTable" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-950">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f92ae-951"><see cref="T:System.Data.DataTable" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-951">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-952">アプリケーションが <xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドを呼び出すと、<xref:System.Data.Common.DbDataAdapter> は <xref:System.Data.DataRow.RowState%2A> プロパティを調べ、<xref:System.Data.DataSet>で構成されているインデックスの順序に基づいて、必要な INSERT、UPDATE、または DELETE ステートメントを各行に対して繰り返し実行します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-952">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-953">たとえば、<xref:System.Data.DataTable>内の行の順序が原因で、DELETE ステートメントを実行してから INSERT ステートメントを実行し、別の DELETE ステートメントを実行 <xref:System.Data.Common.DbDataAdapter.Update%2A> ことがあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-953">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-954">これらのステートメントはバッチ処理として実行されないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-954">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f92ae-955">アプリケーションでは、ステートメントの種類 (更新前の挿入など) のシーケンスを制御する必要がある場合に、<xref:System.Data.DataSet.GetChanges%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-955">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f92ae-956">詳細については、「 [dataadapter を使用したデータソースの更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-956">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f92ae-957">INSERT、UPDATE、または DELETE ステートメントが指定されていない場合、<xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドによって例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-957">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f92ae-958">ただし、<xref:System.Data.SqlClient.SqlCommandBuilder> または <xref:System.Data.OleDb.OleDbCommandBuilder> オブジェクトを作成すると、.NET Framework データプロバイダーの `SelectCommand` プロパティを設定した場合に、単一テーブルの更新の SQL ステートメントが自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-958">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f92ae-959">その後、設定していない追加の SQL ステートメントは、 **CommandBuilder**によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-959">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f92ae-960">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-960">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-961">詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-961">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f92ae-962"><xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドは、更新を実行する前に、最初のマッピングに記載されているテーブルから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-962">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f92ae-963"><xref:System.Data.Common.DbDataAdapter.Update%2A> は、<xref:System.Data.IDbCommand.UpdatedRowSource%2A> プロパティの値を使用して行を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-963">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f92ae-964">返されたその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-964">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f92ae-965">任意のデータが <xref:System.Data.DataSet>に読み込まれると、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生し、ユーザーは、調整された <xref:System.Data.DataSet> 行とコマンドによって返される出力パラメーターを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-965">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f92ae-966">行が正常に更新されると、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-966">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f92ae-967"><xref:System.Data.Common.DbDataAdapter.Update%2A>を使用する場合、実行の順序は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-967">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f92ae-968"><xref:System.Data.DataRow> 内の値は、パラメーター値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-968">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f92ae-969"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-969">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f92ae-970">コマンドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-970">The command executes.</span></span>  
  
4.  <span data-ttu-id="f92ae-971">コマンドが `FirstReturnedRecord`に設定されている場合、最初に返された結果が <xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-971">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f92ae-972">出力パラメーターがある場合は、<xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-972">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f92ae-973"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-973">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f92ae-974"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="f92ae-974"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f92ae-975"><xref:System.Data.Common.DbDataAdapter> に関連付けられた各コマンドには、通常、parameters コレクションが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-975">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f92ae-976">パラメーターは、.NET Framework データプロバイダーの `Parameter` クラスの `SourceColumn` および `SourceVersion` プロパティを使用して、現在の行にマップされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-976">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f92ae-977">`SourceColumn` は、現在の行のパラメーター値を取得するために <xref:System.Data.Common.DbDataAdapter> が参照する <xref:System.Data.DataTable> 列を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-977">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f92ae-978">`SourceColumn` は、テーブルマッピングが適用される前に、マップされていない列名を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-978">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f92ae-979">`SourceColumn` が存在しない列を参照している場合、実行されるアクションは、次のいずれかの <xref:System.Data.MissingMappingAction> 値に依存します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-979">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f92ae-980">列挙値</span><span class="sxs-lookup"><span data-stu-id="f92ae-980">Enumeration value</span></span>|<span data-ttu-id="f92ae-981">実行されたアクション</span><span class="sxs-lookup"><span data-stu-id="f92ae-981">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f92ae-982">マッピングが存在しない場合は、<xref:System.Data.DataSet> でソース列の名前とテーブル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-982">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f92ae-983"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-983">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f92ae-984">マッピングが明示的に設定されている場合は、通常、入力パラメーターに対して欠落しているマッピングがエラーの原因になります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-984">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f92ae-985"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-985">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f92ae-986">`SourceColumn` プロパティは、出力パラメーターまたは入出力パラメーターの値を `DataSet`にマップするためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-986">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f92ae-987">存在しない列を参照している場合は、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-987">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f92ae-988">.NET Framework データプロバイダーの `Parameter` クラスの `SourceVersion` プロパティは、列の値の元のバージョン、現在のバージョン、または提案されたバージョンのどちらを使用するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-988">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f92ae-989">この機能は、オプティミスティック同時実行制御違反を確認するために、UPDATE ステートメントの WHERE 句に元の値を含めるために使用されることがよくあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-989">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-990">行の更新中にエラーが発生した場合は、例外がスローされ、更新の実行が中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-990">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f92ae-991">エラーが発生したときに例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.DbDataAdapter.Update%2A>を呼び出す前に、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-991">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f92ae-992">また、DataAdapter の `RowUpdated` イベント内の行ごとにエラーに対応することもできます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-992">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f92ae-993">`RowUpdated` イベント内に例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.RowUpdatedEventArgs> の <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> プロパティを <xref:System.Data.UpdateStatus.Continue>に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-993">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-994">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter>の派生クラスを使用して、データソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-994">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f92ae-995"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-995">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-996">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-996">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="f92ae-997">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-997">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="f92ae-998">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-998">-or-</span></span> 
<span data-ttu-id="f92ae-999">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-999">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="f92ae-1000">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-1000">-or-</span></span> 
<span data-ttu-id="f92ae-1001">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1001">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f92ae-1002">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1002">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-1003">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1003">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-1004">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1004">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-1005">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-1005">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="f92ae-1006">データ ソースの更新に使用する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1006">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="f92ae-1007">使用する <see cref="P:System.Data.IDataAdapter.TableMappings" /> コレクション。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1007">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="f92ae-1008">指定した <see cref="T:System.Data.DataSet" /> オブジェクトの配列内の挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1008">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="f92ae-1009"><see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1009">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-1010">アプリケーションが <xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドを呼び出すと、<xref:System.Data.Common.DbDataAdapter> は <xref:System.Data.DataRow.RowState%2A> プロパティを調べ、<xref:System.Data.DataSet>で構成されているインデックスの順序に基づいて、必要な INSERT、UPDATE、または DELETE ステートメントを各行に対して繰り返し実行します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1010">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-1011">たとえば、<xref:System.Data.DataTable>内の行の順序が原因で、DELETE ステートメントを実行してから INSERT ステートメントを実行し、別の DELETE ステートメントを実行 <xref:System.Data.Common.DbDataAdapter.Update%2A> ことがあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1011">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-1012">これらのステートメントはバッチ処理として実行されないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1012">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f92ae-1013">アプリケーションでは、ステートメントの種類 (更新前の挿入など) のシーケンスを制御する必要がある場合に、<xref:System.Data.DataSet.GetChanges%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1013">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f92ae-1014">詳細については、「 [dataadapter を使用したデータソースの更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1014">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f92ae-1015">INSERT、UPDATE、または DELETE ステートメントが指定されていない場合、<xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドによって例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1015">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f92ae-1016">ただし、<xref:System.Data.SqlClient.SqlCommandBuilder> または <xref:System.Data.OleDb.OleDbCommandBuilder> オブジェクトを作成すると、.NET Framework データプロバイダーの `SelectCommand` プロパティを設定した場合に、単一テーブルの更新の SQL ステートメントが自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1016">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f92ae-1017">その後、設定していない追加の SQL ステートメントは、 **CommandBuilder**によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1017">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f92ae-1018">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1018">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-1019">詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1019">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f92ae-1020"><xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドは、更新を実行する前に、最初のマッピングに記載されているテーブルから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1020">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f92ae-1021"><xref:System.Data.Common.DbDataAdapter.Update%2A> は、<xref:System.Data.IDbCommand.UpdatedRowSource%2A> プロパティの値を使用して行を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1021">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f92ae-1022">返されたその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1022">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f92ae-1023">任意のデータが <xref:System.Data.DataSet>に読み込まれると、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生し、ユーザーは、調整された <xref:System.Data.DataSet> 行とコマンドによって返される出力パラメーターを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1023">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f92ae-1024">行が正常に更新されると、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1024">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f92ae-1025"><xref:System.Data.Common.DbDataAdapter.Update%2A>を使用する場合、実行の順序は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1025">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f92ae-1026"><xref:System.Data.DataRow> 内の値は、パラメーター値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1026">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f92ae-1027"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1027">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f92ae-1028">コマンドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1028">The command executes.</span></span>  
  
4.  <span data-ttu-id="f92ae-1029">コマンドが `FirstReturnedRecord`に設定されている場合、最初に返された結果が <xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1029">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f92ae-1030">出力パラメーターがある場合は、<xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1030">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f92ae-1031"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1031">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f92ae-1032"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1032"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f92ae-1033"><xref:System.Data.Common.DbDataAdapter> に関連付けられた各コマンドには、通常、parameters コレクションが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1033">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f92ae-1034">パラメーターは、.NET Framework データプロバイダーの `Parameter` クラスの `SourceColumn` および `SourceVersion` プロパティを使用して、現在の行にマップされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1034">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f92ae-1035">`SourceColumn` は、現在の行のパラメーター値を取得するために <xref:System.Data.Common.DbDataAdapter> が参照する <xref:System.Data.DataTable> 列を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1035">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f92ae-1036">`SourceColumn` は、テーブルマッピングが適用される前に、マップされていない列名を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1036">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f92ae-1037">`SourceColumn` が存在しない列を参照している場合、実行されるアクションは、次のいずれかの <xref:System.Data.MissingMappingAction> 値に依存します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1037">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f92ae-1038">列挙値</span><span class="sxs-lookup"><span data-stu-id="f92ae-1038">Enumeration value</span></span>|<span data-ttu-id="f92ae-1039">実行されたアクション</span><span class="sxs-lookup"><span data-stu-id="f92ae-1039">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f92ae-1040">マッピングが存在しない場合は、<xref:System.Data.DataSet> でソース列の名前とテーブル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1040">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f92ae-1041"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1041">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f92ae-1042">マッピングが明示的に設定されている場合は、通常、入力パラメーターに対して欠落しているマッピングがエラーの原因になります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1042">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f92ae-1043"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1043">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f92ae-1044">`SourceColumn` プロパティは、出力パラメーターまたは入出力パラメーターの値を `DataSet`にマップするためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1044">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f92ae-1045">存在しない列を参照している場合は、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1045">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f92ae-1046">.NET Framework データプロバイダーの `Parameter` クラスの `SourceVersion` プロパティは、列の値の元のバージョン、現在のバージョン、または提案されたバージョンのどちらを使用するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1046">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f92ae-1047">この機能は、オプティミスティック同時実行制御違反を確認するために、UPDATE ステートメントの WHERE 句に元の値を含めるために使用されることがよくあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1047">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-1048">行の更新中にエラーが発生した場合は、例外がスローされ、更新の実行が中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1048">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f92ae-1049">エラーが発生したときに例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.DbDataAdapter.Update%2A>を呼び出す前に、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1049">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f92ae-1050">また、DataAdapter の `RowUpdated` イベント内の行ごとにエラーに対応することもできます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1050">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f92ae-1051">`RowUpdated` イベント内に例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.RowUpdatedEventArgs> の <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> プロパティを <xref:System.Data.UpdateStatus.Continue>に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1051">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f92ae-1052"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1052">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-1053">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1053">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="f92ae-1054">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1054">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="f92ae-1055">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-1055">-or-</span></span> 
<span data-ttu-id="f92ae-1056">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1056">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="f92ae-1057">または</span><span class="sxs-lookup"><span data-stu-id="f92ae-1057">-or-</span></span> 
<span data-ttu-id="f92ae-1058">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1058">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f92ae-1059">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1059">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-1060">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1060">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-1061">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1061">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-1062">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-1062">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f92ae-1063">データ ソースの更新に使用する <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1063">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f92ae-1064">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1064">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f92ae-1065"><see cref="T:System.Data.DataSet" /> 内の指定した <see cref="T:System.Data.DataTable" /> 名を持つ挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1065">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="f92ae-1066"><see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1066">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-1067">アプリケーションが <xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドを呼び出すと、<xref:System.Data.Common.DbDataAdapter> は <xref:System.Data.DataRow.RowState%2A> プロパティを調べ、<xref:System.Data.DataSet>で構成されているインデックスの順序に基づいて、必要な INSERT、UPDATE、または DELETE ステートメントを各行に対して繰り返し実行します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1067">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-1068">たとえば、<xref:System.Data.DataTable>内の行の順序が原因で、DELETE ステートメントを実行してから INSERT ステートメントを実行し、別の DELETE ステートメントを実行 <xref:System.Data.Common.DbDataAdapter.Update%2A> ことがあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1068">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f92ae-1069">これらのステートメントはバッチ処理として実行されないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1069">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f92ae-1070">アプリケーションでは、ステートメントの種類のシーケンス (たとえば、UPDATE の前に INSERT) を制御する必要がある場合に、<xref:System.Data.DataSet.GetChanges%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1070">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="f92ae-1071">詳細については、「 [dataadapter を使用したデータソースの更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1071">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f92ae-1072">INSERT、UPDATE、または DELETE ステートメントが指定されていない場合、<xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドによって例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1072">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f92ae-1073">ただし、<xref:System.Data.SqlClient.SqlCommandBuilder> または <xref:System.Data.OleDb.OleDbCommandBuilder> オブジェクトを作成すると、.NET Framework データプロバイダーの `SelectCommand` プロパティを設定した場合に、単一テーブルの更新の SQL ステートメントが自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1073">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f92ae-1074">その後、設定していない追加の SQL ステートメントは、 **CommandBuilder**によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1074">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f92ae-1075">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1075">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-1076">詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1076">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f92ae-1077"><xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドは、<xref:System.Data.DataSet> に大文字と小文字のみが異なる名前を持つ複数の <xref:System.Data.DataTable> オブジェクトが含まれているシナリオをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1077">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f92ae-1078">同じ名前で大文字と小文字が異なる複数のテーブルが `DataSet`に存在する場合、<xref:System.Data.Common.DbDataAdapter.Update%2A> は、対応するテーブルを検索するために大文字と小文字を区別する比較を実行し、完全一致が存在しない場合は例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1078">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="f92ae-1079">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1079">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="f92ae-1080"><xref:System.Data.Common.DbDataAdapter.Update%2A> が呼び出され、<xref:System.Data.DataSet> の名前 <xref:System.Data.DataTable> が大文字と小文字のみで異なる場合は、その <xref:System.Data.DataTable> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1080">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f92ae-1081">このシナリオでは、比較で大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1081">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f92ae-1082">次C#のコードは、この動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1082">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f92ae-1083"><xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドは、更新を実行する前に、最初のマッピングに記載されているテーブルから行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1083">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f92ae-1084"><xref:System.Data.Common.DbDataAdapter.Update%2A> は、<xref:System.Data.IDbCommand.UpdatedRowSource%2A> プロパティの値を使用して行を更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1084">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f92ae-1085">返されたその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1085">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f92ae-1086">任意のデータが <xref:System.Data.DataSet>に読み込まれると、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生し、ユーザーは、調整された <xref:System.Data.DataSet> 行とコマンドによって返される出力パラメーターを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1086">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f92ae-1087">行が正常に更新されると、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1087">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f92ae-1088"><xref:System.Data.Common.DbDataAdapter.Update%2A>を使用する場合、実行の順序は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1088">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f92ae-1089"><xref:System.Data.DataRow> 内の値は、パラメーター値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1089">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f92ae-1090"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1090">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f92ae-1091">コマンドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1091">The command executes.</span></span>  
  
4.  <span data-ttu-id="f92ae-1092">コマンドが `FirstReturnedRecord`に設定されている場合、最初に返された結果が <xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1092">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f92ae-1093">出力パラメーターがある場合は、<xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1093">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f92ae-1094"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1094">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f92ae-1095"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1095"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f92ae-1096"><xref:System.Data.Common.DbDataAdapter> に関連付けられた各コマンドには、通常、parameters コレクションが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1096">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f92ae-1097">パラメーターは、.NET Framework データプロバイダーの `Parameter` クラスの `SourceColumn` および `SourceVersion` プロパティを使用して、現在の行にマップされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1097">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f92ae-1098">`SourceColumn` は、現在の行のパラメーター値を取得するために <xref:System.Data.Common.DbDataAdapter> が参照する <xref:System.Data.DataTable> 列を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1098">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f92ae-1099">`SourceColumn` は、テーブルマッピングが適用される前に、マップされていない列名を参照します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1099">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f92ae-1100">`SourceColumn` が存在しない列を参照している場合、実行されるアクションは、次のいずれかの <xref:System.Data.MissingMappingAction> 値に依存します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1100">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f92ae-1101">列挙値</span><span class="sxs-lookup"><span data-stu-id="f92ae-1101">Enumeration value</span></span>|<span data-ttu-id="f92ae-1102">実行されたアクション</span><span class="sxs-lookup"><span data-stu-id="f92ae-1102">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f92ae-1103">マッピングが存在しない場合は、<xref:System.Data.DataSet> でソース列の名前とテーブル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1103">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f92ae-1104"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1104">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f92ae-1105">マッピングが明示的に設定されている場合は、通常、入力パラメーターに対して欠落しているマッピングがエラーの原因になります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1105">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f92ae-1106"><xref:System.SystemException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1106">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f92ae-1107">`SourceColumn` プロパティは、出力パラメーターまたは入出力パラメーターの値を `DataSet`にマップするためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1107">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f92ae-1108">存在しない列を参照している場合は、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1108">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f92ae-1109">.NET Framework データプロバイダーの `Parameter` クラスの `SourceVersion` プロパティは、列の値の元のバージョン、現在のバージョン、または提案されたバージョンのどちらを使用するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1109">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f92ae-1110">この機能は、オプティミスティック同時実行制御違反を確認するために、UPDATE ステートメントの WHERE 句に元の値を含めるために使用されることがよくあります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1110">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f92ae-1111">行の更新中にエラーが発生した場合は、例外がスローされ、更新の実行が中止されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1111">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f92ae-1112">エラーが発生したときに例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.DbDataAdapter.Update%2A>を呼び出す前に、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1112">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f92ae-1113">また、DataAdapter の `RowUpdated` イベント内の行ごとにエラーに対応することもできます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1113">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f92ae-1114">`RowUpdated` イベント内に例外を生成せずに更新操作を続行するには、<xref:System.Data.Common.RowUpdatedEventArgs> の <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> プロパティを <xref:System.Data.UpdateStatus.Continue>に設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1114">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-1115">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter>の派生クラスを使用して、データソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1115">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f92ae-1116"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1116">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f92ae-1117">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1117">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f92ae-1118">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1118">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-1119">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1119">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-1120">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1120">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-1121">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-1121">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-1122">バッチ処理サポートを有効にするかどうか、および、1 回のバッチで実行可能なコマンド数を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1122">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="f92ae-1123">バッチごとに処理される行数。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1123">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f92ae-1124">値</span><span class="sxs-lookup"><span data-stu-id="f92ae-1124">Value is</span></span> 
 </term><description> <span data-ttu-id="f92ae-1125">効果</span><span class="sxs-lookup"><span data-stu-id="f92ae-1125">Effect</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f92ae-1126">0</span><span class="sxs-lookup"><span data-stu-id="f92ae-1126">0</span></span> 
 </term><description> <span data-ttu-id="f92ae-1127">バッチのサイズに制限はありません。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1127">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f92ae-1128">1</span><span class="sxs-lookup"><span data-stu-id="f92ae-1128">1</span></span> 
 </term><description> <span data-ttu-id="f92ae-1129">バッチ更新を無効にします。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1129">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f92ae-1130">&gt; 1</span><span class="sxs-lookup"><span data-stu-id="f92ae-1130">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="f92ae-1131">一度に送信される変更内容は <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> のバッチ サイズに基づきます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1131">Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="f92ae-1132">これを1以外の値に設定すると、<see cref="T:System.Data.Common.DbDataAdapter" /> に関連付けられているすべてのコマンドの <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> プロパティが**None**または**OutputParameters**に設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1132">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="f92ae-1133">それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1133">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-1134"><xref:System.Data.DataSet>からの変更でデータソースを更新するには、<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1134">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f92ae-1135">データプロバイダーでバッチ処理がサポートされている場合、サーバーへのラウンドトリップの回数を減らすことで、アプリケーションのパフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1135">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="f92ae-1136">ADO.NET 2.0 では、このプロパティは SQL Server (SqlClient) 用の .NET データプロバイダーと Oracle (System.data.oracleclient) でサポートされています。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1136">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="f92ae-1137">サイズの大きいバッチを実行すると、パフォーマンスが低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1137">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="f92ae-1138">そのため、アプリケーションを実装する前に、バッチの最適なサイズ設定をテストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1138">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="f92ae-1139">値が0未満の数値に設定されている場合、<xref:System.ArgumentOutOfRangeException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1139">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-1140">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1140">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-1141">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1141">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-1142">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-1142">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f92ae-1143">データ ソース内のレコードを更新するコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1143">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="f92ae-1144">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1144">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f92ae-1145"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A> は自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1145">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f92ae-1146">次の例では、派生クラス <xref:System.Data.OleDb.OleDbDataAdapter> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="f92ae-1146">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f92ae-1147">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1147">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f92ae-1148">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f92ae-1148">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f92ae-1149">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f92ae-1149">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
