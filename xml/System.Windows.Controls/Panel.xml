<Type Name="Panel" FullName="System.Windows.Controls.Panel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d86b2fc23418008ba22af7695739336b1035c7b" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82429825" /></Metadata><TypeSignature Language="C#" Value="public abstract class Panel : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Panel extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Panel" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Panel&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class Panel abstract : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Panel = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract Panel extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a05c5-101">すべての <see cref="T:System.Windows.Controls.Panel" /> 要素の基底クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-101">Provides a base class for all <see cref="T:System.Windows.Controls.Panel" /> elements.</span></span> <span data-ttu-id="a05c5-102"><see cref="T:System.Windows.Controls.Panel" /> 要素を使用して、Windows Presentation Foundation (WPF) アプリケーション内の子オブジェクトを配置および整理します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-102">Use <see cref="T:System.Windows.Controls.Panel" /> elements to position and arrange child objects in Windows Presentation Foundation (WPF) applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-103"><xref:System.Windows.Controls.Panel> には、<xref:System.Windows.Controls.Panel.Children%2A> プロパティにある <xref:System.Windows.UIElement> オブジェクトのコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a05c5-103">A <xref:System.Windows.Controls.Panel> contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property.</span></span> <span data-ttu-id="a05c5-104"><xref:System.Windows.Controls.Panel> に <xref:System.Windows.UIElement> 子を追加すると、<xref:System.Windows.Controls.Panel> 要素の <xref:System.Windows.Controls.UIElementCollection> に暗黙的に追加されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-104">Adding a <xref:System.Windows.UIElement> child to a <xref:System.Windows.Controls.Panel> implicitly adds it to the <xref:System.Windows.Controls.UIElementCollection> for the <xref:System.Windows.Controls.Panel> element.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a05c5-105">には、多数の複雑なレイアウトを実現する、派生した <xref:System.Windows.Controls.Panel> 実装の包括的なスイートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="a05c5-105">provides a comprehensive suite of derived <xref:System.Windows.Controls.Panel> implementations, enabling many complex layouts.</span></span> <span data-ttu-id="a05c5-106">新しいレイアウトコンテナーを実装する場合は、<xref:System.Windows.FrameworkElement.MeasureOverride%2A> メソッドと <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-106">If you want to implement new layout containers, use the <xref:System.Windows.FrameworkElement.MeasureOverride%2A> and <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> methods.</span></span> <span data-ttu-id="a05c5-107">これらのメソッドの使用方法のデモについては、「[カスタムコンテンツラッピングパネルサンプルを作成する](https://go.microsoft.com/fwlink/?LinkID=159979)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a05c5-107">For a demonstration of how to use these methods, see [Create a Custom Content-Wrapping Panel Sample](https://go.microsoft.com/fwlink/?LinkID=159979).</span></span>  
  
 <span data-ttu-id="a05c5-108"><xref:System.Windows.Controls.Panel.Background%2A> が定義されていない場合、<xref:System.Windows.Controls.Panel> の要素はマウスイベントまたはスタイラスイベントを受け取りません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-108"><xref:System.Windows.Controls.Panel> elements do not receive mouse or stylus events if a <xref:System.Windows.Controls.Panel.Background%2A> is not defined.</span></span> <span data-ttu-id="a05c5-109">マウスまたはスタイラスイベントを処理する必要があり、<xref:System.Windows.Controls.Panel>の背景が不要な場合は、<xref:System.Windows.Media.Brushes.Transparent%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-109">If you need to handle mouse or stylus events but do not want a background for your <xref:System.Windows.Controls.Panel>, use <xref:System.Windows.Media.Brushes.Transparent%2A>.</span></span>  
  
 <span data-ttu-id="a05c5-110">パネル要素は、既定ではフォーカスを受け取りません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-110">Panel elements do not receive focus by default.</span></span> <span data-ttu-id="a05c5-111">パネル要素でフォーカスを受け取るには、[<xref:System.Windows.UIElement.Focusable%2A>] プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-111">To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a05c5-112">次の例では、<xref:System.Windows.Controls.Panel.Children%2A> プロパティを使用して、2つの <xref:System.Windows.Controls.Button> オブジェクトを <xref:System.Windows.Controls.StackPanel>に追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-112">The following example shows how to use the <xref:System.Windows.Controls.Panel.Children%2A> property to add two <xref:System.Windows.Controls.Button> objects to a <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 [!code-xaml[StackPanel_snip#StackPanelExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StackPanel_snip/CS/StackPanelExample.xaml#stackpanelexamplewholepage)] 
 [!code-csharp[Stackpanel_Procedural_snip#StackPanelExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/Stackpanel_Procedural_snip/CSharp/StackpanelExample.cs#stackpanelexamplewholepage)] 
 [!code-vb[Stackpanel_Procedural_snip#StackPanelExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Stackpanel_Procedural_snip/visualbasic/stackpanelexample.vb#stackpanelexamplewholepage)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159979"><span data-ttu-id="a05c5-113">カスタムコンテンツラッピングパネルサンプルの作成</span><span class="sxs-lookup"><span data-stu-id="a05c5-113">Create a Custom Content-Wrapping Panel Sample</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="a05c5-114">WPF コントロールギャラリーのサンプル</span><span class="sxs-lookup"><span data-stu-id="a05c5-114">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Panel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Panel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a05c5-115"><see cref="T:System.Windows.Controls.Panel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-115">Initializes a new instance of the <see cref="T:System.Windows.Controls.Panel" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Panel.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-116"><see cref="T:System.Windows.Media.Brush" /> の境界線間の領域を塗りつぶすために使用する <see cref="T:System.Windows.Controls.Panel" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-116">Gets or sets a <see cref="T:System.Windows.Media.Brush" /> that is used to fill the area between the borders of a <see cref="T:System.Windows.Controls.Panel" />.</span></span></summary>
        <value><span data-ttu-id="a05c5-117"><see cref="T:System.Windows.Media.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-117">A <see cref="T:System.Windows.Media.Brush" />.</span></span> <span data-ttu-id="a05c5-118">この既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a05c5-118">This default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-119"><xref:System.Windows.Controls.Panel.Background%2A> が定義されていない場合、<xref:System.Windows.Controls.Panel> の要素はマウスイベントまたはスタイラスイベントを受け取りません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-119"><xref:System.Windows.Controls.Panel> elements do not receive mouse or stylus events if a <xref:System.Windows.Controls.Panel.Background%2A> is not defined.</span></span> <span data-ttu-id="a05c5-120">マウスまたはスタイラスイベントを処理する必要があり、<xref:System.Windows.Controls.Panel>の背景が不要な場合は、<xref:System.Windows.Media.Brushes.Transparent%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-120">If you need to handle mouse or stylus events but do not want a background for your <xref:System.Windows.Controls.Panel>, use <xref:System.Windows.Media.Brushes.Transparent%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a05c5-121">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a05c5-121">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a05c5-122">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a05c5-122">Identifier field</span></span>|<xref:System.Windows.Controls.Panel.BackgroundProperty>|  
|<span data-ttu-id="a05c5-123">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="a05c5-123">Metadata properties set to `true`</span></span>|<span data-ttu-id="a05c5-124"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="a05c5-124"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a05c5-125">次の例では、<xref:System.Windows.Controls.Grid> の <xref:System.Windows.Controls.Panel.Background%2A> を <xref:System.Windows.Media.RadialGradientBrush>に設定します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-125">The following example sets the <xref:System.Windows.Controls.Panel.Background%2A> of a <xref:System.Windows.Controls.Grid> to a <xref:System.Windows.Media.RadialGradientBrush>.</span></span>  
  
 [!code-xaml[PanelBackground#1](~/samples/snippets/csharp/VS_Snippets_Wpf/panelbackground/CS/mainwindow.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Brush" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Panel.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Panel.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-126"><see cref="P:System.Windows.Controls.Panel.Background" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-126">Identifies the <see cref="P:System.Windows.Controls.Panel.Background" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.Panel.Background" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UIElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UIElementCollection ^ Children { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Windows.Controls.UIElementCollection" Usage="System.Windows.Controls.Panel.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-127">この <see cref="T:System.Windows.Controls.UIElementCollection" /> の子要素の <see cref="T:System.Windows.Controls.Panel" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-127">Gets a <see cref="T:System.Windows.Controls.UIElementCollection" /> of child elements of this <see cref="T:System.Windows.Controls.Panel" />.</span></span></summary>
        <value><span data-ttu-id="a05c5-128"><see cref="T:System.Windows.Controls.UIElementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-128">A <see cref="T:System.Windows.Controls.UIElementCollection" />.</span></span> <span data-ttu-id="a05c5-129">既定値は空の <see cref="T:System.Windows.Controls.UIElementCollection" /> です。</span><span class="sxs-lookup"><span data-stu-id="a05c5-129">The default is an empty <see cref="T:System.Windows.Controls.UIElementCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-130"><xref:System.Windows.Controls.Panel> 要素の <xref:System.Windows.Controls.Panel.Children%2A> コレクションは <xref:System.Windows.UIElement> オブジェクトでのみ構成できます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-130">The <xref:System.Windows.Controls.Panel.Children%2A> collection of a <xref:System.Windows.Controls.Panel> element can only consist of <xref:System.Windows.UIElement> objects.</span></span> <span data-ttu-id="a05c5-131"><xref:System.Windows.Controls.Panel> に <xref:System.Windows.UIElement> 子を追加すると、<xref:System.Windows.Controls.Panel> 要素の <xref:System.Windows.Controls.UIElementCollection> に暗黙的に追加されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-131">Adding a <xref:System.Windows.UIElement> child to a <xref:System.Windows.Controls.Panel> implicitly adds it to the <xref:System.Windows.Controls.UIElementCollection> for the <xref:System.Windows.Controls.Panel> element.</span></span>  
  
 <span data-ttu-id="a05c5-132">このコレクションは、派生 <xref:System.Windows.Controls.Panel> クラスでは使用しないでください。代わりに、<xref:System.Windows.Controls.Panel.InternalChildren%2A> collection を使用してください。</span><span class="sxs-lookup"><span data-stu-id="a05c5-132">Do not use this collection with derived <xref:System.Windows.Controls.Panel> classes; use the <xref:System.Windows.Controls.Panel.InternalChildren%2A> collection instead.</span></span>  
  
 <span data-ttu-id="a05c5-133"><xref:System.Windows.Controls.Panel> がデータバインドされている場合、このプロパティは `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-133">This property returns `null` if the <xref:System.Windows.Controls.Panel> is data bound.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a05c5-134">次のコード例では、<xref:System.Windows.Controls.Panel.Children%2A> プロパティを使用して、<xref:System.Windows.UIElement> 子を <xref:System.Windows.Controls.Panel> 要素に追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-134">The following code example demonstrates how to use the <xref:System.Windows.Controls.Panel.Children%2A> property to add a <xref:System.Windows.UIElement> child to a <xref:System.Windows.Controls.Panel> element.</span></span>  
  
 [!code-csharp[framesnips#FrameNavigateSetup](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnips/CSharp/Window1.xaml.cs#framenavigatesetup)]
 [!code-vb[framesnips#FrameNavigateSetup](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FrameSnips/visualbasic/window1.xaml.vb#framenavigatesetup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.UIElement" />
      </Docs>
    </Member>
    <Member MemberName="CreateUIElementCollection">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Controls.UIElementCollection CreateUIElementCollection (System.Windows.FrameworkElement logicalParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Controls.UIElementCollection CreateUIElementCollection(class System.Windows.FrameworkElement logicalParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateUIElementCollection (logicalParent As FrameworkElement) As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Controls::UIElementCollection ^ CreateUIElementCollection(System::Windows::FrameworkElement ^ logicalParent);" />
      <MemberSignature Language="F#" Value="abstract member CreateUIElementCollection : System.Windows.FrameworkElement -&gt; System.Windows.Controls.UIElementCollection&#xA;override this.CreateUIElementCollection : System.Windows.FrameworkElement -&gt; System.Windows.Controls.UIElementCollection" Usage="panel.CreateUIElementCollection logicalParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="logicalParent"><span data-ttu-id="a05c5-135">作成されるコレクションの論理上の親要素。</span><span class="sxs-lookup"><span data-stu-id="a05c5-135">The logical parent element of the collection to be created.</span></span></param>
        <summary><span data-ttu-id="a05c5-136">新しい <see cref="T:System.Windows.Controls.UIElementCollection" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-136">Creates a new <see cref="T:System.Windows.Controls.UIElementCollection" />.</span></span></summary>
        <returns><span data-ttu-id="a05c5-137">指定された論理上の親を持つ、要素の順序付きコレクション。</span><span class="sxs-lookup"><span data-stu-id="a05c5-137">An ordered collection of elements that have the specified logical parent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-138">生成された <xref:System.Windows.Controls.UIElementCollection> を使用して、子要素に関する情報をキャッシュしたり、レイアウトの増分更新を実行したりします。</span><span class="sxs-lookup"><span data-stu-id="a05c5-138">Use the generated <xref:System.Windows.Controls.UIElementCollection> to cache information about child elements or to perform incremental layout updates.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms752374(v=vs.100)"><span data-ttu-id="a05c5-139">要素を動的に追加する</span><span class="sxs-lookup"><span data-stu-id="a05c5-139">Add an Element Dynamically</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="panel.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a05c5-140"><see cref="T:System.Windows.Media.Visual" /> 子のインデックス位置。</span><span class="sxs-lookup"><span data-stu-id="a05c5-140">The index position of the <see cref="T:System.Windows.Media.Visual" /> child.</span></span></param>
        <summary><span data-ttu-id="a05c5-141">指定されたインデックス位置にあるこの <see cref="T:System.Windows.Media.Visual" /> の <see cref="T:System.Windows.Controls.Panel" /> 子を取得します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-141">Gets a <see cref="T:System.Windows.Media.Visual" /> child of this <see cref="T:System.Windows.Controls.Panel" /> at the specified index position.</span></span></summary>
        <returns><span data-ttu-id="a05c5-142">親 <see cref="T:System.Windows.Media.Visual" /> 要素の子 <see cref="T:System.Windows.Controls.Panel" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-142">A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Controls.Panel" /> element.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Visual" />
      </Docs>
    </Member>
    <Member MemberName="GetZIndex">
      <MemberSignature Language="C#" Value="public static int GetZIndex (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetZIndex(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetZIndex (element As UIElement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetZIndex(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetZIndex : System.Windows.UIElement -&gt; int" Usage="System.Windows.Controls.Panel.GetZIndex element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a05c5-143"><see cref="P:System.Windows.Controls.Panel.ZIndex" /> 値の取得対象となる要素。</span><span class="sxs-lookup"><span data-stu-id="a05c5-143">The element for which to retrieve the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> value.</span></span></param>
        <summary><span data-ttu-id="a05c5-144">特定の要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-144">Gets the value of the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> property for a given element.</span></span></summary>
        <returns><span data-ttu-id="a05c5-145">要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> の位置。</span><span class="sxs-lookup"><span data-stu-id="a05c5-145">The <see cref="P:System.Windows.Controls.Panel.ZIndex" /> position of the element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a05c5-146">要素は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a05c5-146">The element is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Panel.ZIndex" />
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasLogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.HasLogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasLogicalOrientation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasLogicalOrientation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLogicalOrientation : bool" Usage="System.Windows.Controls.Panel.HasLogicalOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-147">この <see cref="T:System.Windows.Controls.Panel" /> がその子孫を 1 次元で整列させるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-147">Gets a value that indicates whether this <see cref="T:System.Windows.Controls.Panel" /> arranges its descendants in a single dimension.</span></span></summary>
        <value><span data-ttu-id="a05c5-148"><see cref="T:System.Windows.Controls.Panel" /> の方向が 1 次元の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-148"><see langword="true" /> if the orientation of the <see cref="T:System.Windows.Controls.Panel" /> is in one dimension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-149">定義済みのパネル要素の中では、<xref:System.Windows.Controls.StackPanel> だけが `true`を返します。これは、その方向が1つのディメンションであるためです。</span><span class="sxs-lookup"><span data-stu-id="a05c5-149">Among predefined panel elements, only <xref:System.Windows.Controls.StackPanel> returns `true`, because its orientation is in a single dimension.</span></span>  <span data-ttu-id="a05c5-150"><xref:System.Windows.Controls.Panel> のサブクラスでは、このプロパティをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-150">Subclasses of <xref:System.Windows.Controls.Panel> can override this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientationPublic">
      <MemberSignature Language="C#" Value="public bool HasLogicalOrientationPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientationPublic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.HasLogicalOrientationPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLogicalOrientationPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLogicalOrientationPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLogicalOrientationPublic : bool" Usage="System.Windows.Controls.Panel.HasLogicalOrientationPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-151">この <see cref="T:System.Windows.Controls.Panel" /> がその子孫を 1 次元で整列させるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-151">Gets a value that indicates whether this <see cref="T:System.Windows.Controls.Panel" /> arranges its descendants in a single dimension.</span></span></summary>
        <value><span data-ttu-id="a05c5-152"><see cref="T:System.Windows.Controls.Panel" /> の方向が 1 次元の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-152"><see langword="true" /> if the orientation of the <see cref="T:System.Windows.Controls.Panel" /> is in one dimension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-153">定義済みのパネル要素の中では、<xref:System.Windows.Controls.StackPanel> だけが `true`を返します。これは、その方向が1つのディメンションであるためです。</span><span class="sxs-lookup"><span data-stu-id="a05c5-153">Among predefined panel elements, only <xref:System.Windows.Controls.StackPanel> returns `true`, because its orientation is in a single dimension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalChildren">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Controls.UIElementCollection InternalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection InternalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.InternalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property InternalChildren As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Controls::UIElementCollection ^ InternalChildren { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalChildren : System.Windows.Controls.UIElementCollection" Usage="System.Windows.Controls.Panel.InternalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-154">子要素の <see cref="T:System.Windows.Controls.UIElementCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-154">Gets a <see cref="T:System.Windows.Controls.UIElementCollection" /> of child elements.</span></span></summary>
        <value><span data-ttu-id="a05c5-155"><see cref="T:System.Windows.UIElement" /> オブジェクトの順序指定されたコレクション。</span><span class="sxs-lookup"><span data-stu-id="a05c5-155">An ordered collection of <see cref="T:System.Windows.UIElement" /> objects.</span></span> <span data-ttu-id="a05c5-156">このプロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-156">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-157">返されるコレクションには、コードに直接追加される項目と、データバインディングによって生成される項目が含まれます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-157">The returned collection includes items that are added directly in code, and also items that are generated by data binding.</span></span>  
  
 <span data-ttu-id="a05c5-158"><xref:System.Windows.Controls.Panel> から派生したクラスでは、<xref:System.Windows.UIElement.MeasureCore%2A> や <xref:System.Windows.UIElement.ArrangeCore%2A>などの内部オーバーライドに対して、<xref:System.Windows.Controls.Panel.Children%2A> プロパティの代わりにこのプロパティを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a05c5-158">Classes that are derived from <xref:System.Windows.Controls.Panel> should use this property, instead of the <xref:System.Windows.Controls.Panel.Children%2A> property, for internal overrides such as <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159979"><span data-ttu-id="a05c5-159">カスタムコンテンツラッピングパネルサンプルの作成</span><span class="sxs-lookup"><span data-stu-id="a05c5-159">Create a Custom Content-Wrapping Panel Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsItemsHost">
      <MemberSignature Language="C#" Value="public bool IsItemsHost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsItemsHost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.IsItemsHost" />
      <MemberSignature Language="VB.NET" Value="Public Property IsItemsHost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsItemsHost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsItemsHost : bool with get, set" Usage="System.Windows.Controls.Panel.IsItemsHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-160">この <see cref="T:System.Windows.Controls.Panel" /> が <see cref="T:System.Windows.Controls.ItemsControl" /> で生成される[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目のコンテナーであることを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-160">Gets or sets a value that indicates that this <see cref="T:System.Windows.Controls.Panel" /> is a container for [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] items that are generated by an <see cref="T:System.Windows.Controls.ItemsControl" />.</span></span></summary>
        <value><span data-ttu-id="a05c5-161"><see cref="T:System.Windows.Controls.Panel" /> のこのインスタンスが項目ホストの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-161"><see langword="true" /> if this instance of <see cref="T:System.Windows.Controls.Panel" /> is an items host; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a05c5-162">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="a05c5-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-163">このプロパティにデータをバインドすることはできません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-163">You cannot bind data to this property.</span></span>  
  
<a name="dependencyPropertyInfo_IsItemsHost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a05c5-164">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a05c5-164">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a05c5-165">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a05c5-165">Identifier field</span></span>|<xref:System.Windows.Controls.Panel.IsItemsHostProperty>|  
|<span data-ttu-id="a05c5-166">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="a05c5-166">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="a05c5-167">次の例では、<xref:System.Windows.Controls.ControlTemplate> を使用して、水平方向の <xref:System.Windows.Controls.ListBox>を作成します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-167">The following example uses a <xref:System.Windows.Controls.ControlTemplate> to create a horizontal <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="a05c5-168">水平 <xref:System.Windows.Controls.StackPanel> は <xref:System.Windows.Controls.ControlTemplate>内で指定されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-168">The horizontal <xref:System.Windows.Controls.StackPanel> is specified within the <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="a05c5-169"><xref:System.Windows.Controls.Panel.IsItemsHost%2A> プロパティは <xref:System.Windows.Controls.StackPanel>で `true` に設定されます。これは、生成された項目をパネルに配置する必要があることを示します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-169">The <xref:System.Windows.Controls.Panel.IsItemsHost%2A> property is set to `true` on the <xref:System.Windows.Controls.StackPanel>, which indicates that the generated items should be placed in the panel.</span></span> <span data-ttu-id="a05c5-170">このように指定すると、<xref:System.Windows.Controls.ControlTemplate>を使用せずに、コントロールのユーザーが <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> を置き換えることはできません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-170">When you specify it this way, the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> cannot be replaced by the user of the control without using a <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="a05c5-171">そのため、この操作は、テンプレートを使用せずにパネルを置き換える必要がないことがわかっている場合にのみ行ってください。</span><span class="sxs-lookup"><span data-stu-id="a05c5-171">Therefore, do this only if you know that you do not want the panel to be replaced without the use of a template.</span></span>  
  
 [!code-xaml[StylingIntroSnippet#ListBoxCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSnippet/CS/window1.xaml#listboxct)]   
  
 <span data-ttu-id="a05c5-172">または、<xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A?displayProperty=nameWithType> プロパティを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-172">Alternatively, you can set the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a05c5-173">次の例では、<xref:System.Windows.Controls.ListBox>の <xref:System.Windows.Style> の <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-173">The following example sets the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> in a <xref:System.Windows.Style> of a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 [!code-xaml[listboxhorizontal#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxHorizontal/CS/window1.xaml#1)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ItemsControl" />
      </Docs>
    </Member>
    <Member MemberName="IsItemsHostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsItemsHostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsItemsHostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Panel.IsItemsHostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsItemsHostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsItemsHostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsItemsHostProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Panel.IsItemsHostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-174"><see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-174">Identifies the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.Panel.IsItemsHost" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.Panel.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-175">この <see cref="T:System.Windows.Controls.Panel" /> 要素の論理上の子要素を反復処理できる列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-175">Gets an enumerator that can iterate the logical child elements of this <see cref="T:System.Windows.Controls.Panel" /> element.</span></span></summary>
        <value><span data-ttu-id="a05c5-176"><see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-176">An <see cref="T:System.Collections.IEnumerator" />.</span></span> <span data-ttu-id="a05c5-177">このプロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-177">This property has no default value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Controls.Orientation LogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.LogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property LogicalOrientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Controls::Orientation LogicalOrientation { System::Windows::Controls::Orientation get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOrientation : System.Windows.Controls.Orientation" Usage="System.Windows.Controls.Panel.LogicalOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-178">パネルが 1 次元のレイアウトのみをサポートする場合は、パネルの <see cref="T:System.Windows.Controls.Orientation" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-178">The <see cref="T:System.Windows.Controls.Orientation" /> of the panel, if the panel supports layout in only a single dimension.</span></span></summary>
        <value><span data-ttu-id="a05c5-179">パネルの <see cref="T:System.Windows.Controls.Orientation" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-179">The <see cref="T:System.Windows.Controls.Orientation" /> of the panel.</span></span> <span data-ttu-id="a05c5-180">このプロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-180">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-181"><xref:System.Windows.Controls.Panel> のサブクラスでは、このプロパティをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-181">Subclasses of <xref:System.Windows.Controls.Panel> can override this property.</span></span> <span data-ttu-id="a05c5-182"><xref:System.Windows.Controls.Panel.HasLogicalOrientation%2A> が `false`場合、このプロパティ値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-182">If <xref:System.Windows.Controls.Panel.HasLogicalOrientation%2A> is `false`, this property value should be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientationPublic">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation LogicalOrientationPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientationPublic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.LogicalOrientationPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOrientationPublic As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Orientation LogicalOrientationPublic { System::Windows::Controls::Orientation get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOrientationPublic : System.Windows.Controls.Orientation" Usage="System.Windows.Controls.Panel.LogicalOrientationPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-183">パネルが 1 次元のレイアウトのみをサポートする場合は、パネルの <see cref="T:System.Windows.Controls.Orientation" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-183">The <see cref="T:System.Windows.Controls.Orientation" /> of the panel, if the panel supports layout in only a single dimension.</span></span></summary>
        <value><span data-ttu-id="a05c5-184">パネルの <see cref="T:System.Windows.Controls.Orientation" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-184">The <see cref="T:System.Windows.Controls.Orientation" /> of the panel.</span></span> <span data-ttu-id="a05c5-185">このプロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-185">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-186"><xref:System.Windows.Controls.Panel.HasLogicalOrientation%2A> が `false`場合、このプロパティ値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-186">If <xref:System.Windows.Controls.Panel.HasLogicalOrientation%2A> is `false`, this property value should be ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsItemsHostChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsItemsHostChanged (bool oldIsItemsHost, bool newIsItemsHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsItemsHostChanged(bool oldIsItemsHost, bool newIsItemsHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsItemsHostChanged (oldIsItemsHost As Boolean, newIsItemsHost As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsItemsHostChanged(bool oldIsItemsHost, bool newIsItemsHost);" />
      <MemberSignature Language="F#" Value="abstract member OnIsItemsHostChanged : bool * bool -&gt; unit&#xA;override this.OnIsItemsHostChanged : bool * bool -&gt; unit" Usage="panel.OnIsItemsHostChanged (oldIsItemsHost, newIsItemsHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldIsItemsHost" Type="System.Boolean" />
        <Parameter Name="newIsItemsHost" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oldIsItemsHost"><span data-ttu-id="a05c5-187">変更前のプロパティ値。</span><span class="sxs-lookup"><span data-stu-id="a05c5-187">The old property value.</span></span></param>
        <param name="newIsItemsHost"><span data-ttu-id="a05c5-188">新しいプロパティ値。</span><span class="sxs-lookup"><span data-stu-id="a05c5-188">The new property value.</span></span></param>
        <summary><span data-ttu-id="a05c5-189"><see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> プロパティ値が変更されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-189">Indicates that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property value has changed.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.Panel.IsItemsHost" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected override void OnRender (System.Windows.Media.DrawingContext dc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRender(class System.Windows.Media.DrawingContext dc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRender (dc As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRender(System::Windows::Media::DrawingContext ^ dc);" />
      <MemberSignature Language="F#" Value="override this.OnRender : System.Windows.Media.DrawingContext -&gt; unit" Usage="panel.OnRender dc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="dc"><span data-ttu-id="a05c5-190">描画する <see cref="T:System.Windows.Media.DrawingContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a05c5-190">The <see cref="T:System.Windows.Media.DrawingContext" /> object to draw.</span></span></param>
        <summary><span data-ttu-id="a05c5-191"><see cref="T:System.Windows.Controls.Panel" /> 要素のレンダー パス中に、<see cref="T:System.Windows.Media.DrawingContext" /> オブジェクトの内容を描画します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-191">Draws the content of a <see cref="T:System.Windows.Media.DrawingContext" /> object during the render pass of a <see cref="T:System.Windows.Controls.Panel" /> element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="panel.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="a05c5-192">コレクションに追加された <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-192">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection.</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="a05c5-193">コレクションから削除された <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-193">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection.</span></span></param>
        <summary><span data-ttu-id="a05c5-194">ビジュアル オブジェクトの <see cref="T:System.Windows.Media.VisualCollection" /> が変更されると、呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-194">Invoked when the <see cref="T:System.Windows.Media.VisualCollection" /> of a visual object is modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-195">子要素をコレクションに追加したり、コレクションから削除したりすると、<xref:System.Windows.Controls.Panel.ZIndex%2A> 値は自動的に再計算されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-195"><xref:System.Windows.Controls.Panel.ZIndex%2A> values are automatically recalculated when child elements are added to or removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Visual" />
        <altmember cref="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetZIndex">
      <MemberSignature Language="C#" Value="public static void SetZIndex (System.Windows.UIElement element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetZIndex(class System.Windows.UIElement element, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetZIndex (element As UIElement, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetZIndex(System::Windows::UIElement ^ element, int value);" />
      <MemberSignature Language="F#" Value="static member SetZIndex : System.Windows.UIElement * int -&gt; unit" Usage="System.Windows.Controls.Panel.SetZIndex (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a05c5-196">プロパティ値を適用する要素。</span><span class="sxs-lookup"><span data-stu-id="a05c5-196">The element on which to apply the property value.</span></span></param>
        <param name="value"><span data-ttu-id="a05c5-197">この要素が表示される、z 平面上の順序。</span><span class="sxs-lookup"><span data-stu-id="a05c5-197">The order on the z-plane in which this element appears.</span></span></param>
        <summary><span data-ttu-id="a05c5-198">所定の要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 添付プロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-198">Sets the value of the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> attached property for a given element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-199">特定の `element`の `value` が大きいほど、`element` がフォアグラウンドに表示される可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="a05c5-199">The greater the `value` of a given `element`, the more likely the `element` is to appear in the foreground.</span></span> <span data-ttu-id="a05c5-200">同様に、`element` の `value`が比較的低い場合は、`element` がバックグラウンドで表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a05c5-200">Likewise, if an `element` has a relatively low `value`, the `element` will likely appear in the background.</span></span> <span data-ttu-id="a05c5-201">たとえば、`value` が5の `element` は、`value` が4の `element` の上に表示されます。これは、値が3の `element` の上に表示されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-201">For example, an `element` that has a `value` of 5 will appear above an `element` that has a `value` of 4, which in turn will appear above an `element` that has a value of 3, and so on.</span></span> <span data-ttu-id="a05c5-202">負の値は許容され、この優先順位パターンは続行されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-202">Negative values are allowed, and they continue this precedence pattern.</span></span>  
  
 <span data-ttu-id="a05c5-203"><xref:System.Windows.Controls.Panel.ZIndex%2A> 値が等しい <xref:System.Windows.Controls.Panel.Children%2A> コレクションのメンバーは、ビジュアルツリーに表示される順序で表示されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-203">Members of a <xref:System.Windows.Controls.Panel.Children%2A> collection that have equal <xref:System.Windows.Controls.Panel.ZIndex%2A> values are rendered in the order in which they appear in the visual tree.</span></span> <span data-ttu-id="a05c5-204"><xref:System.Windows.Controls.Panel.Children%2A> コレクションのメンバーを反復処理することで、子のインデックス位置を確認できます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-204">You can determine the index position of a child by iterating the members of the <xref:System.Windows.Controls.Panel.Children%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a05c5-205">次の例は、<xref:System.Windows.Controls.Panel.SetZIndex%2A> メソッドを使用して <xref:System.Windows.Controls.Panel.ZIndex%2A> プロパティの値を設定する方法をコードで示しています。</span><span class="sxs-lookup"><span data-stu-id="a05c5-205">The following example demonstrates in code how to set the value of the <xref:System.Windows.Controls.Panel.ZIndex%2A> property (by using the <xref:System.Windows.Controls.Panel.SetZIndex%2A> method).</span></span>  
  
 [!code-cpp[canvasz-order#2](~/samples/snippets/cpp/VS_Snippets_Wpf/CanvasZ-Order/CPP/CanvasZ-Order.cpp#2)]
 [!code-csharp[canvasz-order#2](~/samples/snippets/csharp/VS_Snippets_Wpf/CanvasZ-Order/Csharp/CanvasZ-Order.cs#2)]
 [!code-vb[canvasz-order#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CanvasZ-Order/VisualBasic/CanvasZ-Order.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a05c5-206">要素は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a05c5-206">The element is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeChildren">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.ShouldSerializeChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeChildren () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeChildren();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeChildren : unit -&gt; bool" Usage="panel.ShouldSerializeChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a05c5-207">パネルの <see cref="P:System.Windows.Controls.Panel.Children" /> コレクションをシリアル化する必要があるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-207">Determines whether the <see cref="P:System.Windows.Controls.Panel.Children" /> collection of a panel should be serialized.</span></span></summary>
        <returns><span data-ttu-id="a05c5-208"><see cref="P:System.Windows.Controls.Panel.Children" /> コレクションをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a05c5-208"><see langword="true" /> if the <see cref="P:System.Windows.Controls.Panel.Children" /> collection should be serialized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a05c5-209"><see cref="P:System.Windows.Controls.Panel.Children" /> コレクションは、空または <see langword="null" /> ではない場合にのみシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-209">The <see cref="P:System.Windows.Controls.Panel.Children" /> collection is only serialized if it is not empty and not <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="panel.System.Windows.Markup.IAddChild.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a05c5-210">子として追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a05c5-210">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="a05c5-211">この型またはメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-211">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="panel.System.Windows.Markup.IAddChild.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a05c5-212">オブジェクトに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="a05c5-212">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="a05c5-213">この型またはメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="a05c5-213">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.Controls.Panel.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-214"><see cref="T:System.Windows.Media.Visual" /> のこのインスタンス内の子 <see cref="T:System.Windows.Controls.Panel" /> オブジェクトの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-214">Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Controls.Panel" />.</span></span></summary>
        <value><span data-ttu-id="a05c5-215">子 <see cref="T:System.Windows.Media.Visual" /> オブジェクトの数。</span><span class="sxs-lookup"><span data-stu-id="a05c5-215">The number of child <see cref="T:System.Windows.Media.Visual" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZIndex">
      <MemberSignature Language="C#" Value="see GetZIndex, and SetZIndex" />
      <MemberSignature Language="ILAsm" Value="see GetZIndex, and SetZIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.ZIndex" />
      <MemberSignature Language="VB.NET" Value="see GetZIndex, and SetZIndex" />
      <MemberSignature Language="F#" Value="see GetZIndex, and SetZIndex" Usage="see GetZIndex, and SetZIndex" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a05c5-216">要素が Z 平面上に表示される順序を表す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-216">Gets or sets a value that represents the order on the z-plane in which an element appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05c5-217">特定の `element`の `value` が大きいほど、`element` がフォアグラウンドに表示される可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="a05c5-217">The greater the `value` of a given `element`, the more likely the `element` is to appear in the foreground.</span></span> <span data-ttu-id="a05c5-218">同様に、`element` の `value`が比較的低い場合は、`element` がバックグラウンドで表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a05c5-218">Likewise, if an `element` has a relatively low `value`, the `element` will likely appear in the background.</span></span> <span data-ttu-id="a05c5-219">たとえば、`value` が5の `element` は、`value` が4の `element` の上に表示されます。これは、値が3の `element` の上に表示されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-219">For example, an `element` that has a `value` of 5 will appear above an `element` that has a `value` of 4, which in turn will appear above an `element` that has a value of 3, and so on.</span></span> <span data-ttu-id="a05c5-220">負の値は許容され、この優先順位パターンは続行されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-220">Negative values are allowed, and they continue this precedence pattern.</span></span>  
  
 <span data-ttu-id="a05c5-221"><xref:System.Windows.Controls.Panel.ZIndex%2A> 値が等しい <xref:System.Windows.Controls.Panel.Children%2A> コレクションのメンバーは、ビジュアルツリーに表示される順序で表示されます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-221">Members of a <xref:System.Windows.Controls.Panel.Children%2A> collection that have equal <xref:System.Windows.Controls.Panel.ZIndex%2A> values are rendered in the order in which they appear in the visual tree.</span></span> <span data-ttu-id="a05c5-222"><xref:System.Windows.Controls.Panel.Children%2A> コレクションのメンバーを反復処理することで、子のインデックス位置を確認できます。</span><span class="sxs-lookup"><span data-stu-id="a05c5-222">You can determine the index position of a child by iterating the members of the <xref:System.Windows.Controls.Panel.Children%2A> collection.</span></span>  
  
<a name="dependencyPropertyInfo_Bottom"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a05c5-223">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a05c5-223">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a05c5-224">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a05c5-224">Identifier field</span></span>|<xref:System.Windows.Controls.Panel.ZIndexProperty>|  
|<span data-ttu-id="a05c5-225">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="a05c5-225">Metadata properties set to `true`</span></span>|<span data-ttu-id="a05c5-226">None</span><span class="sxs-lookup"><span data-stu-id="a05c5-226">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a05c5-227">次の例では、[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] とコードを使用して、<xref:System.Windows.Controls.Panel.ZIndex%2A> プロパティの値を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-227">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Panel.ZIndex%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and code.</span></span>  
  
 [!code-cpp[canvasz-order#1](~/samples/snippets/cpp/VS_Snippets_Wpf/CanvasZ-Order/CPP/CanvasZ-Order.cpp#1)]
 [!code-csharp[canvasz-order#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CanvasZ-Order/Csharp/CanvasZ-Order.cs#1)]
 [!code-xml[canvasz-order#1](~/samples/snippets/xaml/VS_Snippets_Wpf/CanvasZ-Order/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ZIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ZIndexProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Panel.ZIndexProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ZIndexProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ZIndexProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ZIndexProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Panel.ZIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05c5-228"><see cref="P:System.Windows.Controls.Panel.ZIndex" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a05c5-228">Identifies the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
