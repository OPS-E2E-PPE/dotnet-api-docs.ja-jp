<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f49151389acf28a56f938f84f8c970e5f16a15eb" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83536077" /></Metadata><TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Controls.Primitives.MenuBase" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2551b-101">コントロールのコンテキストに固有の機能をそのコントロールで公開するためのポップアップ メニューを表します。</span><span class="sxs-lookup"><span data-stu-id="2551b-101">Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-102"><xref:System.Windows.Controls.ContextMenu> は <xref:System.Windows.Controls.ItemsControl>であり、任意の型 (文字列、イメージ、パネルなど) のオブジェクトのコレクションを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="2551b-102"><xref:System.Windows.Controls.ContextMenu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="2551b-103">詳細については、<xref:System.Windows.Controls.ItemsControl> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="2551b-104"><xref:System.Windows.Controls.ContextMenu> クラスのプロパティは、<xref:System.Windows.Controls.ContextMenu>の位置と動作を定義するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-104">The properties of the <xref:System.Windows.Controls.ContextMenu> class are used to define the position and behavior of the <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 <span data-ttu-id="2551b-105"><xref:System.Windows.FrameworkElement> または <xref:System.Windows.FrameworkContentElement> には <xref:System.Windows.Controls.ContextMenu>を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="2551b-105">A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a <xref:System.Windows.Controls.ContextMenu>.</span></span>  <span data-ttu-id="2551b-106"><xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> または <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> プロパティに <xref:System.Windows.Controls.ContextMenu> を割り当てると、ユーザーの操作に応答してコンテキストメニュー操作が <xref:System.Windows.Controls.ContextMenuService> クラスによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-106">If you assign a <xref:System.Windows.Controls.ContextMenu> to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction.</span></span> <span data-ttu-id="2551b-107"><xref:System.Windows.Controls.ContextMenuService> 作業の一部は、ユーザーがコントロール上でマウスの右ボタンをクリックしたときに <xref:System.Windows.Controls.ContextMenu> を開きます。</span><span class="sxs-lookup"><span data-stu-id="2551b-107">Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the <xref:System.Windows.Controls.ContextMenu> when the user clicks the right mouse button over the control.</span></span>  
  
 <span data-ttu-id="2551b-108">次のプロパティは、<xref:System.Windows.Controls.ContextMenu> クラスと <xref:System.Windows.Controls.ContextMenuService> クラスによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-108">The following properties are defined by the <xref:System.Windows.Controls.ContextMenu> and <xref:System.Windows.Controls.ContextMenuService> classes.</span></span>  <span data-ttu-id="2551b-109">これらのプロパティのいずれかが <xref:System.Windows.Controls.ContextMenu> と <xref:System.Windows.Controls.ContextMenuService>の両方に設定されている場合、<xref:System.Windows.Controls.ContextMenuService> のプロパティ値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-109">If any of these properties are set on both <xref:System.Windows.Controls.ContextMenu> and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.</span></span>  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 <span data-ttu-id="2551b-110"><xref:System.Windows.Controls.ContextMenu> は <xref:System.Windows.Controls.Primitives.Popup> コントロール内に自動的に配置されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-110">A <xref:System.Windows.Controls.ContextMenu> is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="2551b-111">この動作は変更できません。</span><span class="sxs-lookup"><span data-stu-id="2551b-111">This behavior cannot be changed.</span></span>  
  
## <a name="customizing-the-contextmenu-control"></a><span data-ttu-id="2551b-112">ContextMenu コントロールのカスタマイズ</span><span class="sxs-lookup"><span data-stu-id="2551b-112">Customizing the ContextMenu Control</span></span>  
 <span data-ttu-id="2551b-113">複数の<xref:System.Windows.Controls.ContextMenu>コントロールに同じプロパティの設定を適用するには、<xref:System.Windows.FrameworkElement.Style%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="2551b-113">To apply the same property settings to multiple <xref:System.Windows.Controls.ContextMenu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="2551b-114"><xref:System.Windows.Controls.ControlTemplate>の既定値を変更して外観を制御します。</span><span class="sxs-lookup"><span data-stu-id="2551b-114">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="2551b-115"><xref:System.Windows.Controls.ControlTemplate>作成の詳細については、「 [ControlTemplate の作成による既存コントロールの外観カスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-115">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="2551b-116"><xref:System.Windows.Controls.ContextMenu>に固有のパーツと状態を確認するには、「 [ContextMenu のスタイルとテンプレート](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-116">To see the parts and states that are specific to the <xref:System.Windows.Controls.ContextMenu>, see [ContextMenu Styles and Templates](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="2551b-117">このコントロールの依存関係のプロパティは、コントロールの既定のスタイルによって設定される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2551b-117">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="2551b-118">プロパティが既定のスタイルによって設定されている場合、アプリケーションにコントロールが表示されると、プロパティが既定値から変更されることがあります。</span><span class="sxs-lookup"><span data-stu-id="2551b-118">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="2551b-119">既定のスタイルは、アプリケーションの実行時に使用するデスクトップテーマによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-119">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="2551b-120">詳しくは、「[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="2551b-120">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="2551b-121">次の例では、<xref:System.Windows.Controls.TextBox>のテキストを操作する <xref:System.Windows.Controls.ContextMenu> を作成します。</span><span class="sxs-lookup"><span data-stu-id="2551b-121">The following example creates a <xref:System.Windows.Controls.ContextMenu> that manipulates the text of a <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="2551b-122">この例では、<xref:System.Windows.Controls.ContextMenu>内の <xref:System.Windows.Controls.MenuItem> オブジェクトのイベントをサブスクライブして処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2551b-122">The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2551b-123"><see cref="T:System.Windows.Controls.ContextMenu" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2551b-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : System.Windows.RoutedEventHandler " Usage="member this.Closed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-124"><see cref="T:System.Windows.Controls.ContextMenu" /> の特定のインスタンスが閉じたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="2551b-124">Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2551b-125">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="2551b-125">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-126">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-126">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|<span data-ttu-id="2551b-127">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="2551b-127">Routing strategy</span></span>|<span data-ttu-id="2551b-128">バブリング</span><span class="sxs-lookup"><span data-stu-id="2551b-128">Bubbling</span></span>|  
|<span data-ttu-id="2551b-129">デリゲート</span><span class="sxs-lookup"><span data-stu-id="2551b-129">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="2551b-130">次の例は、<xref:System.Windows.Controls.ContextMenu> イベントの使用方法を示しています。 <xref:System.Windows.Controls.ContextMenu.Opened> と <xref:System.Windows.Controls.ContextMenu.Closed>です。</span><span class="sxs-lookup"><span data-stu-id="2551b-130">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-131"><see cref="E:System.Windows.Controls.ContextMenu.Closed" /> ルーティング イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-131">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-132">画面上で <see cref="T:System.Windows.Controls.ContextMenu" /> を配置する場所を示すコールバックを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-132">Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</span></span></summary>
        <value><span data-ttu-id="2551b-133"><see cref="T:System.Windows.Controls.ContextMenu" /> の位置を示すコールバック。</span><span class="sxs-lookup"><span data-stu-id="2551b-133">A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-134">使用するコールバックデリゲートには、<xref:System.Windows.Controls.ContextMenu.Placement%2A> プロパティを <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2551b-134">The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> for the callback delegate to be used.</span></span>  
  
 <span data-ttu-id="2551b-135"><xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> デリゲートは、<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>に対して定義されている、可能なポイントの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2551b-135">The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span></span> <span data-ttu-id="2551b-136">コンテキストメニューが表示されると、表示される <xref:System.Windows.Controls.ToolTip> ウィンドウの量を最大化するポイントが選択されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-136">When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.</span></span>  
  
 <span data-ttu-id="2551b-137">動作は、ポップアップの場合と同じです。</span><span class="sxs-lookup"><span data-stu-id="2551b-137">The behavior is the same as it is for the popup.</span></span> <span data-ttu-id="2551b-138">詳細については、「[方法: カスタムポップアップ位置](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md)と[ポップアップ配置サンプル](https://github.com/dotnet/dotnet-api-docs/tree/master/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS)を指定する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-138">For more information, see [How to: Specify a Custom Popup Position](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) and [Popup Placement Sample](https://github.com/dotnet/dotnet-api-docs/tree/master/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS).</span></span>
 
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-139">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-140">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-140">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="2551b-141">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="2551b-142">なし</span><span class="sxs-lookup"><span data-stu-id="2551b-142">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-143"><see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-143">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-144">コントロールがスクロールをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2551b-144">Gets a value that indicates whether the control supports scrolling.</span></span></summary>
        <value><span data-ttu-id="2551b-145">常に <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="2551b-145">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-146">コントロールのスタイルに <xref:System.Windows.Controls.ScrollViewer> があり、カスタムキーボードスクロール動作がある場合、<xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> は `true`を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2551b-146">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool with get, set" Usage="System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-147">コンテキスト メニューがドロップ シャドウを伴って表示されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-147">Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</span></span></summary>
        <value><span data-ttu-id="2551b-148">コンテキスト メニューがドロップ シャドウを伴って表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2551b-148"><see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2551b-149">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="2551b-149">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-150"><xref:System.Windows.Controls.ContextMenu> が開いたときに、値は <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>の値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-150">When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2551b-151"><xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> プロパティが `false`場合、このプロパティを `true` に設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="2551b-151">Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property is `false`.</span></span>  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-152">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-152">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-153">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-153">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|<span data-ttu-id="2551b-154">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-154">Metadata properties set to `true`</span></span>|<span data-ttu-id="2551b-155">なし</span><span class="sxs-lookup"><span data-stu-id="2551b-155">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2551b-156"><xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> プロパティを使用する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="2551b-156">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> property.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-157"><see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-157">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-158">対象の左開始位置からポップアップの配置ポイントまでの横方向の距離を取得または指定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-158">Get or sets the horizontal distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="2551b-159">対象の左開始位置からポップアップの配置ポイントまでの横方向の距離。</span><span class="sxs-lookup"><span data-stu-id="2551b-159">The horizontal distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="2551b-160">ターゲットの始点とポップアップの配置ポイントの詳細については、「[ポップアップ配置の動作](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-160">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="2551b-161">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="2551b-161">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-162"><xref:System.Windows.Controls.ContextMenu> を配置するには、<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>、<xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>、<xref:System.Windows.Controls.ContextMenu.Placement%2A>、<xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>、および <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> の各プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-162">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="2551b-163">これらのプロパティは、<xref:System.Windows.Controls.Primitives.Popup>の場合と同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="2551b-163">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="2551b-164">詳細については、「[Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-164">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-165">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-165">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-166">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-166">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|<span data-ttu-id="2551b-167">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-167">Metadata properties set to `true`</span></span>|<span data-ttu-id="2551b-168">なし</span><span class="sxs-lookup"><span data-stu-id="2551b-168">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="2551b-169">XAML 属性の使用</span><span class="sxs-lookup"><span data-stu-id="2551b-169">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2551b-170">XAML の値</span><span class="sxs-lookup"><span data-stu-id="2551b-170">XAML Values</span></span>  
 <span data-ttu-id="2551b-171">*double*</span><span class="sxs-lookup"><span data-stu-id="2551b-171">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="2551b-172"><xref:System.Double> 値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="2551b-172">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="2551b-173">これは、[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] の測定値として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-173">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="2551b-174">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="2551b-174">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="2551b-175">たとえば、`1` の値は許容されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-175">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="2551b-176">[プロパティの値] セクションに記載されているのと同じ <xref:System.Double> 範囲の制限が適用されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-176">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="2551b-177">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="2551b-177">*qualifiedDouble*</span></span>  
 <span data-ttu-id="2551b-178">前に説明した*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位宣言文字列が続きます。</span><span class="sxs-lookup"><span data-stu-id="2551b-178">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="2551b-179">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="2551b-179">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="2551b-180">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="2551b-180">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="2551b-181">`cm` はセンチメートルです。1cm = = (96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="2551b-181">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="2551b-182">`pt` はポイント。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="2551b-182">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="2551b-183">**メモ**多くの場合、double は Auto に設定できますが、オフセットが Auto に設定されていると <xref:System.Windows.Controls.ContextMenu> は表示されません。</span><span class="sxs-lookup"><span data-stu-id="2551b-183">**Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2551b-184">次の例では、<xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> プロパティを使用して、ボタンの親に対して指定された位置で <xref:System.Windows.Controls.ContextMenu> を開く方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2551b-184">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-185"><see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-185">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-186"><see cref="T:System.Windows.Controls.ContextMenu" /> が表示されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-186">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</span></span></summary>
        <value><span data-ttu-id="2551b-187"><see cref="T:System.Windows.Controls.ContextMenu" /> が可視の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2551b-187"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2551b-188">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="2551b-188">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-189"><xref:System.Windows.Controls.ContextMenu.IsOpen%2A> が `true`に設定されている場合、マウスのキャプチャは <xref:System.Windows.Controls.ContextMenu> とそのサブツリーに設定されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-189">When <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-190">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-190">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-191">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-191">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|<span data-ttu-id="2551b-192">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-192">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="2551b-193">この例では、<xref:System.Windows.Controls.ContextMenu.IsOpen%2A> プロパティが `true`に設定されているかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2551b-193">This example shows how to check to determine whether the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-194"><see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-194">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2551b-195"><see cref="E:System.Windows.Controls.ContextMenu.Closed" /> イベントのイベント データ。</span><span class="sxs-lookup"><span data-stu-id="2551b-195">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</span></span></param>
        <summary><span data-ttu-id="2551b-196"><see cref="E:System.Windows.Controls.ContextMenu.Closed" /> イベントが発生すると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-196">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contextMenu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2551b-197">この <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.ContextMenu" /> オブジェクトを作成して返します。</span><span class="sxs-lookup"><span data-stu-id="2551b-197">Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <returns><span data-ttu-id="2551b-198">この <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.ContextMenu" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2551b-198">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contextMenu.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2551b-199"><see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> イベントのイベント データ。</span><span class="sxs-lookup"><span data-stu-id="2551b-199">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="2551b-200"><see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> プロパティが変更されたことを報告します。</span><span class="sxs-lookup"><span data-stu-id="2551b-200">Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2551b-201"><see cref="E:System.Windows.UIElement.KeyDown" /> イベントのイベント データ。</span><span class="sxs-lookup"><span data-stu-id="2551b-201">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="2551b-202"><see cref="E:System.Windows.ContentElement.KeyDown" /> イベントが <see cref="T:System.Windows.Controls.ContextMenu" /> 内のオブジェクトによって起動されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-202">Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2551b-203"><see cref="E:System.Windows.UIElement.KeyUp" /> イベントのイベント データ。</span><span class="sxs-lookup"><span data-stu-id="2551b-203">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="2551b-204"><see cref="E:System.Windows.ContentElement.KeyUp" /> イベントに応答します。</span><span class="sxs-lookup"><span data-stu-id="2551b-204">Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2551b-205"><see cref="E:System.Windows.Controls.ContextMenu.Opened" /> イベントのイベント データ。</span><span class="sxs-lookup"><span data-stu-id="2551b-205">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</span></span></param>
        <summary><span data-ttu-id="2551b-206"><see cref="E:System.Windows.Controls.ContextMenu.Opened" /> イベントが発生すると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-206">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="contextMenu.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="2551b-207">前にコンテキスト メニューが関連付けられていたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2551b-207">The object that the context menu was previously attached to.</span></span></param>
        <summary><span data-ttu-id="2551b-208">コンテキスト メニューのビジュアル親が変更されるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-208">Called when a context menu's visual parent changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : System.Windows.RoutedEventHandler " Usage="member this.Opened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-209">ショートカット メニューの特定のインスタンスが開いたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="2551b-209">Occurs when a particular instance of a context menu opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2551b-210">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="2551b-210">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-211">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-211">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|<span data-ttu-id="2551b-212">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="2551b-212">Routing strategy</span></span>|<span data-ttu-id="2551b-213">バブリング</span><span class="sxs-lookup"><span data-stu-id="2551b-213">Bubbling</span></span>|  
|<span data-ttu-id="2551b-214">デリゲート</span><span class="sxs-lookup"><span data-stu-id="2551b-214">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="2551b-215">次の例は、<xref:System.Windows.Controls.ContextMenu> イベントの使用方法を示しています。 <xref:System.Windows.Controls.ContextMenu.Opened> と <xref:System.Windows.Controls.ContextMenu.Closed>です。</span><span class="sxs-lookup"><span data-stu-id="2551b-215">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-216"><see cref="E:System.Windows.Controls.ContextMenu.Opened" /> ルーティング イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-216">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.ContextMenu.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-217"><see cref="P:System.Windows.Controls.ContextMenu.Placement" /> の <see cref="T:System.Windows.Controls.ContextMenu" /> プロパティを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-217">Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <value><span data-ttu-id="2551b-218"><see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 列挙体のいずれか。</span><span class="sxs-lookup"><span data-stu-id="2551b-218">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration.</span></span> <span data-ttu-id="2551b-219">既定では、 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />です。</span><span class="sxs-lookup"><span data-stu-id="2551b-219">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-220"><xref:System.Windows.Controls.ContextMenu> が <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> または <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> プロパティに割り当てられている場合、<xref:System.Windows.Controls.ContextMenuService> は <xref:System.Windows.Controls.ContextMenu> が開いたときにこのプロパティの値を変更します。</span><span class="sxs-lookup"><span data-stu-id="2551b-220">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="2551b-221">ユーザーがマウスを使用して <xref:System.Windows.Controls.ContextMenu> を開いた場合、<xref:System.Windows.Controls.ContextMenu.Placement%2A> は <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-221">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span></span>  <span data-ttu-id="2551b-222">ユーザーがキーボードを使用して <xref:System.Windows.Controls.ContextMenu> を開いた場合、<xref:System.Windows.Controls.ContextMenu.Placement%2A> は <xref:System.Windows.Controls.Primitives.PlacementMode.Center>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-222">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span></span>  <span data-ttu-id="2551b-223"><xref:System.Windows.Controls.ContextMenu>の位置を変更する場合は、<xref:System.Windows.FrameworkElement> または <xref:System.Windows.FrameworkContentElement>の <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-223">If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="2551b-224"><xref:System.Windows.Controls.ContextMenu> を配置するには、<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>、<xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>、<xref:System.Windows.Controls.ContextMenu.Placement%2A>、<xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>、および <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> の各プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-224">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="2551b-225">これらのプロパティは、<xref:System.Windows.Controls.Primitives.Popup>の場合と同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="2551b-225">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="2551b-226">詳細については、「[Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-226">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-227">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-227">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-228">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-228">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|<span data-ttu-id="2551b-229">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-229">Metadata properties set to `true`</span></span>|<span data-ttu-id="2551b-230">なし</span><span class="sxs-lookup"><span data-stu-id="2551b-230">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2551b-231">次の例では、<xref:System.Windows.Controls.ContextMenu.Placement%2A> プロパティと配置モードを使用して、<xref:System.Windows.Controls.ContextMenu> が配置される場所を指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2551b-231">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.Placement%2A> property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-232"><see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-232">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-233">コンテキスト メニューが開くときに配置の基準となる領域を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-233">Gets or sets the area relative to which the context menu is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="2551b-234">コンテキスト メニューの配置に使用される四角形を定義する領域。</span><span class="sxs-lookup"><span data-stu-id="2551b-234">The area that defines the rectangle that is used to position the context menu.</span></span> <span data-ttu-id="2551b-235">既定では、 <see cref="P:System.Windows.Rect.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="2551b-235">The default is <see cref="P:System.Windows.Rect.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-236"><xref:System.Windows.Controls.ContextMenu> を配置するには、<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>、<xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>、<xref:System.Windows.Controls.ContextMenu.Placement%2A>、<xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>、および <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> の各プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-236">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="2551b-237">これらのプロパティは、<xref:System.Windows.Controls.Primitives.Popup>の場合と同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="2551b-237">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="2551b-238">詳細については、「[Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-238">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-239">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-239">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-240">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-240">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|<span data-ttu-id="2551b-241">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-241">Metadata properties set to `true`</span></span>|<span data-ttu-id="2551b-242">なし</span><span class="sxs-lookup"><span data-stu-id="2551b-242">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2551b-243">次の例では、<xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> プロパティを使用し、<xref:System.Windows.Controls.ContextMenu> が配置される場所を指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2551b-243">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-244"><see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-244">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-245"><see cref="T:System.Windows.UIElement" /> が開くときに配置の基準となる <see cref="T:System.Windows.Controls.ContextMenu" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-245">Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="2551b-246"><see cref="T:System.Windows.Controls.ContextMenu" /> が開くときに配置の基準となる要素。</span><span class="sxs-lookup"><span data-stu-id="2551b-246">The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span> <span data-ttu-id="2551b-247">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2551b-247">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-248"><xref:System.Windows.Controls.ContextMenu> が <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> または <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> プロパティに割り当てられている場合、<xref:System.Windows.Controls.ContextMenuService> は、<xref:System.Windows.FrameworkElement> が開いたときに、このプロパティのこの値を所有している <xref:System.Windows.FrameworkContentElement> または <xref:System.Windows.Controls.ContextMenu> に変更します。</span><span class="sxs-lookup"><span data-stu-id="2551b-248">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="2551b-249">別の <xref:System.Windows.UIElement>を使用するには、<xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-249">To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-250">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-251">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-251">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|<span data-ttu-id="2551b-252">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-252">Metadata properties set to `true`</span></span>|<span data-ttu-id="2551b-253">なし</span><span class="sxs-lookup"><span data-stu-id="2551b-253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2551b-254"><xref:System.Windows.Controls.ContextMenu> のターゲットはその親です。</span><span class="sxs-lookup"><span data-stu-id="2551b-254">The target of a <xref:System.Windows.Controls.ContextMenu> is its parent.</span></span> <span data-ttu-id="2551b-255">次の例は、<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> プロパティを使用して <xref:System.Windows.Controls.ContextMenu>の親を検索する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="2551b-255">The following examples show how to use the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-256"><see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-256">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="contextMenu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2551b-257">指定した項目を表示するために使用する要素。</span><span class="sxs-lookup"><span data-stu-id="2551b-257">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="2551b-258">指定した項目。</span><span class="sxs-lookup"><span data-stu-id="2551b-258">Specified item.</span></span></param>
        <summary><span data-ttu-id="2551b-259">指定した要素に指定した項目が表示されるように準備します。</span><span class="sxs-lookup"><span data-stu-id="2551b-259">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-260">要素の準備には、スタイルの適用、バインディングの設定などが含まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="2551b-260">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-261"><see cref="T:System.Windows.Controls.ContextMenu" /> が自動的に閉じるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-261">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</span></span></summary>
        <value><span data-ttu-id="2551b-262"><see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> プロパティが <see langword="true" /> に変更されるまでメニューを開いたままにする場合は <see langword="false" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2551b-262"><see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2551b-263">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="2551b-263">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-264">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-264">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-265">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-265">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|<span data-ttu-id="2551b-266">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-266">Metadata properties set to `true`</span></span>|<span data-ttu-id="2551b-267">なし</span><span class="sxs-lookup"><span data-stu-id="2551b-267">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2551b-268">次の例では、<xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> プロパティを使用して、<xref:System.Windows.Controls.ContextMenu.IsOpen%2A> プロパティを `false`に変更するイベントが発生するまで開いたままになるコンテキストメニューを作成します。</span><span class="sxs-lookup"><span data-stu-id="2551b-268">The following example uses the <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-269"><see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-269">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-270">対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離を取得または指定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-270">Get or sets the vertical distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="2551b-271">対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離。</span><span class="sxs-lookup"><span data-stu-id="2551b-271">The vertical distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="2551b-272">ターゲットの始点とポップアップの配置ポイントの詳細については、「[ポップアップ配置の動作](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-272">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="2551b-273">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="2551b-273">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2551b-274"><xref:System.Windows.Controls.ContextMenu> を配置するには、<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>、<xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>、<xref:System.Windows.Controls.ContextMenu.Placement%2A>、<xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>、および <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> の各プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2551b-274">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="2551b-275">これらのプロパティは、<xref:System.Windows.Controls.Primitives.Popup>の場合と同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="2551b-275">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="2551b-276">詳細については、「[Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2551b-276">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2551b-277">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="2551b-277">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2551b-278">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="2551b-278">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|<span data-ttu-id="2551b-279">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="2551b-279">Metadata properties set to `true`</span></span>|<span data-ttu-id="2551b-280">なし</span><span class="sxs-lookup"><span data-stu-id="2551b-280">None</span></span>|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="2551b-281">XAML 属性の使用</span><span class="sxs-lookup"><span data-stu-id="2551b-281">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2551b-282">XAML の値</span><span class="sxs-lookup"><span data-stu-id="2551b-282">XAML Values</span></span>  
 <span data-ttu-id="2551b-283">*double*</span><span class="sxs-lookup"><span data-stu-id="2551b-283">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="2551b-284"><xref:System.Double> 値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="2551b-284">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="2551b-285">これは、[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] の測定値として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-285">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="2551b-286">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="2551b-286">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="2551b-287">たとえば、`1` の値は許容されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-287">For instance, a value of `1` is acceptable.</span></span> <span data-ttu-id="2551b-288">[プロパティの値] セクションに記載されているのと同じ <xref:System.Double> 範囲の制限が適用されます。</span><span class="sxs-lookup"><span data-stu-id="2551b-288">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="2551b-289">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="2551b-289">*qualifiedDouble*</span></span>  
 <span data-ttu-id="2551b-290">前に説明した*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位宣言文字列が続きます。</span><span class="sxs-lookup"><span data-stu-id="2551b-290">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="2551b-291">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="2551b-291">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="2551b-292">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="2551b-292">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="2551b-293">`cm` はセンチメートルです。1cm = = (96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="2551b-293">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="2551b-294">`pt` はポイント。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="2551b-294">`pt` is points; 1pt==(96/72) px</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2551b-295">多くの場合、double は Auto に設定できますが、オフセットが Auto に設定されている場合は <xref:System.Windows.Controls.ContextMenu> が表示されません。</span><span class="sxs-lookup"><span data-stu-id="2551b-295">In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2551b-296">次の例では、<xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> プロパティを使用して、ボタンの親に対して指定された位置で <xref:System.Windows.Controls.ContextMenu> を開く方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2551b-296">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2551b-297"><see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="2551b-297">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
