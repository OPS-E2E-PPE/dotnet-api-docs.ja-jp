<Type Name="GroupStyle" FullName="System.Windows.Controls.GroupStyle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e27fb2936fe76a989c706be6de1707f6433db3a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83962323" /></Metadata><TypeSignature Language="C#" Value="public class GroupStyle : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupStyle extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.GroupStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupStyle&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupStyle : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type GroupStyle = class&#xA;    interface INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi GroupStyle extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>レベルごとにグループの外観を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、<xref:System.Windows.Data.XmlDataProvider> にバインドされている <xref:System.Windows.Controls.ItemsControl> と、グループ化を追加および削除するロジックを含む分離コードコンテンツを示しています。 このチェックボックスをオンにすると、<xref:System.Windows.Controls.ItemsControl> の内容が `Type` 属性によってグループ化されます。  
  
 各グループの種類は <xref:System.Windows.Data.CollectionViewGroup>です。 <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> は、各グループの <xref:System.Windows.Data.CollectionViewGroup.Name%2A> を表示する <xref:System.Windows.Controls.TextBlock> として表示されるように指定されています。 この場合、<xref:System.Windows.Data.CollectionViewGroup.Name%2A> は `Work` または `Home`です。  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.GroupStyle" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.Controls.GroupStyle.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>代替 <see cref="T:System.Windows.Controls.GroupItem" /> オブジェクトの数を取得または設定します。</summary>
        <value>代替 <see cref="T:System.Windows.Controls.GroupItem" /> オブジェクトの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> プロパティと <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 添付プロパティを使用すると、2つ以上の交互の <xref:System.Windows.Controls.GroupItem> オブジェクトの外観を指定できます。 たとえば、<xref:System.Windows.Controls.ItemsControl>内の3つの <xref:System.Windows.Controls.GroupItem> ごとに、交互の背景色を指定できます。  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> は、<xref:System.Windows.Controls.ItemsControl>内の各 <xref:System.Windows.Controls.GroupItem> に割り当てられます。  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> は0から開始され、<xref:System.Windows.Controls.GroupStyle.AlternationCount%2A>-1 になるまで増加し、0で再起動します。 たとえば、<xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> が3で、<xref:System.Windows.Controls.ItemsControl>に7つの <xref:System.Windows.Controls.GroupItem> オブジェクトがある場合、次の表は各項目の <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> を示しています。  
  
|<xref:System.Windows.Controls.ItemsControl> 内の <xref:System.Windows.Controls.GroupItem> の位置|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 別の <xref:System.Windows.Controls.GroupItem> オブジェクトに対してさまざまな外観を指定するために使用できる方法がいくつかあります。 1つの方法として、<xref:System.Windows.Controls.GroupStyle> の <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> または <xref:System.Windows.Controls.GroupStyle.ContainerStyle%2A> のプロパティを <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>にバインドする方法があります。 次に、<xref:System.Windows.Controls.AlternationConverter> を使用して、特定の <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 値を持つ <xref:System.Windows.Controls.GroupItem> に適用する値を指定できます。 トリガーを使用して、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>の値に応じてプロパティの値を変更することもできます。  
  
   
  
## Examples  
 次の例では、コレクション内の項目をグループ化する <xref:System.Windows.Data.CollectionViewSource> にバインドされている <xref:System.Windows.Controls.ListBox> を作成します。 この例では、次の手順を実行して、2つの色の間の各 <xref:System.Windows.Controls.GroupItem> のヘッダーの背景を代替します。  
  
-   <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> を2に設定します。  
  
-   <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>の値に応じて <xref:System.Windows.Media.SolidColorBrush>を返す <xref:System.Windows.Controls.AlternationConverter> を作成します。  
  
-   <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> 内の <xref:System.Windows.Controls.TextBlock> の <xref:System.Windows.Controls.TextBlock.Background%2A> を <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> プロパティにバインドし、<xref:System.Windows.Controls.AlternationConverter>を提供します。 <xref:System.Windows.Controls.GroupItem>に <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A> 添付プロパティが設定されており、バインディングが <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> を使用してその値を取得していることに注意してください。  
  
 また、この例では、<xref:System.Windows.Controls.ListBox> に <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> を設定し、各 <xref:System.Windows.Controls.ListBox> の <xref:System.Windows.Controls.Control.Background%2A> を <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>にバインドすることによって、<xref:System.Windows.Controls.ListBox> 内の項目の背景を3色に切り替えます。 この場合、背景は3色を交互にします。  
  
 項目をグループ化する <xref:System.Windows.Data.CollectionViewSource> は表示されません。  項目をグループ化する方法の詳細については、「[方法: XAML のビューを使用してデータの並べ替えとグループ化](/dotnet/framework/wpf/data/how-to-sort-and-group-data-using-a-view-in-xaml)を行う」を参照してください。  
  
 [!code-xaml[AlternationIndexSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.GroupStyle.ContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目ごとに生成される <see cref="T:System.Windows.Controls.GroupItem" /> に適用されるスタイルを取得または設定します。</summary>
        <value>項目ごとに生成される <see cref="T:System.Windows.Controls.GroupItem" /> に適用されるスタイル。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、スタイルをリソースとして作成するのではなく、プロパティ要素構文でインライン <xref:System.Windows.Style> を作成する場合のまれなケースです。これは、適切な方法です。  
  
<a name="xamlAttributeUsage_ContainerStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object ContainerStyle="{ResourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlValues_ColumnHeaderContainerStyle"></a>   
## <a name="xaml-values"></a>XAML の値  
 *ResourceExtension*  
 次のいずれか: `StaticResource`、または `DynamicResource`。 「 [XAML リソース](/dotnet/framework/wpf/advanced/xaml-resources)」を参照してください。  
  
 *StyleResourceKey*  
 要求されているスタイルを識別するキー。 キーは、<xref:System.Windows.ResourceDictionary>内の既存のリソースを参照します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      </Docs>
    </Member>
    <Member MemberName="ContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>生成された各 <see cref="T:System.Windows.Controls.GroupItem" /> に適用するスタイルを選択するためのカスタム ロジックを、アプリケーション作成者が提供できるようにします。</summary>
        <value><see cref="T:System.Windows.Controls.StyleSelector" /> から派生するオブジェクト。 既定では、 <see langword="null" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.GroupStyle Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.GroupStyle Default" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As GroupStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::GroupStyle ^ Default { System::Windows::Controls::GroupStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Windows.Controls.GroupStyle" Usage="System.Windows.Controls.GroupStyle.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.GroupStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループの既定のスタイルを取得します。</summary>
        <value>グループの既定のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Default"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.property>  
    <x:Static Member="GroupStyle.Default" …/>  
  </object.property>  
</object>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGroupPanel">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultGroupPanel As ItemsPanelTemplate " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Controls::ItemsPanelTemplate ^ DefaultGroupPanel;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultGroupPanel : System.Windows.Controls.ItemsPanelTemplate" Usage="System.Windows.Controls.GroupStyle.DefaultGroupPanel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目のレイアウトに使用するパネルを作成する既定の <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> を識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のパネルが必要な場合は、このパネルが指定されています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HeaderStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStringFormat : string with get, set" Usage="System.Windows.Controls.GroupStyle.HeaderStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヘッダーが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
        <value>ヘッダーが文字列として表示される場合に、その書式を指定する複合文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> には、定義済み、複合、またはカスタムの文字列形式を使用できます。 文字列形式の詳細については、「[型の書式設定](/dotnet/standard/base-types/formatting-types)」を参照してください。 <xref:System.Windows.Controls.GroupStyle>の <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> または <xref:System.Windows.Controls.GroupStyle.HeaderTemplateSelector%2A> プロパティを設定した場合、<xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> プロパティは無視されます。  
  
   
  
## Examples  
 次の例では、価格範囲によって項目のコレクションをグループ化する <xref:System.Windows.Controls.ListBox> を作成します。  コンバーター (`GroupByPrice`) は、各項目の価格の上にある整数値を返します。 たとえば、品目の価格が 0 ~ 100 の場合、コンバーターは100を返します。 この例では、<xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> を使用して、各価格範囲の上限を含む文字列を作成します。 たとえば、米国では、100ドル未満の項目は、"$100 の下にある項目" という見出しの下にグループ化されます。  
  
 [!code-xaml[ContentStringSnippets#GroupStyleHeaderStringFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#groupstyleheaderstringformat)]  
  
 次の例は、`GroupByPrice` クラス、`PurchaseItem` クラス、および <xref:System.Windows.Controls.ListBox> がバインドされているコレクションを示しています。  
  
 [!code-csharp[ContentStringSnippets#GroupStyleData](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml.cs#groupstyledata)]
 [!code-vb[ContentStringSnippets#GroupStyleData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentStringSnippets/visualbasic/window1.xaml.vb#groupstyledata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ HeaderTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.GroupStyle.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループ ヘッダーを表示するために使用するテンプレートを取得または設定します。</summary>
        <value>グループ ヘッダーを表示するために使用する <see cref="T:System.Windows.DataTemplate" /> オブジェクト。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、<xref:System.Windows.Data.XmlDataProvider> にバインドされている <xref:System.Windows.Controls.ItemsControl> と、グループ化を追加および削除するロジックを含む分離コードコンテンツを示しています。 このチェックボックスをオンにすると、<xref:System.Windows.Controls.ItemsControl> の内容が `Type` 属性によってグループ化されます。  
  
 各グループの種類は <xref:System.Windows.Data.CollectionViewGroup>です。 <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> は、各グループの <xref:System.Windows.Data.CollectionViewGroup.Name%2A> を表示する <xref:System.Windows.Controls.TextBlock> として表示されるように指定されています。 この場合、<xref:System.Windows.Data.CollectionViewGroup.Name%2A> は `Work` または `Home`です。  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 次の例は、<xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> プロパティの使用方法を示しています。  
  
 [!code-xaml[DataBindingLab#GroupStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#groupstyle)]  
  
 `groupingHeaderTemplate`<xref:System.Windows.DataTemplate>の定義を次に示します。  
  
 [!code-xaml[DataBindingLab#HeaderTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#headertemplate)]  
  
 完全なサンプルについては、「[データバインディングのデモ](https://go.microsoft.com/fwlink/?LinkID=163703)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ HeaderTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループ ヘッダーの表示に使用するテンプレートを選択するためのカスタム ロジックを、アプリケーション作成者が提供できるようにします。</summary>
        <value><see cref="T:System.Windows.Controls.DataTemplateSelector" /> から派生するオブジェクト。 既定では、 <see langword="null" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HidesIfEmpty">
      <MemberSignature Language="C#" Value="public bool HidesIfEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesIfEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HidesIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property HidesIfEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HidesIfEmpty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HidesIfEmpty : bool with get, set" Usage="System.Windows.Controls.GroupStyle.HidesIfEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>空のグループに対応する項目が表示されるかどうかを指定する値を取得または設定します。</summary>
        <value>空のグループを表示しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="groupStyle.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">発生しているイベントの引数。</param>
        <summary>指定された引数を使用して、<see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Panel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemsPanelTemplate Panel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemsPanelTemplate Panel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Panel" />
      <MemberSignature Language="VB.NET" Value="Public Property Panel As ItemsPanelTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemsPanelTemplate ^ Panel { System::Windows::Controls::ItemsPanelTemplate ^ get(); void set(System::Windows::Controls::ItemsPanelTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Panel : System.Windows.Controls.ItemsPanelTemplate with get, set" Usage="System.Windows.Controls.GroupStyle.Panel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目のレイアウトに使用するパネルを作成するテンプレートを取得または設定します。</summary>
        <value>項目のレイアウトに使用するパネルを作成する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.GroupStyle.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Custom Event PropertyChanged As PropertyChangedEventHandler " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Event PropertyChanged As PropertyChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ値が変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.GroupStyle.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.INotifyPropertyChanged.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.System.ComponentModel.INotifyPropertyChanged.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ値が変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
