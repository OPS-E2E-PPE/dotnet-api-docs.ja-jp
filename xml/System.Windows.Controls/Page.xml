<Type Name="Page" FullName="System.Windows.Controls.Page">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4d5993cb05224e40a8089b429c08355ca7676df" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82504822" /></Metadata><TypeSignature Language="C#" Value="public class Page : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Page extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Page" />
  <TypeSignature Language="VB.NET" Value="Public Class Page&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class Page : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Page = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Page extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Content")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6cf0a-101">Windows Internet Explorer、<see cref="T:System.Windows.Navigation.NavigationWindow" />、および <see cref="T:System.Windows.Controls.Frame" /> でナビゲーションおよびホストできるコンテンツのページをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-101">Encapsulates a page of content that can be navigated to and hosted by Windows Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow" />, and <see cref="T:System.Windows.Controls.Frame" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-102"><xref:System.Windows.Controls.Page> は、移動できるコンテンツのページをカプセル化し、次の主なメンバーを持ちます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-102"><xref:System.Windows.Controls.Page> encapsulates a page of content that can be navigated, and has the following key members:</span></span>  
  
-   <span data-ttu-id="6cf0a-103">**有効期間の管理**: <xref:System.Windows.Controls.Page.KeepAlive%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-103">**Lifetime Management**: <xref:System.Windows.Controls.Page.KeepAlive%2A>.</span></span>  
  
-   <span data-ttu-id="6cf0a-104">**ナビゲーション**: <xref:System.Windows.Controls.Page.NavigationService%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-104">**Navigation**: <xref:System.Windows.Controls.Page.NavigationService%2A>.</span></span>  
  
-   <span data-ttu-id="6cf0a-105">**外観**: <xref:System.Windows.Controls.Page.Background%2A>、<xref:System.Windows.Controls.Page.Content%2A>、<xref:System.Windows.Controls.Page.FontFamily%2A>、<xref:System.Windows.Controls.Page.FontSize%2A>、<xref:System.Windows.Controls.Page.Foreground%2A>、<xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>、<xref:System.Windows.Controls.Page.Template%2A>、<xref:System.Windows.Controls.Page.Title%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-105">**Appearance**: <xref:System.Windows.Controls.Page.Background%2A>, <xref:System.Windows.Controls.Page.Content%2A>, <xref:System.Windows.Controls.Page.FontFamily%2A>, <xref:System.Windows.Controls.Page.FontSize%2A>, <xref:System.Windows.Controls.Page.Foreground%2A>, <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>, <xref:System.Windows.Controls.Page.Template%2A>, <xref:System.Windows.Controls.Page.Title%2A>.</span></span>  
  
-   <span data-ttu-id="6cf0a-106">**ホストウィンドウの外観**: <xref:System.Windows.Controls.Page.WindowHeight%2A>、<xref:System.Windows.Controls.Page.WindowWidth%2A>、<xref:System.Windows.Controls.Page.WindowTitle%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-106">**Host Window Appearance**: <xref:System.Windows.Controls.Page.WindowHeight%2A>, <xref:System.Windows.Controls.Page.WindowWidth%2A>, <xref:System.Windows.Controls.Page.WindowTitle%2A>.</span></span>  
  
 <span data-ttu-id="6cf0a-107">ページは、マークアップ、マークアップと分離コード、またはコードを使用して定義できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-107">A page can be defined by using markup, markup and code-behind, or code.</span></span> <span data-ttu-id="6cf0a-108">ページは、次の理由により、ナビゲーションのためにコンテンツをパッケージ化するために推奨される方法です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-108">A page is the preferred way to package content for navigation, for the following reasons:</span></span>  
  
-   <span data-ttu-id="6cf0a-109">定義、再利用、および管理が簡単です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-109">It is easy to define, reuse, and manage.</span></span>  
  
-   <span data-ttu-id="6cf0a-110">移動先の <xref:System.Windows.Navigation.NavigationService> にアクセスして使用することができます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-110">It can access and use the <xref:System.Windows.Navigation.NavigationService> that navigated to it.</span></span>  
  
-   <span data-ttu-id="6cf0a-111">ホストウィンドウ (<xref:System.Windows.Controls.Page.WindowTitle%2A>、<xref:System.Windows.Controls.Page.WindowWidth%2A>、<xref:System.Windows.Controls.Page.WindowHeight%2A>、<xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>) のタイトル、幅、高さ、およびナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] を変更できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-111">It can alter the title, width, height, and navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of its host window (<xref:System.Windows.Controls.Page.WindowTitle%2A>, <xref:System.Windows.Controls.Page.WindowWidth%2A>, <xref:System.Windows.Controls.Page.WindowHeight%2A>, <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>).</span></span>  
  
-   <span data-ttu-id="6cf0a-112">[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]でデザイナーがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-112">It has designer support in [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)].</span></span>  
  
 <span data-ttu-id="6cf0a-113">ページは、<xref:System.Windows.Window>、<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>、またはブラウザーからホストできます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-113">A page can be hosted from <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, or from a browser.</span></span> <span data-ttu-id="6cf0a-114">ホストされるページは次のようになります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-114">To be hosted, a page can be:</span></span>  
  
-   <span data-ttu-id="6cf0a-115">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]内の <xref:System.Windows.Window>、<xref:System.Windows.Navigation.NavigationWindow>、または <xref:System.Windows.Controls.Frame> 要素の直接の子。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-115">The direct child of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or <xref:System.Windows.Controls.Frame> element in [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)].</span></span>  
  
-   <span data-ttu-id="6cf0a-116">インスタンス化され、<xref:System.Windows.Window>、<xref:System.Windows.Navigation.NavigationWindow>、および <xref:System.Windows.Controls.Frame>の `Content` プロパティの値として設定されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-116">Instantiated and set as the value of the `Content` property of <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, and <xref:System.Windows.Controls.Frame>.</span></span>  
  
-   <span data-ttu-id="6cf0a-117"><xref:System.Windows.Navigation.NavigationWindow> または <xref:System.Windows.Controls.Frame>の `Source` プロパティの uniform resource identifier (URI) ソースとして設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-117">Set as the uniform resource identifier (URI) source of the `Source` property of either <xref:System.Windows.Navigation.NavigationWindow> or <xref:System.Windows.Controls.Frame>.</span></span>  
  
-   <span data-ttu-id="6cf0a-118">スタンドアロンアプリケーションの <xref:System.Windows.Application.StartupUri%2A> として設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-118">Set as the <xref:System.Windows.Application.StartupUri%2A> in a standalone application.</span></span>  
  
-   <span data-ttu-id="6cf0a-119">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]の <xref:System.Windows.Application.StartupUri%2A> として設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-119">Set as the <xref:System.Windows.Application.StartupUri%2A> in an [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)].</span></span>  
  
 <span data-ttu-id="6cf0a-120">通常、アプリケーションには2つ以上のページがあり、次のメカニズムを使用して移動できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-120">An application typically has two or more pages, which can be navigated between using the following mechanisms:</span></span>  
  
-   <span data-ttu-id="6cf0a-121"><xref:System.Windows.Documents.Hyperlink>を使用して宣言によって行います。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-121">Declaratively by using <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
-   <span data-ttu-id="6cf0a-122"><xref:System.Windows.Navigation.NavigationService>を使用したプログラム。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-122">Programmatically by using <xref:System.Windows.Navigation.NavigationService>.</span></span>  
  
-   <span data-ttu-id="6cf0a-123">ホストのナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] ([!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]、<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>など) を使用して視覚的にします。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-123">Visually by using the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of the host, including [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], <xref:System.Windows.Navigation.NavigationWindow>, and <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="6cf0a-124">ページ関数を使用した構造化ナビゲーション (<xref:System.Windows.Navigation.PageFunction%601>) については、「[構造化ナビゲーションの概要](~/docs/framework/wpf/app-development/structured-navigation-overview.md)」および「[ナビゲーショントポロジの概要](~/docs/framework/wpf/app-development/navigation-topologies-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-124">For structured navigation using page functions (<xref:System.Windows.Navigation.PageFunction%601>), see [Structured Navigation Overview](~/docs/framework/wpf/app-development/structured-navigation-overview.md) and [Navigation Topologies Overview](~/docs/framework/wpf/app-development/navigation-topologies-overview.md).</span></span>  
  
 <span data-ttu-id="6cf0a-125">このコントロールの依存関係のプロパティは、コントロールの既定のスタイルによって設定される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-125">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="6cf0a-126">プロパティが既定のスタイルによって設定されている場合、アプリケーションにコントロールが表示されると、プロパティが既定値から変更されることがあります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-126">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="6cf0a-127">既定のスタイルは、アプリケーションの実行時に使用するデスクトップテーマによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-127">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="6cf0a-128">詳しくは、「[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-128">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf0a-129">次の例は、マークアップのみを使用して標準のページを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-129">The following example shows how a standard page is defined using only markup:</span></span>  
  
 [!code-xaml[PageSnippets#MarkupPageMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupPage.xaml#markuppagemarkup)]  
  
 <span data-ttu-id="6cf0a-130">次の例は、コードのみを使用して標準ページを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-130">The following example shows how a standard page is defined using only code:</span></span>  
  
 [!code-csharp[PageSnippets#CodePageCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/CodePage.cs#codepagecodebehind)]
 [!code-vb[PageSnippets#CodePageCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageSnippets/visualbasic/codepage.vb#codepagecodebehind)]  
  
 <span data-ttu-id="6cf0a-131">次の例は、マークアップと分離コードの組み合わせを使用して、標準のページを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-131">The following example shows how a standard page is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[PageSnippets#MarkupAndCodeBehindPageMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupAndCodeBehindPage.xaml#markupandcodebehindpagemarkup)]  
  
 [!code-csharp[PageSnippets#MarkupAndCodeBehindPageCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupAndCodeBehindPage.xaml.cs#markupandcodebehindpagecodebehind)]
 [!code-vb[PageSnippets#MarkupAndCodeBehindPageCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageSnippets/visualbasic/markupandcodebehindpage.xaml.vb#markupandcodebehindpagecodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Navigation.PageFunction`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Page ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Page();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cf0a-132"><see cref="T:System.Windows.Controls.Page" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-132">Initializes a new instance of the <see cref="T:System.Windows.Controls.Page" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-133"><xref:System.Windows.Controls.Page> が維持されていない場合 (<xref:System.Windows.Controls.Page.KeepAlive%2A>を参照) は、パラメーターなしのコンストラクターを実装する必要があります。これにより、戻るまたは forward ナビゲーション履歴に移動したときに、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] が新しいインスタンスを作成できるようになります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-133">If a <xref:System.Windows.Controls.Page> is not being kept alive (see <xref:System.Windows.Controls.Page.KeepAlive%2A>), it needs to implement a parameterless constructor to allow [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] to create a new instance of it when navigated to in back or forward navigation history.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="page.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds"><span data-ttu-id="6cf0a-134">子要素の配置に使用されるサイズ。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-134">The size to use to arrange the child elements.</span></span></param>
        <summary><span data-ttu-id="6cf0a-135"><see cref="T:System.Windows.Controls.Page" /> のコンテンツ (子要素) を配置します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-135">Arranges the content (child elements) of the <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <returns><span data-ttu-id="6cf0a-136">ページの配置後のサイズを表す <see cref="T:System.Windows.Size" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-136">A <see cref="T:System.Windows.Size" /> that represents the arranged size of the page.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Page.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-137"><see cref="T:System.Windows.Controls.Page" /> の背景を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-137">Gets or sets the background for a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-138"><see cref="T:System.Windows.Media.Brush" /> の背景を描画するために使用される <see cref="T:System.Windows.Controls.Page" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-138">The <see cref="T:System.Windows.Media.Brush" /> that <see cref="T:System.Windows.Controls.Page" /> uses to paint its background.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageBackground"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6cf0a-139">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="6cf0a-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6cf0a-140">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="6cf0a-140">Identifier field</span></span>|<xref:System.Windows.Controls.Page.BackgroundProperty>|  
|<span data-ttu-id="6cf0a-141">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="6cf0a-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="6cf0a-142"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="6cf0a-142"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-143"><see cref="P:System.Windows.Controls.Page.Background" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-143">Identifies the <see cref="P:System.Windows.Controls.Page.Background" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Controls.Page.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-144"><see cref="T:System.Windows.Controls.Page" /> のコンテンツを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-144">Gets or sets the content of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-145"><see cref="T:System.Windows.Controls.Page" /> のコンテンツが格納されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-145">An object that contains the content of a <see cref="T:System.Windows.Controls.Page" />.</span></span> <span data-ttu-id="6cf0a-146">既定では、 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-146">The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-147"><xref:System.Windows.Controls.Page> には、1つの子要素のみを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-147">A <xref:System.Windows.Controls.Page> can have only a single child element.</span></span> <span data-ttu-id="6cf0a-148"><xref:System.Windows.Controls.Page> の他のすべての要素は、その要素の子孫である必要があります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-148">All other elements on a <xref:System.Windows.Controls.Page> must be descendents of that element.</span></span> <span data-ttu-id="6cf0a-149">通常、<xref:System.Windows.Controls.Page> のコンテンツは、<xref:System.Windows.Controls.Page>のコンテンツをホストするレイアウト要素 (<xref:System.Windows.Controls.Grid>、<xref:System.Windows.Controls.StackPanel>、<xref:System.Windows.Controls.DockPanel> など) をホストします。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-149">Typically, the content of a <xref:System.Windows.Controls.Page> hosts a layout element - such as <xref:System.Windows.Controls.Grid>, <xref:System.Windows.Controls.StackPanel>, and <xref:System.Windows.Controls.DockPanel> - that hosts the content of the <xref:System.Windows.Controls.Page>.</span></span>  
  
<a name="dependencyPropertyInfo_PageContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6cf0a-150">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="6cf0a-150">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6cf0a-151">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="6cf0a-151">Identifier field</span></span>|<xref:System.Windows.Controls.Page.ContentProperty>|  
|<span data-ttu-id="6cf0a-152">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="6cf0a-152">Metadata properties set to `true`</span></span>|<span data-ttu-id="6cf0a-153">なし</span><span class="sxs-lookup"><span data-stu-id="6cf0a-153">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.ContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-154"><see cref="P:System.Windows.Controls.Page.Content" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-154">Identifies the <see cref="P:System.Windows.Controls.Page.Content" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily FontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.FontFamily" />
      <MemberSignature Language="VB.NET" Value="Public Property FontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamily ^ FontFamily { System::Windows::Media::FontFamily ^ get(); void set(System::Windows::Media::FontFamily ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FontFamily : System.Windows.Media.FontFamily with get, set" Usage="System.Windows.Controls.Page.FontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-155">指定したフォント ファミリの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-155">Gets or sets the name of the specified font family.</span></span></summary>
        <value><span data-ttu-id="6cf0a-156"><see cref="T:System.Windows.Media.FontFamily" /> のコンテンツのフォント ファミリである <see cref="T:System.Windows.Controls.Page" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-156">A <see cref="T:System.Windows.Media.FontFamily" /> that is the font family for the content of a <see cref="T:System.Windows.Controls.Page" />.</span></span> <span data-ttu-id="6cf0a-157">既定では、 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-157">The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageFontFamily"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6cf0a-158">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="6cf0a-158">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6cf0a-159">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="6cf0a-159">Identifier field</span></span>|<xref:System.Windows.Controls.Page.FontFamilyProperty>|  
|<span data-ttu-id="6cf0a-160">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="6cf0a-160">Metadata properties set to `true`</span></span>|<span data-ttu-id="6cf0a-161"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="6cf0a-161"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamilyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontFamilyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontFamilyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.FontFamilyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontFamilyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontFamilyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontFamilyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.FontFamilyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-162"><see cref="P:System.Windows.Controls.Page.FontFamily" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-162">Identifies the <see cref="P:System.Windows.Controls.Page.FontFamily" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-163"><xref:System.Windows.Controls.Page.FontFamily%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-163">The identifier for the <xref:System.Windows.Controls.Page.FontFamily%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="6cf0a-164">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="6cf0a-164">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public double FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.FontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontSize : double with get, set" Usage="System.Windows.Controls.Page.FontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.FontSizeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-165">フォント サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-165">Gets or sets the font size.</span></span></summary>
        <value><span data-ttu-id="6cf0a-166"><see cref="T:System.Windows.Controls.Page" /> のコンテンツのフォント サイズ。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-166">The font size for the content of a <see cref="T:System.Windows.Controls.Page" />.</span></span> <span data-ttu-id="6cf0a-167">既定では、 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-167">The default is <see cref="P:System.Windows.SystemFonts.MessageFontSize" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-168">フォントサイズは、正の数値と <xref:System.Windows.SystemFonts.MessageFontSize%2A>の範囲で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-168">The font size must be a positive number and in the range of the <xref:System.Windows.SystemFonts.MessageFontSize%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_PageFontSize"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6cf0a-169">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="6cf0a-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6cf0a-170">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="6cf0a-170">Identifier field</span></span>|<xref:System.Windows.Controls.Page.FontSizeProperty>|  
|<span data-ttu-id="6cf0a-171">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="6cf0a-171">Metadata properties set to `true`</span></span>|<span data-ttu-id="6cf0a-172"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="6cf0a-172"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.FontSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontSizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontSizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.FontSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-173"><see cref="P:System.Windows.Controls.Page.FontSize" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-173">Identifies the <see cref="P:System.Windows.Controls.Page.FontSize" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-174"><xref:System.Windows.Controls.Page.FontSize%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-174">The identifier for the <xref:System.Windows.Controls.Page.FontSize%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="6cf0a-175">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="6cf0a-175">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Foreground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Foreground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Foreground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Foreground" />
      <MemberSignature Language="VB.NET" Value="Public Property Foreground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Foreground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Foreground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Page.Foreground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-176"><see cref="T:System.Windows.Controls.Page" /> の前景を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-176">Gets or sets the foreground for a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-177"><see cref="T:System.Windows.Media.Brush" /> の前景を描画するために使用される <see cref="T:System.Windows.Controls.Page" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-177">The <see cref="T:System.Windows.Media.Brush" /> that <see cref="T:System.Windows.Controls.Page" /> uses to paint its foreground.</span></span> <span data-ttu-id="6cf0a-178">既定では、 <see cref="P:System.Windows.Media.Brushes.Black" />です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-178">The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageForeground"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6cf0a-179">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="6cf0a-179">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6cf0a-180">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="6cf0a-180">Identifier field</span></span>|<xref:System.Windows.Controls.Page.ForegroundProperty>|  
|<span data-ttu-id="6cf0a-181">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="6cf0a-181">Metadata properties set to `true`</span></span>|<span data-ttu-id="6cf0a-182"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="6cf0a-182"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForegroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForegroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.ForegroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForegroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForegroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ForegroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.ForegroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-183"><see cref="P:System.Windows.Controls.Page.Foreground" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-183">Identifies the <see cref="P:System.Windows.Controls.Page.Foreground" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-184"><xref:System.Windows.Controls.Page.Foreground%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-184">The identifier for the <xref:System.Windows.Controls.Page.Foreground%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="6cf0a-185">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="6cf0a-185">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Windows.Controls.Page.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-186"><see cref="T:System.Windows.Controls.Page" /> のインスタンスがナビゲーション履歴に保持されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-186">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Page" /> instance is retained in navigation history.</span></span></summary>
        <value><span data-ttu-id="6cf0a-187">ナビゲーション履歴に <see langword="true" /> のインスタンスを保持する場合は <see cref="T:System.Windows.Controls.Page" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-187"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Page" /> instance is retained in navigation history; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6cf0a-188">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-188">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-189">ページが最初に移動されると、<xref:System.Windows.Controls.Page> クラスの新しいインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-189">When a page is first navigated to, a new instance of the <xref:System.Windows.Controls.Page> class is created.</span></span> <span data-ttu-id="6cf0a-190">ページが (戻るまたは forward) から移動すると、ページのエントリがナビゲーション履歴に追加されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-190">When a page is navigated away from (either back or forward), an entry for the page is added to navigation history.</span></span> <span data-ttu-id="6cf0a-191">既定では、エントリはページオブジェクトを参照しません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-191">By default, the entry does not reference the page object.</span></span> <span data-ttu-id="6cf0a-192">このエントリには、ページのパック URI (uniform resource identifier) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-192">Instead, the entry contains a pack uniform resource identifier (URI) for the page.</span></span> <span data-ttu-id="6cf0a-193">ページのエントリにナビゲーション履歴を使用して移動すると、そのページの新しいインスタンスを作成するためにパック URI が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-193">When the entry for the page is navigated to using navigation history, the pack URI is used to create a new instance of the page.</span></span> <span data-ttu-id="6cf0a-194">この動作は、メモリ使用量が過剰にならないようにするための既定の動作です。ページインスタンスを保持することで、特に、大量のコンテンツを含むメモリをすぐに使用できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-194">This behavior is the default, to avoid excessive memory use: retaining page instances can quickly consume memory, particularly those with a nontrivial amount of content.</span></span> <span data-ttu-id="6cf0a-195">この問題は、ナビゲーション履歴のバックスタックと転送スタックに格納できるエントリ数に制限がないという事実によって強化されています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-195">This problem is augmented by the fact that there is no limit to the number of entries that can be stored in the back and forward stacks of navigation history.</span></span> <span data-ttu-id="6cf0a-196">これに対して、ページのパック Uri の格納は、実質的にはメモリの消費に影響しません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-196">In contrast, storing pack URIs for pages has virtually no impact on memory consumption.</span></span>  
  
 <span data-ttu-id="6cf0a-197">ページの新しいインスタンスを作成する主な効果は、ページのあるインスタンスから別のインスタンスにページの状態が記憶されないことです。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-197">The main side effect of creating new instances of a page is that page state is not remembered from one instance of a page to another.</span></span> <span data-ttu-id="6cf0a-198">このような場合、Windows Presentation Foundation には、状態を記憶するためのいくつかの方法が用意されています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-198">In these cases, Windows Presentation Foundation offers several techniques for remembering state.</span></span>  
  
 <span data-ttu-id="6cf0a-199">ページを保持するには、<xref:System.Windows.Controls.Page.KeepAlive%2A> プロパティを `true` に設定します (既定値は `false`)。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-199">To keep a page alive, you set the <xref:System.Windows.Controls.Page.KeepAlive%2A> property to `true` (the default is `false`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cf0a-200">インスタンス化され、コードのみを使用して移動されるページ (たとえば、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>を呼び出す) は、自動的に保持されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-200">Pages that are instantiated and navigated to using only code (for example, calling <xref:System.Windows.Navigation.NavigationService.Navigate%2A>), are automatically kept alive.</span></span>  
  
 <span data-ttu-id="6cf0a-201">次のことを行う必要がある場合を除き、<xref:System.Windows.Controls.Page.KeepAlive%2A> を `true` に設定しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-201">You should avoid setting <xref:System.Windows.Controls.Page.KeepAlive%2A> to `true` unless you need to:</span></span>  
  
-   <span data-ttu-id="6cf0a-202">ページに大量のコンテンツがある場合は、インスタンス化に時間がかかることがあります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-202">When a page has a lot of content, it may take a long time to instantiate.</span></span> <span data-ttu-id="6cf0a-203">ページが保持されておらず、ページが頻繁に移動している場合は、ページを継続的にインスタンス化するコストがユーザーエクスペリエンスに悪影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-203">If the page is not kept alive, and the page is frequently navigated to, the cost of constantly instantiating the page may have a negative impact on the user experience.</span></span> <span data-ttu-id="6cf0a-204">ただし、パフォーマンスの観点からは、既定の設定を利用し、アプリケーションのパフォーマンスをプロファイリングする必要があります。アプリケーションに必要な範囲を下回る読み込み時間があるページをテストする場合は、維持されるようにページを構成することは、問題を解決する方法の1つです。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-204">However, from a performance perspective, you should rely on the default settings and profile your application's performance; if testing identifies pages with load times that fall below the range required for your application, configuring the pages to be kept alive may be one way to solve the problem.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cf0a-205">アクティブになっているページのエントリは、ユーザーが [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]に移動した場合に、[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] のナビゲーション履歴に保持されません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-205">Entries for pages that are kept alive are not retained in navigation history of an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] if a user navigates away from and back to the [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)].</span></span> <span data-ttu-id="6cf0a-206">保持されていないページのジャーナルエントリだけがナビゲーション履歴に保持されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-206">Only journal entries for pages that are not kept alive are retained in navigation history.</span></span>  
  
<a name="dependencyPropertyInfo_PageKeepAlive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6cf0a-207">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="6cf0a-207">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6cf0a-208">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="6cf0a-208">Identifier field</span></span>|<xref:System.Windows.Controls.Page.KeepAliveProperty>|  
|<span data-ttu-id="6cf0a-209">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="6cf0a-209">Metadata properties set to `true`</span></span>|<span data-ttu-id="6cf0a-210">なし</span><span class="sxs-lookup"><span data-stu-id="6cf0a-210">None</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="6cf0a-211">この依存関係プロパティのメタデータ型は <xref:System.Windows.PropertyMetadata>であり、<xref:System.Windows.FrameworkPropertyMetadata>ではありません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-211">The metadata type on this dependency property is <xref:System.Windows.PropertyMetadata>, not <xref:System.Windows.FrameworkPropertyMetadata>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf0a-212">次の例では、[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] を使用して、複数のナビゲーションで <xref:System.Windows.Controls.Page> クラスのインスタンスを保持する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-212">The following example shows how to use [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] to retain an instance of the <xref:System.Windows.Controls.Page> class across multiple navigations.</span></span>  
  
 [!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAML1](~/samples/snippets/xaml/VS_Snippets_Wpf/PageKeepAliveSnippets/XAML/HomePage.xaml#setpagekeepalivexaml1)]  
[!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAML2](~/samples/snippets/xaml/VS_Snippets_Wpf/PageKeepAliveSnippets/XAML/HomePage.xaml#setpagekeepalivexaml2)]  
  
 [!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAMLForLang1](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml#setpagekeepalivexamlforlang1)]  
[!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAMLForLang2](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml#setpagekeepalivexamlforlang2)]  
  
 [!code-csharp[PageKeepAliveSnippets#SetPageKeepAliveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml.cs#setpagekeepalivecodebehind)]
 [!code-vb[PageKeepAliveSnippets#SetPageKeepAliveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageKeepAliveSnippets/visualbasic/homepage.xaml.vb#setpagekeepalivecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="KeepAliveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeepAliveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeepAliveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.KeepAliveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeepAliveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeepAliveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeepAliveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.KeepAliveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-213"><see cref="P:System.Windows.Controls.Page.KeepAlive" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-213">Identifies the <see cref="P:System.Windows.Controls.Page.KeepAlive" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-214"><xref:System.Windows.Controls.Page.KeepAlive%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-214">The identifier for the <xref:System.Windows.Controls.Page.KeepAlive%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="6cf0a-215">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="6cf0a-215">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.Page.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-216"><see cref="T:System.Windows.Controls.Page" /> の論理上の子要素に対する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-216">Returns an enumerator for the logical child elements of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-217"><see cref="T:System.Collections.IEnumerator" /> の論理上の子要素に対する <see cref="T:System.Windows.Controls.Page" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-217">The <see cref="T:System.Collections.IEnumerator" /> for the logical child elements of a <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="page.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="6cf0a-218">ウィンドウで子に割り当てることができる領域。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-218">The available area that the window can give to its children.</span></span></param>
        <summary><span data-ttu-id="6cf0a-219"><see cref="T:System.Windows.Controls.Page" /> の子要素のサイズを測定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-219">Measures the child elements of the <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <returns><span data-ttu-id="6cf0a-220">ウィンドウの実際のサイズである <see cref="T:System.Windows.Size" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-220">A <see cref="T:System.Windows.Size" /> that is the actual size of the window.</span></span> <span data-ttu-id="6cf0a-221">親がスクロール バーを追加する必要がある場合などは、このメソッドにより、ウィンドウの実際のサイズより大きな値が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-221">The method may return a larger value, in which case the parent may need to add scroll bars.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationService">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationService NavigationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.NavigationService NavigationService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.NavigationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationService As NavigationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::NavigationService ^ NavigationService { System::Windows::Navigation::NavigationService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigationService : System.Windows.Navigation.NavigationService" Usage="System.Windows.Controls.Page.NavigationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-222">ページのホストがナビゲーションの管理のために使用しているナビゲーション サービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-222">Gets the navigation service that the host of the page is using to manage navigation.</span></span></summary>
        <value><span data-ttu-id="6cf0a-223">ページのホストがナビゲーションの管理のために使用している <see cref="T:System.Windows.Navigation.NavigationService" /> オブジェクト。ホストがナビゲーションをサポートしない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-223">The <see cref="T:System.Windows.Navigation.NavigationService" /> object that the host of the page is using to manage navigation, or <see langword="null" /> if the host does not support navigation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-224">ページは、<xref:System.Windows.Window>、<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>、ブラウザーなど、複数の種類のホストによってホストできます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-224">Pages can be hosted by multiple types of hosts, including <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, and a browser.</span></span>  
  
 <span data-ttu-id="6cf0a-225">ページ間のナビゲーションをサポートするには、多くの場合、そのホストのナビゲーションと統合する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-225">Pages often need to integrate with their host's navigation to provide in-page navigation support.</span></span> <span data-ttu-id="6cf0a-226">ただし、ページは実行時のホストの内容を認識しない場合があるため、ホストのナビゲーションメンバーに直接統合することはできません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-226">However, because a page may not know what its host will be at run time, it cannot integrate directly with its host's navigation members to do so.</span></span>  
  
 <span data-ttu-id="6cf0a-227">代わりに、ブラウザースタイルのナビゲーションをサポートし、<xref:System.Windows.Navigation.NavigationService> クラスによってカプセル化されたサービスであるナビゲーションサービスの使用を試みることができます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-227">Instead, it can attempt to use a navigation service, which is a service that supports browser-style navigation and is encapsulated by the <xref:System.Windows.Navigation.NavigationService> class.</span></span> <span data-ttu-id="6cf0a-228">ただし、独自の <xref:System.Windows.Navigation.NavigationService> インスタンスを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-228">You cannot create your own <xref:System.Windows.Navigation.NavigationService> instance, though.</span></span> <span data-ttu-id="6cf0a-229">代わりに、<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>、ブラウザーなどのホストの種類によって、<xref:System.Windows.Controls.Page.NavigationService%2A> プロパティからアクセスできる独自の <xref:System.Windows.Navigation.NavigationService> インスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-229">Instead, host types such as <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, or a browser create their own <xref:System.Windows.Navigation.NavigationService> instance that you can access from the <xref:System.Windows.Controls.Page.NavigationService%2A> property.</span></span>  
  
 <span data-ttu-id="6cf0a-230"><xref:System.Windows.Controls.Page.NavigationService%2A> プロパティから返されるナビゲーションサービスは、1つ目のナビゲーターによってビジュアルツリー上に管理される <xref:System.Windows.Navigation.NavigationService> クラスのインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-230">The navigation service that is returned from the <xref:System.Windows.Controls.Page.NavigationService%2A> property is the instance of the <xref:System.Windows.Navigation.NavigationService> class that is managed by the first navigator up the visual tree.</span></span> <span data-ttu-id="6cf0a-231">1つも見つからない場合は `null` が返され、ページのホストがナビゲーションをサポートしていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-231">If one is not found, `null` is returned, indicating a page's host does not support navigation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cf0a-232"><xref:System.Windows.Window> クラスはナビゲーションをサポートしていないため、ナビゲーションサービスを提供しません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-232">The <xref:System.Windows.Window> class does not support navigation and does not provide a navigation service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf0a-233">次の例は、ナビゲーションサービスが使用可能かどうかを確認する方法を示しています。その場合は、ページを使用して前のページに戻ることができます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-233">The following example shows how a page can check if a navigation service is available and, if so, use it to navigate back to the previous page.</span></span>  
  
 [!code-csharp[PageNavigationServiceSnippets#GetPageNavigationServiceCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageNavigationServiceSnippets/CSharp/HomePage.xaml.cs#getpagenavigationservicecodebehind)]
 [!code-vb[PageNavigationServiceSnippets#GetPageNavigationServiceCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageNavigationServiceSnippets/visualbasic/homepage.xaml.vb#getpagenavigationservicecodebehind)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit&#xA;override this.OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="page.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate"><span data-ttu-id="6cf0a-234">古いテンプレート。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-234">The old template.</span></span></param>
        <param name="newTemplate"><span data-ttu-id="6cf0a-235">新しいテンプレート。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-235">The new template.</span></span></param>
        <summary><span data-ttu-id="6cf0a-236"><see cref="T:System.Windows.Controls.Page" /> のテンプレートが変更されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-236">Called when the template for a <see cref="T:System.Windows.Controls.Page" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-237">[https://docs.microsoft.com/azure/active-directory/develop/scenario-protected-web-api-overview](<xref:System.Windows.Controls.Control.OnTemplateChanged%2A?displayProperty=nameWithType>) をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-237">See <xref:System.Windows.Controls.Control.OnTemplateChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Page.Template" />
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="page.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="6cf0a-238">直前の親。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-238">The previous parent.</span></span> <span data-ttu-id="6cf0a-239"><see langword="null" /> の直前の親がなかった場合は <see cref="T:System.Windows.DependencyObject" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-239">Set to <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span></span></param>
        <summary><span data-ttu-id="6cf0a-240"><see cref="T:System.Windows.Controls.Page" /> の親が変更されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-240">Called when the parent of the <see cref="T:System.Windows.Controls.Page" /> is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.UIElement.OnVisualParentChanged%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6cf0a-241">新しい親が <see cref="T:System.Windows.Window" /> でも <see cref="T:System.Windows.Controls.Frame" /> でもありません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-241">The new parent is neither a <see cref="T:System.Windows.Window" /> nor a <see cref="T:System.Windows.Controls.Frame" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeShowsNavigationUI">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeShowsNavigationUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeShowsNavigationUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeShowsNavigationUI" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeShowsNavigationUI () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeShowsNavigationUI();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeShowsNavigationUI : unit -&gt; bool" Usage="page.ShouldSerializeShowsNavigationUI " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cf0a-242">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> プロパティのシリアル化動作の決定を許可します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-242">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> property.</span></span></summary>
        <returns><span data-ttu-id="6cf0a-243">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-243"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTitle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTitle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTitle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeTitle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTitle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTitle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTitle : unit -&gt; bool" Usage="page.ShouldSerializeTitle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cf0a-244">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.Title" /> プロパティのシリアル化動作の決定を許可します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-244">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.Title" /> property.</span></span></summary>
        <returns><span data-ttu-id="6cf0a-245">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-245"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowHeight">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowHeight () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowHeight();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowHeight : unit -&gt; bool" Usage="page.ShouldSerializeWindowHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cf0a-246">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowHeight" /> プロパティのシリアル化動作の決定を許可します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-246">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowHeight" /> property.</span></span></summary>
        <returns><span data-ttu-id="6cf0a-247">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-247"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowTitle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowTitle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowTitle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowTitle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowTitle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowTitle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowTitle : unit -&gt; bool" Usage="page.ShouldSerializeWindowTitle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cf0a-248">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowTitle" /> プロパティのシリアル化動作の決定を許可します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-248">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowTitle" /> property.</span></span></summary>
        <returns><span data-ttu-id="6cf0a-249">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-249"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowWidth">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowWidth ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowWidth() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowWidth () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowWidth();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowWidth : unit -&gt; bool" Usage="page.ShouldSerializeWindowWidth " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cf0a-250">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowWidth" /> プロパティのシリアル化動作の決定を許可します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-250">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowWidth" /> property.</span></span></summary>
        <returns><span data-ttu-id="6cf0a-251">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-251"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsNavigationUI">
      <MemberSignature Language="C#" Value="public bool ShowsNavigationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowsNavigationUI" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.ShowsNavigationUI" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowsNavigationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowsNavigationUI { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowsNavigationUI : bool with get, set" Usage="System.Windows.Controls.Page.ShowsNavigationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-252">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] の <see cref="T:System.Windows.Navigation.NavigationWindow" /> のナビゲーション [!INCLUDE[TLA#tla_ie6](~/includes/tlasharptla-ie6-md.md)] を表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-252">Gets or sets a value that indicates whether the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of a <see cref="T:System.Windows.Navigation.NavigationWindow" /> on [!INCLUDE[TLA#tla_ie6](~/includes/tlasharptla-ie6-md.md)] is visible.</span></span></summary>
        <value><span data-ttu-id="6cf0a-253">ホスト <see langword="true" /> のナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] が表示される場合は <see cref="T:System.Windows.Navigation.NavigationWindow" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-253"><see langword="true" /> if the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of a host <see cref="T:System.Windows.Navigation.NavigationWindow" /> is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-254"><xref:System.Windows.Navigation.NavigationWindow> は、ブラウザースタイルの転送と後方ナビゲーションを有効にするために、既定でナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] を表示します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-254"><xref:System.Windows.Navigation.NavigationWindow> displays navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] by default to enable browser-style forwards and backwards navigation.</span></span> <span data-ttu-id="6cf0a-255">ページが <xref:System.Windows.Application.StartupUri%2A>として設定されている場合、<xref:System.Windows.Application> によってページをホストする <xref:System.Windows.Navigation.NavigationWindow> が自動的に開きます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-255">If a page is set as the <xref:System.Windows.Application.StartupUri%2A>, <xref:System.Windows.Application> automatically opens a <xref:System.Windows.Navigation.NavigationWindow> to host the page in.</span></span> <span data-ttu-id="6cf0a-256">ページで既定の <xref:System.Windows.Navigation.NavigationWindow> ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]を使用しない場合は、<xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> を `false`に設定できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-256">If the page does not want to use the default <xref:System.Windows.Navigation.NavigationWindow> navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], it can set <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cf0a-257">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] は [!INCLUDE[TLA#tla_ie6](~/includes/tlasharptla-ie6-md.md)]のナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] と統合されないため、独自のナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]が提供されます。これは <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>を設定して表示または非表示にすることができます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-257">Because [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] does not integrate with the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for [!INCLUDE[TLA#tla_ie6](~/includes/tlasharptla-ie6-md.md)], it provides its own navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], which can be shown or hidden by setting <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>.</span></span> [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] <span data-ttu-id="6cf0a-258">は [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]と統合されるため、[!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] のページに <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> を設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-258">does integrate with the [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], so setting <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> on pages in [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf0a-259">次の例では、[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] を使用して <xref:System.Windows.Navigation.NavigationWindow>のナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] を非表示にする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-259">The following example shows how to use [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] to hide the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of a <xref:System.Windows.Navigation.NavigationWindow>.</span></span>  
  
 [!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAML1](~/samples/snippets/xaml/VS_Snippets_Wpf/PageShowsNavigationUISnippets/XAML/HomePage.xaml#setpageshowsnavigationuixaml1)]  
[!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAML2](~/samples/snippets/xaml/VS_Snippets_Wpf/PageShowsNavigationUISnippets/XAML/HomePage.xaml#setpageshowsnavigationuixaml2)]  
  
 [!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAMLLang1](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml#setpageshowsnavigationuixamllang1)]  
[!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAMLLang2](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml#setpageshowsnavigationuixamllang2)]  
  
 [!code-csharp[PageShowsNavigationUISnippets#SetPageShowsNavigationUICODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml.cs#setpageshowsnavigationuicodebehind)]
 [!code-vb[PageShowsNavigationUISnippets#SetPageShowsNavigationUICODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageShowsNavigationUISnippets/visualbasic/homepage.xaml.vb#setpageshowsnavigationuicodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6cf0a-260"><see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" />、<see cref="T:System.Windows.Controls.Page" />、またはブラウザーでホストされていない <see cref="T:System.Windows.Window" /> インスタンスで <see cref="T:System.Windows.Navigation.NavigationWindow" /> プロパティが検査されました。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-260">The <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> property is inspected on a <see cref="T:System.Windows.Controls.Page" /> instance that is not hosted by a <see cref="T:System.Windows.Window" />, <see cref="T:System.Windows.Navigation.NavigationWindow" />, or a browser.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (obj As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ obj) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="page.System.Windows.Markup.IAddChild.AddChild obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="6cf0a-261">追加する子オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-261">The child object to add.</span></span></param>
        <summary><span data-ttu-id="6cf0a-262">このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-262">For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-263">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6cf0a-264">これは、<xref:System.Windows.Controls.Page> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-264">It can be used only when the <xref:System.Windows.Controls.Page> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string str);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (str As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ str) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="page.System.Windows.Markup.IAddChild.AddText str" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="6cf0a-265">オブジェクトに追加するテキスト。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-265">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="6cf0a-266">このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-266">For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-267">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-267">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6cf0a-268">これは、<xref:System.Windows.Controls.Page> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-268">It can be used only when the <xref:System.Windows.Controls.Page> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Template">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ControlTemplate Template { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ControlTemplate Template" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Template" />
      <MemberSignature Language="VB.NET" Value="Public Property Template As ControlTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ControlTemplate ^ Template { System::Windows::Controls::ControlTemplate ^ get(); void set(System::Windows::Controls::ControlTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Template : System.Windows.Controls.ControlTemplate with get, set" Usage="System.Windows.Controls.Page.Template" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ControlTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-269"><see cref="T:System.Windows.Controls.Page" /> のコントロール テンプレートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-269">Gets or sets the control template for a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-270"><see cref="T:System.Windows.Controls.ControlTemplate" /> の <see cref="T:System.Windows.Controls.Page" />。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-270">The <see cref="T:System.Windows.Controls.ControlTemplate" /> for a <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ContentTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6cf0a-271">XAML 属性の使用</span><span class="sxs-lookup"><span data-stu-id="6cf0a-271">XAML Attribute Usage</span></span>  
  
```  
<object Template="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlValues_ContentTemplate"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6cf0a-272">XAML の値</span><span class="sxs-lookup"><span data-stu-id="6cf0a-272">XAML Values</span></span>  
 <span data-ttu-id="6cf0a-273">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="6cf0a-273">*resourceExtension*</span></span>  
 <span data-ttu-id="6cf0a-274">テンプレートリソースを参照する方法を示すマークアップ拡張機能。 `StaticResource` または `DynamicResource`です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-274">A markup extension that identifies how to reference the template resource, either `StaticResource` or `DynamicResource`.</span></span> <span data-ttu-id="6cf0a-275">「 [XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-275">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="6cf0a-276">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="6cf0a-276">*styleResourceKey*</span></span>  
 <span data-ttu-id="6cf0a-277">要求されたテンプレートセレクターを識別するキー。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-277">The key that identifies the requested template selector.</span></span> <span data-ttu-id="6cf0a-278">キーは、<xref:System.Windows.ResourceDictionary>内の既存のリソースを参照します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-278">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cf0a-279">Property 要素の構文は技術的には可能ですが、推奨されません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-279">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="6cf0a-280">詳細については、「[インラインスタイルとテンプレート](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-280">For more information, see [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span>  
  
<a name="dependencyPropertyInfo_PageTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6cf0a-281">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="6cf0a-281">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6cf0a-282">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="6cf0a-282">Identifier field</span></span>|<xref:System.Windows.Controls.Page.TemplateProperty>|  
|<span data-ttu-id="6cf0a-283">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="6cf0a-283">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.TemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.TemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-284"><see cref="P:System.Windows.Controls.Page.Template" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-284">Identifies the <see cref="P:System.Windows.Controls.Page.Template" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Controls.Page.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-285"><see cref="T:System.Windows.Controls.Page" /> のタイトルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-285">Gets or sets the title of the <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-286"><see cref="T:System.Windows.Controls.Page" /> のタイトル。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-286">The title of the <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-287"><xref:System.Windows.Controls.Page.Title%2A> プロパティの値は <xref:System.Windows.Controls.Page>によって表示されません。また、<xref:System.Windows.Controls.Page>をホストしているウィンドウのタイトルバーにも表示されません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-287">The value of the <xref:System.Windows.Controls.Page.Title%2A> property is not displayed by <xref:System.Windows.Controls.Page>, nor is it displayed from the title bar of the window that is hosting a <xref:System.Windows.Controls.Page>.</span></span> <span data-ttu-id="6cf0a-288">代わりに、<xref:System.Windows.Controls.Page.WindowTitle%2A> を設定してホストウィンドウのタイトルを変更します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-288">Instead, you set <xref:System.Windows.Controls.Page.WindowTitle%2A> to change the title of a host window.</span></span>  
  
 <span data-ttu-id="6cf0a-289"><xref:System.Windows.Controls.Page.Title%2A> を使用して、移動したコンテンツのナビゲーション履歴エントリの名前を生成することもできます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-289"><xref:System.Windows.Controls.Page.Title%2A> can also be used to generate the name of the navigation history entry for a piece of navigated content.</span></span> <span data-ttu-id="6cf0a-290">次のデータは、ナビゲーション履歴エントリの名前を優先順位に従って自動的に構築するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-290">The following pieces of data are used to automatically construct a navigation history entry name, in order of precedence:</span></span>  
  
-   <span data-ttu-id="6cf0a-291">アタッチされた <xref:System.Windows.Navigation.JournalEntry.Name%2A> 属性です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-291">The attached <xref:System.Windows.Navigation.JournalEntry.Name%2A> attribute.</span></span>  
  
-   <span data-ttu-id="6cf0a-292"><xref:System.Windows.Controls.Page.Title%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-292">The <xref:System.Windows.Controls.Page.Title%2A> property.</span></span>  
  
-   <span data-ttu-id="6cf0a-293">現在のページの <xref:System.Windows.Controls.Page.WindowTitle%2A> プロパティと URI (uniform resource identifier)</span><span class="sxs-lookup"><span data-stu-id="6cf0a-293">The <xref:System.Windows.Controls.Page.WindowTitle%2A> property and the uniform resource identifier (URI) for the current page</span></span>  
  
-   <span data-ttu-id="6cf0a-294">現在のページの URI (uniform resource identifier)。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-294">The uniform resource identifier (URI) for the current page.</span></span>  
  
 <span data-ttu-id="6cf0a-295">ナビゲーション履歴で <xref:System.Windows.Navigation.CustomContentState> オブジェクトをコンテンツの一部に関連付けた場合は、<xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>をオーバーライドすることによって、ナビゲーション履歴エントリに表示される名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-295">If you have associated a <xref:System.Windows.Navigation.CustomContentState> object with a piece of content in navigation history, you can specify the name that appears in the navigation history entry by overriding <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_PageTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6cf0a-296">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="6cf0a-296">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6cf0a-297">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="6cf0a-297">Identifier field</span></span>|<xref:System.Windows.Controls.Page.TitleProperty>|  
|<span data-ttu-id="6cf0a-298">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="6cf0a-298">Metadata properties set to `true`</span></span>|<span data-ttu-id="6cf0a-299">なし</span><span class="sxs-lookup"><span data-stu-id="6cf0a-299">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-300"><see cref="P:System.Windows.Controls.Page.Title" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-300">Identifies the <see cref="P:System.Windows.Controls.Page.Title" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-301"><xref:System.Windows.Controls.Page.Title%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-301">The identifier for the <xref:System.Windows.Controls.Page.Title%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="6cf0a-302">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="6cf0a-302">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public double WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WindowHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.WindowHeight : double with get, set" Usage="System.Windows.Controls.Page.WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-303"><see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> または <see cref="T:System.Windows.Controls.Page" /> の高さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-303">Gets or sets the height of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-304"><see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウの高さ。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-304">The height of a window that directly hosts a <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-305"><xref:System.Windows.Controls.Page.WindowHeight%2A> は、<xref:System.Windows.Controls.Page> がウィンドウによって直接ホストされている場合にのみ適用されます。これには次のものが含まれます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-305"><xref:System.Windows.Controls.Page.WindowHeight%2A> is only applied when a <xref:System.Windows.Controls.Page> is hosted directly by a window, which includes:</span></span>  
  
-   <xref:System.Windows.Window>  
  
-   <xref:System.Windows.Navigation.NavigationWindow>  
  
-   [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]  
  
 <span data-ttu-id="6cf0a-306"><xref:System.Windows.Controls.Page> が <xref:System.Windows.Controls.Frame>によってホストされている場合、<xref:System.Windows.Controls.Page.WindowHeight%2A> を設定しても効果はありませんが、<xref:System.Windows.Controls.Page.WindowHeight%2A>の値を取得することはできます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-306">If a <xref:System.Windows.Controls.Page> is hosted by a <xref:System.Windows.Controls.Frame>, setting <xref:System.Windows.Controls.Page.WindowHeight%2A> has no effect, but you can still get the value of <xref:System.Windows.Controls.Page.WindowHeight%2A>.</span></span>  
  
 <span data-ttu-id="6cf0a-307">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] 内の <xref:System.Windows.Controls.Page> は、<xref:System.Windows.Controls.Page.WindowHeight%2A> のみを使用して [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]の高さを変更できます。<xref:System.Windows.FrameworkElement.Height%2A>、<xref:System.Windows.FrameworkElement.MinHeight%2A>、または <xref:System.Windows.FrameworkElement.MaxHeight%2A>を設定しても高さを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-307">A <xref:System.Windows.Controls.Page> in an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] can only use <xref:System.Windows.Controls.Page.WindowHeight%2A> to change the height of [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]; the height cannot be changed by setting <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.MinHeight%2A>, or <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span></span>  
  
 <span data-ttu-id="6cf0a-308">[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] ウィンドウの高さの最小値は150ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-308">The minimum height of the [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] window is 150 pixels.</span></span> <span data-ttu-id="6cf0a-309">ブラウザーでホストされているページの場合、[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] ウィンドウの高さの合計が150ピクセル未満になると、<xref:System.Windows.Controls.Page.WindowHeight%2A> の値が適用されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-309">For browser-hosted pages, this means that the value of <xref:System.Windows.Controls.Page.WindowHeight%2A> may not be applied if it would cause the total height of the [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] window to be less than 150 pixels.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf0a-310">次の例は、ページからウィンドウの高さを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-310">The following example shows how to set the height of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowHeightPage.xaml#setpagewindowheightxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowTitle">
      <MemberSignature Language="C#" Value="public string WindowTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WindowTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WindowTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTitle : string with get, set" Usage="System.Windows.Controls.Page.WindowTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-311"><see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> またはホスト <see cref="T:System.Windows.Controls.Page" /> のタイトルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-311">Gets or sets the title of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-312"><see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウのタイトル。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-312">The title of a window that directly hosts the <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-313">既定では、ページをホストするウィンドウのタイトル (<xref:System.Windows.Navigation.NavigationWindow> および [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]を含む) は、現在ホストされているファイルの名前です (ページが [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]厳密でない場合は .xaml 拡張子、ページが [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]の一部である場合は、拡張子は xbap です)。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-313">By default, the title of a window that hosts a page, including <xref:System.Windows.Navigation.NavigationWindow> and [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], is the name of the file that is currently being hosted (with an .xaml extension if the page is loose [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], or an .xbap extension if the page is part of an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]).</span></span>  
  
 <span data-ttu-id="6cf0a-314">ページでは、その <xref:System.Windows.Controls.Page.WindowTitle%2A> プロパティを設定することによって、既定値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-314">A page can change the default by setting its <xref:System.Windows.Controls.Page.WindowTitle%2A> property.</span></span>  
  
 <span data-ttu-id="6cf0a-315">ページによってウィンドウのタイトルがこのように設定されると、別のページが別の値で <xref:System.Windows.Controls.Page.WindowTitle%2A> 設定されるまで、ウィンドウのタイトルは変わりません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-315">Once a page sets the title of a window in this way, the window's title does not change until another page sets <xref:System.Windows.Controls.Page.WindowTitle%2A> with a different value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cf0a-316"><xref:System.Windows.Controls.Page> は、<xref:System.Windows.Controls.Page.WindowTitle%2A> が効果を得られるように、ウィンドウ内の最上位のコンテンツである必要があります。たとえば、<xref:System.Windows.Controls.Page> が <xref:System.Windows.Controls.Frame>内でホストされている場合、<xref:System.Windows.Controls.Page.WindowTitle%2A> を設定しても、ホストウィンドウのタイトルは変更されません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-316">The <xref:System.Windows.Controls.Page> must be the topmost piece of content in a window for <xref:System.Windows.Controls.Page.WindowTitle%2A> to have an effect; if a <xref:System.Windows.Controls.Page> is hosted within a <xref:System.Windows.Controls.Frame>, for example, setting <xref:System.Windows.Controls.Page.WindowTitle%2A> does not change the title of the host window.</span></span>  
  
 <span data-ttu-id="6cf0a-317"><xref:System.Windows.Controls.Page.WindowTitle%2A> を使用して、移動したコンテンツのナビゲーション履歴エントリの名前を生成することもできます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-317"><xref:System.Windows.Controls.Page.WindowTitle%2A> can also be used to generate the name of the navigation history entry for a piece of navigated content.</span></span> <span data-ttu-id="6cf0a-318">次のデータは、ナビゲーション履歴エントリの名前を優先順位に従って自動的に構築するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-318">The following pieces of data are used to automatically construct a navigation history entry name, in order of precedence:</span></span>  
  
-   <span data-ttu-id="6cf0a-319">アタッチされた <xref:System.Windows.Navigation.JournalEntry.Name%2A> 属性です。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-319">The attached <xref:System.Windows.Navigation.JournalEntry.Name%2A> attribute.</span></span>  
  
-   <span data-ttu-id="6cf0a-320"><xref:System.Windows.Controls.Page.Title%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-320">The <xref:System.Windows.Controls.Page.Title%2A> property.</span></span>  
  
-   <span data-ttu-id="6cf0a-321">現在のページの <xref:System.Windows.Controls.Page.WindowTitle%2A> プロパティと URI (uniform resource identifier)</span><span class="sxs-lookup"><span data-stu-id="6cf0a-321">The <xref:System.Windows.Controls.Page.WindowTitle%2A> property and the uniform resource identifier (URI) for the current page</span></span>  
  
-   <span data-ttu-id="6cf0a-322">現在のページの URI (uniform resource identifier)。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-322">The uniform resource identifier (URI) for the current page.</span></span>  
  
 <span data-ttu-id="6cf0a-323">ナビゲーション履歴で <xref:System.Windows.Navigation.CustomContentState> オブジェクトをコンテンツの一部に関連付けた場合は、<xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>をオーバーライドして、ナビゲーション履歴要素の名前の値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-323">If you have associated a <xref:System.Windows.Navigation.CustomContentState> object with a piece of content in navigation history, you can specify the name value of a navigation history element by overriding <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf0a-324">次の例では、ページからウィンドウのタイトルを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-324">The following example shows how to set the title of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowTitleXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowTitlePage.xaml#setpagewindowtitlexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public double WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WindowWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.WindowWidth : double with get, set" Usage="System.Windows.Controls.Page.WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cf0a-325"><see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> または <see cref="T:System.Windows.Controls.Page" /> の幅を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-325">Gets or sets the width of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="6cf0a-326"><see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウの幅。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-326">The width of a window that directly hosts a <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf0a-327"><xref:System.Windows.Controls.Page.WindowWidth%2A> は、<xref:System.Windows.Controls.Page> がウィンドウによって直接ホストされている場合にのみ適用されます。これには次のものが含まれます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-327"><xref:System.Windows.Controls.Page.WindowWidth%2A> is only applied when a <xref:System.Windows.Controls.Page> is hosted directly by a window, which includes:</span></span>  
  
-   <xref:System.Windows.Window>  
  
-   <xref:System.Windows.Navigation.NavigationWindow>  
  
-   [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]  
  
 <span data-ttu-id="6cf0a-328"><xref:System.Windows.Controls.Page> が <xref:System.Windows.Controls.Frame>によってホストされている場合、<xref:System.Windows.Controls.Page.WindowWidth%2A> を設定しても効果はありませんが、<xref:System.Windows.Controls.Page.WindowWidth%2A>の値を取得することはできます。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-328">If a <xref:System.Windows.Controls.Page> is hosted by a <xref:System.Windows.Controls.Frame>, setting <xref:System.Windows.Controls.Page.WindowWidth%2A> has no effect, but you can still get the value of <xref:System.Windows.Controls.Page.WindowWidth%2A>.</span></span>  
  
 <span data-ttu-id="6cf0a-329">[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] 内の <xref:System.Windows.Controls.Page> は、<xref:System.Windows.Controls.Page.WindowWidth%2A> のみを使用して [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]の幅を変更できます。<xref:System.Windows.FrameworkElement.Width%2A>、<xref:System.Windows.FrameworkElement.MinWidth%2A>、または <xref:System.Windows.FrameworkElement.MaxWidth%2A>を設定しても、幅を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-329">A <xref:System.Windows.Controls.Page> in an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] can only use <xref:System.Windows.Controls.Page.WindowWidth%2A> to change the width of [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]; the width cannot be changed by setting <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.MinWidth%2A>, or <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span>  
  
 <span data-ttu-id="6cf0a-330">[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] ウィンドウの最小の幅は250ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-330">The minimum width of the [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] window is 250 pixels.</span></span> <span data-ttu-id="6cf0a-331">ブラウザーでホストされているページの場合、[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] ウィンドウの合計幅が250ピクセル未満になると、<xref:System.Windows.Controls.Page.WindowWidth%2A> の値が適用されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-331">For browser-hosted pages, this means that the value of <xref:System.Windows.Controls.Page.WindowWidth%2A> may not be applied if it would cause the total width of the [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] window to be less than 250 pixels.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf0a-332">次の例は、ページからウィンドウの幅を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6cf0a-332">The following example shows how to set the width of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowWidthXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowWidthPage.xaml#setpagewindowwidthxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
