<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b0060c50f7bbb2cce141f42b40c668787635318" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78835599" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase&#xA;    interface IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="61bcf-101">書式なしテキストの表示または編集に使用できるコントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-101">Represents a control that can be used to display or edit unformatted text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-102"><xref:System.Windows.Controls.TextBox> コントロールには、<xref:System.Windows.Controls.TextBox.Text%2A> プロパティに書式設定されていないテキストのみを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="61bcf-103">次の図は、<xref:System.Windows.Controls.TextBox>の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="61bcf-104">![TextBox スクリーンショット](~/add/media/ss-ctl-textbox.gif "TextBox スクリーンショット")</span><span class="sxs-lookup"><span data-stu-id="61bcf-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="61bcf-105">テキストボックスの例</span><span class="sxs-lookup"><span data-stu-id="61bcf-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="61bcf-106"><xref:System.Windows.Controls.TextBox> は、カプセル化された複数のコンポーネントで構成される複合コントロールです。</span><span class="sxs-lookup"><span data-stu-id="61bcf-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="61bcf-107">そのため、一部のイベントは、カプセル化された子要素によって処理されるため、含まれるコントロールにはバブルアップされません。</span><span class="sxs-lookup"><span data-stu-id="61bcf-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="61bcf-108">このため、アプリケーション開発者はイベントのトンネリングバージョンをリッスンする必要があります (プレフィックス "Preview" で示されています)。</span><span class="sxs-lookup"><span data-stu-id="61bcf-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="61bcf-109"><xref:System.Windows.Controls.TextBox> は書式設定されていないテキストのみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="61bcf-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="61bcf-110">豊富なコンテンツのサポートを必要とするアプリケーションについては、「<xref:System.Windows.Controls.RichTextBox>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="61bcf-111">パスワードまたはその他の機密性の高い入力を受け入れる必要があるアプリケーションについては、「<xref:System.Windows.Controls.PasswordBox>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="61bcf-112"><xref:System.Windows.Controls.TextBox> 内のテキストを水平方向および垂直方向に配置するには、<xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> プロパティと <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="61bcf-113">ページのレイアウト内での <xref:System.Windows.Controls.TextBox> の配置は、<xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> プロパティと <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> プロパティを使用して行います。</span><span class="sxs-lookup"><span data-stu-id="61bcf-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="61bcf-114"><xref:System.Windows.Controls.TextBox> の周囲の境界線を非表示にする最善の方法は、<xref:System.Windows.Controls.TextBox> の <xref:System.Windows.Controls.Control.BorderThickness%2A> プロパティを `0`に設定することです。</span><span class="sxs-lookup"><span data-stu-id="61bcf-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61bcf-115"><xref:System.Windows.Controls.TextBox> には、バブル <xref:System.Windows.UIElement.MouseUp> と <xref:System.Windows.UIElement.MouseDown> イベントの組み込み処理があります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="61bcf-116">そのため、<xref:System.Windows.Controls.TextBox> のイベントをリッスンするカスタムイベントハンドラーは呼び出されません。 <xref:System.Windows.UIElement.MouseUp>、または <xref:System.Windows.UIElement.MouseDown> します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="61bcf-117">これらのイベントに応答する必要がある場合は、トンネリング <xref:System.Windows.UIElement.PreviewMouseUp> をリッスンし、イベントを <xref:System.Windows.UIElement.PreviewMouseDown> します。または、<xref:System.Windows.EventSetter.HandledEventsToo%2A> 引数を使用してハンドラーを登録します (この後者のオプションはコードからのみ使用できます)。</span><span class="sxs-lookup"><span data-stu-id="61bcf-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="61bcf-118">これらのイベントのネイティブ <xref:System.Windows.Controls.TextBox> を意図的に無効にしている場合を除き、イベントを処理済みとしてマークしないでください。これには、コントロールの [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]に注目すべき影響があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="61bcf-119">既定では、スクロールバーは <xref:System.Windows.Controls.TextBox> に表示されません。</span><span class="sxs-lookup"><span data-stu-id="61bcf-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="61bcf-120">スクロールバーを表示するには、<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> プロパティと <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> プロパティを <xref:System.Windows.Controls.ScrollBarVisibility.Visible> または <xref:System.Windows.Controls.ScrollBarVisibility.Auto>に設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="61bcf-121">通常、<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> イベントを使用して、<xref:System.Windows.Controls.TextBox> または <xref:System.Windows.Controls.RichTextBox> 内のテキストが変更されるたびに、期待どおりに <xref:System.Windows.UIElement.KeyDown> する必要があります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="61bcf-122">例については、「[方法: テキストボックス内のテキストが変更され](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md)たことを検出する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-122">See [How to: Detect When Text in a TextBox Has Changed](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="61bcf-123">TextBox コントロールのカスタマイズ</span><span class="sxs-lookup"><span data-stu-id="61bcf-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="61bcf-124">複数の<xref:System.Windows.Controls.TextBox>コントロールに同じプロパティの設定を適用するには、<xref:System.Windows.FrameworkElement.Style%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="61bcf-125"><xref:System.Windows.Controls.ControlTemplate>の既定値を変更して外観を制御します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="61bcf-126"><xref:System.Windows.Controls.ControlTemplate>作成の詳細については、「 [ControlTemplate の作成による既存コントロールの外観カスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="61bcf-127"><xref:System.Windows.Controls.TextBox>に固有のパーツと状態を確認するには、「[テキストボックスのスタイルとテンプレート](~/docs/framework/wpf/controls/textbox-styles-and-templates.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="61bcf-128">このコントロールの依存関係のプロパティは、コントロールの既定のスタイルによって設定される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-128">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="61bcf-129">プロパティが既定のスタイルによって設定されている場合、アプリケーションにコントロールが表示されると、プロパティが既定値から変更されることがあります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="61bcf-130">既定のスタイルは、アプリケーションの実行時に使用するデスクトップテーマによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="61bcf-131">詳しくは、「[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-131">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="61bcf-132">この例では、Text プロパティを使用して、TextBox コントロールのテキストの初期内容を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-132">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61bcf-133">Extensible Application Markup Language (XAML) バージョンの例では \<TextBox を使用することもできますが、各ボタンの TextBox コンテンツのテキストを囲む > タグは、テキストプロパティに ContentPropertyAttribute 属性を適用するため、必須ではありません。</span><span class="sxs-lookup"><span data-stu-id="61bcf-133">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 <span data-ttu-id="61bcf-134">その他の例については、このドキュメントの4.0 バージョン「 [TextBox クラス](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-134">For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa969815(v=vs.100).aspx"><span data-ttu-id="61bcf-135">TextBox の概要</span><span class="sxs-lookup"><span data-stu-id="61bcf-135">TextBox Overview</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="61bcf-136">WPF コントロールギャラリーのサンプル</span><span class="sxs-lookup"><span data-stu-id="61bcf-136">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61bcf-137"><see cref="T:System.Windows.Controls.TextBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-137">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CaretIndex : int with get, set" Usage="System.Windows.Controls.TextBox.CaretIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-138">キャレットの挿入位置インデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-138">Gets or sets the insertion position index of the caret.</span></span></summary>
        <value><span data-ttu-id="61bcf-139">キャレットの 0 から始まる挿入位置インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-139">The zero-based insertion position index of the caret.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-140">このプロパティを取得すると、カレットの現在の挿入位置インデックスが返されます (「挿入位置」のような用語については、「<xref:System.Windows.Documents.TextPointer>」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="61bcf-140">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="61bcf-141">このプロパティを設定すると、キャレットが指定した挿入位置に移動します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-141">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="61bcf-142">挿入位置は、文字または要素タグの間にあります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-142">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Controls.CharacterCasing with get, set" Usage="System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-143">テキスト ボックスに手動で文字を入力した場合に大文字で入力されるか小文字で入力されるかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-143">Gets or sets how characters are cased when they are manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-144">手動で入力した文字が大文字で入力されるか小文字で入力されるかを指定する <see cref="T:System.Windows.Controls.CharacterCasing" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="61bcf-144">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span></span> <span data-ttu-id="61bcf-145">既定では、 <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-145">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-146">このプロパティは、プログラムによって追加される文字には影響しません。</span><span class="sxs-lookup"><span data-stu-id="61bcf-146">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="61bcf-147">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="61bcf-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="61bcf-148">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="61bcf-148">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="61bcf-149">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="61bcf-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="61bcf-150">なし</span><span class="sxs-lookup"><span data-stu-id="61bcf-150">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="61bcf-151">次の例では、<xref:System.Windows.Controls.TextBox.CharacterCasing%2A> プロパティを使用して、テキストボックスで手動で入力したすべての文字を大文字に変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-151">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CharacterCasingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-152"><see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-152">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBox.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61bcf-153">テキスト ボックスからすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-153">Clears all the content from the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromLineIndex : int -&gt; int" Usage="textBox.GetCharacterIndexFromLineIndex lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="61bcf-154">最初の文字インデックスを取得する行の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-154">The zero-based index of the line to retrieve the initial character index for.</span></span></param>
        <summary><span data-ttu-id="61bcf-155">指定された行内の最初の文字に対応する、0 から始まる文字インデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-155">Returns the zero-based character index for the first character in the specified line.</span></span></summary>
        <returns><span data-ttu-id="61bcf-156">指定された行内の最初の文字に対応する、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-156">The zero-based index for the first character in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromPoint (point As Point, snapToText As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromPoint : System.Windows.Point * bool -&gt; int" Usage="textBox.GetCharacterIndexFromPoint (point, snapToText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="61bcf-157">インデックスを返す対象である、<see cref="T:System.Windows.Controls.TextBox" /> 座標空間内のポイント。</span><span class="sxs-lookup"><span data-stu-id="61bcf-157">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span></span></param>
        <param name="snapToText"><span data-ttu-id="61bcf-158">指定されたポイントに文字がなかったときに最も近いインデックスを返す場合は <see langword="true" />。指定されたポイントに文字がなかったときに -1 を返す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="61bcf-158"><see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return -1 if there is no character at the specified point.</span></span></param>
        <summary><span data-ttu-id="61bcf-159">指定されたポイントに最も近い場所にある文字の、0 から始まるインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-159">Returns the zero-based index of the character that is closest to the specified point.</span></span></summary>
        <returns><span data-ttu-id="61bcf-160">指定されたポイントに最も近い場所にある文字のインデックス。有効なインデックスが見つからない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="61bcf-160">The index of the character that is closest to the specified point, or -1 if no valid index can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetFirstVisibleLineIndex : unit -&gt; int" Usage="textBox.GetFirstVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61bcf-161">現在テキスト ボックスに表示されている最初の行に対応する行インデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-161">Returns the line index for the first line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="61bcf-162">テキスト ボックスに表示されている最初の行に対応する、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-162">The zero-based index for the first visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetLastVisibleLineIndex : unit -&gt; int" Usage="textBox.GetLastVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61bcf-163">現在テキスト ボックスに表示されている最後の行に対応する行インデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-163">Returns the line index for the last line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="61bcf-164">テキスト ボックスに表示されている最後の行に対応する、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-164">The zero-based index for the last visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineIndexFromCharacterIndex : int -&gt; int" Usage="textBox.GetLineIndexFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="61bcf-165">関連付けられている行インデックスを取得するための 0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-165">The zero-based character index for which to retrieve the associated line index.</span></span></param>
        <summary><span data-ttu-id="61bcf-166">指定された文字インデックスが含まれている行に対応する、0 から始まる行インデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-166">Returns the zero-based line index for the line that contains the specified character index.</span></span></summary>
        <returns><span data-ttu-id="61bcf-167">指定された文字インデックスが含まれている行に対応する、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-167">The zero-based index for the line that contains the specified character index.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineLength : int -&gt; int" Usage="textBox.GetLineLength lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="61bcf-168">文字数を取得するための 0 から始まる行インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-168">The zero-based line index for which to return a character count.</span></span></param>
        <summary><span data-ttu-id="61bcf-169">指定された行の文字数を返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-169">Returns the number of characters in the specified line.</span></span></summary>
        <returns><span data-ttu-id="61bcf-170">指定された行の文字数。</span><span class="sxs-lookup"><span data-stu-id="61bcf-170">The number of characters in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineText : int -&gt; string" Usage="textBox.GetLineText lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="61bcf-171">現在表示されているテキストを取得する対象の 0 から始まる行インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-171">The zero-based line index for which to retrieve the currently displayed text.</span></span></param>
        <summary><span data-ttu-id="61bcf-172">指定した行に現在表示されているテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-172">Returns the text that is currently displayed on the specified line.</span></span></summary>
        <returns><span data-ttu-id="61bcf-173">指定した行に現在表示されているテキストのコピーを格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="61bcf-173">A string containing a copy of the text currently visible on the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextSpellingErrorCharacterIndex : int * System.Windows.Documents.LogicalDirection -&gt; int" Usage="textBox.GetNextSpellingErrorCharacterIndex (charIndex, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="61bcf-174">次のスペル ミスの検索を開始する位置を示す、0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-174">The zero-based character index indicating a position from which to search for the next spelling error.</span></span></param>
        <param name="direction"><span data-ttu-id="61bcf-175">指定された <see cref="T:System.Windows.Documents.LogicalDirection" /> から次のスペル ミスを検索するときの方向を指定する <paramref name="charIndex" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="61bcf-175">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <paramref name="charIndex" />.</span></span></param>
        <summary><span data-ttu-id="61bcf-176">テキスト ボックスのコンテンツ内にある次のスペル ミスの先頭の文字インデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-176">Returns the beginning character index for the next spelling error in the contents of the text box.</span></span></summary>
        <returns><span data-ttu-id="61bcf-177">テキスト ボックスのコンテンツ内にある次のスペル ミスの先頭に対応する文字インデックス。次のスペル ミスが存在しない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="61bcf-177">The character index for the beginning of the next spelling error in the contents of the text box, or -1 if no next spelling error exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61bcf-178">指定されたインデックス位置にある文字のエッジの四角形を返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-178">Returns the rectangle for an edge of the character at the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="61bcf-179">四角形を取得する文字の 0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-179">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <summary><span data-ttu-id="61bcf-180">指定されたインデックス位置にある文字のリーディング エッジの四角形を返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-180">Returns the rectangle for the leading edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="61bcf-181">指定された文字インデックス位置にある文字のリーディング エッジの四角形。外接する四角形を決定できない場合は <see cref="P:System.Windows.Rect.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="61bcf-181">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-182">このメソッドは、文字の端を表す四角形を返すため、四角形の幅は0になります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-182">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int * bool -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex (charIndex, trailingEdge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="61bcf-183">四角形を取得する文字の 0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-183">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <param name="trailingEdge"><span data-ttu-id="61bcf-184">文字のトレーリング エッジを取得する場合は <see langword="true" />。文字のリーディング エッジを取得する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="61bcf-184"><see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span></span></param>
        <summary><span data-ttu-id="61bcf-185">指定されたインデックス位置にある文字のリーディング エッジまたはトレーリング エッジの四角形を返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-185">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="61bcf-186">指定された文字インデックス位置にある文字のエッジの四角形。外接する四角形を決定できない場合は <see cref="P:System.Windows.Rect.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="61bcf-186">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-187">このメソッドは、文字の端を表す四角形を返すため、四角形の幅は0になります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-187">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="61bcf-188"><paramref name="charIndex" /> が負か、またはコンテンツの長さより大きい値です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-188"><paramref name="charIndex" /> is negative or is greater than the length of the content.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingError : int -&gt; System.Windows.Controls.SpellingError" Usage="textBox.GetSpellingError charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="61bcf-189">スペル ミスがないかをチェックするコンテンツ内の位置の、0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-189">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="61bcf-190">指定された文字インデックスの位置にあるスペル ミスに関連付けられている <see cref="T:System.Windows.Controls.SpellingError" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-190">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="61bcf-191"><see cref="T:System.Windows.Controls.SpellingError" /> で示された文字の位置で見つかったスペル ミスの詳細を格納する <paramref name="charIndex" /> オブジェクト。指定された文字にスペル ミスが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61bcf-191">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorLength : int -&gt; int" Usage="textBox.GetSpellingErrorLength charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="61bcf-192">スペル ミスがないかをチェックするコンテンツ内の位置の、0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-192">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="61bcf-193">指定された文字を含むスペル ミスがあった場合、その長さを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-193">Returns the length of any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="61bcf-194">charIndex で指定された文字を含むスペル ミスの長さ。指定した文字を含むスペル ミスがない場合は 0。</span><span class="sxs-lookup"><span data-stu-id="61bcf-194">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorStart : int -&gt; int" Usage="textBox.GetSpellingErrorStart charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="61bcf-195">スペル ミスがないかをチェックするコンテンツ内の位置の、0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-195">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="61bcf-196">指定された文字を含むスペル ミスがあった場合、先頭の文字インデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-196">Returns the beginning character index for any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="61bcf-197"><paramref name="charIndex" /> で指定された文字を含むスペル ミスがあった場合は、先頭の文字インデックス。指定された文字を含むスペル ミスがない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="61bcf-197">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or -1 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="System.Windows.Controls.TextBox.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-198">テキスト ボックス内の行の合計数を取得します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-198">Gets the total number of lines in the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-199">テキストボックス内の行の合計数。レイアウト情報を使用できない場合は-1。</span><span class="sxs-lookup"><span data-stu-id="61bcf-199">The total number of lines in the text box, or -1 if layout information is not available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-200">テキストの折り返しが有効になっている場合は、テキストボックスの幅を変更すると、この値が変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-200">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="61bcf-201">返される値は、現在表示されている数に関係なく、テキストボックス内の行の合計数です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-201">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-202"><see cref="T:System.Windows.Controls.TextBox" /> の論理上の子要素に対する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-202">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="61bcf-203"><see cref="T:System.Windows.Controls.TextBox" /> の論理上の子要素に対する列挙子。</span><span class="sxs-lookup"><span data-stu-id="61bcf-203">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-204"><xref:System.Windows.Controls.TextBox.LogicalChildren%2A> プロパティは、<xref:System.Windows.Controls.TextBox.Text%2A> プロパティと等しい <xref:System.String> を含むコレクションの列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-204">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-205">テキスト ボックスに手動で入力できる最大文字数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-205">Gets or sets the maximum number of characters that can be manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-206">テキスト ボックスに手動で入力できる最大文字数。</span><span class="sxs-lookup"><span data-stu-id="61bcf-206">The maximum number of characters that can be manually entered into the text box.</span></span> <span data-ttu-id="61bcf-207">既定値 0 は、制限がないことを示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-207">The default is 0, which indicates no limit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-208">このプロパティを使用すると、郵便番号や電話番号などの値に対して、コントロールに入力されるテキストの長さを制限できます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-208">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="61bcf-209">また、このプロパティを使用して、データをデータベースに格納するときに入力するテキストの長さを制限し、コントロールに入力したテキストがデータベース内の対応するフィールドの最大長を超えないようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-209">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="61bcf-210">このプロパティは、プログラムによって追加される文字には影響しません。</span><span class="sxs-lookup"><span data-stu-id="61bcf-210">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="61bcf-211">このプロパティが0に設定されている場合、コントロールに入力できるテキストの最大長は、使用可能なメモリによってのみ制限されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-211">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="61bcf-212">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="61bcf-212">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="61bcf-213">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="61bcf-213">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="61bcf-214">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="61bcf-214">Metadata properties set to `true`</span></span>|<span data-ttu-id="61bcf-215">なし</span><span class="sxs-lookup"><span data-stu-id="61bcf-215">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="61bcf-216">次の例は、<xref:System.Windows.Controls.TextBox.MaxLength%2A> が500文字の <xref:System.Windows.Controls.TextBox> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-216">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLengthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-217"><see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-217">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLines : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-218">表示行の最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-218">Gets or sets the maximum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="61bcf-219">表示行の最大数。</span><span class="sxs-lookup"><span data-stu-id="61bcf-219">The maximum number of visible lines.</span></span> <span data-ttu-id="61bcf-220">既定では、 <see cref="F:System.Int32.MaxValue" />です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-220">The default is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-221">このプロパティを取得すると、<xref:System.Windows.Controls.TextBox.MaxLines%2A>の現在の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-221">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="61bcf-222">このプロパティを設定すると、表示される行の数が <xref:System.Windows.Controls.TextBox.MaxLines%2A>によって指定された制限を超えた場合に、テキストボックスのサイズが変更されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-222">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="61bcf-223">このプロパティは、表示される行にのみ適用され、実際の行数を制限しません。</span><span class="sxs-lookup"><span data-stu-id="61bcf-223">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="61bcf-224">テキストボックスには、その構成に応じて、スクロールによってアクセスできる非表示の行が追加されている場合があります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-224">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="61bcf-225"><xref:System.Windows.Controls.TextBox>に対して <xref:System.Windows.FrameworkElement.Height%2A> プロパティが明示的に設定されている場合、<xref:System.Windows.Controls.TextBox.MaxLines%2A> と <xref:System.Windows.Controls.TextBox.MinLines%2A> のプロパティ値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-225">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="61bcf-226">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="61bcf-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="61bcf-227">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="61bcf-227">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="61bcf-228">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="61bcf-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="61bcf-229">次の例は、<xref:System.Windows.Controls.TextBox.MaxLines%2A> 値が5の <xref:System.Windows.Controls.TextBox> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-229">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="61bcf-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> が <see cref="P:System.Windows.Controls.TextBox.MinLines" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-231"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-231">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="textBox.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="61bcf-232">テキスト ボックスのサイズに関する制約を指定する <see cref="T:System.Windows.Size" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="61bcf-232">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span></span></param>
        <summary><span data-ttu-id="61bcf-233">テキスト ボックスのサイズをコンテンツに合わせます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-233">Sizes the text box to its content.</span></span></summary>
        <returns><span data-ttu-id="61bcf-234">テキスト ボックスの新しいサイズを示す <see cref="T:System.Windows.Size" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="61bcf-234">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-235">カスタムのサイズ変更動作を実装するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="61bcf-235">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLines : int with get, set" Usage="System.Windows.Controls.TextBox.MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-236">表示行の最小数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-236">Gets or sets the minimum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="61bcf-237">表示行の最小数。</span><span class="sxs-lookup"><span data-stu-id="61bcf-237">The minimum number of visible lines.</span></span> <span data-ttu-id="61bcf-238">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-238">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-239">このプロパティを取得すると、<xref:System.Windows.Controls.TextBox.MinLines%2A>の現在の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-239">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="61bcf-240">このプロパティを設定すると、表示される行の数が <xref:System.Windows.Controls.TextBox.MinLines%2A>によって指定された値よりも小さい場合に、テキストボックスのサイズが変更されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-240">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="61bcf-241"><xref:System.Windows.Controls.TextBox>に対して <xref:System.Windows.FrameworkElement.Height%2A> プロパティが明示的に設定されている場合、<xref:System.Windows.Controls.TextBox.MaxLines%2A> と <xref:System.Windows.Controls.TextBox.MinLines%2A> のプロパティ値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-241">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="61bcf-242">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="61bcf-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="61bcf-243">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="61bcf-243">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="61bcf-244">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="61bcf-244">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="61bcf-245">次の例は、<xref:System.Windows.Controls.TextBox.MinLines%2A> 値が1の <xref:System.Windows.Controls.TextBox> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-245">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="61bcf-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> は <see cref="P:System.Windows.Controls.TextBox.MaxLines" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-247"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-247">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="textBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61bcf-248">テキスト ボックスの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトを作成し、返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-248">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></summary>
        <returns><span data-ttu-id="61bcf-249">テキスト ボックスの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61bcf-249">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-250">このメソッドは、<xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="61bcf-250">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="textBox.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61bcf-251">関連付けられているイベントの引数。</span><span class="sxs-lookup"><span data-stu-id="61bcf-251">Arguments for the associated event.</span></span></param>
        <summary><span data-ttu-id="61bcf-252">要素に存在する 1 つ以上の依存関係プロパティの有効な値が変更された場合に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-252">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-253">このメソッドは、<xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="61bcf-253">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.ScrollToLine : int -&gt; unit" Usage="textBox.ScrollToLine lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="61bcf-254">表示されるまでスクロールする行の 0 から始まる行インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-254">The zero-based line index of the line to scroll into view.</span></span></param>
        <summary><span data-ttu-id="61bcf-255">指定された行インデックス位置の行が表示されるまでスクロールします。</span><span class="sxs-lookup"><span data-stu-id="61bcf-255">Scrolls the line at the specified line index into view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-256">このメソッドにより、テキストボックスは、指定された行を完全に表示するために必要な最小量だけスクロールします。</span><span class="sxs-lookup"><span data-stu-id="61bcf-256">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Select : int * int -&gt; unit" Usage="textBox.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="61bcf-257">選択されている先頭の文字の 0 から始まる文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-257">The zero-based character index of the first character in the selection.</span></span></param>
        <param name="length"><span data-ttu-id="61bcf-258">選択範囲の長さ (文字数)。</span><span class="sxs-lookup"><span data-stu-id="61bcf-258">The length of the selection, in characters.</span></span></param>
        <summary><span data-ttu-id="61bcf-259">テキスト ボックスでテキストの範囲を選択します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-259">Selects a range of text in the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="61bcf-260"><paramref name="start" /> または <paramref name="length" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-260"><paramref name="start" /> or <paramref name="length" /> is negative.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Controls.TextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-261">テキスト ボックス内の現在の選択項目のコンテンツを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-261">Gets or sets the content of the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-262">テキスト ボックスで現在択されているテキスト。</span><span class="sxs-lookup"><span data-stu-id="61bcf-262">The currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-263">このプロパティを取得すると、現在選択されているテキストの文字列コピーが返されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-263">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="61bcf-264">このプロパティを設定すると、現在の選択項目が指定した文字列に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-264">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-265">テキスト ボックス内の現在の選択範囲の文字数を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-265">Gets or sets a value indicating the number of characters in the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-266">テキスト ボックス内の現在の選択範囲の文字数。</span><span class="sxs-lookup"><span data-stu-id="61bcf-266">The number of characters in the current selection in the text box.</span></span> <span data-ttu-id="61bcf-267">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-267">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-268">このプロパティを取得すると、現在の選択範囲の文字数が返されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-268">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="61bcf-269">このプロパティを設定すると、選択範囲の先頭を固定したまま、現在の選択範囲の長さが指定した値に調整されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-269">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="61bcf-270">一般に、指定した選択範囲によって、選択範囲が無効な位置 (復帰と改行文字の間、またはタグ内) になると、選択範囲が自動的に調整され、結果の選択範囲が開始されます。とは有効な位置で終了します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-270">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="61bcf-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> に負の数が設定されています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-272">現在の選択範囲の先頭の文字インデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-272">Gets or sets a character index for the beginning of the current selection.</span></span></summary>
        <value><span data-ttu-id="61bcf-273">現在の選択範囲の先頭の文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="61bcf-273">The character index for the beginning of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-274">指定した選択範囲によって、復帰と改行文字の間で選択範囲が終了する場合は、選択範囲が行全体のマーカー全体に広がるように、選択した長さが自動的に1ずつ増加します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-274">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="61bcf-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> に負の数が設定されています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeText : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="textBox.ShouldSerializeText manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="61bcf-276">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61bcf-276">A serialization service manager object for this object.</span></span></param>
        <summary><span data-ttu-id="61bcf-277"><see cref="P:System.Windows.Controls.TextBox.Text" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Controls.TextBox" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-277">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span></span></summary>
        <returns><span data-ttu-id="61bcf-278"><see langword="true" /> プロパティをシリアル化する必要がある場合は <see cref="P:System.Windows.Controls.TextBox.Text" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="61bcf-278"><see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="61bcf-279"><paramref name="manager" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-279"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="textBox.System.Windows.Markup.IAddChild.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="61bcf-280">子として追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61bcf-280">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="61bcf-281">常に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="61bcf-281">Throws an exception in all cases.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-282"><xref:System.Windows.Controls.TextBox> は、<xref:System.Windows.Markup.IAddChild> インターフェイスを介してテキストのみを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-282"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61bcf-283"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-283"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="61bcf-284">上記のいずれのケースにも該当しない場合。</span><span class="sxs-lookup"><span data-stu-id="61bcf-284">In all other cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="textBox.System.Windows.Markup.IAddChild.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="61bcf-285">オブジェクトに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="61bcf-285">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="61bcf-286">ノードのテキスト コンテンツをオブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-286">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-287">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="61bcf-288">これは、<xref:System.Windows.Controls.TextBox> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-288">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-289">テキスト ボックスのテキスト内容を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-289">Gets or sets the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-290">テキストボックスのテキスト内容を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="61bcf-290">A string containing the text contents of the text box.</span></span> <span data-ttu-id="61bcf-291">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-291">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-292">このプロパティを取得すると、テキストボックスの内容の文字列コピーが返されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-292">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="61bcf-293">このプロパティを設定すると、テキストボックスの内容が指定した文字列に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-293">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="61bcf-294">このプロパティは、アニメーションをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="61bcf-294">This property does not support animation.</span></span>  
  
 <span data-ttu-id="61bcf-295">データバインディングのシナリオで使用する場合、このプロパティは <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>の既定の更新動作を使用します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-295">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="61bcf-296">XAML プロパティ要素の使用</span><span class="sxs-lookup"><span data-stu-id="61bcf-296">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="61bcf-297">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="61bcf-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="61bcf-298">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="61bcf-298">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="61bcf-299">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="61bcf-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="61bcf-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="61bcf-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Controls.TextBox.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-301">テキスト ボックスのコンテンツの水平方向の配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-301">Gets or sets the horizontal alignment of the contents of the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-302">テキスト ボックスのコンテンツの水平方向の配置を指定する <see cref="T:System.Windows.TextAlignment" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="61bcf-302">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span></span> <span data-ttu-id="61bcf-303">既定では、 <see cref="F:System.Windows.TextAlignment.Left" />です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-303">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-304">このプロパティを取得すると、現在の配置が返されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-304">Getting this property returns the current alignment.</span></span> <span data-ttu-id="61bcf-305">このプロパティを設定すると、テキストボックスの内容が、指定した配置に合わせて調整されます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-305">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="61bcf-306">このプロパティは、<xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> プロパティよりも優先順位が高くなります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-306">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="61bcf-307">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="61bcf-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="61bcf-308">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="61bcf-308">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="61bcf-309">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="61bcf-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="61bcf-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="61bcf-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="61bcf-311">次の例は、<xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>の <xref:System.Windows.Controls.TextBox.TextAlignment%2A> を持つ <xref:System.Windows.Controls.TextBox> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-311">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-312"><see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-312">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextDecorations : System.Windows.TextDecorationCollection with get, set" Usage="System.Windows.Controls.TextBox.TextDecorations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-313">テキスト ボックスに適用する文字装飾を取得します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-313">Gets the text decorations to apply to the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-314">テキスト ボックスに適用する文字装飾が格納される <see cref="T:System.Windows.TextDecorationCollection" /> コレクション。</span><span class="sxs-lookup"><span data-stu-id="61bcf-314">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span></span> <span data-ttu-id="61bcf-315">既定値は <see langword="null" /> です (文字装飾は適用されません)。</span><span class="sxs-lookup"><span data-stu-id="61bcf-315">The default is <see langword="null" /> (no text decorations applied).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-316"><xref:System.Windows.TextDecoration> オブジェクトは、テキストに追加できる視覚的装飾です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-316">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="61bcf-317">文字の装飾には、下線、基準、取り消し線、および上線の4種類があります。</span><span class="sxs-lookup"><span data-stu-id="61bcf-317">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="61bcf-318">文字装飾の詳細については、「[方法: 文字装飾を作成](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-318">For more information about text decorations, see [How to: Create a Text Decoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="61bcf-319">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="61bcf-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="61bcf-320">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="61bcf-320">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="61bcf-321">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="61bcf-321">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="61bcf-322">次の例では、<xref:System.Windows.Documents.Run> を例の要素として使用して、<xref:System.Windows.Documents.Inline.TextDecorations%2A> 属性を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-322">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="61bcf-323">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-323">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="61bcf-324">![スクリーンショット: 既定の取り消し線が適用されるテキスト](~/add/media/inline-textdec-strike.png "スクリーンショット: 既定の取り消し線が適用されたテキスト")</span><span class="sxs-lookup"><span data-stu-id="61bcf-324">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="61bcf-325">次の図は、それぞれ <xref:System.Windows.TextDecorations.OverLine%2A>、<xref:System.Windows.TextDecorations.Baseline%2A>、および <xref:System.Windows.TextDecorations.Underline%2A> 装飾がどのようにレンダリングされるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-325">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="61bcf-326">![スクリーンショット: 上線の TextDecorator](~/add/media/inline-textdec-over.png "スクリーンショット: TextDecorator の上に線を引く")</span><span class="sxs-lookup"><span data-stu-id="61bcf-326">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="61bcf-327">![スクリーンショット: テキストに対する既定のベースライン効果](~/add/media/inline-textdec-base.png "スクリーンショット: テキストに対する既定のベースライン効果")</span><span class="sxs-lookup"><span data-stu-id="61bcf-327">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="61bcf-328">![スクリーンショット: 既定の下線が適用されるテキスト](~/add/media/inline-textdec-under.png "スクリーンショット: 既定の下線が適用されたテキスト")</span><span class="sxs-lookup"><span data-stu-id="61bcf-328">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="61bcf-329">次の例は、<xref:System.Windows.Documents.Inline.TextDecorations%2A> プロパティをプログラムで設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-329">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextDecorationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-330"><see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-330">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-331"><xref:System.Windows.Controls.TextBox.TextDecorations%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="61bcf-331">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-332"><see cref="P:System.Windows.Controls.TextBox.Text" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-332">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapping : System.Windows.TextWrapping with get, set" Usage="System.Windows.Controls.TextBox.TextWrapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-333">テキスト ボックスでのテキストの折り返し方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-333">Gets or sets how the text box should wrap text.</span></span></summary>
        <value><span data-ttu-id="61bcf-334">テキスト ボックスでのテキストの折り返し方法を示す <see cref="T:System.Windows.TextWrapping" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="61bcf-334">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span></span> <span data-ttu-id="61bcf-335">既定では、 <see cref="F:System.Windows.TextWrapping.NoWrap" />です。</span><span class="sxs-lookup"><span data-stu-id="61bcf-335">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-336"><xref:System.Windows.Controls.TextBox.TextWrapping%2A> 属性を <xref:System.Windows.TextWrapping.Wrap> に設定すると、<xref:System.Windows.Controls.TextBox> コントロールの端に達したときに入力したテキストが新しい行に折り返され、必要に応じて、<xref:System.Windows.Controls.TextBox> コントロールの高さが自動的に拡大され、新しい行のスペースが含まれます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-336">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="61bcf-337">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="61bcf-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="61bcf-338">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="61bcf-338">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="61bcf-339">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="61bcf-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="61bcf-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="61bcf-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="61bcf-341">このプロパティの値を設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-341">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextWrappingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-342"><see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-342">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-343"><xref:System.Windows.Controls.TextBox.TextWrapping%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="61bcf-343">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Typography : System.Windows.Documents.Typography" Usage="System.Windows.Controls.TextBox.Typography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61bcf-344">テキスト ボックスのテキスト コンテンツで現在有効な文字体裁のバリエーションを取得します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-344">Gets the currently effective typography variations for the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="61bcf-345">現在有効な文字体裁のバリエーションを指定する <see cref="T:System.Windows.Documents.Typography" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61bcf-345">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span></span> <span data-ttu-id="61bcf-346">既定の文字体裁値の一覧については、<see cref="T:System.Windows.Documents.Typography" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-346">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61bcf-347"><xref:System.Windows.Documents.FlowDocument.Typography%2A> プロパティは、[!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] フォントにのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="61bcf-347">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="61bcf-348">タイポグラフィバリアントは、バリアントをサポートしていないフォントには影響しません。</span><span class="sxs-lookup"><span data-stu-id="61bcf-348">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="61bcf-349">このトピックの詳細については、「 [WPF のタイポグラフィ](~/docs/framework/wpf/advanced/typography-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61bcf-349">For more information about this topic, see [Typography in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61bcf-350">次の例では、<xref:System.Windows.Documents.Paragraph> を例の要素として使用して、<xref:System.Windows.Documents.TextElement.Typography%2A> 属性を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-350">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="61bcf-351">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-351">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="61bcf-352">![スクリーンショット: タイポグラフィを変更したテキスト](~/add/media/textelement-typog.png "スクリーンショット: 変更されたタイポグラフィを含むテキスト")</span><span class="sxs-lookup"><span data-stu-id="61bcf-352">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="61bcf-353">これに対し、既定の文字体裁プロパティを設定した同様の例がどのように表示されるかを次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="61bcf-353">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="61bcf-354">![スクリーンショット: タイポグラフィを変更したテキスト](~/add/media/textelement-typog-default.png "スクリーンショット: 変更されたタイポグラフィを含むテキスト")</span><span class="sxs-lookup"><span data-stu-id="61bcf-354">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="61bcf-355">次の例は、<xref:System.Windows.Controls.TextBox.Typography%2A> プロパティをプログラムで設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61bcf-355">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
