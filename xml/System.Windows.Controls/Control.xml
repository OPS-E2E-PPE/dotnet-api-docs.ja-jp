<Type Name="Control" FullName="System.Windows.Controls.Control">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ab1b3203b10bea0caee6a39d423daaf4240ff83" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83493005" /></Metadata><TypeSignature Language="C#" Value="public class Control : System.Windows.FrameworkElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Control extends System.Windows.FrameworkElement" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Inherits FrameworkElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : System::Windows::FrameworkElement" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit FrameworkElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Control extends System.Windows.FrameworkElement" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="80e12-101"><see cref="T:System.Windows.Controls.ControlTemplate" /> を使用して外観を定義するユーザー インターフェイス (UI) 要素の基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="80e12-101">Represents the base class for user interface (UI) elements that use a <see cref="T:System.Windows.Controls.ControlTemplate" /> to define their appearance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-102"><xref:System.Windows.Controls.Control> クラスは、アプリケーションに追加する多くのコントロールの基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="80e12-102">The <xref:System.Windows.Controls.Control> class is the base class for many of the controls you add to an application.</span></span> <span data-ttu-id="80e12-103"><xref:System.Windows.Controls.Control> クラスは、ごくわずかな動作を定義します。アプリケーションに <xref:System.Windows.Controls.Control> を追加することもできますが、<xref:System.Windows.Controls.Button> や <xref:System.Windows.Controls.ListBox>など、<xref:System.Windows.Controls.Control>から継承するコントロールを追加する方がはるかに一般的です。</span><span class="sxs-lookup"><span data-stu-id="80e12-103">The <xref:System.Windows.Controls.Control> class defines very little behavior; while it is possible to add a <xref:System.Windows.Controls.Control> to your application, it is far more common to add a control that inherits from <xref:System.Windows.Controls.Control>, such as a <xref:System.Windows.Controls.Button> or <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 <span data-ttu-id="80e12-104"><xref:System.Windows.Controls.Control.Template%2A> プロパティは、<xref:System.Windows.Controls.ControlTemplate>であり、<xref:System.Windows.Controls.Control>の外観を指定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-104">The <xref:System.Windows.Controls.Control.Template%2A> property, which is a <xref:System.Windows.Controls.ControlTemplate>, specifies the appearance of the <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="80e12-105">コントロールの外観を変更し、その機能を保持する場合は、新しいクラスを作成するのではなく、新しい <xref:System.Windows.Controls.ControlTemplate> を作成することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-105">If you want to change the appearance of a control but retain its functionality, you should consider creating a new <xref:System.Windows.Controls.ControlTemplate> instead of creating a new class.</span></span> <span data-ttu-id="80e12-106">詳しくは、「 [スタイルとテンプレート](~/docs/framework/wpf/controls/styling-and-templating.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="80e12-106">For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
 <span data-ttu-id="80e12-107">カスタム動作を持つコントロールを作成し、他のユーザーがその外観をカスタマイズできるようにするには、コントロールで <xref:System.Windows.Controls.Control> クラスを継承し、<xref:System.Windows.Controls.ControlTemplate>を定義します。</span><span class="sxs-lookup"><span data-stu-id="80e12-107">If you want to create a control with custom behavior as well as allow others to customize its appearance, your control can inherit from the <xref:System.Windows.Controls.Control> class and define a <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="80e12-108">既存のコントロールの動作を拡張する場合は、<xref:System.Windows.Controls.Control>から継承したクラスから継承できます。</span><span class="sxs-lookup"><span data-stu-id="80e12-108">If you want to extend the behavior of an existing control, you can inherit from a class that inherits from <xref:System.Windows.Controls.Control>.</span></span>  
  
 <span data-ttu-id="80e12-109"><xref:System.Windows.Controls.ControlTemplate> を持たない <xref:System.Windows.Controls.Control> は、アプリケーションには表示されません。また、次のプロパティを設定しても、<xref:System.Windows.Controls.ControlTemplate> が明示的に参照しない限り、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="80e12-109">A <xref:System.Windows.Controls.Control> that does not have a <xref:System.Windows.Controls.ControlTemplate> is not visible in your application, and setting the following properties has no effect unless the <xref:System.Windows.Controls.ControlTemplate> references them explicitly:</span></span>  
  
-   <xref:System.Windows.Controls.Control.Background%2A>  
  
-   <xref:System.Windows.Controls.Control.BorderBrush%2A>  
  
-   <xref:System.Windows.Controls.Control.BorderThickness%2A>  
  
-   <xref:System.Windows.Controls.Control.FontFamily%2A>  
  
-   <xref:System.Windows.Controls.Control.FontSize%2A>  
  
-   <xref:System.Windows.Controls.Control.FontStretch%2A>  
  
-   <xref:System.Windows.Controls.Control.FontWeight%2A>  
  
-   <xref:System.Windows.Controls.Control.Foreground%2A>  
  
-   <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>  
  
-   <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A>  
  
 <span data-ttu-id="80e12-110">これらのプロパティを使用する一般的な方法は、<xref:System.Windows.Controls.ControlTemplate> 内の要素をプロパティにバインドすることです。</span><span class="sxs-lookup"><span data-stu-id="80e12-110">A common way to use these properties is to bind an element in the <xref:System.Windows.Controls.ControlTemplate> to the property.</span></span>  <span data-ttu-id="80e12-111">たとえば、<xref:System.Windows.Controls.Control.Background%2A> プロパティの値に応じてコントロールの色を変更する場合は、<xref:System.Windows.Controls.ControlTemplate> 内の要素のプロパティを <xref:System.Windows.Controls.Control.Background%2A>にバインドできます。</span><span class="sxs-lookup"><span data-stu-id="80e12-111">For example, if you want your control to change color according to the value of the <xref:System.Windows.Controls.Control.Background%2A> property, you can bind some property of an element in the <xref:System.Windows.Controls.ControlTemplate> to the <xref:System.Windows.Controls.Control.Background%2A>.</span></span> <span data-ttu-id="80e12-112">[TemplateBinding マークアップ拡張機能](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)を使用して、コントロールのプロパティを <xref:System.Windows.Controls.ControlTemplate>内の要素にバインドします。</span><span class="sxs-lookup"><span data-stu-id="80e12-112">Use the [TemplateBinding Markup Extension](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md) to bind properties on a control to an element in the <xref:System.Windows.Controls.ControlTemplate>.</span></span>  
  
 <span data-ttu-id="80e12-113"><xref:System.Windows.Controls.Control> <xref:System.Windows.UIElement.Focusable%2A> プロパティのメタデータをオーバーライドし、その既定値を `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-113"><xref:System.Windows.Controls.Control> overrides the metadata of the <xref:System.Windows.UIElement.Focusable%2A> property and sets its default to `true`.</span></span> <span data-ttu-id="80e12-114">詳細については、「[依存関係プロパティの概要](~/docs/framework/wpf/advanced/dependency-properties-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-114">For more information, see [Dependency Properties Overview](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="80e12-115">WPF コントロールギャラリーのサンプル</span><span class="sxs-lookup"><span data-stu-id="80e12-115">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80e12-116"><see cref="T:System.Windows.Controls.Control" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="80e12-116">Initializes a new instance of the <see cref="T:System.Windows.Controls.Control" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="control.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds"><span data-ttu-id="80e12-117">コンテンツの配置に使用する計算されたサイズ。</span><span class="sxs-lookup"><span data-stu-id="80e12-117">The computed size that is used to arrange the content.</span></span></param>
        <summary><span data-ttu-id="80e12-118"><see cref="T:System.Windows.Controls.Control" /> オブジェクトのコンテンツを配置し、そのサイズを設定するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-118">Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control" /> object.</span></span></summary>
        <returns><span data-ttu-id="80e12-119">コントロールのサイズです。</span><span class="sxs-lookup"><span data-stu-id="80e12-119">The size of the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-120">既定のコントロールの配置では、最初のビジュアル子のみが配置されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-120">The default control arrangement arranges only the first visual child.</span></span> <span data-ttu-id="80e12-121">変換は適用されません。</span><span class="sxs-lookup"><span data-stu-id="80e12-121">No transforms are applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Control.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-122">コントロールの背景を表すブラシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-122">Gets or sets a brush that describes the background of a control.</span></span></summary>
        <value><span data-ttu-id="80e12-123">コントロールの背景の塗りつぶしに使用するブラシ。</span><span class="sxs-lookup"><span data-stu-id="80e12-123">The brush that is used to fill the background of the control.</span></span> <span data-ttu-id="80e12-124">既定では、 <see cref="P:System.Windows.Media.Brushes.Transparent" />です。</span><span class="sxs-lookup"><span data-stu-id="80e12-124">The default is <see cref="P:System.Windows.Media.Brushes.Transparent" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-125"><xref:System.Windows.Controls.Control.Background%2A> プロパティは、コントロールの静止状態にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-125">The <xref:System.Windows.Controls.Control.Background%2A> property applies only to the resting state of a control.</span></span>  <span data-ttu-id="80e12-126">コントロールの既定のスタイルは、コントロールの状態が変化したときの外観を指定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-126">The default style of the control specifies its appearance when the state of the control changes.</span></span> <span data-ttu-id="80e12-127">たとえば、<xref:System.Windows.Controls.Button>の [<xref:System.Windows.Controls.Control.Background%2A>] プロパティを設定した場合、ボタンが押されていない場合、または無効になっている場合にのみ、その値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-127">For example, if you set the <xref:System.Windows.Controls.Control.Background%2A> property on a <xref:System.Windows.Controls.Button>, the button has that value only when it is not pressed or disabled.</span></span> <span data-ttu-id="80e12-128">背景をより高度にカスタマイズしたコントロールを作成する場合は、コントロールのスタイルを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="80e12-128">If you want to create a control that has a more advanced customization of the background, you must define the control's style.</span></span>  
  
 <span data-ttu-id="80e12-129">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.Background%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-129">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.Background%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-130">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-130">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-131">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-131">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-132">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-132">Identifier field</span></span>|<xref:System.Windows.Controls.Control.BackgroundProperty>|  
|<span data-ttu-id="80e12-133">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-133">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-134"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-134"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-135">次の例は、コントロールの background プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-135">The following example shows how to set the background property of a control.</span></span>  
  
 [!code-xaml[ControlProps#11](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#11)]  
  
 [!code-csharp[ControlProps#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#1)]
 [!code-vb[ControlProps#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#1)]  
  
 <span data-ttu-id="80e12-136">次の例は、トリガーが押されたときにボタンの背景を変更できるようにするテンプレートを示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-136">The following example shows a template that enables a trigger to change the background of a button when it is pressed.</span></span>  
  
 [!code-xaml[BackgroundProp_snip#ButtonTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/BackgroundProp_snip/CS/page1.xaml#buttontemplate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-137"><see cref="P:System.Windows.Controls.Control.Background" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-137">Identifies the <see cref="P:System.Windows.Controls.Control.Background" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Control.BorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-138">コントロールの境界線の背景を表すブラシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-138">Gets or sets a brush that describes the border background of a control.</span></span></summary>
        <value><span data-ttu-id="80e12-139">コントロールの境界線の塗りつぶしに使用するブラシ。既定値は <see cref="P:System.Windows.Media.Brushes.Transparent" /> です。</span><span class="sxs-lookup"><span data-stu-id="80e12-139">The brush that is used to fill the control's border; the default is <see cref="P:System.Windows.Media.Brushes.Transparent" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-140">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.BorderBrush%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-140">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.BorderBrush%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-141">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-141">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-142">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-142">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-143">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-143">Identifier field</span></span>|<xref:System.Windows.Controls.Control.BorderBrushProperty>|  
|<span data-ttu-id="80e12-144">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-144">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-145"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-145"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-146">次の例は、コントロールの border brush プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-146">The following example shows how to set the border brush property of a control.</span></span>  
  
 [!code-xaml[ControlProps#17](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#17)]  
  
 [!code-csharp[ControlProps#7](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#7)]
 [!code-vb[ControlProps#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.BorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-147"><see cref="P:System.Windows.Controls.Control.BorderBrush" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-147">Identifies the <see cref="P:System.Windows.Controls.Control.BorderBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.BorderThickness : System.Windows.Thickness with get, set" Usage="System.Windows.Controls.Control.BorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-148">コントロールの境界線の太さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-148">Gets or sets the border thickness of a control.</span></span></summary>
        <value><span data-ttu-id="80e12-149">太さの値。既定値は、4 辺すべてにつき 0 です。</span><span class="sxs-lookup"><span data-stu-id="80e12-149">A thickness value; the default is a thickness of 0 on all four sides.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-150">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.BorderThickness%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-150">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.BorderThickness%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-151">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-151">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-152">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-152">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-153">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-153">Identifier field</span></span>|<xref:System.Windows.Controls.Control.BorderThicknessProperty>|  
|<span data-ttu-id="80e12-154">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-154">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-155"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-155"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-156">次の例は、コントロールの境界線の太さプロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-156">The following example shows how to set the border thickness property of a control.</span></span>  
  
 [!code-xaml[ControlProps_snip#AdditionalControlProps11](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml#additionalcontrolprops11)]  
  
 [!code-csharp[ControlProps_snip#AdditionalControlProps1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml.cs#additionalcontrolprops1)]
 [!code-vb[ControlProps_snip#AdditionalControlProps1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps_snip/VisualBasic/Window1.xaml.vb#additionalcontrolprops1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderThicknessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.BorderThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-157"><see cref="P:System.Windows.Controls.Control.BorderThickness" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-157">Identifies the <see cref="P:System.Windows.Controls.Control.BorderThickness" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily FontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.FontFamily" />
      <MemberSignature Language="VB.NET" Value="Public Property FontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamily ^ FontFamily { System::Windows::Media::FontFamily ^ get(); void set(System::Windows::Media::FontFamily ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FontFamily : System.Windows.Media.FontFamily with get, set" Usage="System.Windows.Controls.Control.FontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-158">コントロールのフォント ファミリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-158">Gets or sets the font family of the control.</span></span></summary>
        <value><span data-ttu-id="80e12-159">フォント ファミリ。</span><span class="sxs-lookup"><span data-stu-id="80e12-159">A font family.</span></span> <span data-ttu-id="80e12-160">既定値は、システム ダイアログのフォントです。</span><span class="sxs-lookup"><span data-stu-id="80e12-160">The default is the system dialog font.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-161">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.FontFamily%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-161">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.FontFamily%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-162">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-162">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_FontFamily"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-163">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-163">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-164">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-164">Identifier field</span></span>|<xref:System.Windows.Controls.Control.FontFamilyProperty>|  
|<span data-ttu-id="80e12-165">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-165">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-166"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-166"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-167">次の例は、コントロールのフォントファミリプロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-167">The following example shows how to set the font family property of a control.</span></span>  
  
 [!code-xaml[ControlProps#13](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#13)]  
  
 [!code-csharp[ControlProps#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[ControlProps#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamilyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontFamilyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontFamilyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.FontFamilyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontFamilyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontFamilyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontFamilyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.FontFamilyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-168"><see cref="P:System.Windows.Controls.Control.FontFamily" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-168">Identifies the <see cref="P:System.Windows.Controls.Control.FontFamily" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public double FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.FontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontSize : double with get, set" Usage="System.Windows.Controls.Control.FontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.FontSizeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-169">フォント サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-169">Gets or sets the font size.</span></span></summary>
        <value><span data-ttu-id="80e12-170"><see cref="T:System.Windows.Controls.Control" /> 内のテキストのサイズ。</span><span class="sxs-lookup"><span data-stu-id="80e12-170">The size of the text in the <see cref="T:System.Windows.Controls.Control" />.</span></span> <span data-ttu-id="80e12-171">既定では、 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />です。</span><span class="sxs-lookup"><span data-stu-id="80e12-171">The default is <see cref="P:System.Windows.SystemFonts.MessageFontSize" />.</span></span> <span data-ttu-id="80e12-172">フォント サイズは、正の数であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="80e12-172">The font size must be a positive number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-173">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.FontSize%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-173">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.FontSize%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-174">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-174">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_FontSize"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-175">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-176">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-176">Identifier field</span></span>|<xref:System.Windows.Controls.Control.FontSizeProperty>|  
|<span data-ttu-id="80e12-177">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-178"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-178"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
<a name="xamlAttributeUsage_FontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="80e12-179">XAML 属性の使用</span><span class="sxs-lookup"><span data-stu-id="80e12-179">XAML Attribute Usage</span></span>  
  
```  
<object FontSize="double"/>  
- or -  
<object FontSize ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_FontSize"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80e12-180">XAML の値</span><span class="sxs-lookup"><span data-stu-id="80e12-180">XAML Values</span></span>  
 <span data-ttu-id="80e12-181">*double*</span><span class="sxs-lookup"><span data-stu-id="80e12-181">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="80e12-182"><xref:System.Double> 値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="80e12-182">A string representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="80e12-183">これは、[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] の測定値として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-183">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="80e12-184">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="80e12-184">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="80e12-185">たとえば、`1` の値は許容されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-185">For example, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="80e12-186">ここでは、[プロパティ値] セクションに記載されているものと同じ <xref:System.Double> 範囲の制限が適用されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-186">The same <xref:System.Double> range restrictions that are mentioned in the Property Value section apply here.</span></span>  
  
 <span data-ttu-id="80e12-187">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="80e12-187">*qualifiedDouble*</span></span>  
 <span data-ttu-id="80e12-188">前に説明した*double*値の後に、`px`、`in`、`cm`、`pt`のいずれかの単位宣言文字列が続きます。</span><span class="sxs-lookup"><span data-stu-id="80e12-188">A *double* value as previously described that is followed by one of these unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="80e12-189">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="80e12-189">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="80e12-190">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="80e12-190">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="80e12-191">`cm` はセンチメートルです。1cm = = (96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="80e12-191">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="80e12-192">`pt` はポイント。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="80e12-192">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="80e12-193">**メモ**多くの場合、double は "Auto" に設定されますが、"Auto" に設定すると、<xref:System.Windows.Controls.Control.FontSize%2A?displayProperty=nameWithType> は表示されません。</span><span class="sxs-lookup"><span data-stu-id="80e12-193">**Note** In many cases a double may be set to "Auto," but a <xref:System.Windows.Controls.Control.FontSize%2A?displayProperty=nameWithType> does not render if set to "Auto".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80e12-194">次の例は、コントロールのフォントサイズプロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-194">The following example shows how to set the font size property of a control.</span></span>  
  
 [!code-xaml[ControlProps#14](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#14)]  
  
 [!code-csharp[ControlProps#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#4)]
 [!code-vb[ControlProps#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.FontSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontSizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontSizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.FontSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-195"><see cref="P:System.Windows.Controls.Control.FontSize" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-195">Identifies the <see cref="P:System.Windows.Controls.Control.FontSize" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStretch">
      <MemberSignature Language="C#" Value="public System.Windows.FontStretch FontStretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStretch FontStretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.FontStretch" />
      <MemberSignature Language="VB.NET" Value="Public Property FontStretch As FontStretch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontStretch FontStretch { System::Windows::FontStretch get(); void set(System::Windows::FontStretch value); };" />
      <MemberSignature Language="F#" Value="member this.FontStretch : System.Windows.FontStretch with get, set" Usage="System.Windows.Controls.Control.FontStretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontStretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-196">画面上でのフォントの縮小率または拡大率を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-196">Gets or sets the degree to which a font is condensed or expanded on the screen.</span></span></summary>
        <value><span data-ttu-id="80e12-197"><see cref="T:System.Windows.FontStretch" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="80e12-197">A <see cref="T:System.Windows.FontStretch" /> value.</span></span> <span data-ttu-id="80e12-198">既定では、 <see cref="P:System.Windows.FontStretches.Normal" />です。</span><span class="sxs-lookup"><span data-stu-id="80e12-198">The default is <see cref="P:System.Windows.FontStretches.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-199">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.FontStretch%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-199">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.FontStretch%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-200">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-200">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_FontStretch"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-201">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-201">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-202">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-202">Identifier field</span></span>|<xref:System.Windows.Controls.Control.FontStretchProperty>|  
|<span data-ttu-id="80e12-203">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-203">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-204"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-204"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-205">次の例は、コントロールのフォント拡張プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-205">The following example shows how to set the font stretch property of a control.</span></span> <span data-ttu-id="80e12-206">使用可能な伸縮値については、「<xref:System.Windows.FontStretches>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-206">For possible stretch values, see <xref:System.Windows.FontStretches>.</span></span>  
  
 [!code-xaml[ControlProps_snip#AdditionalControlProps12](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml#additionalcontrolprops12)]  
  
 [!code-csharp[ControlProps_snip#AdditionalControlProps2](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml.cs#additionalcontrolprops2)]
 [!code-vb[ControlProps_snip#AdditionalControlProps2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps_snip/VisualBasic/Window1.xaml.vb#additionalcontrolprops2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStretchProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontStretchProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontStretchProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.FontStretchProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontStretchProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontStretchProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontStretchProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.FontStretchProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-207"><see cref="P:System.Windows.Controls.Control.FontStretch" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-207">Identifies the <see cref="P:System.Windows.Controls.Control.FontStretch" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStyle">
      <MemberSignature Language="C#" Value="public System.Windows.FontStyle FontStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStyle FontStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.FontStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FontStyle As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontStyle FontStyle { System::Windows::FontStyle get(); void set(System::Windows::FontStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FontStyle : System.Windows.FontStyle with get, set" Usage="System.Windows.Controls.Control.FontStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-208">フォント スタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-208">Gets or sets the font style.</span></span></summary>
        <value><span data-ttu-id="80e12-209"><see cref="T:System.Windows.FontStyle" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="80e12-209">A <see cref="T:System.Windows.FontStyle" /> value.</span></span> <span data-ttu-id="80e12-210">既定では、 <see cref="P:System.Windows.FontStyles.Normal" />です。</span><span class="sxs-lookup"><span data-stu-id="80e12-210">The default is <see cref="P:System.Windows.FontStyles.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-211">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.FontStyle%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-211">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.FontStyle%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-212">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-212">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_FontStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-213">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-213">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-214">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-214">Identifier field</span></span>|<xref:System.Windows.Controls.Control.FontStyleProperty>|  
|<span data-ttu-id="80e12-215">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-215">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-216"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-216"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-217">次の例は、コントロールのフォントスタイルプロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-217">The following example shows how to set the font style property of a control.</span></span>  
  
 [!code-xaml[ControlProps#15](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#15)]  
  
 [!code-csharp[ControlProps#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#5)]
 [!code-vb[ControlProps#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.FontStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.FontStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-218"><see cref="P:System.Windows.Controls.Control.FontStyle" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-218">Identifies the <see cref="P:System.Windows.Controls.Control.FontStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeight">
      <MemberSignature Language="C#" Value="public System.Windows.FontWeight FontWeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontWeight FontWeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.FontWeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FontWeight As FontWeight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontWeight FontWeight { System::Windows::FontWeight get(); void set(System::Windows::FontWeight value); };" />
      <MemberSignature Language="F#" Value="member this.FontWeight : System.Windows.FontWeight with get, set" Usage="System.Windows.Controls.Control.FontWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontWeight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-219">指定したフォントの太さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-219">Gets or sets the weight or thickness of the specified font.</span></span></summary>
        <value><span data-ttu-id="80e12-220"><see cref="T:System.Windows.FontWeight" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="80e12-220">A <see cref="T:System.Windows.FontWeight" /> value.</span></span> <span data-ttu-id="80e12-221">既定では、 <see cref="P:System.Windows.FontWeights.Normal" />です。</span><span class="sxs-lookup"><span data-stu-id="80e12-221">The default is <see cref="P:System.Windows.FontWeights.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-222">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.FontWeight%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-222">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.FontWeight%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-223">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-223">On other controls, this property has no impact.</span></span> <span data-ttu-id="80e12-224">定義済みの <xref:System.Windows.FontWeight> 値の一覧については、<xref:System.Windows.FontWeights> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-224">For a list of predefined <xref:System.Windows.FontWeight> values, see the <xref:System.Windows.FontWeights> class.</span></span>  
  
<a name="dependencyPropertyInfo_FontWeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-225">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-225">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-226">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-226">Identifier field</span></span>|<xref:System.Windows.Controls.Control.FontWeightProperty>|  
|<span data-ttu-id="80e12-227">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-227">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-228"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-228"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-229">次の例は、コントロールの <xref:System.Windows.Controls.Control.FontWeight%2A> プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-229">The following example shows how to set the <xref:System.Windows.Controls.Control.FontWeight%2A> property of a control.</span></span>  
  
 [!code-xaml[ControlProps#16](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#16)]  
  
 [!code-csharp[ControlProps#6](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#6)]
 [!code-vb[ControlProps#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontWeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontWeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.FontWeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontWeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontWeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontWeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.FontWeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-230"><see cref="P:System.Windows.Controls.Control.FontWeight" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-230">Identifies the <see cref="P:System.Windows.Controls.Control.FontWeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Foreground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Foreground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Foreground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.Foreground" />
      <MemberSignature Language="VB.NET" Value="Public Property Foreground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Foreground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Foreground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Control.Foreground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-231">前景色を表すブラシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-231">Gets or sets a brush that describes the foreground color.</span></span></summary>
        <value><span data-ttu-id="80e12-232">コントロールの前景を描画するブラシ。</span><span class="sxs-lookup"><span data-stu-id="80e12-232">The brush that paints the foreground of the control.</span></span> <span data-ttu-id="80e12-233">既定値は、システム ダイアログのフォントの色です。</span><span class="sxs-lookup"><span data-stu-id="80e12-233">The default value is the system dialog font color.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-234">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.Foreground%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-234">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.Foreground%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-235">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-235">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_Foreground"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-236">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-236">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-237">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-237">Identifier field</span></span>|<xref:System.Windows.Controls.Control.ForegroundProperty>|  
|<span data-ttu-id="80e12-238">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-238">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-239"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="80e12-239"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-240">次の例は、コントロールのフォントスタイルプロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-240">The following example shows how to set the font style property of a control.</span></span>  
  
 [!code-xaml[ControlProps#12](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#12)]  
  
 [!code-csharp[ControlProps#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ControlProps#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForegroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForegroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.ForegroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForegroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForegroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ForegroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.ForegroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-241"><see cref="P:System.Windows.Controls.Control.Foreground" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-241">Identifies the <see cref="P:System.Windows.Controls.Control.Foreground" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal virtual bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.Control.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-242">コントロールがスクロールをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="80e12-242">Gets a value that indicates whether a control supports scrolling.</span></span></summary>
        <value><span data-ttu-id="80e12-243">コントロールがそのスタイルに <see cref="T:System.Windows.Controls.ScrollViewer" /> を持ち、カスタムのキーボード スクロール動作を行う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="80e12-243"><see langword="true" /> if the control has a <see cref="T:System.Windows.Controls.ScrollViewer" /> in its style and has a custom keyboard scrolling behavior; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalContentAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.HorizontalAlignment HorizontalContentAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.HorizontalAlignment HorizontalContentAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.HorizontalContentAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalContentAlignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::HorizontalAlignment HorizontalContentAlignment { System::Windows::HorizontalAlignment get(); void set(System::Windows::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalContentAlignment : System.Windows.HorizontalAlignment with get, set" Usage="System.Windows.Controls.Control.HorizontalContentAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-244">コントロールのコンテンツの水平方向の配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-244">Gets or sets the horizontal alignment of the control's content.</span></span></summary>
        <value><span data-ttu-id="80e12-245"><see cref="T:System.Windows.HorizontalAlignment" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="80e12-245">One of the <see cref="T:System.Windows.HorizontalAlignment" /> values.</span></span> <span data-ttu-id="80e12-246">既定では、 <see cref="F:System.Windows.HorizontalAlignment.Left" />です。</span><span class="sxs-lookup"><span data-stu-id="80e12-246">The default is <see cref="F:System.Windows.HorizontalAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-247"><xref:System.Windows.HorizontalAlignment.Left>、<xref:System.Windows.HorizontalAlignment.Right>、および <xref:System.Windows.HorizontalAlignment.Center>に加えて、<xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> プロパティを <xref:System.Windows.HorizontalAlignment.Stretch>に設定することもできます。これにより、子要素が親要素の割り当てられた領域に合わせて拡大されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-247">In addition to <xref:System.Windows.HorizontalAlignment.Left>, <xref:System.Windows.HorizontalAlignment.Right>, and <xref:System.Windows.HorizontalAlignment.Center>, you can set the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property to <xref:System.Windows.HorizontalAlignment.Stretch>, which stretches the child element to fill the allocated space of the parent element.</span></span> <span data-ttu-id="80e12-248">詳細については、「[配置、余白、パディングの概要](~/docs/framework/wpf/advanced/alignment-margins-and-padding-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-248">For more information, see [Alignment, Margins, and Padding Overview](~/docs/framework/wpf/advanced/alignment-margins-and-padding-overview.md).</span></span>  
  
 <span data-ttu-id="80e12-249">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-249">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-250">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-250">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalContentAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-251">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-252">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-252">Identifier field</span></span>|<xref:System.Windows.Controls.Control.HorizontalContentAlignmentProperty>|  
|<span data-ttu-id="80e12-253">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-254">なし</span><span class="sxs-lookup"><span data-stu-id="80e12-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-255">次の例は、コントロールの横方向のコンテンツの配置プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-255">The following example shows how to set the horizontal content alignment property of a control.</span></span>  
  
 [!code-xaml[ControlProps#18](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#18)]  
  
 [!code-csharp[ControlProps#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#8)]
 [!code-vb[ControlProps#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalContentAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalContentAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalContentAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalContentAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalContentAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalContentAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.HorizontalContentAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-256"><see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-256">Identifies the <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTabStop">
      <MemberSignature Language="C#" Value="public bool IsTabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.IsTabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTabStop : bool with get, set" Usage="System.Windows.Controls.Control.IsTabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-257">コントロールがタブ ナビゲーションに含まれるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-257">Gets or sets a value that indicates whether a control is included in tab navigation.</span></span></summary>
        <value><span data-ttu-id="80e12-258">コントロールがタブ ナビゲーションに含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="80e12-258"><see langword="true" /> if the control is included in tab navigation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="80e12-259">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="80e12-259">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-260"><xref:System.Windows.Controls.Control.IsTabStop%2A> が `false`場合、コントロールはタブナビゲーションから除外されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-260">If <xref:System.Windows.Controls.Control.IsTabStop%2A> is `false`, the control is excluded from tab navigation.</span></span>  
  
<a name="dependencyPropertyInfo_IsTabStop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-261">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-261">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-262">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-262">Identifier field</span></span>|<xref:System.Windows.Controls.Control.IsTabStopProperty>|  
|<span data-ttu-id="80e12-263">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-263">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-264">なし</span><span class="sxs-lookup"><span data-stu-id="80e12-264">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-265">次の例は、<xref:System.Windows.Controls.Control.IsTabStop%2A> プロパティを設定する方法と、タブナビゲーションにコントロールが含まれているかどうかをテストする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-265">The following example shows how to set the <xref:System.Windows.Controls.Control.IsTabStop%2A> property and how to test whether a control is included in tab navigation.</span></span>  
  
 [!code-xaml[ControlProps_snip#AdditionalControlProps15](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml#additionalcontrolprops15)]  
  
 [!code-csharp[ControlProps_snip#AdditionalControlProps4](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml.cs#additionalcontrolprops4)]
 [!code-vb[ControlProps_snip#AdditionalControlProps4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps_snip/VisualBasic/Window1.xaml.vb#additionalcontrolprops4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTabStopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTabStopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTabStopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.IsTabStopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTabStopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTabStopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTabStopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.IsTabStopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-266"><see cref="P:System.Windows.Controls.Control.IsTabStop" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-266">Identifies the <see cref="P:System.Windows.Controls.Control.IsTabStop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="control.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="80e12-267">メソッドが返すことができる最大サイズ。</span><span class="sxs-lookup"><span data-stu-id="80e12-267">The maximum size that the method can return.</span></span></param>
        <summary><span data-ttu-id="80e12-268">コントロールを再測定するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-268">Called to remeasure a control.</span></span></summary>
        <returns><span data-ttu-id="80e12-269">コントロールのサイズ。最大値は <paramref name="constraint" /> によって指定されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-269">The size of the control, up to the maximum specified by <paramref name="constraint" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-270">既定の制御測定では、最初のビジュアル子のみが測定されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-270">The default control measurement only measures the first visual child.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Control.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-271">マウス ボタンが複数回クリックされると発生します。</span><span class="sxs-lookup"><span data-stu-id="80e12-271">Occurs when a mouse button is clicked two or more times.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-272">このルーティングイベントは、要素ツリーを通じてバブルルートに従っているように見えますが、実際には、各 <xref:System.Windows.UIElement>によって要素ツリーに沿って発生する直接ルーティングイベントです。</span><span class="sxs-lookup"><span data-stu-id="80e12-272">Although this routed event seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised along the element tree by each <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="80e12-273"><xref:System.Windows.Controls.Control.MouseDoubleClick> イベントハンドラーで <xref:System.Windows.RoutedEventArgs.Handled%2A> プロパティを `true` に設定した場合、ルートに沿って後続の <xref:System.Windows.Controls.Control.MouseDoubleClick> イベントが発生し、<xref:System.Windows.RoutedEventArgs.Handled%2A> が `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-273">If you set the <xref:System.Windows.RoutedEventArgs.Handled%2A> property to `true` in a <xref:System.Windows.Controls.Control.MouseDoubleClick> event handler, subsequent <xref:System.Windows.Controls.Control.MouseDoubleClick> events along the route will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `false`.</span></span> <span data-ttu-id="80e12-274">これは、ユーザーがコントロールをダブルクリックしてアプリケーションでイベントを処理するときに通知を受け取るコントロールコンシューマーに対して、上位レベルのイベントです。</span><span class="sxs-lookup"><span data-stu-id="80e12-274">This is a higher-level event for control consumers who want to be notified when the user double-clicks the control and to handle the event in an application.</span></span>  
  
 <span data-ttu-id="80e12-275">マウスのダブルクリックを処理するコントロールの作成者は、<xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> が2に等しい場合に <xref:System.Windows.UIElement.MouseLeftButtonDown> イベントを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="80e12-275">Control authors who want to handle mouse double clicks should use the <xref:System.Windows.UIElement.MouseLeftButtonDown> event when <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is equal to two.</span></span>  <span data-ttu-id="80e12-276">これにより、要素ツリー内の別の要素がイベントを処理する場合に、<xref:System.Windows.RoutedEventArgs.Handled%2A> の状態が適切に反映されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-276">This will cause the state of <xref:System.Windows.RoutedEventArgs.Handled%2A> to propagate appropriately in the case where another element in the element tree handles the event.</span></span>  
  
 <span data-ttu-id="80e12-277"><xref:System.Windows.Controls.Control> クラスは、<xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> イベントと <xref:System.Windows.Controls.Control.MouseDoubleClick> イベントを定義しますが、対応するシングルクリックイベントは定義しません。</span><span class="sxs-lookup"><span data-stu-id="80e12-277">The <xref:System.Windows.Controls.Control> class defines the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> and <xref:System.Windows.Controls.Control.MouseDoubleClick> events, but not corresponding single-click events.</span></span>  <span data-ttu-id="80e12-278">ユーザーがコントロールを1回クリックしたかどうかを確認するには、<xref:System.Windows.UIElement.MouseDown> イベント (またはそれに対応するイベント) を処理し、<xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> プロパティ値が1であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="80e12-278">To see if the user has clicked the control once, handle the <xref:System.Windows.UIElement.MouseDown> event (or one of its counterparts) and check whether the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property value is 1.</span></span>  
  
<a name="routedEventInfo_MouseDoubleClick"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="80e12-279">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="80e12-279">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-280">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-280">Identifier field</span></span>|<xref:System.Windows.Controls.Control.MouseDoubleClickEvent>|  
|<span data-ttu-id="80e12-281">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="80e12-281">Routing strategy</span></span>|<span data-ttu-id="80e12-282">直接</span><span class="sxs-lookup"><span data-stu-id="80e12-282">Direct</span></span>|  
|<span data-ttu-id="80e12-283">委任</span><span class="sxs-lookup"><span data-stu-id="80e12-283">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-284">次の例は、イベントハンドラーを <xref:System.Windows.Controls.Control.MouseDoubleClick> イベントにアタッチする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-284">The following example shows how to attach an event handler to the <xref:System.Windows.Controls.Control.MouseDoubleClick> event.</span></span>  
  
 [!code-xaml[ControlProps_snip#ControlEvents11](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml#controlevents11)]  
  
 <span data-ttu-id="80e12-285">次の例は、<xref:System.Windows.Controls.Control.MouseDoubleClick> イベントのイベントハンドラーを示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-285">The following example shows the event handler of the <xref:System.Windows.Controls.Control.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[ControlProps_snip#ControlEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml.cs#controlevents1)]
 [!code-vb[ControlProps_snip#ControlEvents1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps_snip/VisualBasic/Window1.xaml.vb#controlevents1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDoubleClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDoubleClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.MouseDoubleClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDoubleClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDoubleClickEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDoubleClickEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Control.MouseDoubleClickEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-286"><see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> ルーティング イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-286">Identifies the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="control.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80e12-287">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="80e12-287">The event data.</span></span></param>
        <summary><span data-ttu-id="80e12-288"><see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> ルーティング イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="80e12-288">Raises the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-289">コントロールは、<xref:System.Windows.UIElement.RaiseEvent%2A> メソッドを呼び出すことによって、<xref:System.Windows.Controls.Control.MouseDoubleClick> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="80e12-289">The control raises the <xref:System.Windows.Controls.Control.MouseDoubleClick> event by calling the <xref:System.Windows.UIElement.RaiseEvent%2A> method.</span></span> <span data-ttu-id="80e12-290">詳細については、「[ルーティングイベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-290">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80e12-291">派生クラスで <see cref="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="80e12-291">When overriding <see cref="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDoubleClick (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDoubleClick(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDoubleClick (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDoubleClick(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDoubleClick : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDoubleClick : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="control.OnPreviewMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="80e12-292">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="80e12-292">The event data.</span></span></param>
        <summary><span data-ttu-id="80e12-293"><see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> ルーティング イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="80e12-293">Raises the <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-294">コントロールは、<xref:System.Windows.UIElement.RaiseEvent%2A> メソッドを呼び出すことによって、<xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="80e12-294">The control raises the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> event by calling the <xref:System.Windows.UIElement.RaiseEvent%2A> method.</span></span>  <span data-ttu-id="80e12-295">詳細については、「[ルーティングイベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-295">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80e12-296">派生クラスで <see cref="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="80e12-296">When overriding <see cref="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit&#xA;override this.OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="control.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate"><span data-ttu-id="80e12-297">古いテンプレート。</span><span class="sxs-lookup"><span data-stu-id="80e12-297">The old template.</span></span></param>
        <param name="newTemplate"><span data-ttu-id="80e12-298">新しいテンプレート。</span><span class="sxs-lookup"><span data-stu-id="80e12-298">The new template.</span></span></param>
        <summary><span data-ttu-id="80e12-299">コントロールのテンプレートが変更されるたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-299">Called whenever the control's template changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-300">テンプレートを変更するタイミングは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="80e12-300">The timing for changing the template is as follows:</span></span>  
  
1.  <span data-ttu-id="80e12-301">このテンプレートは、<xref:System.Windows.DependencyObject.SetValue%2A> メソッド呼び出し、スタイルトリガー、またはその他の方法によって変更されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-301">The template is changed by a <xref:System.Windows.DependencyObject.SetValue%2A> method call, a style trigger, or some other means.</span></span>  
  
2.  <span data-ttu-id="80e12-302">プロパティ値が変更されます。プロパティ変更コールバックが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-302">The property value changes; the property-changed callback is called.</span></span>  
  
3.  <span data-ttu-id="80e12-303">古いビジュアルツリーが削除されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-303">The old visual tree is removed.</span></span>  
  
4.  <span data-ttu-id="80e12-304"><xref:System.Windows.Controls.Control.OnTemplateChanged%2A> メソッドを最終的に呼び出す内部メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-304">An internal method is called which eventually calls the <xref:System.Windows.Controls.Control.OnTemplateChanged%2A> method.</span></span>  
  
5.  <span data-ttu-id="80e12-305">その後、メジャーの実行中に <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> が呼び出され、新しいビジュアルツリーがアタッチされます。</span><span class="sxs-lookup"><span data-stu-id="80e12-305">Later, during a measure, <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> is called and a new visual tree is attached.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Thickness with get, set" Usage="System.Windows.Controls.Control.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-306">コントロールのパディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-306">Gets or sets the padding inside a control.</span></span></summary>
        <value><span data-ttu-id="80e12-307"><see cref="T:System.Windows.Controls.Control" /> のコンテンツとその <see cref="P:System.Windows.FrameworkElement.Margin" /> または <see cref="T:System.Windows.Controls.Border" /> との間のスペースの量。</span><span class="sxs-lookup"><span data-stu-id="80e12-307">The amount of space between the content of a <see cref="T:System.Windows.Controls.Control" /> and its <see cref="P:System.Windows.FrameworkElement.Margin" /> or <see cref="T:System.Windows.Controls.Border" />.</span></span>  <span data-ttu-id="80e12-308">既定値は、4 辺すべてにつき 0 です。</span><span class="sxs-lookup"><span data-stu-id="80e12-308">The default is a thickness of 0 on all four sides.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-309">余白は、左、上、右、および下の順序で指定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-309">Padding is specified in the order Left, Top, Right, and Bottom.</span></span> <span data-ttu-id="80e12-310">詳細については、「<xref:System.Windows.Thickness> と[配置、余白、パディングの概要](~/docs/framework/wpf/advanced/alignment-margins-and-padding-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-310">For more information, see <xref:System.Windows.Thickness> and [Alignment, Margins, and Padding Overview](~/docs/framework/wpf/advanced/alignment-margins-and-padding-overview.md).</span></span>  
  
 <span data-ttu-id="80e12-311">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.Padding%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-311">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.Padding%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-312">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-312">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-313">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-313">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-314">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-314">Identifier field</span></span>|<xref:System.Windows.Controls.Control.PaddingProperty>|  
|<span data-ttu-id="80e12-315">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-315">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-316">次の例は、コントロールの padding プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-316">The following example shows how to set the padding property of a control.</span></span>  
  
 [!code-xaml[ControlProps_snip#AdditionalControlProps13](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml#additionalcontrolprops13)]  
  
 [!code-csharp[ControlProps_snip#AdditionalControlProps3](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml.cs#additionalcontrolprops3)]
 [!code-vb[ControlProps_snip#AdditionalControlProps3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps_snip/VisualBasic/Window1.xaml.vb#additionalcontrolprops3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PaddingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.PaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-317"><see cref="P:System.Windows.Controls.Control.Padding" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-317">Identifies the <see cref="P:System.Windows.Controls.Control.Padding" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDoubleClick As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDoubleClick : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDoubleClick : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-318">ユーザーがマウス ボタンを 2 回以上クリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="80e12-318">Occurs when a user clicks the mouse button two or more times.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-319">このルーティングイベントは、要素ツリーを通じてトンネリングルートに従っているように見えますが、実際には、各 <xref:System.Windows.UIElement>によって要素ツリーに沿って発生する直接ルーティングイベントです。</span><span class="sxs-lookup"><span data-stu-id="80e12-319">Although this routed event seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised along the element tree by each <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="80e12-320"><xref:System.Windows.RoutedEventArgs.Handled%2A> プロパティを <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> イベントハンドラーで `true` に設定すると、その後の <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> イベントは <xref:System.Windows.RoutedEventArgs.Handled%2A> に設定された `false`で発生しますが、<xref:System.Windows.Controls.Control.MouseDoubleClick> に設定されている場合は <xref:System.Windows.RoutedEventArgs.Handled%2A> イベントが発生します。`true`</span><span class="sxs-lookup"><span data-stu-id="80e12-320">If you set the <xref:System.Windows.RoutedEventArgs.Handled%2A> property to `true` in a <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> event handler, subsequent <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> events along the route will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `false`, but the <xref:System.Windows.Controls.Control.MouseDoubleClick> event will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `true`.</span></span> <span data-ttu-id="80e12-321">これは、ユーザーがコントロールをダブルクリックしてアプリケーションでイベントを処理するときに通知を受け取るコントロールコンシューマーに対して、上位レベルのイベントです。</span><span class="sxs-lookup"><span data-stu-id="80e12-321">This is a higher-level event for control consumers who want to be notified when the user double-clicks the control and to handle the event in an application.</span></span>  
  
 <span data-ttu-id="80e12-322">マウスのダブルクリックを処理するコントロールの作成者は、<xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> が2に等しい場合に <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> イベントを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="80e12-322">Control authors who want to handle mouse double clicks should use the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event when <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is equal to two.</span></span>  <span data-ttu-id="80e12-323">これにより、要素ツリー内の別の要素がイベントを処理する場合に、<xref:System.Windows.RoutedEventArgs.Handled%2A> の状態が適切に反映されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-323">This will cause the state of <xref:System.Windows.RoutedEventArgs.Handled%2A> to propagate appropriately in the case where another element in the element tree handles the event.</span></span>  
  
 <span data-ttu-id="80e12-324"><xref:System.Windows.Controls.Control> クラスは、<xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> イベントと <xref:System.Windows.Controls.Control.MouseDoubleClick> イベントを定義しますが、対応するシングルクリックイベントは定義しません。</span><span class="sxs-lookup"><span data-stu-id="80e12-324">The <xref:System.Windows.Controls.Control> class defines the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> and <xref:System.Windows.Controls.Control.MouseDoubleClick> events, but not corresponding single-click events.</span></span>  <span data-ttu-id="80e12-325">ユーザーがコントロールを1回クリックしたかどうかを確認するには、<xref:System.Windows.UIElement.MouseDown> イベント (またはそれに対応するイベント) を処理し、<xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> プロパティ値が1であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="80e12-325">To see if the user has clicked the control once, handle the <xref:System.Windows.UIElement.MouseDown> event (or one of its counterparts) and check whether the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property value is 1.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDoubleClick"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="80e12-326">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="80e12-326">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-327">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-327">Identifier field</span></span>|<xref:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent>|  
|<span data-ttu-id="80e12-328">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="80e12-328">Routing strategy</span></span>|<span data-ttu-id="80e12-329">直接</span><span class="sxs-lookup"><span data-stu-id="80e12-329">Direct</span></span>|  
|<span data-ttu-id="80e12-330">委任</span><span class="sxs-lookup"><span data-stu-id="80e12-330">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-331">次の例は、イベントハンドラーを <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> イベントにアタッチする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-331">The following example shows how to attach an event handler the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> event.</span></span>  
  
 [!code-xaml[ControlProps_snip#ControlEvents12](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml#controlevents12)]  
  
 <span data-ttu-id="80e12-332">次の例は、<xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> イベントのイベントハンドラーを示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-332">The following example shows the event handler of the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> event.</span></span>  
  
 [!code-csharp[ControlProps_snip#ControlEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml.cs#controlevents2)]
 [!code-vb[ControlProps_snip#ControlEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps_snip/VisualBasic/Window1.xaml.vb#controlevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDoubleClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDoubleClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDoubleClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDoubleClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDoubleClickEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDoubleClickEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Control.PreviewMouseDoubleClickEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-333"><see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> ルーティング イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-333">Identifies the <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Controls.Control.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-334">ユーザーが Tab キーを使用してコントロール間を移動するときに、要素がフォーカスを受け取る順序を決定する値を取得または設定します</span><span class="sxs-lookup"><span data-stu-id="80e12-334">Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by using the TAB key.</span></span></summary>
        <value><span data-ttu-id="80e12-335">デバイスの論理ナビゲーションの順序を決定する値。</span><span class="sxs-lookup"><span data-stu-id="80e12-335">A value that determines the order of logical navigation for a device.</span></span> <span data-ttu-id="80e12-336">既定値は <see cref="F:System.Int32.MaxValue" /> です。</span><span class="sxs-lookup"><span data-stu-id="80e12-336">The default value is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-337">下部のタブインデックスを持つコントロールは、上位のインデックスを持つコントロールの前にフォーカスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="80e12-337">A control with a lower tab index receives focus before a control with a higher index.</span></span>  
  
<a name="dependencyPropertyInfo_TabIndex"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-338">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-338">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-339">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-339">Identifier field</span></span>|<xref:System.Windows.Controls.Control.TabIndexProperty>|  
|<span data-ttu-id="80e12-340">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-340">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-341">なし</span><span class="sxs-lookup"><span data-stu-id="80e12-341">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-342">次の例では、3つのボタンのタブインデックスを設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-342">The following example sets the tab index of three buttons.</span></span>  
  
 [!code-xaml[ControlProps_snip#AdditionalControlProps17](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps_snip/CSharp/Pane1.xaml#additionalcontrolprops17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TabIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TabIndexProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.TabIndexProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TabIndexProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TabIndexProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TabIndexProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.TabIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-343"><see cref="P:System.Windows.Controls.Control.TabIndex" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-343">Identifies the <see cref="P:System.Windows.Controls.Control.TabIndex" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Template">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ControlTemplate Template { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ControlTemplate Template" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.Template" />
      <MemberSignature Language="VB.NET" Value="Public Property Template As ControlTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ControlTemplate ^ Template { System::Windows::Controls::ControlTemplate ^ get(); void set(System::Windows::Controls::ControlTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Template : System.Windows.Controls.ControlTemplate with get, set" Usage="System.Windows.Controls.Control.Template" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ControlTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-344">コントロール テンプレートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-344">Gets or sets a control template.</span></span></summary>
        <value><span data-ttu-id="80e12-345"><see cref="T:System.Windows.Controls.Control" /> の外観を定義するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="80e12-345">The template that defines the appearance of the <see cref="T:System.Windows.Controls.Control" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-346"><xref:System.Windows.Controls.ControlTemplate> は、<xref:System.Windows.Controls.Control>の外観を指定します。<xref:System.Windows.Controls.Control> に <xref:System.Windows.Controls.ControlTemplate>がない場合、<xref:System.Windows.Controls.Control> はアプリケーションに表示されません。</span><span class="sxs-lookup"><span data-stu-id="80e12-346">The <xref:System.Windows.Controls.ControlTemplate> specifies the appearance of a <xref:System.Windows.Controls.Control>; if a <xref:System.Windows.Controls.Control> does not have a <xref:System.Windows.Controls.ControlTemplate>, the <xref:System.Windows.Controls.Control> will not appear in your application.</span></span> <span data-ttu-id="80e12-347">コントロールの作成者は既定のコントロールテンプレートを定義し、アプリケーションの作成者は <xref:System.Windows.Controls.ControlTemplate> をオーバーライドして、コントロールのビジュアルツリーを再定義できます。</span><span class="sxs-lookup"><span data-stu-id="80e12-347">The control author defines the default control template, and the application author can override the <xref:System.Windows.Controls.ControlTemplate> to redefine the visual tree of the control.</span></span> <span data-ttu-id="80e12-348">既存のコントロールのビジュアルツリーを変更する方法の詳細と例については、「[コントロールのスタイルとテンプレート](~/docs/framework/wpf/controls/control-styles-and-templates.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-348">See [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md) for information and examples of how to change the visual tree of existing controls.</span></span>  
  
 <span data-ttu-id="80e12-349"><xref:System.Windows.Controls.ControlTemplate> は、外部のユーザーやオブジェクト (<xref:System.Windows.Style> オブジェクトなど) には表示されない、自己完結型の実装の詳細を示すためのものです。</span><span class="sxs-lookup"><span data-stu-id="80e12-349">A <xref:System.Windows.Controls.ControlTemplate> is intended to be a self-contained unit of implementation detail that is invisible to outside users and objects, including <xref:System.Windows.Style> objects.</span></span> <span data-ttu-id="80e12-350">コントロールテンプレートの内容を操作する唯一の方法は、同じコントロールテンプレート内からです。</span><span class="sxs-lookup"><span data-stu-id="80e12-350">The only way to manipulate the content of the control template is from within the same control template.</span></span>  
  
<a name="dependencyPropertyInfo_Template"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-351">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-351">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-352">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-352">Identifier field</span></span>|<xref:System.Windows.Controls.Control.TemplateProperty>|  
|<span data-ttu-id="80e12-353">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-353">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-354">次の例では、<xref:System.Windows.Controls.Button>の <xref:System.Windows.Controls.ControlTemplate> を作成します。</span><span class="sxs-lookup"><span data-stu-id="80e12-354">The following example creates a <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="80e12-355">これをリソースとしてアプリケーションに追加すると、アプリケーションのすべてのボタンが省略記号として表示されますが、ボタンとして機能します。</span><span class="sxs-lookup"><span data-stu-id="80e12-355">If you add this to your application as a resource, all the buttons in the application will appear as ellipses but will still function as buttons.</span></span>  
  
 [!code-xaml[StylingIntroSample_snippet#ButtonCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snippet/CSharp/Window1.xaml#buttonct)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.TemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.TemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-356"><see cref="P:System.Windows.Controls.Control.Template" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-356">Identifies the <see cref="P:System.Windows.Controls.Control.Template" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Control.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="control.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80e12-357"><see cref="T:System.Windows.Controls.Control" /> オブジェクトの文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="80e12-357">Returns the string representation of a <see cref="T:System.Windows.Controls.Control" /> object.</span></span></summary>
        <returns><span data-ttu-id="80e12-358">コントロールを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="80e12-358">A string that represents the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-359">コントロールの作成者は、このメソッドをオーバーライドして、コントロールのコンシューマーにとって関心のある情報を含む文字列を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="80e12-359">Control authors should override this method to return a string that contains information that would be of interest to consumers of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalContentAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.VerticalAlignment VerticalContentAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.VerticalAlignment VerticalContentAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Control.VerticalContentAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalContentAlignment As VerticalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VerticalAlignment VerticalContentAlignment { System::Windows::VerticalAlignment get(); void set(System::Windows::VerticalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalContentAlignment : System.Windows.VerticalAlignment with get, set" Usage="System.Windows.Controls.Control.VerticalContentAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VerticalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-360">コントロールのコンテンツの垂直方向の配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80e12-360">Gets or sets the vertical alignment of the control's content.</span></span></summary>
        <value><span data-ttu-id="80e12-361"><see cref="T:System.Windows.VerticalAlignment" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="80e12-361">One of the <see cref="T:System.Windows.VerticalAlignment" /> values.</span></span> <span data-ttu-id="80e12-362">既定では、 <see cref="F:System.Windows.VerticalAlignment.Top" />です。</span><span class="sxs-lookup"><span data-stu-id="80e12-362">The default is <see cref="F:System.Windows.VerticalAlignment.Top" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e12-363"><xref:System.Windows.VerticalAlignment.Top>、<xref:System.Windows.VerticalAlignment.Bottom>、および <xref:System.Windows.VerticalAlignment.Center>に加えて、<xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> プロパティを <xref:System.Windows.VerticalAlignment.Stretch>に設定することもできます。これにより、子要素が、親要素の割り当てられたレイアウト領域に合わせて拡大されます。</span><span class="sxs-lookup"><span data-stu-id="80e12-363">In addition to <xref:System.Windows.VerticalAlignment.Top>, <xref:System.Windows.VerticalAlignment.Bottom>, and <xref:System.Windows.VerticalAlignment.Center>, you can set the <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> property to <xref:System.Windows.VerticalAlignment.Stretch>, which stretches the child element to fill the allocated layout space of the parent element.</span></span> <span data-ttu-id="80e12-364">詳細については、「[配置、余白、パディングの概要](~/docs/framework/wpf/advanced/alignment-margins-and-padding-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="80e12-364">For more information, see [Alignment, Margins, and Padding Overview](~/docs/framework/wpf/advanced/alignment-margins-and-padding-overview.md).</span></span>  
  
 <span data-ttu-id="80e12-365">このプロパティは、テンプレートがパラメーターとして <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> プロパティを使用するコントロールにのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="80e12-365">This property only affects a control whose template uses the <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> property as a parameter.</span></span> <span data-ttu-id="80e12-366">その他のコントロールでは、このプロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="80e12-366">On other controls, this property has no impact.</span></span>  
  
<a name="dependencyPropertyInfo_VerticalContentAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="80e12-367">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="80e12-367">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="80e12-368">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="80e12-368">Identifier field</span></span>|<xref:System.Windows.Controls.Control.VerticalContentAlignmentProperty>|  
|<span data-ttu-id="80e12-369">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="80e12-369">Metadata properties set to `true`</span></span>|<span data-ttu-id="80e12-370">なし</span><span class="sxs-lookup"><span data-stu-id="80e12-370">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80e12-371">次の例は、コントロールの縦書きコンテンツの配置プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="80e12-371">The following example shows how to set the vertical content alignment property on a control.</span></span>  
  
 [!code-xaml[ControlProps#19](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml#19)]  
  
 [!code-csharp[ControlProps#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlProps/CSharp/Pane1.xaml.cs#9)]
 [!code-vb[ControlProps#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlProps/VisualBasic/Pane1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalContentAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalContentAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalContentAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalContentAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalContentAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalContentAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Control.VerticalContentAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80e12-372"><see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="80e12-372">Identifies the <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
