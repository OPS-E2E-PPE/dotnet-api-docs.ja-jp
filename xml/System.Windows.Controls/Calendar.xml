<Type Name="Calendar" FullName="System.Windows.Controls.Calendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="120dbdb019674c56f6487492f36ec2d3da688710" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73398746" /></Metadata><TypeSignature Language="C#" Value="public class Calendar : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Calendar extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public Class Calendar&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type Calendar = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Root", Type=typeof(System.Windows.Controls.Panel))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_CalendarItem", Type=typeof(System.Windows.Controls.Primitives.CalendarItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>視覚的な予定表の表示を使用して、ユーザーが日付を選択できるようにするコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> コントロールは、単独で使用することも、<xref:System.Windows.Controls.DatePicker> コントロールのドロップダウンの部分として使用することもできます。 詳細については、「<xref:System.Windows.Controls.DatePicker>」を参照してください。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Calendar> では、グレゴリオ暦のみがサポートされます。  
  
 次の表では、通常、<xref:System.Windows.Controls.Calendar>に関連付けられているタスクについて説明します。  
  
|タスク|実装|  
|----------|--------------------|  
|<xref:System.Windows.Controls.Calendar> に、月、年、または10年のいずれかを表示します。|<xref:System.Windows.Controls.Calendar.DisplayMode%2A> プロパティを Month、Year、または10年に設定します。|  
|ユーザーが日付、日付の範囲、または複数の日付範囲を選択できるかどうかを指定します。|<xref:System.Windows.Controls.Calendar.SelectionMode%2A>を使用します。|  
|選択できない日付を指定してください。|<xref:System.Windows.Controls.Calendar.BlackoutDates%2A> プロパティを使用します。|  
|<xref:System.Windows.Controls.Calendar> に表示する日付の範囲を指定します。|<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> プロパティおよび <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> プロパティを使用します。|  
|現在の日付を強調表示するかどうかを指定します。|<xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> プロパティを使用します。 既定では、<xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> は `true`です。|  
|<xref:System.Windows.Controls.Calendar>のサイズを変更します。|<xref:System.Windows.Controls.Viewbox> を使用するか、<xref:System.Windows.FrameworkElement.LayoutTransform%2A> プロパティを <xref:System.Windows.Media.ScaleTransform>に設定します。  <xref:System.Windows.Controls.Calendar>の <xref:System.Windows.FrameworkElement.Width%2A> と <xref:System.Windows.FrameworkElement.Height%2A> のプロパティを設定した場合、実際のカレンダーのサイズは変更されないことに注意してください。|  
  
 <xref:System.Windows.Controls.Calendar> コントロールは、マウスまたはキーボードのいずれかを使用して基本的なナビゲーションを提供します。 次の表は、キーボードナビゲーションの概要を示しています。  
  
|キーの組み合わせ|<xref:System.Windows.Controls.Calendar.DisplayMode%2A>|アクション|  
|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|------------|  
|ボタン|<xref:System.Windows.Controls.CalendarMode.Month>|<xref:System.Windows.Controls.Calendar.SelectionMode%2A> プロパティが <xref:System.Windows.Controls.CalendarSelectionMode.None>に設定されていない場合、<xref:System.Windows.Controls.Calendar.SelectedDate%2A> プロパティを変更します。|  
|ボタン|<xref:System.Windows.Controls.CalendarMode.Year>|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> プロパティの月を変更します。  <xref:System.Windows.Controls.Calendar.SelectedDate%2A> は変更されないことに注意してください。|  
|ボタン|<xref:System.Windows.Controls.CalendarMode.Decade>|<xref:System.Windows.Controls.Calendar.DisplayDate%2A>の年を変更します。  <xref:System.Windows.Controls.Calendar.SelectedDate%2A> は変更されないことに注意してください。|  
|SHIFT + 方向キー|<xref:System.Windows.Controls.CalendarMode.Month>|<xref:System.Windows.Controls.Calendar.SelectionMode%2A> が <xref:System.Windows.Controls.CalendarSelectionMode.SingleDate> または <xref:System.Windows.Controls.CalendarSelectionMode.None>に設定されていない場合、は選択された日付の範囲を拡張します。|  
|ホーム|<xref:System.Windows.Controls.CalendarMode.Month>|<xref:System.Windows.Controls.Calendar.SelectedDate%2A> を現在の月の最初の日付に変更します。|  
|ホーム|<xref:System.Windows.Controls.CalendarMode.Year>|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> の月をその年の最初の月に変更します。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> は変更されません。|  
|ホーム|<xref:System.Windows.Controls.CalendarMode.Decade>|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> の年を10年の最初の年に変更します。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> は変更されません。|  
|End|<xref:System.Windows.Controls.CalendarMode.Month>|<xref:System.Windows.Controls.Calendar.SelectedDate%2A> を現在の月の最後の日付に変更します。|  
|End|<xref:System.Windows.Controls.CalendarMode.Year>|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> の月をその年の最後の月に変更します。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> は変更されません。|  
|End|<xref:System.Windows.Controls.CalendarMode.Decade>|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> の年を10年の最後の年に変更します。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> は変更されません。|  
|Ctrl + ↑|どれでも可|次に大きい <xref:System.Windows.Controls.Calendar.DisplayMode%2A>に切り替えます。 <xref:System.Windows.Controls.Calendar.DisplayMode%2A> が既に <xref:System.Windows.Controls.CalendarMode.Decade>ている場合は、何も行われません。|  
|Ctrl +↓|どれでも可|次に小さい <xref:System.Windows.Controls.Calendar.DisplayMode%2A>に切り替えます。 <xref:System.Windows.Controls.Calendar.DisplayMode%2A> が既に <xref:System.Windows.Controls.CalendarMode.Month>ている場合は、何も行われません。|  
|SPACE または ENTER|<xref:System.Windows.Controls.CalendarMode.Year> または <xref:System.Windows.Controls.CalendarMode.Decade>|フォーカスされている項目で表される <xref:System.Windows.Controls.CalendarMode.Month> または <xref:System.Windows.Controls.CalendarMode.Year> に <xref:System.Windows.Controls.Calendar.DisplayMode%2A> を切り替えます。|  
  
## <a name="customizing-the-calendar-control"></a>Calendar コントロールのカスタマイズ  
 複数の<xref:System.Windows.Controls.Calendar>コントロールに同じプロパティの設定を適用するには、<xref:System.Windows.FrameworkElement.Style%2A>プロパティを使用します。 <xref:System.Windows.Controls.ControlTemplate>の既定値を変更して外観を制御します。 <xref:System.Windows.Controls.ControlTemplate>作成の詳細については、「 [ControlTemplate の作成による既存コントロールの外観カスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)」を参照してください。  <xref:System.Windows.Controls.Calendar>に固有のパーツと状態を確認するには、「[カレンダーのスタイルとテンプレート](~/docs/framework/wpf/controls/calendar-styles-and-templates.md)」を参照してください。  
  
 このコントロールの依存関係のプロパティは、コントロールの既定のスタイルによって設定される可能性があります。  プロパティが既定のスタイルによって設定されている場合、アプリケーションにコントロールが表示されると、プロパティが既定値から変更されることがあります。 既定のスタイルは、アプリケーションの実行時に使用するデスクトップテーマによって決定されます。  詳しくは、「[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)」をご覧ください。  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
<a name="xamlObjectElementUsage_Calendar"></a>   
## <a name="xaml-object-element-usage"></a>XAML オブジェクト要素の使用方法  
  
```  
<Calendar .../>  
```  
  
## Examples  
 次の図は、2つの <xref:System.Windows.Controls.Calendar> コントロールを示しています。1つは選択とブラックアウトの日付で、もう1つはありません。  
  
 ![カレンダーコントロール](~/add/media/ndp-calendarcontrols.png "予定表コントロール")  
予定表コントロール  
  
 次のコードと XAML は、前の図に似た2つの <xref:System.Windows.Controls.Calendar> コントロールを持つページを作成します。  
  
 [!code-csharp[CalendarSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[CalendarSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[CalendarSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DatePicker" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Calendar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackoutDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.BlackoutDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlackoutDates As CalendarBlackoutDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarBlackoutDatesCollection ^ BlackoutDates { System::Windows::Controls::CalendarBlackoutDatesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BlackoutDates : System.Windows.Controls.CalendarBlackoutDatesCollection" Usage="System.Windows.Controls.Calendar.BlackoutDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarBlackoutDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択不可としてマークされている日付のコレクションを取得します。</summary>
        <value>選択できない日付のコレクション。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコレクション内の日付は灰色で表示され、予定表に表示されます。  
  
 過去のすべての日付を選択できないようにするには、このプロパティによって返されるコレクションによって提供される <xref:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast%2A> メソッドを使用します。  
  
<a name="xamlPropertyElementUsage_BlackoutDates"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.BlackoutDates>  
    oneOrMoreCalendarDateRanges  
  </object.BlackoutDates>  
</object>  
```  
  
<a name="xamlValues_BlackoutDates"></a>   
## <a name="xaml-values"></a>XAML 値  
 *oneOrMoreCalendarDateRanges*  
 <xref:System.Windows.Controls.CalendarDateRange>型の1つ以上のオブジェクト要素。  
  
   
  
## Examples  
 次の例では、選択できない日付を含む <xref:System.Windows.Controls.Calendar> を作成します。  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 前の例では、次の図のような出力を生成します。  
  
 ![選択できない日付のカレンダー。](~/add/media/ndp-calendarblackout.png "選択できない日付を含むカレンダー。")  
選択できない日付のカレンダー  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarButtonStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarButtonStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> オブジェクトの現在のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarButtonStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object CalendarButtonStyle="{resourceExtension styleResourceKey"/>  
  
```  
  
<a name="xamlValues_CalendarButtonStyle"></a>   
## <a name="xaml-values"></a>XAML 値  
 *resourceExtension*  
 `StaticResource` または `DynamicResource`のいずれかです。 詳細については、「[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照してください。  
  
 *styleResourceKey*  
 要求されているリソースを識別するキー。 キーは、<xref:System.Windows.ResourceDictionary>内の既存のリソースを参照します。  
  
<a name="dependencyPropertyInfo_CalendarButtonStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.CalendarButtonStyleProperty>|  
|メタデータプロパティが `true` に設定される|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarButtonStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarButtonStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarButtonStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarButtonStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarButtonStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarDayButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarDayButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarDayButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarDayButtonStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarDayButtonStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> オブジェクトの現在のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarDayButtonStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object CalendarDayButtonStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarDayButtonStyle"></a>   
## <a name="xaml-values"></a>XAML 値  
 *resourceExtension*  
 `StaticResource` または `DynamicResource`のいずれかです。 詳細については、「[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照してください。  
  
 *styleResourceKey*  
 要求されているリソースを識別するキー。 キーは、<xref:System.Windows.ResourceDictionary>内の既存のリソースを参照します。  
  
<a name="dependencyPropertyInfo_CalendarDayButtonStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty>|  
|メタデータプロパティが `true` に設定される|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarDayButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarDayButtonStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarDayButtonStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarDayButtonStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarDayButtonStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarItemStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarItemStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarItemStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarItemStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> オブジェクトの現在のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarItemStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object CalendarItemStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarItemStyle"></a>   
## <a name="xaml-values"></a>XAML 値  
 *resourceExtension*  
 `StaticResource` または `DynamicResource`のいずれかです。 詳細については、「[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照してください。  
  
 *styleResourceKey*  
 要求されているリソースを識別するキー。 キーは、<xref:System.Windows.ResourceDictionary>内の既存のリソースを参照します。  
  
<a name="dependencyPropertyInfo_CalendarItemStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.CalendarItemStyleProperty>|  
|メタデータプロパティが `true` に設定される|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarItemStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarItemStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarItemStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarItemStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarItemStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarItemStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDate">
      <MemberSignature Language="C#" Value="public DateTime DisplayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DisplayDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDate" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DisplayDate { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDate : DateTime with get, set" Usage="System.Windows.Controls.Calendar.DisplayDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示する日付を取得または設定します。</summary>
        <value>表示する日付。 既定値は、<see cref="P:System.DateTime.Today" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> および <xref:System.Windows.Controls.Calendar.DisplayMode%2A> のプロパティでは、カレンダーに表示される内容と、カレンダー内でフォーカスがある項目を指定します。  ユーザーは、<xref:System.Windows.Controls.Calendar.DisplayMode%2A> が Month に設定されている場合にのみ <xref:System.Windows.Controls.Calendar.SelectedDate%2A> を変更できますが、カレンダーが年と年10月の場合、ユーザーは <xref:System.Windows.Controls.Calendar.DisplayDate%2A> を変更する可能性があります。  次の表では、モードによって <xref:System.Windows.Controls.Calendar.DisplayDate%2A>がどのように変更されるかを説明します。  
  
|DisplayMode|アクション|  
|-----------------|------------|  
|月|<xref:System.Windows.Controls.Calendar.DisplayDate%2A>、ユーザーが別の月に移動したときに変更されます。|  
|Year|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> の月は、ユーザーが別の月をクリックまたは移動したときに変更されます。|  
|10年以上|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> の年は、ユーザーが別の年をクリックまたは移動したときに変更されます。|  
  
 値が <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> と <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> プロパティで指定された日付の範囲外にある場合、<xref:System.Windows.Controls.Calendar.DisplayDate%2A> は無視されます。  
  
<a name="dependencyPropertyInfo_DisplayDate"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.DisplayDateProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayDate="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDate"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 [DATETIME XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)に関するトピックに記載されているいずれかの形式の日付。  
  
   
  
## Examples  
 次のコードでは、表示可能な日付の特定の範囲の <xref:System.Windows.Controls.Calendar> を設定し、現在選択されている日付と表示される日付を設定します。  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.DisplayDateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayDateChanged As EventHandler(Of CalendarDateChangedEventArgs) " FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::CalendarDateChangedEventArgs ^&gt; ^ DisplayDateChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayDateChanged : EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; " Usage="member this.DisplayDateChanged : System.EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event DisplayDateChanged As EventHandler(Of CalendarDateChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> プロパティが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、<xref:System.Windows.Controls.Calendar.DisplayDate%2A> に新しい値が割り当てられた後に発生します。  
  
<a name="xamlAttributeUsage_DisplayDateChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayDateChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 次のイベントハンドラーは、<xref:System.Windows.Controls.Calendar.DisplayDateChanged> イベントからの情報を使用して <xref:System.Windows.Controls.TextBox> を更新します。 この例は、<xref:System.Windows.Controls.Calendar> の概要で使用できるより大きな例の一部です。  
  
 [!code-xaml[CalendarSnippets#6](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEnd">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateEnd As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateEnd { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateEnd : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.DisplayDateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>予定表で使用できる日付範囲の最後の日付を取得または設定します。</summary>
        <value>予定表で使用できる最後の日付。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> の範囲を制限するには、<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> プロパティと <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> プロパティを設定します。  ユーザーは、この範囲外の日付をスクロールまたは選択することはできません。  <xref:System.Windows.Controls.Calendar.SelectedDate%2A> プロパティを <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A>後の日付に設定した場合、<xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> は <xref:System.Windows.Controls.Calendar.SelectedDate%2A>と同じ値に設定されます。  
  
<a name="dependencyPropertyInfo_DisplayDateEnd"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.DisplayDateEndProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateEnd"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayDateEnd="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateEnd"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 [DATETIME XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)に関するトピックに記載されているいずれかの形式の日付。  
  
   
  
## Examples  
 次のコードでは、表示可能な日付の特定の範囲の <xref:System.Windows.Controls.Calendar> を設定し、現在選択されている日付と表示される日付を設定します。  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateEndProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateEndProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateEndProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateEndProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateEndProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStart">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDateStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateStart As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateStart { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateStart : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.DisplayDateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>予定表で使用できる最初の日付を取得または設定します。</summary>
        <value>予定表で使用できる最初の日付。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カレンダーの範囲を制限するには、<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> と <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> のプロパティを設定します。  ユーザーは、この範囲外の日付をスクロールまたは選択することはできません。  <xref:System.Windows.Controls.Calendar.SelectedDate%2A> プロパティを <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>より前の日付に設定した場合、<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> は <xref:System.Windows.Controls.Calendar.SelectedDate%2A>と同じ値に設定されます。  
  
<a name="dependencyPropertyInfo_DisplayDateStart"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.DisplayDateStartProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateStart"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayDateStart="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateStart"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 [DATETIME XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)に関するトピックに記載されているいずれかの形式の日付。  
  
   
  
## Examples  
 次のコードでは、表示可能な日付の特定の範囲の <xref:System.Windows.Controls.Calendar> を設定し、現在選択されている日付と表示される日付を設定します。  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateStartProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateStartProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateStartProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateStartProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateStartProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMode As CalendarMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarMode DisplayMode { System::Windows::Controls::CalendarMode get(); void set(System::Windows::Controls::CalendarMode value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Windows.Controls.CalendarMode with get, set" Usage="System.Windows.Controls.Calendar.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>予定表で月、年、10 年のいずれを表示するかを指定する値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.Calendar" /> で表示する期間の長さを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カレンダーには、月、年、または10年を表示できます。 次の表は、ユーザーが各モードに移動する方法を示しています。  
  
|DisplayMode|アクション|  
|-----------------|------------|  
|月|年のモードに移動するには、月の見出しをクリックします。|  
|Year|10年のモードに移動するには、年の見出しをクリックします。 月モードに移動するには、表示されている月のいずれかをクリックします。|  
|10年以上|年モードに移動するには、表示されている年のいずれかをクリックします。|  
  
<a name="dependencyPropertyInfo_DisplayMode"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.DisplayModeProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 次の例では、月を表示し、<xref:System.Windows.Controls.Calendar.DisplayModeChanged> イベントを処理するカレンダーを作成します。これにより、ユーザーが月または年をクリックしても、カレンダーの <xref:System.Windows.Controls.Calendar.DisplayMode%2A>は変更されません。  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanged As EventHandler(Of CalendarModeChangedEventArgs) " FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::CalendarModeChangedEventArgs ^&gt; ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; " Usage="member this.DisplayModeChanged : System.EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event DisplayModeChanged As EventHandler(Of CalendarModeChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> プロパティが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DisplayModeChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayModeChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 次の例では、月を表示し、<xref:System.Windows.Controls.Calendar.DisplayModeChanged> イベントを処理するカレンダーを作成します。これにより、ユーザーが月または年をクリックしても、カレンダーの <xref:System.Windows.Controls.Calendar.DisplayMode%2A>は変更されません。  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Windows.Controls.Calendar.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>週の始まりと見なされる曜日を取得または設定します。</summary>
        <value>週の始まりを表す <see cref="T:System.DayOfWeek" />。 既定値は、現在のカルチャで決定された <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_FirstDayOfWeek"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.FirstDayOfWeekProperty>|  
|メタデータプロパティが `true` に設定される|なし|  
  
<a name="xamlAttributeUsage_FirstDayOfWeek"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<Calendar **FirstDayOfWeek**= "<xref:System.DayOfWeek>"/>  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Controls.Calendar.FirstDayOfWeek%2A> プロパティを <xref:System.DayOfWeek.Monday>に設定します。  
  
 [!code-xaml[CalendarSnippets#8](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FirstDayOfWeekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FirstDayOfWeekProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FirstDayOfWeekProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FirstDayOfWeekProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FirstDayOfWeekProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.FirstDayOfWeekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlighted">
      <MemberSignature Language="C#" Value="public bool IsTodayHighlighted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTodayHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTodayHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTodayHighlighted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTodayHighlighted : bool with get, set" Usage="System.Windows.Controls.Calendar.IsTodayHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の日付が強調表示されるかどうかを示す値を取得または設定します。</summary>
        <value>現在の日付が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsTodayHighlighted"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.IsTodayHighlightedProperty>|  
|メタデータプロパティが `true` に設定される|なし|  
  
<a name="xamlAttributeUsage_IsTodayHighlighted"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar IsTodayHighlighted="bool"/>  
```  
  
   
  
## Examples  
 次の例では、現在の日付が強調表示されていない <xref:System.Windows.Controls.Calendar> を作成します。  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTodayHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTodayHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTodayHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTodayHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTodayHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.IsTodayHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="calendar.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Calendar" /> コントロールのビジュアル ツリーを構築します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーションコードまたは内部プロセス (レイアウトパスの再構築など) が <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> メソッドを呼び出すたびに呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="calendar.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[silverlight](~/includes/silverlight-md.md)] オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> を返します。</summary>
        <returns><see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Controls.Calendar" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、コントロールインスタンスに対して作成されていない新しい <xref:System.Windows.Automation.Peers.CalendarAutomationPeer> インスタンスを作成します。それ以外の場合は、以前に作成した <xref:System.Windows.Automation.Peers.CalendarAutomationPeer> を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayDateChanged (System.Windows.Controls.CalendarDateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayDateChanged(class System.Windows.Controls.CalendarDateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayDateChanged (e As CalendarDateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayDateChanged(System::Windows::Controls::CalendarDateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayDateChanged : System.Windows.Controls.CalendarDateChangedEventArgs -&gt; unit&#xA;override this.OnDisplayDateChanged : System.Windows.Controls.CalendarDateChangedEventArgs -&gt; unit" Usage="calendar.OnDisplayDateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarDateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" /> メソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Windows.Controls.CalendarModeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Windows.Controls.CalendarModeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As CalendarModeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Windows::Controls::CalendarModeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Windows.Controls.CalendarModeChangedEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Windows.Controls.CalendarModeChangedEventArgs -&gt; unit" Usage="calendar.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarModeChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" /> メソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="calendar.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>このコントロールにフォーカスがある状態でユーザーがキーを押したときに発生する <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントのクラス処理を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> は、<xref:System.Windows.Controls.Calendar.OnKeyDown%2A> メソッドをオーバーライドしてキーボードナビゲーションをサポートします。  詳細については、<xref:System.Windows.Controls.Calendar> クラスを参照してください。 この実装は、方向キーを押すなどのキーストロークがナビゲーション操作を実行するときに、イベントデータの <xref:System.Windows.RoutedEventArgs.Handled%2A> プロパティを `true` に設定することによって、<xref:System.Windows.UIElement.KeyDown> イベントを処理済みとしてマークします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />をオーバーライドする場合は、常に <see cref="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> の実装で基本実装を呼び出します。 基本実装を呼び出さないと、基底クラスでクラスハンドラーを使用してイベントを処理できなくなり、最終的なクラスの実行時の動作が変わる可能性があります。 基本実装は、要件に応じて、特別な処理の前または後に呼び出すことができます。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="calendar.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>このコントロールにフォーカスがある状態でユーザーがキーを離したときに発生する <see cref="E:System.Windows.UIElement.KeyUp" /> ルーティング イベントのクラス処理を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> は、<xref:System.Windows.Controls.Calendar.OnKeyDown%2A> メソッドをオーバーライドしてキーボードナビゲーションをサポートします。  詳細については、<xref:System.Windows.Controls.Calendar> クラスを参照してください。 この実装では、<xref:System.Windows.UIElement.KeyUp> イベントデータの処理済みの状態 (<xref:System.Windows.RoutedEventArgs.Handled%2A> プロパティ) は変更されません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />をオーバーライドする場合は、常に <see cref="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> の実装で基本実装を呼び出します。 基本実装を呼び出さないと、基底クラスでクラスハンドラーを使用してイベントを処理できなくなり、最終的なクラスの実行時の動作が変わる可能性があります。 基本実装は、要件に応じて、特別な処理の前または後に呼び出すことができます。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedDatesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedDatesChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedDatesChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedDatesChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedDatesChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedDatesChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit&#xA;override this.OnSelectedDatesChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="calendar.OnSelectedDatesChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> ルーティング イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールは、<xref:System.Windows.UIElement.RaiseEvent%2A>を呼び出すことによって、<xref:System.Windows.Controls.Calendar.SelectedDatesChanged> イベントを発生させます。 詳細については、「[ルーティングイベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" /> メソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionModeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionModeChanged : EventArgs -&gt; unit" Usage="calendar.OnSelectionModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" /> メソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SelectedDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectedDate" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedDate As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; SelectedDate { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDate : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.SelectedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在選択されている日付を取得または設定します。</summary>
        <value>現在選択されている日付。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectedDate"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.SelectedDateProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 <xref:System.Windows.Controls.Calendar.SelectionMode%2A> が <xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>に設定されている場合は、このプロパティを使用します。 他のモードでは、このプロパティは常に <xref:System.Windows.Controls.Calendar.SelectedDates%2A>の最初の日付になります。  
  
<a name="xamlAttributeUsage_SelectedDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar SelectedDate="dateTimeString"/>  
```  
  
<a name="xamlValues_SelectedDate"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 [DATETIME XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)に関するトピックに記載されているいずれかの形式の日付。  
  
   
  
## Examples  
 次の例では、表示可能な日付の特定の範囲の <xref:System.Windows.Controls.Calendar> を作成し、現在選択されている日付と表示される日付を設定します。  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された日付が <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> および <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> で指定された範囲内にありません。  
  
- または - 
指定した日付は <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> コレクションにあります。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> が <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" /> に設定されているときに、<see langword="null" /> 以外に設定する場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectedDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.SelectedDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SelectedDatesCollection SelectedDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SelectedDatesCollection SelectedDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectedDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedDates As SelectedDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SelectedDatesCollection ^ SelectedDates { System::Windows::Controls::SelectedDatesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDates : System.Windows.Controls.SelectedDatesCollection" Usage="System.Windows.Controls.Calendar.SelectedDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SelectedDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択された日付のコレクションを設定します。</summary>
        <value>現在選択されている日付を含む <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> オブジェクト。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> メソッドを使用して、個別に、または範囲内で日付をコレクションに追加できます。 <xref:System.Windows.Controls.Calendar.SelectionMode%2A> プロパティの値によっては、コレクションに日付または範囲を追加すると、その値がクリアされる場合があります。 次の表は、<xref:System.Windows.Controls.CalendarSelectionMode> が <xref:System.Windows.Controls.Calendar.SelectedDates%2A> プロパティに与える影響を示しています。  
  
|CalendarSelectionMode|説明|  
|---------------------------|-----------------|  
|<xref:System.Windows.Controls.CalendarSelectionMode.None>|選択は許可されません。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> を設定することはできません。 <xref:System.Windows.Controls.Calendar.SelectedDates%2A>に値を追加することはできません。|  
|<xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>|<xref:System.Windows.Controls.Calendar.SelectedDate%2A> または <xref:System.Windows.Controls.Calendar.SelectedDates%2A>の最初の値を設定することによって、1つの日付のみを選択できます。 <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> は使用できません。|  
|<xref:System.Windows.Controls.CalendarSelectionMode.SingleRange>|1 つ日付範囲を選択できます。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A>の設定、<xref:System.Windows.Controls.Calendar.SelectedDates%2A>への日付の個別の追加、または <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> の使用により、以前のすべての値が <xref:System.Windows.Controls.Calendar.SelectedDates%2A>からクリアされます。|  
|<xref:System.Windows.Controls.CalendarSelectionMode.MultipleRange>|隣接していない複数の日付範囲を選択できます。 <xref:System.Windows.Controls.Calendar.SelectedDates%2A> または <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> を使用するように日付を個別に追加しても、<xref:System.Windows.Controls.Calendar.SelectedDates%2A>はクリアされません。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> を設定しても <xref:System.Windows.Controls.Calendar.SelectedDates%2A>はクリアされますが、追加の日付または範囲を追加することができます。 既に選択されているか、別の範囲と重複する日付を含む範囲を追加すると、範囲の和集合になり、例外は発生しません。|  
  
<a name="xamlPropertyElementUsage_SelectedDates"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.SelectedDates>  
    oneOrMoreDateTimeObjects  
  </object.SelectedDates>  
</object>  
  
```  
  
<a name="xamlValues_SelectedDates"></a>   
## <a name="xaml-values"></a>XAML 値  
 *oneOrMoreDateTimeObjects*  
 1つ以上の <xref:System.DateTime> オブジェクト要素。  
  
   
  
## Examples  
 次の例では、複数の日付範囲が選択されている <xref:System.Windows.Controls.Calendar> を作成します。  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.SelectedDatesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedDatesChanged As EventHandler(Of SelectionChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::SelectionChangedEventArgs ^&gt; ^ SelectedDatesChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedDatesChanged : EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " Usage="member this.SelectedDatesChanged : System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> プロパティが返すコレクションが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectedDatesChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar SelectedDatesChanged="eventhandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedDatesChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedDatesChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectedDatesChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDatesChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectedDatesChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDatesChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Calendar.SelectedDatesChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> ルーティング イベントを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As CalendarSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarSelectionMode SelectionMode { System::Windows::Controls::CalendarSelectionMode get(); void set(System::Windows::Controls::CalendarSelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Controls.CalendarSelectionMode with get, set" Usage="System.Windows.Controls.Calendar.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>許可されている選択の種類を示す値を取得または設定します。</summary>
        <value>現在の選択モードを示す値。 既定値は、<see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionMode"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Controls.Calendar.SelectionModeProperty>|  
|メタデータプロパティが `true` に設定される|なし|  
  
 このプロパティは、<xref:System.Windows.Controls.Calendar> が選択、1つの日付の選択、または複数の日付の選択を許可するかどうかを決定します。 選択モードは、<xref:System.Windows.Controls.CalendarSelectionMode> 列挙体で指定されます。  
  
 このプロパティを変更すると、選択したすべての日付がクリアされます。  
  
<a name="xamlAttributeUsage_SelectionMode"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<Calendar **SelectionMode**= "<xref:System.Windows.Controls.CalendarSelectionMode>"/>  
  
   
  
## Examples  
 次の例では、複数の日付範囲が選択されている <xref:System.Windows.Controls.Calendar> を作成します。  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; SelectionModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; SelectionModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.SelectionModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionModeChanged As EventHandler(Of EventArgs) " FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;EventArgs ^&gt; ^ SelectionModeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionModeChanged : EventHandler&lt;EventArgs&gt; " Usage="member this.SelectionModeChanged : System.EventHandler&lt;System.EventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionModeChanged As EventHandler(Of EventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> が変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectionModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.SelectionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="calendar.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択された日付のテキスト表現を提供します。</summary>
        <returns>選択された日付のテキスト表現、または <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> が <see langword="null" /> の場合は空の文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
