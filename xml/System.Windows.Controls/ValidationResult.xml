<Type Name="ValidationResult" FullName="System.Windows.Controls.ValidationResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb2342ade19664e913f1098c474722868eb4e5fe" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83948644" /></Metadata><TypeSignature Language="C#" Value="public class ValidationResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationResult" />
  <TypeSignature Language="F#" Value="type ValidationResult = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Controls.ValidationRule" />.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /> メソッドによって返された結果を表します。 このメソッドは、チェック後の値が <see cref="T:System.Windows.Controls.ValidationRule" /> に合致しているかどうかを示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] データバインディングモデルを使用すると、<xref:System.Windows.Data.Binding.ValidationRules%2A> を <xref:System.Windows.Data.Binding> または <xref:System.Windows.Data.MultiBinding> オブジェクトに関連付けることができます。 <xref:System.Windows.Controls.ValidationRule> クラスをサブクラス化し、<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドを実装することによって、カスタム規則を作成できます。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドは、チェックされた値が有効かどうかを報告する <xref:System.Windows.Controls.ValidationResult> オブジェクトを返します。  
  
 検証プロセスの詳細については、「[データバインディングの概要](/dotnet/framework/wpf/data/data-binding-overview)」の「データの検証」を参照してください。  
  
   
  
## Examples  
 次の例は、数値以外の文字が含まれている場合、または下限と上限の範囲外にある場合に、入力値を無効としてマークする検証規則の実装を示しています。 値が無効な場合は、返された <xref:System.Windows.Controls.ValidationResult> の <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> プロパティと <xref:System.Windows.Controls.ValidationResult.IsValid%2A> プロパティが、それぞれ適切なエラーメッセージと `false` に設定されます。  
  
 完全な例については、「[方法: バインディング検証を実装](/dotnet/framework/wpf/data/how-to-implement-binding-validation)する」を参照してください。  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationResult (bool isValid, object errorContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isValid, object errorContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isValid As Boolean, errorContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationResult(bool isValid, System::Object ^ errorContent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationResult : bool * obj -&gt; System.Windows.Controls.ValidationResult" Usage="new System.Windows.Controls.ValidationResult (isValid, errorContent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isValid" Type="System.Boolean" />
        <Parameter Name="errorContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="isValid"><see cref="T:System.Windows.Controls.ValidationRule" /> でチェックした値が有効かどうか。</param>
        <param name="errorContent">無効性に関する情報。</param>
        <summary><see cref="T:System.Windows.Controls.ValidationResult" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] データバインディングモデルを使用すると、<xref:System.Windows.Data.Binding.ValidationRules%2A> を <xref:System.Windows.Data.Binding> または <xref:System.Windows.Data.MultiBinding> オブジェクトに関連付けることができます。 <xref:System.Windows.Controls.ValidationRule> クラスをサブクラス化し、<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドを実装することによって、カスタム規則を作成できます。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドは、チェックされた値が有効かどうかを報告する <xref:System.Windows.Controls.ValidationResult> オブジェクトを返します。  
  
 検証プロセスの詳細については、「[データバインディングの概要](/dotnet/framework/wpf/data/data-binding-overview)」の「データの検証」を参照してください。  
  
   
  
## Examples  
 次の例は、数値以外の文字が含まれている場合、または下限と上限の範囲外にある場合に、入力値を無効としてマークする検証規則の実装を示しています。 値が無効な場合は、返された <xref:System.Windows.Controls.ValidationResult> の <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> プロパティと <xref:System.Windows.Controls.ValidationResult.IsValid%2A> プロパティが、それぞれ適切なエラーメッセージと `false` に設定されます。  
  
 完全な例については、「[方法: バインディング検証を実装](/dotnet/framework/wpf/data/how-to-implement-binding-validation)する」を参照してください。  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="validationResult.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">比較対象の <see cref="T:System.Windows.Controls.ValidationResult" /> インスタンス。</param>
        <summary>指定したインスタンスと <see cref="T:System.Windows.Controls.ValidationResult" /> の現在のインスタンスを比較し、値が等しいかどうかを確認します。</summary>
        <returns><paramref name="obj" /> および <see cref="T:System.Windows.Controls.ValidationResult" /> のこのインスタンスが同じ値を持つ場合は <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、演算子のオーバーライドによって呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorContent : obj" Usage="System.Windows.Controls.ValidationResult.ErrorContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>無効性に関する追加情報を提供するオブジェクトを取得します。</summary>
        <value>無効性に関する追加情報を提供するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] データバインディングモデルを使用すると、<xref:System.Windows.Data.Binding.ValidationRules%2A> を <xref:System.Windows.Data.Binding> または <xref:System.Windows.Data.MultiBinding> オブジェクトに関連付けることができます。 <xref:System.Windows.Controls.ValidationRule> クラスをサブクラス化し、<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドを実装することによって、カスタム規則を作成できます。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドは、チェックされた値が有効かどうかを報告する <xref:System.Windows.Controls.ValidationResult> オブジェクトを返します。  
  
 検証プロセスの詳細については、「[データバインディングの概要](/dotnet/framework/wpf/data/data-binding-overview)」の「データの検証」を参照してください。  
  
   
  
## Examples  
 次の例は、数値以外の文字が含まれている場合、または下限と上限の範囲外にある場合に、入力値を無効としてマークする検証規則の実装を示しています。 値が無効な場合は、返された <xref:System.Windows.Controls.ValidationResult> の <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> プロパティと <xref:System.Windows.Controls.ValidationResult.IsValid%2A> プロパティが、それぞれ適切なエラーメッセージと `false` に設定されます。  
  
 完全な例については、「[方法: バインディング検証を実装](/dotnet/framework/wpf/data/how-to-implement-binding-validation)する」を参照してください。  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="validationResult.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Controls.ValidationResult" /> のハッシュ コードを返します。</summary>
        <returns>この <see cref="T:System.Windows.Controls.ValidationResult" /> のハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Windows.Controls.ValidationResult.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationRule" /> に関してチェックされた値が有効かどうかを示す値を取得します。</summary>
        <value>値が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" />にする必要があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] データバインディングモデルを使用すると、<xref:System.Windows.Data.Binding.ValidationRules%2A> を <xref:System.Windows.Data.Binding> または <xref:System.Windows.Data.MultiBinding> オブジェクトに関連付けることができます。 <xref:System.Windows.Controls.ValidationRule> クラスをサブクラス化し、<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドを実装することによって、カスタム規則を作成できます。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドは、チェックされた値が有効かどうかを報告する <xref:System.Windows.Controls.ValidationResult> オブジェクトを返します。  
  
 検証プロセスの詳細については、「[データバインディングの概要](/dotnet/framework/wpf/data/data-binding-overview)」の「データの検証」を参照してください。  
  
   
  
## Examples  
 次の例は、数値以外の文字が含まれている場合、または下限と上限の範囲外にある場合に、入力値を無効としてマークする検証規則の実装を示しています。 値が無効な場合は、返された <xref:System.Windows.Controls.ValidationResult> の <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> プロパティと <xref:System.Windows.Controls.ValidationResult.IsValid%2A> プロパティが、それぞれ適切なエラーメッセージと `false` に設定されます。  
  
 完全な例については、「[方法: バインディング検証を実装](/dotnet/framework/wpf/data/how-to-implement-binding-validation)する」を参照してください。  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Controls.ValidationResult left, class System.Windows.Controls.ValidationResult right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValidationResult, right As ValidationResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::ValidationResult ^ left, System::Windows::Controls::ValidationResult ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Controls.ValidationResult * System.Windows.Controls.ValidationResult -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Controls.ValidationResult" />
        <Parameter Name="right" Type="System.Windows.Controls.ValidationResult" />
      </Parameters>
      <Docs>
        <param name="left">比較する 1 番目のインスタンス。</param>
        <param name="right">比較する 2 番目のインスタンス。</param>
        <summary>2 つの <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトの値が等しいかどうかを比較します。</summary>
        <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Controls.ValidationResult left, class System.Windows.Controls.ValidationResult right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValidationResult, right As ValidationResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::ValidationResult ^ left, System::Windows::Controls::ValidationResult ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Controls.ValidationResult * System.Windows.Controls.ValidationResult -&gt; bool" Usage="System.Windows.Controls.ValidationResult.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Controls.ValidationResult" />
        <Parameter Name="right" Type="System.Windows.Controls.ValidationResult" />
      </Parameters>
      <Docs>
        <param name="left">比較する 1 番目のインスタンス。</param>
        <param name="right">比較する 2 番目のインスタンス。</param>
        <summary>2 つの <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトが等しくないかどうかを比較します。</summary>
        <returns>値が等しくない場合は <see langword="true" />、等しい場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidResult">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ValidationResult ValidResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.ValidationResult ValidResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.ValidResult" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ValidResult As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::ValidationResult ^ ValidResult { System::Windows::Controls::ValidationResult ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidResult : System.Windows.Controls.ValidationResult" Usage="System.Windows.Controls.ValidationResult.ValidResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationResult" /> の有効なインスタンスを取得します。</summary>
        <value><see cref="T:System.Windows.Controls.ValidationResult" /> の有効なインスタンス。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
