<Type Name="ValidationRule" FullName="System.Windows.Controls.ValidationRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aac21e55a704dac8c98292072d0cc8cedcdbe94a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75174872" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidationRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationRule abstract" />
  <TypeSignature Language="F#" Value="type ValidationRule = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="93fc3-101">ユーザー入力の有効性を検査するためのカスタム ルールを作成する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-101">Provides a way to create a custom rule in order to check the validity of user input.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93fc3-102">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] データバインディングモデルを使用すると、<xref:System.Windows.Data.Binding.ValidationRules%2A> をバインドオブジェクトに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="93fc3-102">When you use the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model, you can associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your binding object.</span></span> <span data-ttu-id="93fc3-103">カスタム規則を作成するには、このクラスのサブクラスを作成し、<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-103">To create custom rules, make a subclass of this class and implement the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="93fc3-104">必要に応じて、組み込みの <xref:System.Windows.Controls.ExceptionValidationRule>を使用します。これは、ソースの更新中にスローされた例外をキャッチします。または、<xref:System.Windows.Controls.DataErrorValidationRule>で、ソースオブジェクトの <xref:System.ComponentModel.IDataErrorInfo> 実装によって発生したエラーを確認します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-104">Optionally, use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which catches exceptions that are thrown during source updates, or the <xref:System.Windows.Controls.DataErrorValidationRule>, which checks for errors raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span>  
  
 <span data-ttu-id="93fc3-105">バインディングエンジンは、バインディングターゲットプロパティ値である入力値をバインディングソースプロパティに転送するたびに、バインディングに関連付けられている各 <xref:System.Windows.Controls.ValidationRule> を確認します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-105">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> that is associated with a binding every time it transfers an input value, which is the binding target property value, to the binding source property.</span></span>  
  
 <span data-ttu-id="93fc3-106">データの検証の詳細については、「[データバインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="93fc3-106">For detailed information about data validation, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="93fc3-107">ダイアログボックスでユーザーが指定したデータを検証する方法の詳細については、「ダイアログボックスの[概要](~/docs/framework/wpf/app-development/dialog-boxes-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="93fc3-107">For information about how to validate user-provided data in a dialog box, see [Dialog Boxes Overview](~/docs/framework/wpf/app-development/dialog-boxes-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93fc3-108">検証規則を実装する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-108">The following example shows how to implement a validation rule.</span></span> <span data-ttu-id="93fc3-109">数値以外の文字が含まれている場合、または下限と上限の範囲外の場合、入力値は無効です。</span><span class="sxs-lookup"><span data-stu-id="93fc3-109">The input value is invalid if it contains non-numeric characters or if it is outside the lower and upper bounds.</span></span> <span data-ttu-id="93fc3-110">返された <xref:System.Windows.Controls.ValidationResult> の値が無効な場合、<xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> プロパティは適切なエラーメッセージに設定され、<xref:System.Windows.Controls.ValidationResult.IsValid%2A> プロパティは `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="93fc3-110">If the value of the returned <xref:System.Windows.Controls.ValidationResult> is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property is set to the appropriate error message and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="93fc3-111">完全な例については、「[方法: バインディング検証を実装](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="93fc3-111">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93fc3-112"><see cref="T:System.Windows.Controls.ValidationRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-112">Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93fc3-113"><see cref="T:System.Windows.Controls.ValidationRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-113">Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule(System::Windows::Controls::ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationRule : System.Windows.Controls.ValidationStep * bool -&gt; System.Windows.Controls.ValidationRule" Usage="new System.Windows.Controls.ValidationRule (validationStep, validatesOnTargetUpdated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="validationStep" Type="System.Windows.Controls.ValidationStep" />
        <Parameter Name="validatesOnTargetUpdated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validationStep"><span data-ttu-id="93fc3-114">検証規則を実行するタイミングを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="93fc3-114">One of the enumeration values that specifies when the validation rule runs.</span></span></param>
        <param name="validatesOnTargetUpdated"><span data-ttu-id="93fc3-115"><see langword="true" /> のターゲットが更新されたときに検証規則を実行する場合は <see cref="T:System.Windows.Data.Binding" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93fc3-115"><see langword="true" /> to have the validation rule run when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="93fc3-116">指定した検証手順と、ターゲットの更新時に検証規則を実行するかどうかを示す値を使用して、<see cref="T:System.Windows.Controls.ValidationRule" /> クラスの新規インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-116">Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class with the specified validation step and a value that indicates whether the validation rule runs when the target is updated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93fc3-117">値の検証チェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-117">Performs validation checks on a value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="93fc3-118">チェックするバインド ターゲットからの値。</span><span class="sxs-lookup"><span data-stu-id="93fc3-118">The value from the binding target to check.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="93fc3-119">このルールで使用するカルチャ。</span><span class="sxs-lookup"><span data-stu-id="93fc3-119">The culture to use in this rule.</span></span></param>
        <summary><span data-ttu-id="93fc3-120">派生クラスによってオーバーライドされた場合、値に対して検証チェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-120">When overridden in a derived class, performs validation checks on a value.</span></span></summary>
        <returns><span data-ttu-id="93fc3-121"><see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="93fc3-121">A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93fc3-122">カスタム検証規則を作成するために <xref:System.Windows.Controls.ValidationRule> クラスのサブクラスを作成する場合は、このメソッドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="93fc3-122">You must implement this method when you create a subclass of the <xref:System.Windows.Controls.ValidationRule> class in order to create a custom validation rule.</span></span>  
  
 <span data-ttu-id="93fc3-123">データバインディングエンジンは、バインディングターゲットプロパティ (ユーザー入力から基になるデータ) に値を転送するたびに、そのバインディングに対して <xref:System.Windows.Data.Binding.ValidationRules%2A> が定義されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-123">Each time the data binding engine transfers a value from the binding target property (from user input) to the binding source property (the underlying data), it checks whether any <xref:System.Windows.Data.Binding.ValidationRules%2A> are defined for that binding.</span></span> <span data-ttu-id="93fc3-124">バインディングに対して <xref:System.Windows.Data.Binding.ValidationRules%2A> が定義されている場合、エンジンは、そのいずれかがエラーを検出するか、すべてのメソッドが成功するまで、各 <xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-124">If <xref:System.Windows.Data.Binding.ValidationRules%2A> are defined for the binding, the engine calls the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method on each <xref:System.Windows.Controls.ValidationRule> until one of them finds an error or until all of them pass.</span></span>  
  
 <span data-ttu-id="93fc3-125">データの検証の詳細については、「[データバインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="93fc3-125">For detailed information about data validation, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93fc3-126">検証規則を実装する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-126">The following example shows how to implement a validation rule.</span></span> <span data-ttu-id="93fc3-127">次の例では、数値以外の文字が含まれている場合、または下限と上限の範囲外の場合、入力値は無効です。</span><span class="sxs-lookup"><span data-stu-id="93fc3-127">In the following example, the input value is invalid if it contains non-numeric characters or if it is outside the lower and upper bounds.</span></span> <span data-ttu-id="93fc3-128">入力値が無効である場合、<xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> プロパティは適切なエラーメッセージに設定され、<xref:System.Windows.Controls.ValidationResult.IsValid%2A> プロパティは `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="93fc3-128">If the input value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property is set to the appropriate error message and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="93fc3-129">完全な例については、「[方法: バインディング検証を実装](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="93fc3-129">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
        <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159972"><span data-ttu-id="93fc3-130">バインディングの検証のサンプル</span><span class="sxs-lookup"><span data-stu-id="93fc3-130">Binding Validation Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingExpressionBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingExpressionBase ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingExpressionBase" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="93fc3-131">チェックするバインド ターゲットからの値。</span><span class="sxs-lookup"><span data-stu-id="93fc3-131">The value from the binding target to check.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="93fc3-132">このルールで使用するカルチャ。</span><span class="sxs-lookup"><span data-stu-id="93fc3-132">The culture to use in this rule.</span></span></param>
        <param name="owner"><span data-ttu-id="93fc3-133">検証規則を使用するバインディング式。</span><span class="sxs-lookup"><span data-stu-id="93fc3-133">The binding expression that uses the validation rule.</span></span></param>
        <summary><span data-ttu-id="93fc3-134">値の検証チェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-134">Performs validation checks on a value.</span></span></summary>
        <returns><span data-ttu-id="93fc3-135"><see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="93fc3-135">A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingGroup owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingGroup ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingGroup" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="93fc3-136">チェックするバインド ターゲットからの値。</span><span class="sxs-lookup"><span data-stu-id="93fc3-136">The value from the binding target to check.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="93fc3-137">このルールで使用するカルチャ。</span><span class="sxs-lookup"><span data-stu-id="93fc3-137">The culture to use in this rule.</span></span></param>
        <param name="owner"><span data-ttu-id="93fc3-138">検証規則を使用するバインディング グループ。</span><span class="sxs-lookup"><span data-stu-id="93fc3-138">The binding group that uses the validation rule.</span></span></param>
        <summary><span data-ttu-id="93fc3-139">値の検証チェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-139">Performs validation checks on a value.</span></span></summary>
        <returns><span data-ttu-id="93fc3-140"><see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="93fc3-140">A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool ValidatesOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnTargetUpdated : bool with get, set" Usage="System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93fc3-141"><see cref="T:System.Windows.Data.Binding" /> のターゲットが更新されたときに検証規則を実行するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-141">Gets or sets a value that indicates whether the validation rule runs when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated.</span></span></summary>
        <value><span data-ttu-id="93fc3-142"><see langword="true" /> のターゲットが更新されたときに検証規則を実行する場合は <see cref="T:System.Windows.Data.Binding" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93fc3-142"><see langword="true" /> if the validation rule runs when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93fc3-143">次の例では、<xref:System.Windows.Controls.TextBox> が空であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-143">The following example checks whether the <xref:System.Windows.Controls.TextBox> is empty.</span></span> <span data-ttu-id="93fc3-144"><xref:System.Windows.Controls.ValidationRule>、`ValueIsNotNull`は `true`に設定されて <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> います。そのため、アプリケーションの起動時に、<xref:System.Windows.Controls.ValidationRule> が空の場合、<xref:System.Windows.Controls.TextBox> が実行され、メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="93fc3-144">The <xref:System.Windows.Controls.ValidationRule>, `ValueIsNotNull`, has <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> set to `true`, so that when the application starts, the <xref:System.Windows.Controls.ValidationRule> runs and displays a message if the <xref:System.Windows.Controls.TextBox> is empty.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  
  
 <span data-ttu-id="93fc3-145">次の例では、前の例で使用した <xref:System.Windows.Controls.ValidationRule> と、<xref:System.Windows.Controls.Validation.Error> イベントのイベントハンドラーを示します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-145">The following example shows the <xref:System.Windows.Controls.ValidationRule> that is used in the previous example and the event handler for the <xref:System.Windows.Controls.Validation.Error> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]
 [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationStep">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationStep ValidationStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationStep ValidationStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationStep As ValidationStep" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationStep ValidationStep { System::Windows::Controls::ValidationStep get(); void set(System::Windows::Controls::ValidationStep value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationStep : System.Windows.Controls.ValidationStep with get, set" Usage="System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93fc3-146">検証規則を実行するタイミングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="93fc3-146">Gets or sets when the validation rule runs.</span></span></summary>
        <value><span data-ttu-id="93fc3-147">列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="93fc3-147">One of the enumeration values.</span></span>  <span data-ttu-id="93fc3-148">既定値は、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> です。</span><span class="sxs-lookup"><span data-stu-id="93fc3-148">The default is <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93fc3-149">次の例では、<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> を `ValidateDateAndPrice` と呼ばれる <xref:System.Windows.Controls.ValidationRule> で <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> に設定して、実行時に、<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドがソースプロパティの型の値にアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="93fc3-149">The following example sets the <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> on the <xref:System.Windows.Controls.ValidationRule> called `ValidateDateAndPrice` so that when it runs, the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method has access to values that are of the source property's type.</span></span> <span data-ttu-id="93fc3-150">ルール `PriceIsAPositiveNumber` および `FutureDateRule` 実行されると、各 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの値は文字列になります。これは、値がそれぞれの型に変換される前にルールが実行されるためです。</span><span class="sxs-lookup"><span data-stu-id="93fc3-150">When the rules `PriceIsAPositiveNumber` and `FutureDateRule` run, the values in each <xref:System.Windows.Controls.ValidationRule.Validate%2A> method are strings because the rules run before the values are converted to their respective types.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="93fc3-151">次の例は、<xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`を示しています。</span><span class="sxs-lookup"><span data-stu-id="93fc3-151">The following example shows the <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`.</span></span> <span data-ttu-id="93fc3-152">`Validate` メソッドのオーバーライドでは、`Price` プロパティは <xref:System.Double> 型であり、`OfferExpires` プロパティは <xref:System.DateTime> 型です。これは、<xref:System.Windows.Controls.ValidationRule> の実行時に文字列がそれぞれの型に変換されたためです。</span><span class="sxs-lookup"><span data-stu-id="93fc3-152">In the `Validate` method override, the `Price` property is of type <xref:System.Double> and the `OfferExpires` property is of type <xref:System.DateTime> because the strings have been converted to their respective types by the time the <xref:System.Windows.Controls.ValidationRule> runs.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
