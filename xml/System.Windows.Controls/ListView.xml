<Type Name="ListView" FullName="System.Windows.Controls.ListView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe995ef4bad0f5758ea65a7e1c900c4e16fa3718" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83957181" /></Metadata><TypeSignature Language="C#" Value="public class ListView : System.Windows.Controls.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Controls.ListBox" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits ListBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Controls::ListBox" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListView extends System.Windows.Controls.ListBox" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ListViewItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ae18c-101">データ アイテムのリストを表示するコントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-101">Represents a control that displays a list of data items.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae18c-102"><xref:System.Windows.Controls.ListView> は <xref:System.Windows.Controls.ItemsControl>であり、任意の型 (文字列、イメージ、パネルなど) のオブジェクトのコレクションを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ae18c-102"><xref:System.Windows.Controls.ListView> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="ae18c-103">詳細については、<xref:System.Windows.Controls.ItemsControl> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="ae18c-104"><xref:System.Windows.Controls.ListView> 内のデータ項目の表示は、<xref:System.Windows.Controls.ListView.View%2A> プロパティによって指定されたビューモードによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="ae18c-104">The presentation of the data items in a <xref:System.Windows.Controls.ListView> is defined by its view mode, which is specified by the <xref:System.Windows.Controls.ListView.View%2A> property.</span></span> [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <span data-ttu-id="ae18c-105">には、<xref:System.Windows.Controls.ListView> データ項目の内容を列に分割する <xref:System.Windows.Controls.GridView> ビューモードが用意されています。</span><span class="sxs-lookup"><span data-stu-id="ae18c-105">provides a <xref:System.Windows.Controls.GridView> view mode that partitions the <xref:System.Windows.Controls.ListView> data item content into columns.</span></span> <span data-ttu-id="ae18c-106"><xref:System.Windows.Controls.GridView> のプロパティとメソッドとそれに関連するクラスのスタイルを設定して、列の内容を指定します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-106">The properties and methods on <xref:System.Windows.Controls.GridView> and its related classes style and specify the content of the columns.</span></span>  
  
 <span data-ttu-id="ae18c-107">次の図は、<xref:System.Windows.Controls.GridView> ビューを使用した <xref:System.Windows.Controls.ListView> を示しています。</span><span class="sxs-lookup"><span data-stu-id="ae18c-107">The following illustration shows a <xref:System.Windows.Controls.ListView> with a <xref:System.Windows.Controls.GridView> view.</span></span>  
  
 <span data-ttu-id="ae18c-108">![GridView の出力を含む ListView](~/add/media/listviewgridview.JPG "GridView 出力を含む ListView")</span><span class="sxs-lookup"><span data-stu-id="ae18c-108">![ListView with GridView output](~/add/media/listviewgridview.JPG "ListView with GridView output")</span></span>  
  
 <span data-ttu-id="ae18c-109"><xref:System.Windows.Controls.ViewBase>から派生するクラスを作成することによって、カスタムビューを定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="ae18c-109">You can also define custom views by creating a class that derives from <xref:System.Windows.Controls.ViewBase>.</span></span> <span data-ttu-id="ae18c-110">詳細については、「[方法: ListView のカスタムビューモードを作成](/dotnet/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-110">For more information, see [How to: Create a Custom View Mode for a ListView](/dotnet/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview).</span></span>  
  
 <span data-ttu-id="ae18c-111"><xref:System.Windows.Controls.ListView> コントロールのカスタム <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> を定義し、<xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>も定義する場合は、<xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>に <xref:System.Windows.Controls.ContentPresenter> を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="ae18c-111">If you define a custom <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> for a <xref:System.Windows.Controls.ListView> control and also define an <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, you must include a <xref:System.Windows.Controls.ContentPresenter> in the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>.</span></span> <span data-ttu-id="ae18c-112"><xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> を正しく動作させるには、<xref:System.Windows.Controls.ContentPresenter> が必要です。</span><span class="sxs-lookup"><span data-stu-id="ae18c-112">The <xref:System.Windows.Controls.ContentPresenter> is required for the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> to work correctly.</span></span>  
  
 <span data-ttu-id="ae18c-113"><xref:System.Windows.Controls.GridView> ビューモードでの配置の問題を回避するには、<xref:System.Windows.Controls.ListView>の <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 内の項目の幅に影響を与えるコンテンツを追加したり、プロパティを設定したりしないでください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-113">To avoid alignment issues in a <xref:System.Windows.Controls.GridView> view mode, do not add content or set properties that affect the width of an item in the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> of a <xref:System.Windows.Controls.ListView>.</span></span> <span data-ttu-id="ae18c-114">配置の問題を回避するには、<xref:System.Windows.Controls.GridView> 表示モードに定義されているプロパティとテンプレートを使用します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-114">To prevent alignment issues, use properties and templates that are defined for the <xref:System.Windows.Controls.GridView> view mode.</span></span> <span data-ttu-id="ae18c-115">これには、<xref:System.Windows.Controls.GridViewColumn> や <xref:System.Windows.Controls.GridViewColumnHeader>などの <xref:System.Windows.Controls.GridView> ビューモードで使用されるクラスに対して定義されているプロパティとテンプレートが含まれます。</span><span class="sxs-lookup"><span data-stu-id="ae18c-115">This includes properties and templates that are defined for classes that are used in a <xref:System.Windows.Controls.GridView> view mode, such as <xref:System.Windows.Controls.GridViewColumn> and <xref:System.Windows.Controls.GridViewColumnHeader>.</span></span>  
  
 <span data-ttu-id="ae18c-116">2つの <xref:System.Windows.Controls.ListView> コントロールが同じビューを共有することはできません。</span><span class="sxs-lookup"><span data-stu-id="ae18c-116">Two <xref:System.Windows.Controls.ListView> controls cannot share the same view.</span></span> <span data-ttu-id="ae18c-117">複数回使用できるビューを指定するには、テンプレートまたはスタイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-117">To specify a view that can be used more than one time, use templates or styles.</span></span> <span data-ttu-id="ae18c-118">再利用可能なリソースとして定義されている <xref:System.Windows.Controls.GridView> およびその他のカスタムビューの例については、「 [ListView With Multiple Views Sample](https://go.microsoft.com/fwlink/?LinkID=160013)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-118">For an example of a <xref:System.Windows.Controls.GridView> and other custom views that are defined as reusable resources, see [ListView with Multiple Views Sample](https://go.microsoft.com/fwlink/?LinkID=160013).</span></span>  
  
 <span data-ttu-id="ae18c-119"><xref:System.Windows.Controls.GridView>を使用して表示される <xref:System.Windows.Controls.ListView> コンテンツの <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> および <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> プロパティは使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-119">Do not use the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties for <xref:System.Windows.Controls.ListView> content that is displayed by using a <xref:System.Windows.Controls.GridView>.</span></span> <span data-ttu-id="ae18c-120"><xref:System.Windows.Controls.GridView>の列のコンテンツの配置を指定するには、<xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>を定義します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-120">To specify the alignment of content in a column of a <xref:System.Windows.Controls.GridView>, define a <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>.</span></span>  
  
 <span data-ttu-id="ae18c-121">多数の項目を表示すると、パフォーマンスの問題が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ae18c-121">Displaying a large number of items may cause performance issues.</span></span>  <span data-ttu-id="ae18c-122">詳しくは、「[パフォーマンスの最適化: コントロール](/dotnet/framework/wpf/advanced/optimizing-performance-controls)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-122">See [Optimizing Performance: Controls](/dotnet/framework/wpf/advanced/optimizing-performance-controls) for more information.</span></span>  
  
## <a name="customizing-the-listview-control"></a><span data-ttu-id="ae18c-123">ListView コントロールのカスタマイズ</span><span class="sxs-lookup"><span data-stu-id="ae18c-123">Customizing the ListView Control</span></span>  
 <span data-ttu-id="ae18c-124">複数の<xref:System.Windows.Controls.ListView>コントロールに同じプロパティの設定を適用するには、<xref:System.Windows.FrameworkElement.Style%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-124">To apply the same property settings to multiple <xref:System.Windows.Controls.ListView> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="ae18c-125"><xref:System.Windows.Controls.ControlTemplate>の既定値を変更して外観を制御します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="ae18c-126"><xref:System.Windows.Controls.ControlTemplate>作成の詳細については、「 [ControlTemplate の作成による既存コントロールの外観カスタマイズ](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span>  <span data-ttu-id="ae18c-127"><xref:System.Windows.Controls.ListView>に固有のパーツと状態を確認するには、「 [ListView のスタイルとテンプレート](/dotnet/framework/wpf/controls/listview-styles-and-templates)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.ListView>, see [ListView Styles and Templates](/dotnet/framework/wpf/controls/listview-styles-and-templates).</span></span>  
  
 <span data-ttu-id="ae18c-128">このコントロールの依存関係のプロパティは、コントロールの既定のスタイルによって設定される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ae18c-128">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="ae18c-129">プロパティが既定のスタイルによって設定されている場合、アプリケーションにコントロールが表示されると、プロパティが既定値から変更されることがあります。</span><span class="sxs-lookup"><span data-stu-id="ae18c-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="ae18c-130">既定のスタイルは、アプリケーションの実行時に使用するデスクトップテーマによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="ae18c-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="ae18c-131">詳しくは、「[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-131">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="ae18c-132">次の例は、<xref:System.Windows.Controls.GridView> を <xref:System.Windows.Controls.ListView.View%2A>として実装する <xref:System.Windows.Controls.ListView> コントロールを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ae18c-132">The following example shows how to create a <xref:System.Windows.Controls.ListView> control that implements a <xref:System.Windows.Controls.GridView> as its <xref:System.Windows.Controls.ListView.View%2A>.</span></span> <span data-ttu-id="ae18c-133">この例では、「解説」の図が使用されています。</span><span class="sxs-lookup"><span data-stu-id="ae18c-133">The illustration in the Remarks section is taken from this example.</span></span>  
  
 [!code-xaml[ListViewCode#ListViewEmployee](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewemployee)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ListViewItem" />
    <altmember cref="T:System.Windows.Controls.GridView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ae18c-134"><see cref="T:System.Windows.Controls.ListView" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-134">Initializes a new instance of the <see cref="T:System.Windows.Controls.ListView" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ClearContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listView.ClearContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ae18c-135">消去する <see cref="T:System.Windows.Controls.ListViewItem" /> コンテナー。</span><span class="sxs-lookup"><span data-stu-id="ae18c-135">The <see cref="T:System.Windows.Controls.ListViewItem" /> container to clear.</span></span></param>
        <param name="item"><span data-ttu-id="ae18c-136"><see cref="T:System.Windows.Controls.ListViewItem" /> に格納されているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ae18c-136">The object that the <see cref="T:System.Windows.Controls.ListViewItem" /> contains.</span></span></param>
        <summary><span data-ttu-id="ae18c-137"><see cref="T:System.Windows.Controls.ListViewItem" /> として表示されるオブジェクトのテンプレート、スタイル、およびバインディングをすべて削除します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-137">Removes all templates, styles, and bindings for the object that is displayed as a <see cref="T:System.Windows.Controls.ListViewItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="listView.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ae18c-138">新しい <see cref="T:System.Windows.Controls.ListViewItem" /> コンテナーを作成して返します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-138">Creates and returns a new <see cref="T:System.Windows.Controls.ListViewItem" /> container.</span></span></summary>
        <returns><span data-ttu-id="ae18c-139">新しい <see cref="T:System.Windows.Controls.ListViewItem" /> コントロール。</span><span class="sxs-lookup"><span data-stu-id="ae18c-139">A new <see cref="T:System.Windows.Controls.ListViewItem" /> control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="listView.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ae18c-140">評価するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ae18c-140">The object to evaluate.</span></span></param>
        <summary><span data-ttu-id="ae18c-141">オブジェクトが <see cref="T:System.Windows.Controls.ListViewItem" /> であるかどうかを判別します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-141">Determines whether an object is a <see cref="T:System.Windows.Controls.ListViewItem" />.</span></span></summary>
        <returns><span data-ttu-id="ae18c-142"><paramref name="item" /> が <see cref="T:System.Windows.Controls.ListViewItem" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ae18c-142"><see langword="true" /> if the <paramref name="item" /> is a <see cref="T:System.Windows.Controls.ListViewItem" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="listView.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ae18c-143"><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.ListView" /> を定義します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-143">Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.ListView" /> control.</span></span></summary>
        <returns><span data-ttu-id="ae18c-144"><see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.ListView" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-144">Returns a <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> object for the <see cref="T:System.Windows.Controls.ListView" /> control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listView.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ae18c-145">イベントの引数。</span><span class="sxs-lookup"><span data-stu-id="ae18c-145">The event arguments.</span></span></param>
        <summary><span data-ttu-id="ae18c-146"><see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" /> に応答します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-146">Responds to an <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae18c-147">このメソッドは、<xref:System.Windows.Controls.ListView> コントロールの items コレクションに変更がある場合に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ae18c-147">This method is called when there is a change in the items collection of a <xref:System.Windows.Controls.ListView> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listView.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ae18c-148"><see cref="T:System.Windows.Controls.ListViewItem" /> であるオブジェクト。またはそれに変換可能なオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ae18c-148">An object that is a <see cref="T:System.Windows.Controls.ListViewItem" /> or that can be converted into one.</span></span></param>
        <param name="item"><span data-ttu-id="ae18c-149"><see cref="T:System.Windows.Controls.ListViewItem" /> の作成に使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ae18c-149">The object to use to create the <see cref="T:System.Windows.Controls.ListViewItem" />.</span></span></param>
        <summary><span data-ttu-id="ae18c-150"><see cref="T:System.Windows.Controls.ListViewItem" /> のスタイル、テンプレート、およびバインディングを設定します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-150">Sets the styles, templates, and bindings for a <see cref="T:System.Windows.Controls.ListViewItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae18c-151">このメソッドは、指定された <xref:System.Windows.Controls.ListView.View%2A>に従って、表示する <xref:System.Windows.Controls.ListViewItem> コントロールを準備します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-151">This method prepares a <xref:System.Windows.Controls.ListViewItem> control for display according to the specified <xref:System.Windows.Controls.ListView.View%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ViewBase View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ViewBase View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As ViewBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ViewBase ^ View { System::Windows::Controls::ViewBase ^ get(); void set(System::Windows::Controls::ViewBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Controls.ViewBase with get, set" Usage="System.Windows.Controls.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ViewBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae18c-152"><see cref="T:System.Windows.Controls.ListView" />  コントロール内のデータのスタイル設定および構成を定義するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-152">Gets or sets an object that defines how the data is styled and organized in a <see cref="T:System.Windows.Controls.ListView" /> control.</span></span></summary>
        <value><span data-ttu-id="ae18c-153"><see cref="T:System.Windows.Controls.ViewBase" /> 内の情報の表示方法を指定する <see cref="T:System.Windows.Controls.ListView" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ae18c-153">A <see cref="T:System.Windows.Controls.ViewBase" /> object that specifies how to display information in the <see cref="T:System.Windows.Controls.ListView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae18c-154">.NET Framework 環境には、<xref:System.Windows.Controls.GridView>という構成可能なビューモードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ae18c-154">The .NET Framework environment includes the configurable view mode named <xref:System.Windows.Controls.GridView>.</span></span> <span data-ttu-id="ae18c-155"><xref:System.Windows.Controls.ViewBase>から継承するカスタムビューを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="ae18c-155">You can also create a custom view that inherits from <xref:System.Windows.Controls.ViewBase>.</span></span> <span data-ttu-id="ae18c-156">詳細については、「[方法: ListView のカスタムビューモードを作成](/dotnet/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ae18c-156">For more information, see [How to: Create a Custom View Mode for a ListView](/dotnet/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview).</span></span>  
  
<a name="dependencyPropertyInfo_View"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ae18c-157">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="ae18c-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ae18c-158">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="ae18c-158">Identifier field</span></span>|<xref:System.Windows.Controls.ListView.ViewProperty>|  
|<span data-ttu-id="ae18c-159">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="ae18c-159">Metadata properties set to `true`</span></span>|<span data-ttu-id="ae18c-160">なし</span><span class="sxs-lookup"><span data-stu-id="ae18c-160">None</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ae18c-161">このプロパティのプロパティメタデータの型は、<xref:System.Windows.FrameworkPropertyMetadata>ではなく <xref:System.Windows.PropertyMetadata>です。</span><span class="sxs-lookup"><span data-stu-id="ae18c-161">The type of property metadata for this property is <xref:System.Windows.PropertyMetadata>, not <xref:System.Windows.FrameworkPropertyMetadata>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae18c-162">次の例は、<xref:System.Windows.Controls.ListView> コントロールの <xref:System.Windows.Controls.ListView.View%2A> として <xref:System.Windows.Controls.GridView> オブジェクトを指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ae18c-162">The following example shows how to specify a <xref:System.Windows.Controls.GridView> object as the <xref:System.Windows.Controls.ListView.View%2A> for a <xref:System.Windows.Controls.ListView> control.</span></span>  
  
 [!code-csharp[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#listviewview)]
 [!code-vb[ListViewCode#ListViewView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#listviewview)]
 [!code-xaml[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewview)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
        <altmember cref="T:System.Windows.Controls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="ViewProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ViewProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ViewProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListView.ViewProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ViewProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ViewProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ViewProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ListView.ViewProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae18c-163"><see cref="P:System.Windows.Controls.ListView.View" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="ae18c-163">Identifies the <see cref="P:System.Windows.Controls.ListView.View" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
