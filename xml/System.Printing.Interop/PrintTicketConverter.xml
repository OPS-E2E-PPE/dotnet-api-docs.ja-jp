<Type Name="PrintTicketConverter" FullName="System.Printing.Interop.PrintTicketConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bdce4fdb92afb81a3ee0b533f505757800bdf8d3" /><Meta Name="ms.sourcegitcommit" Value="f11e0152a1dd5d85dbd684f07123f1829eed3f3a" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/17/2020" /><Meta Name="ms.locfileid" Value="76164144" /></Metadata><TypeSignature Language="C#" Value="public sealed class PrintTicketConverter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PrintTicketConverter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Printing.Interop.PrintTicketConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrintTicketConverter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintTicketConverter sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type PrintTicketConverter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>マネージド <see cref="T:System.Printing.PrintTicket" /> オブジェクトとグラフィックス デバイス インターフェイス (GDI) のアンマネージド <see href="/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</see> 構造体を相互に変換します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスのメソッドは、<xref:System.Printing.PrintTicket>を検証しません。 検証するには、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>を使用します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintTicketConverter (string deviceName, int clientPrintSchemaVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string deviceName, int32 clientPrintSchemaVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.Interop.PrintTicketConverter.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deviceName As String, clientPrintSchemaVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintTicketConverter(System::String ^ deviceName, int clientPrintSchemaVersion);" />
      <MemberSignature Language="F#" Value="new System.Printing.Interop.PrintTicketConverter : string * int -&gt; System.Printing.Interop.PrintTicketConverter" Usage="new System.Printing.Interop.PrintTicketConverter (deviceName, clientPrintSchemaVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deviceName" Type="System.String" />
        <Parameter Name="clientPrintSchemaVersion" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceName">新しい <see cref="T:System.Printing.Interop.PrintTicketConverter" /> インスタンスにバインドされるプリンターの名前。</param>
        <param name="clientPrintSchemaVersion"><see cref="T:System.Printing.PrintTicket" /> および DEVMODE 変換で使用する印刷スキーマ バージョン。</param>
        <summary>指定したプリンターの <see cref="T:System.Printing.Interop.PrintTicketConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DEVMODE 構造体の詳細については、「 [devmode](/windows/win32/api/wingdi/ns-wingdi-devmodea)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="deviceName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="clientPrintSchemaVersion" /> が 0 以下です。</exception>
        <exception cref="T:System.Printing.PrintQueueException">コンバーターが <paramref name="deviceName" /> にバインドできませんでした。</exception>
        <related type="ExternalDocumentation" href="/windows/win32/printdocs/printschema">スキーマの印刷</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertDevModeToPrintTicket">
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した <see href="/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</see> 構造体を、マネージド コードの <see cref="T:System.Printing.PrintTicket" /> に変換します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertDevModeToPrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.PrintTicket ConvertDevModeToPrintTicket (byte[] devMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintTicket ConvertDevModeToPrintTicket(unsigned int8[] devMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.Interop.PrintTicketConverter.ConvertDevModeToPrintTicket(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertDevModeToPrintTicket (devMode As Byte()) As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintTicket ^ ConvertDevModeToPrintTicket(cli::array &lt;System::Byte&gt; ^ devMode);" />
      <MemberSignature Language="F#" Value="member this.ConvertDevModeToPrintTicket : byte[] -&gt; System.Printing.PrintTicket" Usage="printTicketConverter.ConvertDevModeToPrintTicket devMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devMode" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="devMode">DEVMODE 構造体を格納する <see cref="T:System.Byte" /> 配列。</param>
        <summary>指定した <see href="/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</see> 構造体を、マネージド コードの <see cref="T:System.Printing.PrintTicket" /> に変換します。</summary>
        <returns>新しいマネージド <see cref="T:System.Printing.PrintTicket" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DEVMODE 構造体の詳細については、「 [devmode](/windows/win32/api/wingdi/ns-wingdi-devmodea)」を参照してください。  
  
 返される <xref:System.Printing.PrintTicket> のスコープは、印刷ジョブ全体です。  
  
 このメソッドでは、<xref:System.Printing.PrintTicket>は検証されません。 検証するには、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>を使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">この <see cref="T:System.Printing.Interop.PrintTicketConverter" /> は、既に破棄されています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="devMode" /> の値が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="devMode" /> のコンテンツが正しい形式ではありません。</exception>
        <exception cref="T:System.Printing.PrintQueueException">変換に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertDevModeToPrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.PrintTicket ConvertDevModeToPrintTicket (byte[] devMode, System.Printing.PrintTicketScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintTicket ConvertDevModeToPrintTicket(unsigned int8[] devMode, valuetype System.Printing.PrintTicketScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.Interop.PrintTicketConverter.ConvertDevModeToPrintTicket(System.Byte[],System.Printing.PrintTicketScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertDevModeToPrintTicket (devMode As Byte(), scope As PrintTicketScope) As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintTicket ^ ConvertDevModeToPrintTicket(cli::array &lt;System::Byte&gt; ^ devMode, System::Printing::PrintTicketScope scope);" />
      <MemberSignature Language="F#" Value="member this.ConvertDevModeToPrintTicket : byte[] * System.Printing.PrintTicketScope -&gt; System.Printing.PrintTicket" Usage="printTicketConverter.ConvertDevModeToPrintTicket (devMode, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devMode" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Printing.PrintTicketScope" />
      </Parameters>
      <Docs>
        <param name="devMode">変換対象の DEVMODE 構造体を格納している <see cref="T:System.Byte" /> バッファー。</param>
        <param name="scope">新しい <see cref="T:System.Printing.PrintTicketScope" /> をページ、ドキュメント、印刷ジョブ全体のいずれに適用するかを指定する <see cref="T:System.Printing.PrintTicket" /> 値。</param>
        <summary>指定した <see href="/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</see> 構造体を、指定したスコープを持つマネージド コードの <see cref="T:System.Printing.PrintTicket" /> に変換します。</summary>
        <returns>新しい <see cref="T:System.Printing.PrintTicket" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、<xref:System.Printing.PrintTicket>は検証されません。 検証するには、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>を使用します。  
  
 DEVMODE 構造体の詳細については、「 [devmode](/windows/win32/api/wingdi/ns-wingdi-devmodea)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">この <see cref="T:System.Printing.Interop.PrintTicketConverter" /> は、既に破棄されています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="devMode" /> の値は null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="devMode" /> のコンテンツが正しい形式ではありません。</exception>
        <exception cref="T:System.Printing.PrintQueueException">変換に失敗しました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="scope" /> が有効な <see cref="T:System.Printing.PrintTicketScope" /> 値ではありません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertPrintTicketToDevMode">
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した <see cref="T:System.Printing.PrintTicket" /> をアンマネージ <see href="/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</see> 構造体に変換します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertPrintTicketToDevMode">
      <MemberSignature Language="C#" Value="public byte[] ConvertPrintTicketToDevMode (System.Printing.PrintTicket printTicket, System.Printing.Interop.BaseDevModeType baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ConvertPrintTicketToDevMode(class System.Printing.PrintTicket printTicket, valuetype System.Printing.Interop.BaseDevModeType baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.Interop.PrintTicketConverter.ConvertPrintTicketToDevMode(System.Printing.PrintTicket,System.Printing.Interop.BaseDevModeType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ConvertPrintTicketToDevMode(System::Printing::PrintTicket ^ printTicket, System::Printing::Interop::BaseDevModeType baseType);" />
      <MemberSignature Language="F#" Value="member this.ConvertPrintTicketToDevMode : System.Printing.PrintTicket * System.Printing.Interop.BaseDevModeType -&gt; byte[]" Usage="printTicketConverter.ConvertPrintTicketToDevMode (printTicket, baseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="baseType" Type="System.Printing.Interop.BaseDevModeType" />
      </Parameters>
      <Docs>
        <param name="printTicket">変換対象の <see cref="T:System.Printing.PrintTicket" />。</param>
        <param name="baseType">基本 DEVMODE として、ユーザーの既定の DEVMODE、プリンターの既定の DEVMODE のいずれを使用するかを識別する値。</param>
        <summary>指定したマネージド <see cref="T:System.Printing.PrintTicket" /> を、<see href="/windows/win32/api/wingdi/ns-wingdi-devmodea"> で識別される </see>DEVMODE<see href="/windows/win32/api/wingdi/ns-wingdi-devmodea"> 構造体に基づくアンマネージド </see>DEVMODE<see cref="T:System.Printing.Interop.BaseDevModeType" /> 構造体に変換します。</summary>
        <returns>新しい <see cref="T:System.Byte" />DEVMODE<see href="/windows/win32/api/wingdi/ns-wingdi-devmodea"> 構造体を含む </see> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Printing.PrintTicket> パラメーターのスコープは、印刷ジョブ全体である必要があります。  
  
 このメソッドでは、<xref:System.Printing.PrintTicket>は検証されません。 検証するには、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>を使用します。  
  
 DEVMODE 構造体の詳細については、「 [devmode](/windows/win32/api/wingdi/ns-wingdi-devmodea)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">この <see cref="T:System.Printing.Interop.PrintTicketConverter" /> は、既に破棄されています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="printTicket" /> の値は null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="printTicket" /> のコンテンツが正しい形式ではありません。</exception>
        <exception cref="T:System.Printing.PrintQueueException">変換に失敗しました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="baseType" /> が有効な <see cref="T:System.Printing.Interop.BaseDevModeType" /> 値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertPrintTicketToDevMode">
      <MemberSignature Language="C#" Value="public byte[] ConvertPrintTicketToDevMode (System.Printing.PrintTicket printTicket, System.Printing.Interop.BaseDevModeType baseType, System.Printing.PrintTicketScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ConvertPrintTicketToDevMode(class System.Printing.PrintTicket printTicket, valuetype System.Printing.Interop.BaseDevModeType baseType, valuetype System.Printing.PrintTicketScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.Interop.PrintTicketConverter.ConvertPrintTicketToDevMode(System.Printing.PrintTicket,System.Printing.Interop.BaseDevModeType,System.Printing.PrintTicketScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ConvertPrintTicketToDevMode(System::Printing::PrintTicket ^ printTicket, System::Printing::Interop::BaseDevModeType baseType, System::Printing::PrintTicketScope scope);" />
      <MemberSignature Language="F#" Value="member this.ConvertPrintTicketToDevMode : System.Printing.PrintTicket * System.Printing.Interop.BaseDevModeType * System.Printing.PrintTicketScope -&gt; byte[]" Usage="printTicketConverter.ConvertPrintTicketToDevMode (printTicket, baseType, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="baseType" Type="System.Printing.Interop.BaseDevModeType" />
        <Parameter Name="scope" Type="System.Printing.PrintTicketScope" />
      </Parameters>
      <Docs>
        <param name="printTicket">変換対象の <see cref="T:System.Printing.PrintTicket" />。</param>
        <param name="baseType">基本 DEVMODE として、ユーザーの既定の DEVMODE、プリンターの既定の DEVMODE のいずれを使用するかを識別する値。</param>
        <param name="scope">ページ、ドキュメント、または印刷ジョブ全体のどのスコープで <see cref="T:System.Printing.PrintTicketScope" /> の変換を実行するかを指定する <see cref="T:System.Printing.PrintTicket" /> 値。</param>
        <summary>指定したスコープを持つ、指定したマネージド コードの <see cref="T:System.Printing.PrintTicket" /> を、<see href="/windows/win32/api/wingdi/ns-wingdi-devmodea"> で識別される </see>DEVMODE<see href="/windows/win32/api/wingdi/ns-wingdi-devmodea"> 構造体に基づくアンマネージド </see>DEVMODE<see cref="T:System.Printing.Interop.BaseDevModeType" /> 構造体に変換します。</summary>
        <returns>新しい <see cref="T:System.Byte" />DEVMODE<see href="/windows/win32/api/wingdi/ns-wingdi-devmodea"> 構造体を表す </see> バッファー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、<xref:System.Printing.PrintTicket>は検証されません。 検証するには、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>を使用します。  
  
 DEVMODE 構造体の詳細については、「 [devmode](/windows/win32/api/wingdi/ns-wingdi-devmodea)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">この <see cref="T:System.Printing.Interop.PrintTicketConverter" /> は、既に破棄されています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="printTicket" /> の値は null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="printTicket" /> のコンテンツが正しい形式ではありません。</exception>
        <exception cref="T:System.Printing.PrintQueueException">変換に失敗しました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="baseType" /> が有効な <see cref="T:System.Printing.Interop.BaseDevModeType" /> 値ではありません。  
  
または 
<paramref name="scope" /> が有効な <see cref="T:System.Printing.PrintTicketScope" /> 値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dispose() cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Printing.Interop.PrintTicketConverter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dispose();" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Dispose : unit -&gt; unit" Usage="printTicketConverter.Dispose " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="printTicketConverter.Dispose " FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Printing.Interop.PrintTicketConverter" /> で使用したリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public static int MaxPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.Interop.PrintTicketConverter.MaxPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxPrintSchemaVersion : int" Usage="System.Printing.Interop.PrintTicketConverter.MaxPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[ でサポートできる](/windows/win32/printdocs/printschema)印刷スキーマ<see cref="T:System.Printing.Interop.PrintTicketConverter" />の最上位のバージョンを取得します。</summary>
        <value><see cref="T:System.Printing.Interop.PrintTicketConverter" /> がサポートできる[印刷スキーマ](/windows/win32/printdocs/printschema)の最大バージョン。</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="/windows/win32/printdocs/printschema">スキーマの印刷</related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.Interop.PrintTicketConverter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Printing.Interop.PrintTicketConverter" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Dispose` を使い終わったら、<xref:System.Printing.Interop.PrintTicketConverter>を呼び出します。 `Dispose`メソッドによって、<xref:System.Printing.Interop.PrintTicketConverter> は使用不可の状態になります。 `Dispose`呼び出し後は、<xref:System.Printing.Interop.PrintTicketConverter>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Printing.Interop.PrintTicketConverter> へのすべての参照を解放する必要があります。  
  
 詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。  
  
> [!NOTE]
>  `Dispose`への最後の参照を解放する前に、必ず<xref:System.Printing.Interop.PrintTicketConverter>を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.Printing.Interop.PrintTicketConverter> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
