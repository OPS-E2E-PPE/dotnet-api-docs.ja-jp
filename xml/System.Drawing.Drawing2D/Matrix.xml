<Type Name="Matrix" FullName="System.Drawing.Drawing2D.Matrix">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62fc36a695674a83b4ce7dc5b9400626a94b6377" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75136132" /></Metadata><TypeSignature Language="C#" Value="public sealed class Matrix : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matrix extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matrix&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matrix sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Matrix = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="21537-101">ジオメトリック変換を表現する 3 × 3 のアフィン行列をカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="21537-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span></span> <span data-ttu-id="21537-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="21537-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-103">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]、<xref:System.Drawing.Drawing2D.Matrix> オブジェクトにアフィン変換を格納できます。</span><span class="sxs-lookup"><span data-stu-id="21537-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] you can store an affine transformation in a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="21537-104">アフィン変換を表すマトリックスの3番目の列は常に (0, 0, 1) であるため、<xref:System.Drawing.Drawing2D.Matrix> オブジェクトを構築するときに、最初の2つの列のうち6つの数値のみを指定します。</span><span class="sxs-lookup"><span data-stu-id="21537-104">Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="21537-105">ステートメント `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` 次の図に示すマトリックスを構築します。</span><span class="sxs-lookup"><span data-stu-id="21537-105">The statement `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` constructs the matrix shown in the following figure.</span></span>  
  
 <span data-ttu-id="21537-106">![変換](~/add/media/aboutgdip05-art10.gif "変換")</span><span class="sxs-lookup"><span data-stu-id="21537-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span></span>  
  
## <a name="composite-transformations"></a><span data-ttu-id="21537-107">複合変換</span><span class="sxs-lookup"><span data-stu-id="21537-107">Composite Transformations</span></span>  
 <span data-ttu-id="21537-108">複合変換は、変換のシーケンスであり、その後にもう1つ続きます。</span><span class="sxs-lookup"><span data-stu-id="21537-108">A composite transformation is a sequence of transformations, one followed by the other.</span></span> <span data-ttu-id="21537-109">次の一覧にあるマトリックスと変換について考えてみましょう。</span><span class="sxs-lookup"><span data-stu-id="21537-109">Consider the matrices and transformations in the following list:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21537-110">マトリックス A</span><span class="sxs-lookup"><span data-stu-id="21537-110">Matrix A</span></span>|<span data-ttu-id="21537-111">90°回転</span><span class="sxs-lookup"><span data-stu-id="21537-111">Rotate 90 degrees</span></span>|  
|<span data-ttu-id="21537-112">マトリックス B</span><span class="sxs-lookup"><span data-stu-id="21537-112">Matrix B</span></span>|<span data-ttu-id="21537-113">X 方向に2の係数でスケールする</span><span class="sxs-lookup"><span data-stu-id="21537-113">Scale by a factor of 2 in the x direction</span></span>|  
|<span data-ttu-id="21537-114">マトリックス C</span><span class="sxs-lookup"><span data-stu-id="21537-114">Matrix C</span></span>|<span data-ttu-id="21537-115">Y 方向に3単位を平行移動する</span><span class="sxs-lookup"><span data-stu-id="21537-115">Translate 3 units in the y direction</span></span>|  
  
 <span data-ttu-id="21537-116">マトリックス [2 1 1] で表される point (2, 1) から開始し、A に乗算した場合、B、C のように、ポイント (2, 1) は、ここに示した順序で3つの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-116">If we start with the point (2, 1) - represented by the matrix [2 1 1] - and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</span></span>  
  
 <span data-ttu-id="21537-117">[2 1 1]ABC = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="21537-117">[2 1 1]ABC = [-2 5 1]</span></span>  
  
 <span data-ttu-id="21537-118">複合変換の3つの部分を3つの独立した行列に格納するのではなく、A、B、および C を組み合わせて、複合変換全体を格納する1つの3×3行列を取得することができます。</span><span class="sxs-lookup"><span data-stu-id="21537-118">Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</span></span> <span data-ttu-id="21537-119">ABC = D とします。次に、D を乗算したポイントは、A、B、C の順に乗算した結果を示します。</span><span class="sxs-lookup"><span data-stu-id="21537-119">Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</span></span>  
  
 <span data-ttu-id="21537-120">[2 1 1]D = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="21537-120">[2 1 1]D = [-2 5 1]</span></span>  
  
 <span data-ttu-id="21537-121">次の図は、A、B、C、D というマトリックスを示しています。</span><span class="sxs-lookup"><span data-stu-id="21537-121">The following illustration shows the matrices A, B, C, and D.</span></span>  
  
 <span data-ttu-id="21537-122">![変換](~/add/media/aboutgdip05-art12.gif "変換")</span><span class="sxs-lookup"><span data-stu-id="21537-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span></span>  
  
 <span data-ttu-id="21537-123">複合変換の行列は、個々の変換行列を乗算することで形成できます。つまり、アフィン変換の任意のシーケンスを1つの <xref:System.Drawing.Drawing2D.Matrix> オブジェクトに格納できます。</span><span class="sxs-lookup"><span data-stu-id="21537-123">The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <xref:System.Drawing.Drawing2D.Matrix> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="21537-124">複合変換の順序は重要です。</span><span class="sxs-lookup"><span data-stu-id="21537-124">The order of a composite transformation is important.</span></span> <span data-ttu-id="21537-125">一般に、回転、スケーリング、および平行移動はスケールと同じではなく、回転してから平行移動します。</span><span class="sxs-lookup"><span data-stu-id="21537-125">In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</span></span> <span data-ttu-id="21537-126">同様に、行列乗算の順序も重要です。</span><span class="sxs-lookup"><span data-stu-id="21537-126">Similarly, the order of matrix multiplication is important.</span></span> <span data-ttu-id="21537-127">一般に、ABC は... と同じではありません。</span><span class="sxs-lookup"><span data-stu-id="21537-127">In general, ABC is not the same as BAC.</span></span>  
  
 <span data-ttu-id="21537-128"><xref:System.Drawing.Drawing2D.Matrix> クラスには、複合変換を構築するためのいくつかのメソッドが用意されています。 <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>、<xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>、<xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>、<xref:System.Drawing.Drawing2D.Matrix.Scale%2A>、<xref:System.Drawing.Drawing2D.Matrix.Shear%2A>、および <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>です。</span><span class="sxs-lookup"><span data-stu-id="21537-128">The <xref:System.Drawing.Drawing2D.Matrix> class provides several methods for building a composite transformation: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, and <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span></span> <span data-ttu-id="21537-129">次の例では、最初に30°を回転させてから y 方向の係数2でスケールし、x 方向に5つの単位を平行移動する複合変換の行列を作成します。</span><span class="sxs-lookup"><span data-stu-id="21537-129">The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</span></span>  
  
 [!code-csharp[System.Drawing.CoordinateSystems#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.CoordinateSystems#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9fef7451-bddf-4c68-9350-400d1f1f25a3"><span data-ttu-id="21537-130">座標系と変換</span><span class="sxs-lookup"><span data-stu-id="21537-130">Coordinate Systems and Transformations</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-131"><see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="21537-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21537-132"><see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを単位行列として初期化します。</span><span class="sxs-lookup"><span data-stu-id="21537-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Point[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, plgpts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::Rectangle rect, cli::array &lt;System::Drawing::Point&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.Rectangle * System.Drawing.Point[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="plgpts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="21537-133">変換する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="21537-133">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="21537-134">四角形の左上、右上、左下の各隅の変換先となる平行四辺形の点を表す 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="21537-134">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="21537-135">平行四辺形の右下隅は、最初の 3 点から導き出されます。</span><span class="sxs-lookup"><span data-stu-id="21537-135">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="21537-136"><see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを初期化し、指定した四角形および点の配列で定義されたジオメトリック変換に設定します。</span><span class="sxs-lookup"><span data-stu-id="21537-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-137">このメソッドは、`rect` パラメーターで指定された四角形を、`plgpts` パラメーター内の3つの点によって定義される平行四辺形にマップするジオメトリック変換を表すように、新しい行列を初期化します。</span><span class="sxs-lookup"><span data-stu-id="21537-137">This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="21537-138">四角形の左上隅が `plgpts` 配列の最初の点にマップされ、右上隅が2番目の点にマップされ、左下隅が3番目のポイントにマップされます。</span><span class="sxs-lookup"><span data-stu-id="21537-138">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="21537-139">平行四辺形の右下点は、最初の3つによって暗黙的に指定されます。</span><span class="sxs-lookup"><span data-stu-id="21537-139">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.PointF[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, plgpts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::RectangleF rect, cli::array &lt;System::Drawing::PointF&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.RectangleF * System.Drawing.PointF[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="plgpts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="21537-140">変換する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="21537-140">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="21537-141">四角形の左上、右上、左下の各隅の変換先となる平行四辺形の点を表す 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="21537-141">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="21537-142">平行四辺形の右下隅は、最初の 3 点から導き出されます。</span><span class="sxs-lookup"><span data-stu-id="21537-142">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="21537-143"><see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを初期化し、指定した四角形および点の配列で定義されたジオメトリック変換に設定します。</span><span class="sxs-lookup"><span data-stu-id="21537-143">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-144">このメソッドは、新しい <xref:System.Drawing.Drawing2D.Matrix> を初期化します。これは、`rect` パラメーターで指定された四角形を、`plgpts` パラメーター内の3つの点によって定義される平行四辺形にマップするジオメトリック変換を表します。</span><span class="sxs-lookup"><span data-stu-id="21537-144">This method initializes the new <xref:System.Drawing.Drawing2D.Matrix> such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="21537-145">四角形の左上隅が `plgpts` 配列の最初の点にマップされ、右上隅が2番目の点にマップされ、左下隅が3番目のポイントにマップされます。</span><span class="sxs-lookup"><span data-stu-id="21537-145">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="21537-146">平行四辺形の右下点は、最初の3つによって暗黙的に指定されます。</span><span class="sxs-lookup"><span data-stu-id="21537-146">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 m11, float32 m12, float32 m21, float32 m22, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Single, m12 As Single, m21 As Single, m22 As Single, dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : single * single * single * single * single * single -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (m11, m12, m21, m22, dx, dy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Single" />
        <Parameter Name="m12" Type="System.Single" />
        <Parameter Name="m21" Type="System.Single" />
        <Parameter Name="m22" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="21537-147">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の最初の行の最初の列の値。</span><span class="sxs-lookup"><span data-stu-id="21537-147">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m12"><span data-ttu-id="21537-148">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の最初の行の 2 番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="21537-148">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m21"><span data-ttu-id="21537-149">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の 2 番目の行の最初の列の値。</span><span class="sxs-lookup"><span data-stu-id="21537-149">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m22"><span data-ttu-id="21537-150">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の 2 番目の行の 2 番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="21537-150">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dx"><span data-ttu-id="21537-151">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の 3 番目の行の最初の列の値。</span><span class="sxs-lookup"><span data-stu-id="21537-151">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dy"><span data-ttu-id="21537-152">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の 3 番目の行の 2 番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="21537-152">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="21537-153">指定した要素を使用して、<see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="21537-153">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.Matrix Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::Matrix ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Drawing.Drawing2D.Matrix" Usage="matrix.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21537-154">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の同一コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="21537-154">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="21537-155">このメソッドが作成する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="21537-155">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="matrix.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21537-156">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="21537-156">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-157">`Dispose` を呼び出すと、この <xref:System.Drawing.Drawing2D.Matrix> オブジェクトで使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="21537-157">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.Matrix> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public float[] Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Elements" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Elements { cli::array &lt;float&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : single[]" Usage="System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21537-158">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の要素を表す浮動小数点値の配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="21537-158">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="21537-159">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の要素を表す浮動小数点値の配列。</span><span class="sxs-lookup"><span data-stu-id="21537-159">An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-160"><xref:System.Drawing.Drawing2D.Matrix> の要素 m11、m12、m21、m22、dx、および dy は、その順序で配列内の値によって表されます。</span><span class="sxs-lookup"><span data-stu-id="21537-160">The elements m11, m12, m21, m22, dx, and dy of the <xref:System.Drawing.Drawing2D.Matrix> are represented by the values in the array in that order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="21537-161">テストするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="21537-161">The object to test.</span></span></param>
        <summary><span data-ttu-id="21537-162">指定されたオブジェクトが <see cref="T:System.Drawing.Drawing2D.Matrix" /> であるかどうか、またこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> と同一であるかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="21537-162">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="21537-163">このメソッドは、<see langword="true" /> がこの <paramref name="obj" /> と同じオブジェクトで、指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> と同一である場合は <see cref="T:System.Drawing.Drawing2D.Matrix" /> を返します。それ以外の場合は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="21537-163">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Matrix ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="matrix.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21537-164">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="21537-164">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21537-165">ハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="21537-165">Returns a hash code.</span></span></summary>
        <returns><span data-ttu-id="21537-166">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="21537-166">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21537-167">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が反転できる場合に反転します。</span><span class="sxs-lookup"><span data-stu-id="21537-167">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-168">次のコード例では、マトリックスを作成して反転します。</span><span class="sxs-lookup"><span data-stu-id="21537-168">The following code example creates a matrix and inverts it:</span></span>  
  
```csharp  
Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  
 myMatrix.Invert();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21537-169">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が単位行列かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="21537-169">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span></span></summary>
        <value><span data-ttu-id="21537-170"><see langword="true" /> が単位行列の場合、このプロパティは <see cref="T:System.Drawing.Drawing2D.Matrix" /> になります。それ以外の場合は <see langword="false" /> になります。</span><span class="sxs-lookup"><span data-stu-id="21537-170">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvertible">
      <MemberSignature Language="C#" Value="public bool IsInvertible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvertible" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInvertible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInvertible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvertible : bool" Usage="System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21537-171">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が反転できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="21537-171">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span></span></summary>
        <value><span data-ttu-id="21537-172"><see langword="true" /> が反転できる場合、このプロパティは <see cref="T:System.Drawing.Drawing2D.Matrix" /> になります。それ以外の場合は <see langword="false" /> になります。</span><span class="sxs-lookup"><span data-stu-id="21537-172">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-173">指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> を前に付加することで、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> と指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> を乗算します。</span><span class="sxs-lookup"><span data-stu-id="21537-173">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="matrix.Multiply matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="21537-174">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> と乗算する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="21537-174">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <summary><span data-ttu-id="21537-175">指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> を前に付加することで、この <paramref name="matrix" /> と <see cref="T:System.Drawing.Drawing2D.Matrix" /> パラメーターで指定した行列を乗算します。</span><span class="sxs-lookup"><span data-stu-id="21537-175">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-176">例については、「<xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21537-176">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Multiply (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="21537-177">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> と乗算する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="21537-177">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <param name="order"><span data-ttu-id="21537-178">乗算の順序を表す <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</span><span class="sxs-lookup"><span data-stu-id="21537-178">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span></span></param>
        <summary><span data-ttu-id="21537-179">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> と <paramref name="matrix" /> パラメーターで指定した行列を、<paramref name="order" /> パラメーターで指定した順序で乗算します。</span><span class="sxs-lookup"><span data-stu-id="21537-179">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-180">指定された順序が <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>場合、この <xref:System.Drawing.Drawing2D.Matrix> は、指定された行列を前に付加した順序で乗算されます。</span><span class="sxs-lookup"><span data-stu-id="21537-180">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in a prepended order.</span></span> <span data-ttu-id="21537-181">指定された順序が <xref:System.Drawing.Drawing2D.MatrixOrder.Append>場合、この <xref:System.Drawing.Drawing2D.Matrix> は、指定された行列を追加した順序で乗算されます。</span><span class="sxs-lookup"><span data-stu-id="21537-181">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in an appended order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21537-182">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-182">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-183">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-183">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="21537-184">3つの行列を作成します。</span><span class="sxs-lookup"><span data-stu-id="21537-184">Creates three matrices.</span></span>  
  
-   <span data-ttu-id="21537-185">マトリックス1の内容を画面に表示します。</span><span class="sxs-lookup"><span data-stu-id="21537-185">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="21537-186">マトリックス1をマトリックス2で乗算し、結果をマトリックス1に格納します。</span><span class="sxs-lookup"><span data-stu-id="21537-186">Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="21537-187">マトリックス1の内容を画面に表示します。</span><span class="sxs-lookup"><span data-stu-id="21537-187">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="21537-188">マトリックス1に格納されている結果を行列3で乗算し、結果をマトリックス1に保存します。</span><span class="sxs-lookup"><span data-stu-id="21537-188">Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="21537-189">マトリックス1の内容を画面に表示します。</span><span class="sxs-lookup"><span data-stu-id="21537-189">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="21537-190">マトリックス1の変換 (青い四角形) を適用する前に、画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-190">Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="21537-191">四角形に変換を適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-191">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="21537-192">前の四角形と同じ座標を使用して、変換された四角形を画面 (赤い四角形) に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-192">Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="21537-193">赤い四角形が水平方向の2倍の角度で拡大縮小された後、90度回転し、y 方向の x 方向と50ポイントで250ポイントが移動 (変換) されたことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="21537-193">Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public float OffsetX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21537-194">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の x 方向の平行移動値 (dx 値、すなわち 3 番目の行の最初の列の要素) を取得します。</span><span class="sxs-lookup"><span data-stu-id="21537-194">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="21537-195">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の x 方向の平行移動値。</span><span class="sxs-lookup"><span data-stu-id="21537-195">The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public float OffsetY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21537-196">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の y 方向の平行移動値 (dy 値、すなわち 3 番目の行の 2 番目の列の要素) を取得します。</span><span class="sxs-lookup"><span data-stu-id="21537-196">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="21537-197"><see cref="T:System.Drawing.Drawing2D.Matrix" /> の y 方向の平行移動値。</span><span class="sxs-lookup"><span data-stu-id="21537-197">The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="matrix.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21537-198">単位行列の要素を持つように対象の <see cref="T:System.Drawing.Drawing2D.Matrix" /> をリセットします。</span><span class="sxs-lookup"><span data-stu-id="21537-198">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-199">Id 行列の対角線の主な要素は1です。</span><span class="sxs-lookup"><span data-stu-id="21537-199">The elements on the main diagonal of the identity matrix are 1.</span></span> <span data-ttu-id="21537-200">Id 行列の他のすべての要素は0です。</span><span class="sxs-lookup"><span data-stu-id="21537-200">All other elements of the identity matrix are 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21537-201">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-201">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-202">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-202">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="21537-203">拡大縮小行列を作成します。</span><span class="sxs-lookup"><span data-stu-id="21537-203">Creates a scaling matrix.</span></span>  
  
-   <span data-ttu-id="21537-204">マトリックス要素を画面に表示します。</span><span class="sxs-lookup"><span data-stu-id="21537-204">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="21537-205">マトリックスを id にリセットします。</span><span class="sxs-lookup"><span data-stu-id="21537-205">Resets the matrix to identity.</span></span>  
  
-   <span data-ttu-id="21537-206">画面に要素を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="21537-206">Lists the elements to the screen.</span></span>  
  
-   <span data-ttu-id="21537-207">Y 軸の x 軸と40ポイントで、行列を50ポイントで平行移動します。</span><span class="sxs-lookup"><span data-stu-id="21537-207">Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</span></span>  
  
-   <span data-ttu-id="21537-208">変換された行列の要素を画面に表示します。</span><span class="sxs-lookup"><span data-stu-id="21537-208">Lists the elements of the translated matrix to the screen.</span></span>  
  
-   <span data-ttu-id="21537-209">マトリックス変換 (青い四角形) を適用する前に、画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-209">Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="21537-210">四角形に変換を適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-210">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="21537-211">前の四角形と同じ座標を使用して、変換された四角形を画面 (赤い四角形) に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-211">Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="21537-212">赤い四角形は、(リセットによって) スケーリングされていないが、x 軸と y 軸で変換されたことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="21537-212">Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rotate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-213">原点を中心とする指定した角度の時計回りの回転を、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-213">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="21537-214">回転角度。</span><span class="sxs-lookup"><span data-stu-id="21537-214">The angle of the rotation, in degrees.</span></span></param>
        <summary><span data-ttu-id="21537-215">原点を中心とする指定した角度の時計回りの回転を、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="21537-215">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-216">例については、「<xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21537-216">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Rotate (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="21537-217">回転の角度 (エクステント)。</span><span class="sxs-lookup"><span data-stu-id="21537-217">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="order"><span data-ttu-id="21537-218">この <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> に回転を適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="21537-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="21537-219"><paramref name="angle" /> パラメーターで指定した量の、原点 (x 座標と y 座標が 0) を中心とする時計回りの回転を、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-219">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-220">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-221">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="21537-222">回転変換 (青い四角形) を適用する前に、画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-222">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="21537-223">マトリックスを作成し、それを45度回転させます。</span><span class="sxs-lookup"><span data-stu-id="21537-223">Creates a matrix and rotates it 45 degrees.</span></span>  
  
-   <span data-ttu-id="21537-224">この行列変換を四角形に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-224">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="21537-225">変換された四角形を画面 (赤い四角形) に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-225">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="21537-226">赤色の四角形が0の画面座標の周りに回転していることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="21537-226">Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateAt">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-227">回転を前に付加することで、指定した点を中心とする時計回りの回転を、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-227">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF -&gt; unit" Usage="matrix.RotateAt (angle, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="21537-228">回転の角度 (エクステント)。</span><span class="sxs-lookup"><span data-stu-id="21537-228">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="21537-229">回転の中心を表す <see cref="T:System.Drawing.PointF" />。</span><span class="sxs-lookup"><span data-stu-id="21537-229">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <summary><span data-ttu-id="21537-230">回転を前に付加することで、<see cref="T:System.Drawing.Drawing2D.Matrix" /> パラメーターで指定した点を中心とする時計回りの回転を、この <paramref name="point" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-230">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-231">次のコード例は、<xref:System.Drawing.Drawing2D.Matrix> と <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> メソッドを使用して文字列をローテーションする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="21537-231">The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string.</span></span> <span data-ttu-id="21537-232">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="21537-232">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="21537-233">フォームを作成し、次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="21537-233">Create a form and paste the following code into it.</span></span> <span data-ttu-id="21537-234">フォームの <xref:System.Windows.Forms.Control.Paint> イベントハンドラーで `DrawVerticalStringFromBottomUp` メソッドを呼び出し、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="21537-234">Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.MiscExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.MiscExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.RotateAt (angle, point, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="21537-235">回転角度。</span><span class="sxs-lookup"><span data-stu-id="21537-235">The angle of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="21537-236">回転の中心を表す <see cref="T:System.Drawing.PointF" />。</span><span class="sxs-lookup"><span data-stu-id="21537-236">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <param name="order"><span data-ttu-id="21537-237">回転を適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</span><span class="sxs-lookup"><span data-stu-id="21537-237">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span></span></param>
        <summary><span data-ttu-id="21537-238">指定した点を中心とする時計回りの回転を、指定した順序でこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-238">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-239">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-239">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-240">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-240">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="21537-241">回転変換 (青い四角形) を適用する前に、画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-241">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="21537-242">マトリックスを作成し、指定した点を中心に45度回転します。</span><span class="sxs-lookup"><span data-stu-id="21537-242">Creates a matrix and rotates it 45 degrees around a specified point.</span></span>  
  
-   <span data-ttu-id="21537-243">この行列変換を四角形に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-243">Applies this matrix transform is to the rectangle.</span></span>  
  
-   <span data-ttu-id="21537-244">変換された四角形を画面 (赤い四角形) に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-244">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="21537-245">赤い四角形が四角形の左上隅 (<xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> メソッドを指定した回転ポイント) を中心に回転されていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="21537-245">Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> method).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-246">スケール ベクターを前に付加することで、指定したスケール ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-246">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="21537-247">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を x 軸方向にスケールする値。</span><span class="sxs-lookup"><span data-stu-id="21537-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="21537-248">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を y 軸方向にスケールする値。</span><span class="sxs-lookup"><span data-stu-id="21537-248">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="21537-249">スケール ベクターを前に付加することで、指定したスケール ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-249">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-250">例については、「<xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21537-250">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Scale (scaleX, scaleY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="21537-251">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を x 軸方向にスケールする値。</span><span class="sxs-lookup"><span data-stu-id="21537-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="21537-252">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を y 軸方向にスケールする値。</span><span class="sxs-lookup"><span data-stu-id="21537-252">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="21537-253">この <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> にスケール ベクターを適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="21537-253">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="21537-254">指定した順序を使用して、指定したスケール ベクター (<paramref name="scaleX" /> と <paramref name="scaleY" />) をこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-254">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-255">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-255">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-256">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-256">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="21537-257">拡大縮小変換 (青い四角形) を適用する前に、画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-257">Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="21537-258">マトリックスを作成し、x 軸と y 軸の2でスケールします。</span><span class="sxs-lookup"><span data-stu-id="21537-258">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="21537-259">この行列変換を四角形に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-259">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="21537-260">変換された四角形を画面 (赤い四角形) に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-260">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="21537-261">赤い四角形が x 軸では3倍、y 軸では2ずつ拡大縮小されています。これには、四角形の左上隅 (四角形の開始点) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="21537-261">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Shear">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-262">傾斜ベクターを前に付加することで、指定した傾斜ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-262">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single -&gt; unit" Usage="matrix.Shear (shearX, shearY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="21537-263">水平方向の傾斜係数。</span><span class="sxs-lookup"><span data-stu-id="21537-263">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="21537-264">垂直方向の傾斜係数。</span><span class="sxs-lookup"><span data-stu-id="21537-264">The vertical shear factor.</span></span></param>
        <summary><span data-ttu-id="21537-265">傾斜変換を前に付加することで、指定した傾斜ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-265">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-266">このメソッドで適用される変換は、パラメーターのいずれかが0の場合にのみ、純粋な傾斜です。</span><span class="sxs-lookup"><span data-stu-id="21537-266">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="21537-267">原点の四角形に適用されます。 `shearY` 係数が0の場合、変換は、四角形の高さの `shearX` によって下端を水平方向に移動します。</span><span class="sxs-lookup"><span data-stu-id="21537-267">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="21537-268">`shearX` 因子が0の場合、四角形の幅の `shearY` によって右端が垂直方向に移動します。</span><span class="sxs-lookup"><span data-stu-id="21537-268">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="21537-269">両方のパラメーターが0以外の場合は、結果を予測するのが難しいため、注意が必要です。</span><span class="sxs-lookup"><span data-stu-id="21537-269">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="21537-270">たとえば、両方の要素が1の場合、変換は単数形 (したがって noninvertible) であるため、平面全体が1行になります。</span><span class="sxs-lookup"><span data-stu-id="21537-270">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21537-271">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-271">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-272">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-272">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="21537-273">拡大縮小変換を適用する前に、緑色のペンを使用して画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-273">Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</span></span>  
  
-   <span data-ttu-id="21537-274"><xref:System.Drawing.Drawing2D.Matrix> を作成し、それを使用して <xref:System.Drawing.Graphics>のワールド座標変換を設定します。</span><span class="sxs-lookup"><span data-stu-id="21537-274">Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="21537-275">赤いペンを使用して別の四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-275">Draws another rectangle using a red pen.</span></span>  
  
-   <span data-ttu-id="21537-276">青いペンを使用して楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-276">Draws an ellipse using a blue pen.</span></span>  
  
 <span data-ttu-id="21537-277">結果は、緑の四角形、赤の平行四辺形、および変換された青い楕円です。</span><span class="sxs-lookup"><span data-stu-id="21537-277">The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</span></span> <span data-ttu-id="21537-278">緑の四角形 (変換を設定する前に描画される) は、<xref:System.Drawing.Graphics.DrawRectangle%2A> 呼び出しで指定された座標を直接使用することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="21537-278">Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call.</span></span> <span data-ttu-id="21537-279">他の2つの図形は、描画前に変換されます。</span><span class="sxs-lookup"><span data-stu-id="21537-279">The other two figures are transformed prior to drawing.</span></span> <span data-ttu-id="21537-280">四角形は平行四辺形 (赤) に変換され、変換された平行四辺形に適合するように楕円 (青) が変換されます。</span><span class="sxs-lookup"><span data-stu-id="21537-280">The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</span></span> <span data-ttu-id="21537-281">四角形の下部は、四角形の高さの2倍の係数によって x 軸に移動 (傾斜) されることに注意してください。これにより、平行四辺形が形成されます。</span><span class="sxs-lookup"><span data-stu-id="21537-281">Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Shear (shearX, shearY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="21537-282">水平方向の傾斜係数。</span><span class="sxs-lookup"><span data-stu-id="21537-282">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="21537-283">垂直方向の傾斜係数。</span><span class="sxs-lookup"><span data-stu-id="21537-283">The vertical shear factor.</span></span></param>
        <param name="order"><span data-ttu-id="21537-284">傾斜を適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</span><span class="sxs-lookup"><span data-stu-id="21537-284">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span></span></param>
        <summary><span data-ttu-id="21537-285">指定した順序で、指定した傾斜ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-285">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21537-286">このメソッドで適用される変換は、パラメーターのいずれかが0の場合にのみ、純粋な傾斜です。</span><span class="sxs-lookup"><span data-stu-id="21537-286">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="21537-287">原点の四角形に適用されます。 `shearY` 係数が0の場合、変換は、四角形の高さの `shearX` によって下端を水平方向に移動します。</span><span class="sxs-lookup"><span data-stu-id="21537-287">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="21537-288">`shearX` 因子が0の場合、四角形の幅の `shearY` によって右端が垂直方向に移動します。</span><span class="sxs-lookup"><span data-stu-id="21537-288">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="21537-289">両方のパラメーターが0以外の場合は、結果を予測するのが難しいため、注意が必要です。</span><span class="sxs-lookup"><span data-stu-id="21537-289">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="21537-290">たとえば、両方の要素が1の場合、変換は単数形 (したがって noninvertible) であるため、平面全体が1行になります。</span><span class="sxs-lookup"><span data-stu-id="21537-290">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21537-291">例については、「<xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21537-291">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-292">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が表すジオメトリック変換を、点の配列に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-292">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="21537-293">変換する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="21537-293">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="21537-294">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が表すジオメトリック変換を、指定した点の配列に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-294">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-295">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-295">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-296">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-296">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="21537-297">四角形を形成する点の配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="21537-297">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="21537-298">スケール変換 (青い四角形) を適用する前に、この点の配列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-298">Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="21537-299">マトリックスを作成し、x 軸と y 軸の2でスケールします。</span><span class="sxs-lookup"><span data-stu-id="21537-299">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="21537-300">この行列変換をポイントの配列に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-300">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="21537-301">変換された配列を画面 (赤い四角形) に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-301">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="21537-302">赤い四角形が x 軸では3倍、y 軸では2ずつ拡大縮小されています。これには、四角形の左上隅 (四角形の開始点) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="21537-302">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="21537-303">変換する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="21537-303">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="21537-304">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が表すジオメトリック変換を、指定した点の配列に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-304">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-305">例については、「<xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21537-305">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformVectors">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-306">配列内の各ベクターを行列で乗算します。</span><span class="sxs-lookup"><span data-stu-id="21537-306">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="21537-307">この行列の平行移動要素 (3 番目の行) は無視されます。</span><span class="sxs-lookup"><span data-stu-id="21537-307">The translation elements of this matrix (third row) are ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="21537-308">変換する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="21537-308">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="21537-309">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> のスケールおよび回転の成分だけを、指定した点の配列に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-309">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-310">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-310">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-311">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-311">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="21537-312">四角形を形成する点の配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="21537-312">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="21537-313">拡大縮小変換 (青い四角形) を適用する前に、この点の配列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-313">Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="21537-314">マトリックスを作成し、x 軸と y 軸の2でスケールし、両方の軸で100で平行移動します。</span><span class="sxs-lookup"><span data-stu-id="21537-314">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="21537-315">マトリックス要素を画面に表示します。</span><span class="sxs-lookup"><span data-stu-id="21537-315">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="21537-316">この行列変換をポイントの配列に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-316">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="21537-317">変換された配列を画面 (赤い四角形) に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-317">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="21537-318">赤い四角形が x 軸では3倍、y 軸では2ずつ拡大縮小されていることに注意してください (四角形の開始点) が、平行移動ベクター (マトリックスの最後の2つの要素) は無視されますが、</span><span class="sxs-lookup"><span data-stu-id="21537-318">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="21537-319">変換する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="21537-319">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="21537-320">配列内の各ベクターを行列で乗算します。</span><span class="sxs-lookup"><span data-stu-id="21537-320">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="21537-321">この行列の平行移動要素 (3 番目の行) は無視されます。</span><span class="sxs-lookup"><span data-stu-id="21537-321">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-322">例については、「<xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21537-322">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21537-323">平行移動ベクターを前に付加することで、指定した平行移動ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-323">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="21537-324">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を平行移動する x の値。</span><span class="sxs-lookup"><span data-stu-id="21537-324">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="21537-325">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を平行移動する y の値。</span><span class="sxs-lookup"><span data-stu-id="21537-325">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="21537-326">平行移動ベクターを前に付加することで、指定した平行移動ベクター (<paramref name="offsetX" /> と <paramref name="offsetY" />) をこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-326">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-327">例については、「<xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="21537-327">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Translate (offsetX, offsetY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="21537-328">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を平行移動する x の値。</span><span class="sxs-lookup"><span data-stu-id="21537-328">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="21537-329">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を平行移動する y の値。</span><span class="sxs-lookup"><span data-stu-id="21537-329">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="order"><span data-ttu-id="21537-330">この <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> に平行移動を適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="21537-330">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="21537-331">指定した順序で、指定した平行移動ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-331">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21537-332">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs>`e`、<xref:System.Windows.Forms.Control.Paint> イベントオブジェクトを必要とします。</span><span class="sxs-lookup"><span data-stu-id="21537-332">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="21537-333">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="21537-333">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="21537-334">平行移動変換 (青い四角形) を適用する前に、画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-334">Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="21537-335">マトリックスを作成し、両方の軸で100で平行移動します。</span><span class="sxs-lookup"><span data-stu-id="21537-335">Creates a matrix and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="21537-336">このマトリックス変換を四角形に適用します。</span><span class="sxs-lookup"><span data-stu-id="21537-336">Applies this matrix transform to the rectangle,</span></span>  
  
-   <span data-ttu-id="21537-337">変換された四角形を画面 (赤い四角形) に描画します。</span><span class="sxs-lookup"><span data-stu-id="21537-337">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="21537-338">赤色の四角形の先頭が、青い三角形の先頭からの両方の軸の100点にあることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="21537-338">Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTransformPoints">
      <MemberSignature Language="C#" Value="public void VectorTransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VectorTransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub VectorTransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VectorTransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.VectorTransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.VectorTransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="21537-339">変換する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="21537-339">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="21537-340">配列内の各ベクターを行列で乗算します。</span><span class="sxs-lookup"><span data-stu-id="21537-340">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="21537-341">この行列の平行移動要素 (3 番目の行) は無視されます。</span><span class="sxs-lookup"><span data-stu-id="21537-341">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
