<Type Name="GraphicsPathIterator" FullName="System.Drawing.Drawing2D.GraphicsPathIterator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd4d4de99d3d7a2034e37fa2897d597dda9738fe" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75136249" /></Metadata><TypeSignature Language="C#" Value="public sealed class GraphicsPathIterator : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPathIterator extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPathIterator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPathIterator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPathIterator sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPathIterator = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a934c-101"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内のサブパスを反復処理し、各サブパスに含まれている図形の種類を調べることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="a934c-101">Provides the ability to iterate through subpaths in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> and test the types of shapes contained in each subpath.</span></span> <span data-ttu-id="a934c-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="a934c-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPathIterator (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPathIterator(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPathIterator : System.Drawing.Drawing2D.GraphicsPath -&gt; System.Drawing.Drawing2D.GraphicsPathIterator" Usage="new System.Drawing.Drawing2D.GraphicsPathIterator path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a934c-103">このヘルパー クラスを初期化する対象となる <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a934c-103">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object for which this helper class is to be initialized.</span></span></param>
        <summary><span data-ttu-id="a934c-104"><see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> オブジェクトを指定して、<see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a934c-104">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> class with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyData">
      <MemberSignature Language="C#" Value="public int CopyData (ref System.Drawing.PointF[] points, ref byte[] types, int startIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CopyData(valuetype System.Drawing.PointF[]&amp; points, unsigned int8[]&amp; types, int32 startIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyData (ByRef points As PointF(), ByRef types As Byte(), startIndex As Integer, endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CopyData(cli::array &lt;System::Drawing::PointF&gt; ^ % points, cli::array &lt;System::Byte&gt; ^ % types, int startIndex, int endIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyData : PointF[] * Byte[] * int * int -&gt; int" Usage="graphicsPathIterator.CopyData (points, types, startIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" RefType="ref" />
        <Parameter Name="types" Type="System.Byte[]" RefType="ref" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a934c-105">戻り時には、パス内の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列が格納されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-105">Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.</span></span></param>
        <param name="types"><span data-ttu-id="a934c-106">戻り時には、パス内の点の種類を表すバイトの配列が格納されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-106">Upon return, contains an array of bytes that represents the types of points in the path.</span></span></param>
        <param name="startIndex"><span data-ttu-id="a934c-107">配列の開始インデックスを指定します。</span><span class="sxs-lookup"><span data-stu-id="a934c-107">Specifies the starting index of the arrays.</span></span></param>
        <param name="endIndex"><span data-ttu-id="a934c-108">配列の終了インデックスを指定します。</span><span class="sxs-lookup"><span data-stu-id="a934c-108">Specifies the ending index of the arrays.</span></span></param>
        <summary><span data-ttu-id="a934c-109"><see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> に関連付けられている <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> プロパティ配列および <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> プロパティ配列を、指定された 2 つの配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="a934c-109">Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into the two specified arrays.</span></span></summary>
        <returns><span data-ttu-id="a934c-110">コピーする点の数。</span><span class="sxs-lookup"><span data-stu-id="a934c-110">The number of points copied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a934c-111">`startIndex` パラメーターと `endIndex` パラメーターを使用して、指定されたパスデータの範囲をコピーします。</span><span class="sxs-lookup"><span data-stu-id="a934c-111">Use the `startIndex` and `endIndex` parameters to copy a specified range of the path data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a934c-112">次の例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Form.OnPaint%2A> イベントオブジェクト <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="a934c-112">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a934c-113">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="a934c-113">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a934c-114">グラフィックスパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-114">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="a934c-115">複数のプリミティブといくつかのマーカーを設定します。</span><span class="sxs-lookup"><span data-stu-id="a934c-115">Populates it with several primitives and some markers.</span></span>  
  
-   <span data-ttu-id="a934c-116">画面の左側にパスデータが一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-116">Lists the path data on the left side of the screen.</span></span>  
  
-   <span data-ttu-id="a934c-117"><xref:System.Drawing.Drawing2D.GraphicsPathIterator> を作成し、巻き戻します。</span><span class="sxs-lookup"><span data-stu-id="a934c-117">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.</span></span>  
  
-   <span data-ttu-id="a934c-118">パスデータインデックスを2番目のマーカーにインクリメントします。</span><span class="sxs-lookup"><span data-stu-id="a934c-118">Increments the path data index to the second marker.</span></span>  
  
-   <span data-ttu-id="a934c-119"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A> メソッドを呼び出して、開始インデックスと終了インデックスの間に格納されているパスデータを、points および types 配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="a934c-119">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A> method to copy the path data contained between the start and end indexes to the points and types arrays.</span></span>  
  
-   <span data-ttu-id="a934c-120">このコピーされたデータを画面の右側に一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="a934c-120">Lists this copied data on the right side of the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Drawing.Drawing2D.GraphicsPathIterator.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a934c-121">パス内の点の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="a934c-121">Gets the number of points in the path.</span></span></summary>
        <value><span data-ttu-id="a934c-122">パス内の点の数。</span><span class="sxs-lookup"><span data-stu-id="a934c-122">The number of points in the path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPathIterator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a934c-123">この <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a934c-123">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a934c-124">`Dispose` を呼び出すと、この <xref:System.Drawing.Drawing2D.GraphicsPathIterator> オブジェクトで使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="a934c-124">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public int Enumerate (ref System.Drawing.PointF[] points, ref byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Enumerate(valuetype System.Drawing.PointF[]&amp; points, unsigned int8[]&amp; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Enumerate (ByRef points As PointF(), ByRef types As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Enumerate(cli::array &lt;System::Drawing::PointF&gt; ^ % points, cli::array &lt;System::Byte&gt; ^ % types);" />
      <MemberSignature Language="F#" Value="member this.Enumerate : PointF[] * Byte[] -&gt; int" Usage="graphicsPathIterator.Enumerate (points, types)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" RefType="ref" />
        <Parameter Name="types" Type="System.Byte[]" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a934c-125">戻り時には、パス内の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列が格納されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-125">Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.</span></span></param>
        <param name="types"><span data-ttu-id="a934c-126">戻り時には、パス内の点の種類を表すバイトの配列が格納されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-126">Upon return, contains an array of bytes that represents the types of points in the path.</span></span></param>
        <summary><span data-ttu-id="a934c-127"><see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> に関連付けられている <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> プロパティ配列および <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> プロパティ配列を、指定された 2 つの配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="a934c-127">Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into the two specified arrays.</span></span></summary>
        <returns><span data-ttu-id="a934c-128">コピーする点の数。</span><span class="sxs-lookup"><span data-stu-id="a934c-128">The number of points copied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a934c-129">次の例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Form.OnPaint%2A> イベントオブジェクト <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="a934c-129">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a934c-130">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="a934c-130">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a934c-131">グラフィックスパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-131">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="a934c-132">複数のプリミティブといくつかのマーカーを設定します。</span><span class="sxs-lookup"><span data-stu-id="a934c-132">Populates it with several primitives and some markers.</span></span>  
  
-   <span data-ttu-id="a934c-133">画面の左側にパスデータが一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-133">Lists the path data on the left side of the screen.</span></span>  
  
-   <span data-ttu-id="a934c-134"><xref:System.Drawing.Drawing2D.GraphicsPathIterator> を作成し、巻き戻します。</span><span class="sxs-lookup"><span data-stu-id="a934c-134">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.</span></span>  
  
-   <span data-ttu-id="a934c-135">パスデータインデックスを2番目のマーカーにインクリメントします。</span><span class="sxs-lookup"><span data-stu-id="a934c-135">Increments the path data index to the second marker.</span></span>  
  
-   <span data-ttu-id="a934c-136"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A> メソッドを呼び出して、パスデータを `points` 配列および `types` 配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="a934c-136">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A> method to copy the path data to the `points` and `types` arrays.</span></span>  
  
-   <span data-ttu-id="a934c-137">このコピーされたデータを画面の右側に一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="a934c-137">Lists this copied data on the right side of the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPathIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPathIterator ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPathIterator.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a934c-138">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="a934c-138">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCurve">
      <MemberSignature Language="C#" Value="public bool HasCurve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasCurve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve" />
      <MemberSignature Language="VB.NET" Value="Public Function HasCurve () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasCurve();" />
      <MemberSignature Language="F#" Value="member this.HasCurve : unit -&gt; bool" Usage="graphicsPathIterator.HasCurve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a934c-139"><see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> に関連付けられているパスに曲線が含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a934c-139">Indicates whether the path associated with this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> contains a curve.</span></span></summary>
        <returns><span data-ttu-id="a934c-140">このメソッドは、現在のサブパスに曲線が含まれている場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-140">This method returns <see langword="true" /> if the current subpath contains a curve; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a934c-141">パス内のすべての曲線は、ベジエスプラインのシーケンスとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-141">All curves in a path are stored as sequences of Bézier splines.</span></span> <span data-ttu-id="a934c-142">たとえば、楕円をパスに追加する場合は、左上隅、幅、楕円の外接する四角形の高さを指定します。</span><span class="sxs-lookup"><span data-stu-id="a934c-142">For example, when you add an ellipse to a path, you specify the upper-left corner, the width, and the height of the ellipse's bounding rectangle.</span></span> <span data-ttu-id="a934c-143">これらの数値 (左上隅、幅、および高さ) は、パスには格納されません。instead楕円は、4つのベジエスプラインのシーケンスに変換されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-143">Those numbers (upper-left corner, width, and height) are not stored in the path; instead; the ellipse is converted to a sequence of four Bézier splines.</span></span> <span data-ttu-id="a934c-144">パスには、これらのベジエスプラインのエンドポイントと制御ポイントが格納されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-144">The path stores the endpoints and control points of those Bézier splines.</span></span>  
  
 <span data-ttu-id="a934c-145">パスには、データポイントの配列が格納されます。各データポイントは、直線またはベジエスプラインに属します。</span><span class="sxs-lookup"><span data-stu-id="a934c-145">A path stores an array of data points, each of which belongs to a line or a Bézier spline.</span></span> <span data-ttu-id="a934c-146">配列内の一部のポイントがベジエスプラインに属している場合、<xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> は `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-146">If some of the points in the array belong to Bézier splines, then <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> returns `true`.</span></span> <span data-ttu-id="a934c-147">配列内のすべてのポイントが行に属している場合、<xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-147">If all points in the array belong to lines, then <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="a934c-148">特定のメソッドはパスを平坦化します。つまり、パス内のすべての曲線が線のシーケンスに変換されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-148">Certain methods flatten a path, which means that all the curves in the path are converted to sequences of lines.</span></span> <span data-ttu-id="a934c-149">パスがフラット化された後、<xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> は常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-149">After a path has been flattened, <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> will always return `false`.</span></span> <span data-ttu-id="a934c-150"><xref:System.Drawing.Drawing2D.GraphicsPath> クラスの <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>、<xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>、または <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A> メソッドを呼び出すと、パスがフラット化されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-150">Calling the <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>, or <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A> method of the <xref:System.Drawing.Drawing2D.GraphicsPath> class will flatten a path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a934c-151">次の例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Form.OnPaint%2A> イベントオブジェクト <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="a934c-151">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a934c-152">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="a934c-152">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a934c-153">`myPath`<xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-153">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPath`.</span></span>  
  
-   <span data-ttu-id="a934c-154">3本の線、四角形、および楕円を追加します。</span><span class="sxs-lookup"><span data-stu-id="a934c-154">Adds three lines, a rectangle, and an ellipse.</span></span>  
  
-   <span data-ttu-id="a934c-155">`myPath`の <xref:System.Drawing.Drawing2D.GraphicsPathIterator> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-155">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object for `myPath`.</span></span>  
  
-   <span data-ttu-id="a934c-156">現在のパス `myPath` に曲線が含まれているかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="a934c-156">Tests to see if the current path `myPath` contains a curve.</span></span>  
  
-   <span data-ttu-id="a934c-157">テストの結果をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="a934c-157">Shows the result of the test in a message box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextMarker">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a934c-158">反復子をパス内の次のマーカーに移動します。</span><span class="sxs-lookup"><span data-stu-id="a934c-158">Moves the iterator to the next marker in the path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public int NextMarker (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextMarker(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMarker (path As GraphicsPath) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextMarker(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.NextMarker : System.Drawing.Drawing2D.GraphicsPath -&gt; int" Usage="graphicsPathIterator.NextMarker path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a934c-159">点のコピー先の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a934c-159">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to which the points will be copied.</span></span></param>
        <summary><span data-ttu-id="a934c-160"><see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> オブジェクトには、<see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="a934c-160">This <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object has a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object associated with it.</span></span> <span data-ttu-id="a934c-161"><see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> メソッドは、関連付けられている <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> のパス内の次のマーカーを指すように反復子をインクリメントし、現在のマーカーと次のマーカー (またはパスの終点) の間に含まれているすべての点を、パラメーターに渡された 2 番目の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトにコピーします。</span><span class="sxs-lookup"><span data-stu-id="a934c-161">The <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> method increments the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to the next marker in its path and copies all the points contained between the current marker and the next marker (or end of path) to a second <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object passed in to the parameter.</span></span></summary>
        <returns><span data-ttu-id="a934c-162">現在のマーカーと次のマーカーの間にある点の数。</span><span class="sxs-lookup"><span data-stu-id="a934c-162">The number of points between this marker and the next.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a934c-163">パスにマーカーを設定するには、<xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="a934c-163">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to set markers in a path.</span></span> <span data-ttu-id="a934c-164">マーカーは、サブパスのグループを作成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-164">Markers are used to create groups of subpaths.</span></span> <span data-ttu-id="a934c-165">2つのマーカーの間には、1つまたは複数のサブパスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="a934c-165">One or more subpaths can be between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a934c-166">次の例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Form.OnPaint%2A> イベントオブジェクト <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="a934c-166">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a934c-167">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="a934c-167">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a934c-168"><xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-168">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="a934c-169">3本の線、四角形、楕円、および2つのマーカーを追加します。</span><span class="sxs-lookup"><span data-stu-id="a934c-169">Adds three lines, a rectangle, an ellipse, and two markers.</span></span>  
  
-   <span data-ttu-id="a934c-170">画面の左側にあるパスのすべてのポイントの値が一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-170">Lists the values of all the path's points to the left side of the screen.</span></span>  
  
-   <span data-ttu-id="a934c-171"><xref:System.Drawing.Drawing2D.GraphicsPathIterator> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-171">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.</span></span>  
  
-   <span data-ttu-id="a934c-172">コピーされたポイントを受け取る <xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクト `myPathSection`を作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-172">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPathSection`, to receive copied points.</span></span>  
  
-   <span data-ttu-id="a934c-173"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> メソッドを呼び出します。このメソッドは、最初のマーカーに反復処理し、そのマーカーの間に含まれるすべての点と、`myPathSection`の次の位置をコピーします。</span><span class="sxs-lookup"><span data-stu-id="a934c-173">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method, which iterates to the first marker and copies all the points contained between that marker and the next to `myPathSection`.</span></span>  
  
-   <span data-ttu-id="a934c-174">`markerPoints`にコピーされた点の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-174">Returns the number of points copied to `markerPoints`.</span></span>  
  
-   <span data-ttu-id="a934c-175">マーカー番号 (最初のマーカー) と画面の右側に表示されるポイント数を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="a934c-175">Lists the marker number (the first marker) and number of points it contains to the right side of the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public int NextMarker (out int startIndex, out int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextMarker([out] int32&amp; startIndex, [out] int32&amp; endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMarker (ByRef startIndex As Integer, ByRef endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextMarker([Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex);" />
      <MemberSignature Language="F#" Value="member this.NextMarker : int * int -&gt; int" Usage="graphicsPathIterator.NextMarker (startIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="a934c-176">[出力] このパラメーターに渡される整数参照が、サブパスの開始点のインデックスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a934c-176">[out] The integer reference supplied to this parameter receives the index of the point that starts a subpath.</span></span></param>
        <param name="endIndex"><span data-ttu-id="a934c-177">[出力] このパラメーターに渡される整数参照が、<paramref name="startIndex" /> が指すサブパスの終了点のインデックスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a934c-177">[out] The integer reference supplied to this parameter receives the index of the point that ends the subpath to which <paramref name="startIndex" /> points.</span></span></param>
        <summary><span data-ttu-id="a934c-178"><see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> をインクリメントしてパス内の次のマーカーに進め、[out] パラメーターを使用して開始インデックスと終了インデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-178">Increments the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the next marker in the path and returns the start and stop indexes by way of the [out] parameters.</span></span></summary>
        <returns><span data-ttu-id="a934c-179">現在のマーカーと次のマーカーの間にある点の数。</span><span class="sxs-lookup"><span data-stu-id="a934c-179">The number of points between this marker and the next.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a934c-180">パスにマーカーを設定するには、<xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="a934c-180">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to set markers in a path.</span></span> <span data-ttu-id="a934c-181">マーカーは、サブパスのグループを作成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-181">Markers are used to create groups of subpaths.</span></span> <span data-ttu-id="a934c-182">2つのマーカーの間には、1つまたは複数のサブパスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="a934c-182">One or more subpaths can be between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a934c-183">次の例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Form.OnPaint%2A> イベントオブジェクト <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="a934c-183">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a934c-184">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="a934c-184">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a934c-185"><xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-185">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="a934c-186">3本の線、四角形、およびそれぞれの間にマーカーがある楕円3/4 を追加します。</span><span class="sxs-lookup"><span data-stu-id="a934c-186">Adds three lines, a rectangle, and an ellipse ¾ with markers between each.</span></span>  
  
-   <span data-ttu-id="a934c-187">ポイントの配列の値を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="a934c-187">Draws the values for the array of points to the screen.</span></span>  
  
-   <span data-ttu-id="a934c-188"><xref:System.Drawing.Drawing2D.GraphicsPathIterator> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-188">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.</span></span>  
  
-   <span data-ttu-id="a934c-189"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a934c-189">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method.</span></span>  
  
-   <span data-ttu-id="a934c-190"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> の反復呼び出しから返された値を使用して、各マーカーの開始点と終了点を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="a934c-190">Uses the values returned from the iterative calls to <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> to draw the start and stop points for each marker to the screen.</span></span>  
  
-   <span data-ttu-id="a934c-191">ポイントの合計数の値を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="a934c-191">Draws the value for the total number of points to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPathType">
      <MemberSignature Language="C#" Value="public int NextPathType (out byte pathType, out int startIndex, out int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextPathType([out] unsigned int8&amp; pathType, [out] int32&amp; startIndex, [out] int32&amp; endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextPathType (ByRef pathType As Byte, ByRef startIndex As Integer, ByRef endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextPathType([Runtime::InteropServices::Out] System::Byte % pathType, [Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex);" />
      <MemberSignature Language="F#" Value="member this.NextPathType : byte * int * int -&gt; int" Usage="graphicsPathIterator.NextPathType (pathType, startIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathType" Type="System.Byte" RefType="out" />
        <Parameter Name="startIndex" Type="System.Int32" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pathType"><span data-ttu-id="a934c-192">[出力] グループのすべてのポイントで共有されるポイント タイプを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a934c-192">[out] Receives the point type shared by all points in the group.</span></span> <span data-ttu-id="a934c-193">返される可能性があるタイプは、<see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列挙体から取得できます。</span><span class="sxs-lookup"><span data-stu-id="a934c-193">Possible types can be retrieved from the <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration.</span></span></param>
        <param name="startIndex"><span data-ttu-id="a934c-194">[出力] ポイント グループの開始インデックスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a934c-194">[out] Receives the starting index of the group of points.</span></span></param>
        <param name="endIndex"><span data-ttu-id="a934c-195">[出力] ポイント グループの終了インデックスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a934c-195">[out] Receives the ending index of the group of points.</span></span></param>
        <summary><span data-ttu-id="a934c-196">すべてが同じ種類のデータ点から成る次のグループの開始インデックスと終了インデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="a934c-196">Gets the starting index and the ending index of the next group of data points that all have the same type.</span></span></summary>
        <returns><span data-ttu-id="a934c-197">このメソッドは、グループ内のデータ点の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-197">This method returns the number of data points in the group.</span></span> <span data-ttu-id="a934c-198">パスにそれ以上グループがない場合は、0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-198">If there are no more groups in the path, this method returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a934c-199">次の例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Form.OnPaint%2A> イベントオブジェクト <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="a934c-199">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a934c-200">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="a934c-200">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a934c-201"><xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-201">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="a934c-202">3本の線、四角形、および楕円を追加します。</span><span class="sxs-lookup"><span data-stu-id="a934c-202">Adds three lines, a rectangle, and an ellipse.</span></span>  
  
-   <span data-ttu-id="a934c-203">画面の左側にあるすべてのポイントの値が一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-203">Lists the values of all the points to the left side of the screen.</span></span>  
  
-   <span data-ttu-id="a934c-204"><xref:System.Drawing.Drawing2D.GraphicsPathIterator> を作成し、巻き戻します。</span><span class="sxs-lookup"><span data-stu-id="a934c-204">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.</span></span>  
  
-   <span data-ttu-id="a934c-205">`for` ループでは、<xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> メソッドと <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> メソッドを使用して、ポイントを反復処理します。</span><span class="sxs-lookup"><span data-stu-id="a934c-205">In a `for` loop, iterates through the points using the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> and <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> methods.</span></span>  
  
-   <span data-ttu-id="a934c-206">反復呼び出しから返された値を使用して、サブパス番号、その中のポイント数、およびパスの種類を画面の右側に示します。</span><span class="sxs-lookup"><span data-stu-id="a934c-206">Uses the values returned from the iterative calls to list the subpath number, the number of points in it, and the type of the path points to the right side of the screen.</span></span>  
  
-   <span data-ttu-id="a934c-207">画面上のポイントの合計数の値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-207">Displays the value for the total number of points to the screen.</span></span>  
  
 <span data-ttu-id="a934c-208">`ListPathPoints` は、表示コードのほとんど (すべてではない) をグラフィックスパスコードから分離するヘルパー関数です。</span><span class="sxs-lookup"><span data-stu-id="a934c-208">Note that `ListPathPoints` is a helper function that separates most (not all) of the display code from the graphics path code.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextSubpath">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a934c-209">指定された <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内の現在のサブパスから次のサブパスに移動します。</span><span class="sxs-lookup"><span data-stu-id="a934c-209">Moves the subpath to the next subpath in the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextSubpath">
      <MemberSignature Language="C#" Value="public int NextSubpath (System.Drawing.Drawing2D.GraphicsPath path, out bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextSubpath(class System.Drawing.Drawing2D.GraphicsPath path, [out] bool&amp; isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSubpath (path As GraphicsPath, ByRef isClosed As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextSubpath(System::Drawing::Drawing2D::GraphicsPath ^ path, [Runtime::InteropServices::Out] bool % isClosed);" />
      <MemberSignature Language="F#" Value="member this.NextSubpath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; int" Usage="graphicsPathIterator.NextSubpath (path, isClosed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="isClosed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a934c-210">保持するデータ点が、反復子で取得した図形 (サブパス) のデータ点と一致するように設定されている <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span><span class="sxs-lookup"><span data-stu-id="a934c-210">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that is to have its data points set to match the data points of the retrieved figure (subpath) for this iterator.</span></span></param>
        <param name="isClosed"><span data-ttu-id="a934c-211">[出力] 現在のサブパスが閉じられているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a934c-211">[out] Indicates whether the current subpath is closed.</span></span> <span data-ttu-id="a934c-212">図形が閉じられている場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="a934c-212">It is <see langword="true" /> if the if the figure is closed, otherwise it is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a934c-213">この <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> の関連付けられているパスから、次の図形 (サブパス) を取得します。</span><span class="sxs-lookup"><span data-stu-id="a934c-213">Gets the next figure (subpath) from the associated path of this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</span></span></summary>
        <returns><span data-ttu-id="a934c-214">取得した図形 (サブパス) 内のデータ点の数。</span><span class="sxs-lookup"><span data-stu-id="a934c-214">The number of data points in the retrieved figure (subpath).</span></span> <span data-ttu-id="a934c-215">それ以上図形がない場合は、0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-215">If there are no more figures to retrieve, zero is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a934c-216">次の例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Form.OnPaint%2A> イベントオブジェクト <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="a934c-216">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a934c-217">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="a934c-217">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a934c-218"><xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-218">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="a934c-219">3本の線、四角形、楕円、および2つのマーカーを追加します。</span><span class="sxs-lookup"><span data-stu-id="a934c-219">Adds three lines, a rectangle, an ellipse, and two markers.</span></span>  
  
-   <span data-ttu-id="a934c-220">画面の左側にあるパスのすべてのポイントの値が一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-220">Lists the values of all the path's points to the left side of the screen.</span></span>  
  
-   <span data-ttu-id="a934c-221"><xref:System.Drawing.Drawing2D.GraphicsPathIterator> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-221">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.</span></span>  
  
-   <span data-ttu-id="a934c-222">コピーされたポイントを受け取る <xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクト `myPathSection`を作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-222">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPathSection`, to receive copied points.</span></span>  
  
-   <span data-ttu-id="a934c-223"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> メソッドを呼び出します。このメソッドは、3番目のサブパス (図) に反復処理を行い、そのサブパスに含まれるすべての点を `myPathSection` パスにコピーします。また、`subpathPoints`にコピーされた点の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a934c-223">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> method, which iterates to the third subpath (figure) and copies all the points contained in that subpath to the `myPathSection` path, and also returns the number of points copied to `subpathPoints`.</span></span>  
  
-   <span data-ttu-id="a934c-224">サブパスの数と、それに含まれるポイントの数が画面の右側に表示されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-224">Lists the subpath number and number of points it contains to the right side of the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSubpath">
      <MemberSignature Language="C#" Value="public int NextSubpath (out int startIndex, out int endIndex, out bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextSubpath([out] int32&amp; startIndex, [out] int32&amp; endIndex, [out] bool&amp; isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSubpath (ByRef startIndex As Integer, ByRef endIndex As Integer, ByRef isClosed As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextSubpath([Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex, [Runtime::InteropServices::Out] bool % isClosed);" />
      <MemberSignature Language="F#" Value="member this.NextSubpath : int * int * bool -&gt; int" Usage="graphicsPathIterator.NextSubpath (startIndex, endIndex, isClosed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32" RefType="out" />
        <Parameter Name="isClosed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="a934c-225">[出力] 次のサブパスの開始インデックスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a934c-225">[out] Receives the starting index of the next subpath.</span></span></param>
        <param name="endIndex"><span data-ttu-id="a934c-226">[出力] 次のサブパスの終了インデックスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a934c-226">[out] Receives the ending index of the next subpath.</span></span></param>
        <param name="isClosed"><span data-ttu-id="a934c-227">[出力] サブパスが閉じられているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a934c-227">[out] Indicates whether the subpath is closed.</span></span></param>
        <summary><span data-ttu-id="a934c-228"><see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> をパス内の次のサブパスに移動します。</span><span class="sxs-lookup"><span data-stu-id="a934c-228">Moves the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the next subpath in the path.</span></span> <span data-ttu-id="a934c-229">次のサブパスの開始インデックスおよび終了インデックスが、[out] パラメーターに格納されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-229">The start index and end index of the next subpath are contained in the [out] parameters.</span></span></summary>
        <returns><span data-ttu-id="a934c-230"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト内のサブパスの数。</span><span class="sxs-lookup"><span data-stu-id="a934c-230">The number of subpaths in the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a934c-231">次の例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Form.OnPaint%2A> イベントオブジェクト <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="a934c-231">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a934c-232">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="a934c-232">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a934c-233"><xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-233">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="a934c-234">3本の線、四角形、および楕円を追加します。</span><span class="sxs-lookup"><span data-stu-id="a934c-234">Adds three lines, a rectangle, and an ellipse.</span></span>  
  
-   <span data-ttu-id="a934c-235">ポイントの配列の値を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="a934c-235">Draws the values for the array of points to the screen.</span></span>  
  
-   <span data-ttu-id="a934c-236"><xref:System.Drawing.Drawing2D.GraphicsPathIterator> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a934c-236">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.</span></span>  
  
-   <span data-ttu-id="a934c-237"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a934c-237">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> method.</span></span>  
  
-   <span data-ttu-id="a934c-238"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> の反復呼び出しから返された値を使用して、各サブパスの開始値と停止値を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="a934c-238">Uses the values returned from the iterative calls to <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> to draw the start and stop values for each subpath to the screen.</span></span>  
  
-   <span data-ttu-id="a934c-239">サブパスの合計数の値を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="a934c-239">Draws the value for the total number of subpaths to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public void Rewind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rewind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rewind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rewind();" />
      <MemberSignature Language="F#" Value="member this.Rewind : unit -&gt; unit" Usage="graphicsPathIterator.Rewind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a934c-240"><see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> が指す位置を、関連付けられているパスの先頭に戻します。</span><span class="sxs-lookup"><span data-stu-id="a934c-240">Rewinds this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the beginning of its associated path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a934c-241">反復子の <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> メソッドを初めて呼び出すときは、その反復子の関連付けられたパスの最初の図形 (サブパス) が取得されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-241">The first time you call the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> method of an iterator, it gets the first figure (subpath) of that iterator's associated path.</span></span> <span data-ttu-id="a934c-242">2回目は、2番目の図形を取得します。</span><span class="sxs-lookup"><span data-stu-id="a934c-242">The second time, it gets the second figure, and so on.</span></span> <span data-ttu-id="a934c-243"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A> メソッドを呼び出すと、シーケンスが開始されます。つまり、<xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A>を呼び出した後、次に <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> を呼び出すと、パスの最初の図形が取得されます。</span><span class="sxs-lookup"><span data-stu-id="a934c-243">When you call the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A> method, the sequence starts over; that is, after you call <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A>, the next call to <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> gets the first figure in the path.</span></span> <span data-ttu-id="a934c-244"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> メソッドと <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> メソッドも同様に動作します。</span><span class="sxs-lookup"><span data-stu-id="a934c-244">The <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> and <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> methods behave similarly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubpathCount">
      <MemberSignature Language="C#" Value="public int SubpathCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubpathCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubpathCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubpathCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SubpathCount : int" Usage="System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a934c-245">パス内のサブパスの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="a934c-245">Gets the number of subpaths in the path.</span></span></summary>
        <value><span data-ttu-id="a934c-246">パス内のサブパスの数。</span><span class="sxs-lookup"><span data-stu-id="a934c-246">The number of subpaths in the path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
