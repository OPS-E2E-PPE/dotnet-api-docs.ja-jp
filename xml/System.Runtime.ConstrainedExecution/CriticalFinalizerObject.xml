<Type Name="CriticalFinalizerObject" FullName="System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a2586c108e3b52fbec7370d66eee7f1506728fe" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75090736" /></Metadata><TypeSignature Language="C#" Value="public abstract class CriticalFinalizerObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CriticalFinalizerObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CriticalFinalizerObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CriticalFinalizerObject abstract" />
  <TypeSignature Language="F#" Value="type CriticalFinalizerObject = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ad35f-101">派生クラスのすべての終了コードが確実に重大であるとマークされるようにします。</span><span class="sxs-lookup"><span data-stu-id="ad35f-101">Ensures that all finalization code in derived classes is marked as critical.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad35f-102"><xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> クラスから派生したクラスは、制約された実行領域 (CER) として暗黙的に処理されます。</span><span class="sxs-lookup"><span data-stu-id="ad35f-102">Classes deriving from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class are implicitly treated as a constrained execution region (CER).</span></span>  <span data-ttu-id="ad35f-103">これには、厳密な信頼性コントラクトでコードを呼び出すために、ファイナライザーのコードが必要です。</span><span class="sxs-lookup"><span data-stu-id="ad35f-103">This requires code in the finalizer to only call code with a strong reliability contract.</span></span> <span data-ttu-id="ad35f-104">Cer の詳細については、「<xref:System.Runtime.ConstrainedExecution> 名前空間」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ad35f-104">For more information about CERs, see the <xref:System.Runtime.ConstrainedExecution> namespace.</span></span>  
  
 <span data-ttu-id="ad35f-105"><xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> クラスから派生したクラスでは、CLR がアプリケーションドメインを強制的にアンロードしたり、スレッドを中止したりする場合でも、ファイナライザーが CER の規則に従う場合は、共通言語ランタイム (CLR) によって、すべてのクリティカルな終了コードが実行されるように保証されます。</span><span class="sxs-lookup"><span data-stu-id="ad35f-105">In classes derived from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</span></span> <span data-ttu-id="ad35f-106">ファイナライザーが CER の規則に違反している場合は、正常に実行されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ad35f-106">If a finalizer violates the rules for a CER, it might not successfully execute.</span></span> <span data-ttu-id="ad35f-107">さらに、CLR は、通常のファイナライザーと重大なファイナライザーの間に弱い順序を確立します。ガベージコレクションによって同時に解放されたオブジェクトの場合は、すべての重要でないファイナライザーがすべてのクリティカルファイナライザーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ad35f-107">In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</span></span> <span data-ttu-id="ad35f-108">たとえば、<xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>から派生した <xref:System.Runtime.InteropServices.SafeHandle> クラスのデータを保持する <xref:System.IO.FileStream>などのクラスでは、標準のファイナライザーを実行して、既存のバッファーデータをフラッシュできます。</span><span class="sxs-lookup"><span data-stu-id="ad35f-108">For example, a class such as <xref:System.IO.FileStream>, which holds data in the <xref:System.Runtime.InteropServices.SafeHandle> class that is derived from <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, can run a standard finalizer to flush out existing buffered data.</span></span>  
  
 <span data-ttu-id="ad35f-109">ほとんどの場合、<xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> クラスから派生するクラスを記述する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ad35f-109">In most cases, you do not need to write classes that derive from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class.</span></span> <span data-ttu-id="ad35f-110">.NET Framework クラスライブラリには、<xref:System.Runtime.InteropServices.SafeHandle> と <xref:System.Runtime.InteropServices.CriticalHandle>の2つのクラスが用意されており、リソースを処理するための重要な終了機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="ad35f-110">The .NET Framework class library provides two classes, <xref:System.Runtime.InteropServices.SafeHandle> and <xref:System.Runtime.InteropServices.CriticalHandle>, that provide critical finalization functionality for handle resources.</span></span> <span data-ttu-id="ad35f-111">さらに、.NET Framework には、<xref:System.Runtime.InteropServices.SafeHandle> クラスから派生した一連の記述済みクラスが用意されており、このセットは <xref:Microsoft.Win32.SafeHandles> 名前空間にあります。</span><span class="sxs-lookup"><span data-stu-id="ad35f-111">Furthermore, the .NET Framework provides a set of prewritten classes derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, and this set is located in the <xref:Microsoft.Win32.SafeHandles> namespace.</span></span> <span data-ttu-id="ad35f-112">これらのクラスは、ファイルおよびオペレーティングシステムハンドルをサポートするための一般的な機能を提供するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="ad35f-112">These classes are designed to provide common functionality for supporting file and operating system handles.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad35f-113">次のコード例は、<xref:Microsoft.Win32.SafeHandles.SafeFileHandle> クラスを使用して、標準の入力ストリームと出力ストリームに対して重大な終了処理を提供する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ad35f-113">The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams.</span></span> <span data-ttu-id="ad35f-114"><xref:System.Runtime.InteropServices.SafeHandle> クラスから派生した <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>は、<xref:System.IO.FileStream> コンストラクターのファイルストリームに渡されます。</span><span class="sxs-lookup"><span data-stu-id="ad35f-114">The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.</span></span>  
  
 [!code-csharp[SafeHandle.SafeFileHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle.SafeFileHandle/CS/program.cs#1)]
 [!code-vb[SafeHandle.SafeFileHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SafeHandle.SafeFileHandle/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad35f-115">アンマネージコードを呼び出すためのアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="ad35f-115">for permission to call unmanaged code.</span></span> <span data-ttu-id="ad35f-116">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="ad35f-116">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="ad35f-117">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="ad35f-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="ad35f-118">継承者に対する完全な信頼の場合。</span><span class="sxs-lookup"><span data-stu-id="ad35f-118">for full trust for inheritors.</span></span> <span data-ttu-id="ad35f-119">このクラスは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ad35f-119">This class cannot be used by partially trusted code.</span></span></permission>
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
    <altmember cref="N:Microsoft.Win32.SafeHandles" />
    <related type="Article" href="https://msdn.microsoft.com/library/99354547-39c1-4b0b-8553-938e8f8d1808"><span data-ttu-id="ad35f-120">制約された実行領域</span><span class="sxs-lookup"><span data-stu-id="ad35f-120">Constrained Execution Regions</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/cf624c1f-c160-46a1-bb2b-213587688da7"><span data-ttu-id="ad35f-121">信頼性に関するベスト プラクティス</span><span class="sxs-lookup"><span data-stu-id="ad35f-121">Reliability Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CriticalFinalizerObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CriticalFinalizerObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad35f-122"><see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ad35f-122">Initializes a new instance of the <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad35f-123">アンマネージコードを呼び出すためのアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="ad35f-123">for permission to call unmanaged code.</span></span> <span data-ttu-id="ad35f-124">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="ad35f-124">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="ad35f-125">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="ad35f-125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="ad35f-126">継承者に対する完全な信頼の場合。</span><span class="sxs-lookup"><span data-stu-id="ad35f-126">for full trust for inheritors.</span></span> <span data-ttu-id="ad35f-127">このクラスは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ad35f-127">This class cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CriticalFinalizerObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CriticalFinalizerObject ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="criticalFinalizerObject.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad35f-128"><see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> クラスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="ad35f-128">Releases all the resources used by the <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad35f-129"><xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> から派生したすべての型のファイナライザーは、制約された実行領域 (CER) の規則にファイナライザーが正しく従っていると想定して、実行する機会が与えられ、中止されません。</span><span class="sxs-lookup"><span data-stu-id="ad35f-129">The finalizer for any types deriving from <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
