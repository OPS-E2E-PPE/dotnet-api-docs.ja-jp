<Type Name="Consistency" FullName="System.Runtime.ConstrainedExecution.Consistency">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10a473c851e2f1c0607a7f1e043686af3f710ebf" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82490249" /></Metadata><TypeSignature Language="C#" Value="public enum Consistency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Consistency extends System.Enum" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Consistency" />
  <TypeSignature Language="VB.NET" Value="Public Enum Consistency" />
  <TypeSignature Language="C++ CLI" Value="public enum class Consistency" />
  <TypeSignature Language="F#" Value="type Consistency = " />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Consistency extends System.Enum" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="da1c3-101">信頼性のコントラクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="da1c3-101">Specifies a reliability contract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da1c3-102"><xref:System.Runtime.ConstrainedExecution.Consistency> 列挙体は、特定のメソッドでの信頼性の保証を指定するために、<xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> 属性のパラメーターとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="da1c3-102">The <xref:System.Runtime.ConstrainedExecution.Consistency> enumeration is used as a parameter to the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> attribute to specify the reliability guarantee on a given method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da1c3-103">次のコード例は、メソッドの制約された実行領域を指定するときの <xref:System.Runtime.ConstrainedExecution.Consistency> 列挙型の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="da1c3-103">The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Consistency> enumeration when specifying a constrained execution region for a method.</span></span> <span data-ttu-id="da1c3-104">このコード例は、<xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="da1c3-104">This code example  is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/99354547-39c1-4b0b-8553-938e8f8d1808"><span data-ttu-id="da1c3-105">制約された実行領域</span><span class="sxs-lookup"><span data-stu-id="da1c3-105">Constrained Execution Regions</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/cf624c1f-c160-46a1-bb2b-213587688da7"><span data-ttu-id="da1c3-106">信頼性に関するベスト プラクティス</span><span class="sxs-lookup"><span data-stu-id="da1c3-106">Reliability Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="MayCorruptAppDomain">
      <MemberSignature Language="C#" Value="MayCorruptAppDomain" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Consistency MayCorruptAppDomain = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain" />
      <MemberSignature Language="VB.NET" Value="MayCorruptAppDomain" />
      <MemberSignature Language="C++ CLI" Value="MayCorruptAppDomain" />
      <MemberSignature Language="F#" Value="MayCorruptAppDomain = 1" Usage="System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Consistency</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="da1c3-107">例外条件の発生時に、共通言語ランタイム (CLR) は、現在のアプリケーション ドメイン内の状態の一貫性を保証しません。</span><span class="sxs-lookup"><span data-stu-id="da1c3-107">In the face of exceptional conditions, the common language runtime (CLR) makes no guarantees regarding state consistency in the current application domain.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MayCorruptInstance">
      <MemberSignature Language="C#" Value="MayCorruptInstance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Consistency MayCorruptInstance = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance" />
      <MemberSignature Language="VB.NET" Value="MayCorruptInstance" />
      <MemberSignature Language="C++ CLI" Value="MayCorruptInstance" />
      <MemberSignature Language="F#" Value="MayCorruptInstance = 2" Usage="System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Consistency</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="da1c3-108">例外条件の発生時に、そのメソッドでは、現在のインスタンスに対する状態の破損が限定的であることが保証されます。</span><span class="sxs-lookup"><span data-stu-id="da1c3-108">In the face of exceptional conditions, the method is guaranteed to limit state corruption to the current instance.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MayCorruptProcess">
      <MemberSignature Language="C#" Value="MayCorruptProcess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Consistency MayCorruptProcess = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptProcess" />
      <MemberSignature Language="VB.NET" Value="MayCorruptProcess" />
      <MemberSignature Language="C++ CLI" Value="MayCorruptProcess" />
      <MemberSignature Language="F#" Value="MayCorruptProcess = 0" Usage="System.Runtime.ConstrainedExecution.Consistency.MayCorruptProcess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Consistency</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="da1c3-109">例外条件の発生時に、CLR は、状態の一貫性を保証しません。つまり、この条件ではプロセスが破損する場合があります。</span><span class="sxs-lookup"><span data-stu-id="da1c3-109">In the face of exceptional conditions, the CLR makes no guarantees regarding state consistency; that is, the condition might corrupt the process.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WillNotCorruptState">
      <MemberSignature Language="C#" Value="WillNotCorruptState" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Consistency WillNotCorruptState = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState" />
      <MemberSignature Language="VB.NET" Value="WillNotCorruptState" />
      <MemberSignature Language="C++ CLI" Value="WillNotCorruptState" />
      <MemberSignature Language="F#" Value="WillNotCorruptState = 3" Usage="System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Consistency</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="da1c3-110">例外条件の発生時に、そのメソッドでは、状態が破損されないことが保証されます。</span><span class="sxs-lookup"><span data-stu-id="da1c3-110">In the face of exceptional conditions, the method is guaranteed not to corrupt state.</span></span> <span data-ttu-id="da1c3-111">(メソッドが失敗しないことは保証されません。そうではなく、そのような失敗によって状態が破損されないことが保証されます。)</span><span class="sxs-lookup"><span data-stu-id="da1c3-111">(This does not guarantee that the method will never fail; however, it does guarantee that such a failure will never corrupt state.)</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
