<Type Name="PrintSystemJobInfo" FullName="System.Printing.PrintSystemJobInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c939d79e089d263cd91b917c667108b336840a89" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78819076" /></Metadata><TypeSignature Language="C#" Value="public class PrintSystemJobInfo : System.Printing.PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintSystemJobInfo extends System.Printing.PrintSystemObject" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintSystemJobInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintSystemJobInfo&#xA;Inherits PrintSystemObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintSystemJobInfo : System::Printing::PrintSystemObject" />
  <TypeSignature Language="F#" Value="type PrintSystemJobInfo = class&#xA;    inherit PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintSystemJobInfo extends System.Printing.PrintSystemObject" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d4d8b-101">印刷ジョブを詳細に定義します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-101">Defines a print job in detail.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-102">このクラスにはパブリックコンストラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-102">This class has no public constructor.</span></span> <span data-ttu-id="d4d8b-103"><xref:System.Printing.PrintSystemJobInfo> オブジェクトへの参照を取得するには、static <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> メソッドを使用するか、<xref:System.Printing.PrintQueue.GetJob%2A>、<xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>、または <xref:System.Printing.PrintQueue.AddJob%2A>のいずれかの <xref:System.Printing.PrintQueue> インスタンスメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-103">To get a reference to a <xref:System.Printing.PrintSystemJobInfo> object, use the static <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> method or one of the following <xref:System.Printing.PrintQueue> instance methods: <xref:System.Printing.PrintQueue.GetJob%2A>, <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>, or <xref:System.Printing.PrintQueue.AddJob%2A>.</span></span>  
  
 <span data-ttu-id="d4d8b-104">ジョブが完了したかどうかなど、多くの印刷ジョブのプロパティは、アプリケーションが対応するプロパティ (<xref:System.Printing.PrintSystemJobInfo.IsCompleted%2A>) を読み取る前に、プリンターから <xref:System.Printing.PrintSystemJobInfo> オブジェクトに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-104">Many print job properties, such as whether a job is completed, must be passed from the printer to the <xref:System.Printing.PrintSystemJobInfo> object before your application reads the corresponding property (<xref:System.Printing.PrintSystemJobInfo.IsCompleted%2A>).</span></span> <span data-ttu-id="d4d8b-105"><xref:System.Printing.PrintSystemJobInfo.Refresh%2A> メソッドは、この機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-105">The <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method provides this functionality.</span></span>  
  
 <span data-ttu-id="d4d8b-106">同様に、アプリケーションが <xref:System.Printing.PrintSystemJobInfo.JobName%2A> プロパティの値を変更する場合は、その変更をコンピューターの印刷キューユーティリティに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-106">Similarly, when your application changes the value of the <xref:System.Printing.PrintSystemJobInfo.JobName%2A> property, the change must be written to the print queue utility on the computer.</span></span> <span data-ttu-id="d4d8b-107"><xref:System.Printing.PrintSystemJobInfo.Commit%2A> メソッドは、この機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-107">The <xref:System.Printing.PrintSystemJobInfo.Commit%2A> method provides this functionality.</span></span>  
  
 <span data-ttu-id="d4d8b-108">追加の書き込み可能なプロパティを持つ <xref:System.Printing.PrintSystemJobInfo> からクラスを派生させる場合は、<xref:System.Printing.PrintSystemJobInfo.Refresh%2A> メソッドと <xref:System.Printing.PrintSystemJobInfo.Commit%2A> メソッドのオーバーライドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-108">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional writable properties, then you must implement an override of the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> and <xref:System.Printing.PrintSystemJobInfo.Commit%2A> methods.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d4d8b-109"><xref:System.Printing> 名前空間内のクラスは、Windows サービスまたは ASP.NET アプリケーションまたはサービス内での使用はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-109">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="d4d8b-110">これらのアプリケーションの種類の中からこれらのクラスを使用しようとすると、サービスパフォーマンスの低下や実行時の例外など、予期しない問題が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-110">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="d4d8b-111">Windows フォームアプリケーションから印刷する場合は、<xref:System.Drawing.Printing> 名前空間を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-111">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="printSystemJobInfo.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4d8b-112">印刷ジョブをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-112">Cancels the print job.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-113">次の例は、このメソッドを使用して印刷ジョブを取り消す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-113">The following example shows how to use this method to cancel print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="printSystemJobInfo.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4d8b-114"><see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトのプロパティへの変更を、そのオブジェクトが表す実際の印刷ジョブに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-114">Writes any changes to the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object to the actual print job that the object represents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-115">書き込み可能なのは、<xref:System.Printing.PrintSystemJobInfo.JobName%2A> プロパティだけです。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-115">Only the <xref:System.Printing.PrintSystemJobInfo.JobName%2A> property is writable.</span></span> <span data-ttu-id="d4d8b-116">追加の書き込み可能なプロパティを持つ <xref:System.Printing.PrintSystemJobInfo> からクラスを派生させる場合は、独自のの実装を使用して、<xref:System.Printing.PrintSystemJobInfo.Commit%2A> メソッドと <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-116">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional writable properties, you must override the <xref:System.Printing.PrintSystemJobInfo.Commit%2A> and <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> methods with implementations of your own.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static System.Printing.PrintSystemJobInfo Get (System.Printing.PrintQueue printQueue, int jobIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Printing.PrintSystemJobInfo Get(class System.Printing.PrintQueue printQueue, int32 jobIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Get (printQueue As PrintQueue, jobIdentifier As Integer) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Printing::PrintSystemJobInfo ^ Get(System::Printing::PrintQueue ^ printQueue, int jobIdentifier);" />
      <MemberSignature Language="F#" Value="static member Get : System.Printing.PrintQueue * int -&gt; System.Printing.PrintSystemJobInfo" Usage="System.Printing.PrintSystemJobInfo.Get (printQueue, jobIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="jobIdentifier" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="d4d8b-117">印刷ジョブをホストしている印刷キュー。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-117">The print queue hosting the print job.</span></span></param>
        <param name="jobIdentifier"><span data-ttu-id="d4d8b-118">印刷ジョブの数値 ID。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-118">A numerical ID for the print job.</span></span></param>
        <summary><span data-ttu-id="d4d8b-119">指定した <see cref="T:System.Printing.PrintSystemJobInfo" /> 内にある、指定したジョブの <see cref="T:System.Printing.PrintQueue" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-119">Gets the <see cref="T:System.Printing.PrintSystemJobInfo" /> for the specified job in the specified <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="d4d8b-120"><see cref="T:System.Printing.PrintSystemJobInfo" /> に対応する <paramref name="jobIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-120">The <see cref="T:System.Printing.PrintSystemJobInfo" /> that corresponds to the <paramref name="jobIdentifier" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-121"><xref:System.Printing.PrintQueue.GetJob%2A?displayProperty=nameWithType> メソッドを同じ目的に使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-121">You can also use the <xref:System.Printing.PrintQueue.GetJob%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintQueue.GetJob(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HostingPrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue HostingPrintQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue HostingPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.HostingPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostingPrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ HostingPrintQueue { System::Printing::PrintQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintQueue : System.Printing.PrintQueue" Usage="System.Printing.PrintSystemJobInfo.HostingPrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-122">印刷ジョブをホストしている印刷キューを取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-122">Gets the print queue that is hosting the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-123">印刷ジョブを所有する印刷キューを表す <see cref="T:System.Printing.PrintQueue" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-123">A <see cref="T:System.Printing.PrintQueue" /> value that represents the print queue that owns the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-124">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-124">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingPrintServer">
      <MemberSignature Language="C#" Value="public System.Printing.PrintServer HostingPrintServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintServer HostingPrintServer" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.HostingPrintServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostingPrintServer As PrintServer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintServer ^ HostingPrintServer { System::Printing::PrintServer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintServer : System.Printing.PrintServer" Usage="System.Printing.PrintSystemJobInfo.HostingPrintServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-125">印刷ジョブの印刷キューをホストしているプリント サーバーを取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-125">Gets the print server that is hosting the print queue for the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-126">印刷ジョブを所有する <see cref="T:System.Printing.PrintServer" /> をホストしているプリント サーバー (通常はコンピューター) を表す <see cref="T:System.Printing.PrintQueue" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-126">A <see cref="T:System.Printing.PrintServer" /> value that represents the hosting print server (usually a computer) for the <see cref="T:System.Printing.PrintQueue" /> that owns the print job.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override sealed void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : bool -&gt; unit" Usage="printSystemJobInfo.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d4d8b-127">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-127"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d4d8b-128"><see cref="T:System.Printing.PrintSystemJobInfo" /> によって使用されているアンマネージド リソースを解放します。オプションでマネージド リソースも解放できます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-128">Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintSystemJobInfo" /> and optionally, releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBlocked">
      <MemberSignature Language="C#" Value="public bool IsBlocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlocked" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsBlocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBlocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBlocked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBlocked : bool" Usage="System.Printing.PrintSystemJobInfo.IsBlocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-129">印刷ジョブがブロックされているかどうか、つまり印刷されていないかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-129">Gets a value that indicates whether the print job is blocked and therefore, not printing.</span></span></summary>
        <value><span data-ttu-id="d4d8b-130">印刷ジョブがブロックされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-130"><see langword="true" /> if the print job is blocked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-131">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-131">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Printing.PrintSystemJobInfo.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-132">印刷ジョブが終了したかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-132">Gets a value that indicates whether the print job is finished.</span></span></summary>
        <value><span data-ttu-id="d4d8b-133">印刷ジョブが終了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-133"><see langword="true" /> if the print job is finished; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-134">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-134">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeleted">
      <MemberSignature Language="C#" Value="public bool IsDeleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsDeleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleted : bool" Usage="System.Printing.PrintSystemJobInfo.IsDeleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-135"><see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトで表される印刷ジョブが、印刷キューから削除されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-135">Gets a value that indicates whether the print job, which is represented by the <see cref="T:System.Printing.PrintSystemJobInfo" /> object, was deleted from the print queue.</span></span></summary>
        <value><span data-ttu-id="d4d8b-136">印刷ジョブが削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-136"><see langword="true" /> if the print job was deleted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-137">オブジェクトが逆説的の状態を削除済みとして報告できるようになったと思われるかもしれませんが、<xref:System.Printing.PrintSystemJobInfo> オブジェクトは実際の印刷ジョブのみ*を表し*ている点に注意してください。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-137">It may seem paradoxical at first that an object can report its own status as deleted, but keep in mind that the <xref:System.Printing.PrintSystemJobInfo> object only *represents* a real print job.</span></span> <span data-ttu-id="d4d8b-138">後者を印刷キューから削除しても、アプリケーション内の <xref:System.Printing.PrintSystemJobInfo> オブジェクトは自動的に破棄されません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-138">Deleting the latter from its print queue does not automatically dispose of the <xref:System.Printing.PrintSystemJobInfo> object in your application.</span></span> <span data-ttu-id="d4d8b-139">同様に、オブジェクトは、それが表す印刷ジョブが削除される前に作成された <xref:System.Printing.PrintJobInfoCollection> からは削除されません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-139">Similarly, the object is not removed from any <xref:System.Printing.PrintJobInfoCollection> that was created before the print job it represents was deleted.</span></span> <span data-ttu-id="d4d8b-140">たとえば、印刷ジョブが削除される前に <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> メソッドを実行すると、返されるコレクションには、印刷ジョブを表す <xref:System.Printing.PrintSystemJobInfo> オブジェクトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-140">For example, if the <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> method is run before the print job was deleted, the returned collection will include a <xref:System.Printing.PrintSystemJobInfo> object that represents the print job.</span></span> <span data-ttu-id="d4d8b-141">印刷ジョブが削除されても、このオブジェクトはコレクションから削除されません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-141">This object is not removed from the collection when the print job is deleted.</span></span> <span data-ttu-id="d4d8b-142">ただし、<xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> を再び実行すると、返されたコレクションには削除された印刷ジョブを表すメンバーが存在しません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-142">But if <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> is then run again, the returned collection will have no members that represent the deleted print jobs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-143">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-143">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeleting">
      <MemberSignature Language="C#" Value="public bool IsDeleting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsDeleting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleting : bool" Usage="System.Printing.PrintSystemJobInfo.IsDeleting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-144">印刷ジョブが印刷キューから削除されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-144">Gets a value that indicates whether the print job is being deleted from the print queue.</span></span></summary>
        <value><span data-ttu-id="d4d8b-145">印刷ジョブが削除されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-145"><see langword="true" /> if the print job is being deleted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-146">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-146">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInError">
      <MemberSignature Language="C#" Value="public bool IsInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInError" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInError : bool" Usage="System.Printing.PrintSystemJobInfo.IsInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-147">エラーが印刷ジョブに関連付けられているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-147">Gets a value that indicates whether an error condition is associated with the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-148">エラーが印刷ジョブに関連付けられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-148"><see langword="true" /> if an error condition is associated with the print job; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-149">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-149">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Printing.PrintSystemJobInfo.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-150">プリンターがオフラインであるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-150">Gets a value that indicates whether the printer is offline.</span></span></summary>
        <value><span data-ttu-id="d4d8b-151">プリンターがオフラインの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-151"><see langword="true" /> if the printer is offline; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-152">この値は、ホスティング <xref:System.Printing.PrintQueue>の <xref:System.Printing.PrintQueue.IsOffline%2A> プロパティから、すべての <xref:System.Printing.PrintSystemJobInfo> オブジェクトに反映されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-152">This value is propagated to all the <xref:System.Printing.PrintSystemJobInfo> objects from the <xref:System.Printing.PrintQueue.IsOffline%2A> property of the hosting <xref:System.Printing.PrintQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-153">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-153">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaperOut">
      <MemberSignature Language="C#" Value="public bool IsPaperOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaperOut" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPaperOut" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaperOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaperOut { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaperOut : bool" Usage="System.Printing.PrintSystemJobInfo.IsPaperOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-154">プリンターが、印刷ジョブに必要なサイズおよび種類の用紙を使い果たしたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-154">Gets a value that indicates whether the printer has run out of the paper size and type that the print job requires.</span></span></summary>
        <value><span data-ttu-id="d4d8b-155">プリンターが必要な用紙を使い果たした場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-155"><see langword="true" /> if the printer has run out of the required paper; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-156">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-156">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Printing.PrintSystemJobInfo.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-157">印刷ジョブが一時停止されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-157">Gets a value that indicates whether the print job is paused.</span></span></summary>
        <value><span data-ttu-id="d4d8b-158">印刷ジョブが一時停止されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-158"><see langword="true" /> if the print job is paused; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-159">印刷キュー全体を一時停止することもできます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-159">The entire print queue can also be paused.</span></span> <span data-ttu-id="d4d8b-160">たとえば、<xref:System.Printing.PrintSystemJobInfo.IsPaused%2A?displayProperty=nameWithType> の値は、<xref:System.Printing.PrintQueue.IsPaused%2A?displayProperty=nameWithType> プロパティの値が `true`されている場合でも `false` できます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-160">For example, the value of <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A?displayProperty=nameWithType> can be `false` even when the value of the <xref:System.Printing.PrintQueue.IsPaused%2A?displayProperty=nameWithType> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-161">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-161">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
      </Docs>
    </Member>
    <Member MemberName="IsPrinted">
      <MemberSignature Language="C#" Value="public bool IsPrinted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPrinted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinted : bool" Usage="System.Printing.PrintSystemJobInfo.IsPrinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-162">印刷ジョブが印刷を実行したかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-162">Gets a value that indicates whether the print job printed.</span></span></summary>
        <value><span data-ttu-id="d4d8b-163">印刷ジョブが印刷を実行した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-163"><see langword="true" /> if the print job has printed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-164">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-164">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrinting">
      <MemberSignature Language="C#" Value="public bool IsPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinting : bool" Usage="System.Printing.PrintSystemJobInfo.IsPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-165">印刷ジョブが印刷を実行しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-165">Gets a value that indicates whether the print job is being printed.</span></span></summary>
        <value><span data-ttu-id="d4d8b-166">プリンターが印刷している場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-166"><see langword="true" /> if the printer is printing; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-167">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-167">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRestarted">
      <MemberSignature Language="C#" Value="public bool IsRestarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestarted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsRestarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRestarted : bool" Usage="System.Printing.PrintSystemJobInfo.IsRestarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-168">印刷ジョブが再開されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-168">Gets a value that indicates whether the print job has been restarted.</span></span></summary>
        <value><span data-ttu-id="d4d8b-169">プリンターが印刷している場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-169"><see langword="true" /> if the printer is printing; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-170">ジョブを再起動すると、ジョブ全体が印刷されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-170">When a job is restarted, it prints in its entirety.</span></span> <span data-ttu-id="d4d8b-171">これに対して、<xref:System.Printing.PrintSystemJobInfo.Resume%2A> メソッドを使用して再起動すると、ジョブが一時停止された時点でジョブが再開されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-171">Contrast restarting with using the <xref:System.Printing.PrintSystemJobInfo.Resume%2A> method, which resumes a job at the point it was paused.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="IsRetained">
      <MemberSignature Language="C#" Value="public bool IsRetained { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRetained" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsRetained" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRetained As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRetained { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRetained : bool" Usage="System.Printing.PrintSystemJobInfo.IsRetained" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-172">印刷ジョブが印刷後にキューに保存されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-172">Gets a value that indicates whether the print job was saved in the queue after it printed.</span></span></summary>
        <value><span data-ttu-id="d4d8b-173">印刷ジョブが保存された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-173"><see langword="true" /> if the print job was saved; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-174"><xref:System.Printing.PrintQueue> オブジェクトの <xref:System.Printing.PrintQueue.KeepPrintedJobs%2A> プロパティが `true` に設定されている場合、およびキューのプロパティが <xref:System.Printing.PrintQueue>の <xref:System.Printing.PrintQueue.Commit%2A> メソッドでコミットされている場合、印刷キューは印刷ジョブを保持します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-174">A print queue retains printed jobs if the <xref:System.Printing.PrintQueue.KeepPrintedJobs%2A> property of the <xref:System.Printing.PrintQueue> object is set to `true` and if the properties of the queue have been committed with the <xref:System.Printing.PrintQueue.Commit%2A> method of the <xref:System.Printing.PrintQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpooling">
      <MemberSignature Language="C#" Value="public bool IsSpooling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpooling" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsSpooling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpooling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpooling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpooling : bool" Usage="System.Printing.PrintSystemJobInfo.IsSpooling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-175">印刷ジョブがスプールされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-175">Gets a value that indicates whether the print job is being spooled.</span></span></summary>
        <value><span data-ttu-id="d4d8b-176">印刷ジョブがスプールされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-176"><see langword="true" /> if the print job is being spooled; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-177">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-177">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInterventionRequired">
      <MemberSignature Language="C#" Value="public bool IsUserInterventionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserInterventionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsUserInterventionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserInterventionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserInterventionRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUserInterventionRequired : bool" Usage="System.Printing.PrintSystemJobInfo.IsUserInterventionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-178">プリンターがユーザーの介入を必要としているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-178">Gets a value that indicates whether the printer needs user intervention.</span></span></summary>
        <value><span data-ttu-id="d4d8b-179">ユーザーの介入を必要としている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-179"><see langword="true" /> if user intervention is needed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-180">この値は、ホスティング <xref:System.Printing.PrintQueue>の <xref:System.Printing.PrintQueue.NeedUserIntervention%2A> プロパティから、すべての <xref:System.Printing.PrintSystemJobInfo> オブジェクトに反映されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-180">This value propagates to all <xref:System.Printing.PrintSystemJobInfo> objects from the <xref:System.Printing.PrintQueue.NeedUserIntervention%2A> property of the hosting <xref:System.Printing.PrintQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-181">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-181">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobIdentifier">
      <MemberSignature Language="C#" Value="public int JobIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobIdentifier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobIdentifier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.JobIdentifier : int" Usage="System.Printing.PrintSystemJobInfo.JobIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-182">印刷ジョブの ID 番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-182">Gets the identification number for the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-183">印刷ジョブを識別する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-183">An <see cref="T:System.Int32" /> that identifies the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-184">使用される番号付けシステムは、プリントサーバーのオペレーティングシステムと、プリントサーバーがコンピューターとプリントサーバーのどちらのアプライアンスであるかによって決まります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-184">Which numbering system is used is determined by the operating system of the print server and whether the print server is a computer or a print server appliance.</span></span> <span data-ttu-id="d4d8b-185">たとえば、Microsoft Windows XP 用のオペレーティングシステムでは、プリントサーバーの電源が入っている場合、すべての印刷キューが空の場合、サーバー上ですべてのユーザーおよび任意のキューに送信された最初の印刷ジョブが ID 番号2に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-185">For example, the operating system for Microsoft Windows XP determines the numbering in this way: when a print server is turned on, if all its print queues are empty, the first print job submitted on the server by any user and to any queue is assigned ID number 2.</span></span> <span data-ttu-id="d4d8b-186">サーバー上の後続の各ジョブには、そのサーバー上の前の印刷ジョブよりも1つ大きい数値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-186">Each subsequent job on the server is assigned a number that is one greater than the previous print job on that server.</span></span>  
  
 <span data-ttu-id="d4d8b-187">印刷ジョブの印刷キューは、その番号に影響しません。つまり、キュー a、QueueB、およびキュー a にジョブが送信された場合、その順序でキュー a には job 2 と4が、QueueB にはジョブ3が含まれます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-187">The print queue for the print job has no effect on its number: if jobs are sent to QueueA, QueueB, and QueueA, in that order, then QueueA has jobs 2 and 4, and QueueB has job 3.</span></span>  
  
 <span data-ttu-id="d4d8b-188">ジョブに数字が割り当てられた後、他のジョブが印刷またはキャンセルされた場合や、サーバーが再起動された場合でも、数値は変化しません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-188">After a job is assigned a number, the number never changes, even if other jobs finish printing or are canceled, or if the server is restarted.</span></span> <span data-ttu-id="d4d8b-189">サーバーの再起動時に1つ以上のキューにジョブが既に存在する場合、最初の新しいジョブには、サーバーを起動したときにキューに登録されていた番号が最も大きいジョブよりも1つ大きい数値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-189">If there are already jobs in one or more queues when the server is restarted, the first new job is assigned a number that is one greater than the highest numbered job that was in the queue when the server started.</span></span> <span data-ttu-id="d4d8b-190">ただし、再起動するまでは、プリントサーバーは数値を再利用しません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-190">However, until it restarts, a print server does not reuse a number.</span></span> <span data-ttu-id="d4d8b-191">番号が最も大きいジョブが印刷前にキャンセルされた場合でも、次のジョブは1つ大きい数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-191">Even if the highest numbered job is canceled before it is printed, the next job gets a number that is one higher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-192">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-192">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobName">
      <MemberSignature Language="C#" Value="public string JobName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JobName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobName" />
      <MemberSignature Language="VB.NET" Value="Public Property JobName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ JobName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.JobName : string with get, set" Usage="System.Printing.PrintSystemJobInfo.JobName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-193">印刷ジョブの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-193">Gets or sets a name for the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-194">印刷ジョブの <see cref="T:System.String" /> 名。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-194">A <see cref="T:System.String" /> name for the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-195">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-195">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobSize">
      <MemberSignature Language="C#" Value="public int JobSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobSize" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.JobSize : int" Usage="System.Printing.PrintSystemJobInfo.JobSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-196">印刷ジョブのサイズ (バイト単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-196">Get the size, in bytes, of the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-197">印刷ジョブのサイズ (バイト単位) を示す <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-197">An <see cref="T:System.Int32" /> that states the size, in bytes, of the print job.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JobStatus">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobStatus JobStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintJobStatus JobStatus" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobStatus As PrintJobStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobStatus JobStatus { System::Printing::PrintJobStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.JobStatus : System.Printing.PrintJobStatus" Usage="System.Printing.PrintSystemJobInfo.JobStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-198">印刷ジョブの現在のステータスを取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-198">Gets the current status of the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-199"><see cref="T:System.Printing.PrintJobStatus" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-199">A <see cref="T:System.Printing.PrintJobStatus" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-200">このメソッドを使用すると、<xref:System.Printing.PrintSystemJobInfo.IsPrinting%2A> や <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A>など、各ステータスプロパティを個別にチェックすることを回避できます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-200">This method gives you a means to avoid individually checking each of the status properties, such as <xref:System.Printing.PrintSystemJobInfo.IsPrinting%2A> and <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-201">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-201">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobattributes)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobattributes)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream JobStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream JobStream" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ JobStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JobStream : System.IO.Stream" Usage="System.Printing.PrintSystemJobInfo.JobStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-202">印刷ジョブの <see cref="T:System.IO.Stream" /> への参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-202">Gets a reference to the <see cref="T:System.IO.Stream" /> of the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-203">印刷ジョブを格納している <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-203">A <see cref="T:System.IO.Stream" /> that contains the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-204">Windows 8 以降のバージョンのオペレーティングシステムの .NET Framework 4.5 以降では、このストリームに書き込まれるデータは、XPS 形式のパッケージストリームとして使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-204">Starting with the .NET Framework 4.5 on Windows 8 and later versions of the operating system, data written to this stream must be in XPS format as a package stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfPages">
      <MemberSignature Language="C#" Value="public int NumberOfPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfPages" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.NumberOfPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfPages { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfPages : int" Usage="System.Printing.PrintSystemJobInfo.NumberOfPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-205">印刷ジョブのページ数を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-205">Gets the number of pages in the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-206">印刷ジョブのページ数を示す <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-206">An <see cref="T:System.Int32" /> that states the number of pages in the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-207">ページとは、用紙またはその他の印刷メディアの片面です。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-207">A page is one side of a sheet of paper or other print media.</span></span>  
  
 <span data-ttu-id="d4d8b-208">次の表は、このプロパティの値と使用されるシート数を示しています。印刷ジョブが両面印刷 (両面) を呼び出すかどうか、シートごとに複数のページを呼び出すかどうか、または両方を呼び出すかどうかによって影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-208">The following table shows how the value of this property, and the number of sheets used, is affected by whether the print job calls for two-sided printing (duplexing), whether it calls for multiple pages-per-sheet, or whether it calls for both.</span></span>  
  
### <a name="how-duplexing-and-multipage-printing-affect-printing"></a><span data-ttu-id="d4d8b-209">両面印刷およびマルチページ印刷が印刷に与える影響</span><span class="sxs-lookup"><span data-stu-id="d4d8b-209">How duplexing and multipage printing affect printing</span></span>  
  
|<span data-ttu-id="d4d8b-210">インプリメント</span><span class="sxs-lookup"><span data-stu-id="d4d8b-210">Duplexing</span></span>|<span data-ttu-id="d4d8b-211">シートごとのページ数</span><span class="sxs-lookup"><span data-stu-id="d4d8b-211">Pages per sheet</span></span>|<span data-ttu-id="d4d8b-212">NumberOfPages の値</span><span class="sxs-lookup"><span data-stu-id="d4d8b-212">Value of NumberOfPages</span></span>|<span data-ttu-id="d4d8b-213">用紙の物理的なシート数</span><span class="sxs-lookup"><span data-stu-id="d4d8b-213">Number of physical sheets of paper</span></span>|  
|---------------|---------------------|----------------------------|----------------------------------------|  
|<span data-ttu-id="d4d8b-214">いいえ</span><span class="sxs-lookup"><span data-stu-id="d4d8b-214">No</span></span>|<span data-ttu-id="d4d8b-215">1</span><span class="sxs-lookup"><span data-stu-id="d4d8b-215">1</span></span>|<span data-ttu-id="d4d8b-216">ドキュメント内のページ数と同じです。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-216">Identical to the number of pages in the document.</span></span>|<span data-ttu-id="d4d8b-217">ドキュメント内のページ数と同じです。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-217">Identical to the number of pages in the document.</span></span>|  
|<span data-ttu-id="d4d8b-218">はい</span><span class="sxs-lookup"><span data-stu-id="d4d8b-218">Yes</span></span>|<span data-ttu-id="d4d8b-219">1</span><span class="sxs-lookup"><span data-stu-id="d4d8b-219">1</span></span>|<span data-ttu-id="d4d8b-220">ドキュメント内のページ数と同じです。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-220">Identical to the number of pages in the document.</span></span>|<span data-ttu-id="d4d8b-221">ドキュメントページ÷ 2 (切り上げ)。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-221">Document pages ÷ 2 (rounded up).</span></span>|  
|<span data-ttu-id="d4d8b-222">いいえ</span><span class="sxs-lookup"><span data-stu-id="d4d8b-222">No</span></span>|<span data-ttu-id="d4d8b-223">複数</span><span class="sxs-lookup"><span data-stu-id="d4d8b-223">Multiple</span></span>|<span data-ttu-id="d4d8b-224">ドキュメントページ÷用紙あたりのページ数 (切り上げ)。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-224">Document pages ÷ Pages per sheet (rounded up).</span></span>|<span data-ttu-id="d4d8b-225">ドキュメントページ÷用紙あたりのページ数 (切り上げ)。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-225">Document pages ÷ Pages per sheet (rounded up).</span></span>|  
|<span data-ttu-id="d4d8b-226">はい</span><span class="sxs-lookup"><span data-stu-id="d4d8b-226">Yes</span></span>|<span data-ttu-id="d4d8b-227">複数</span><span class="sxs-lookup"><span data-stu-id="d4d8b-227">Multiple</span></span>|<span data-ttu-id="d4d8b-228">ドキュメントページ÷用紙あたりのページ数 (切り上げ)。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-228">Document pages ÷ Pages per sheet (rounded up).</span></span>|<span data-ttu-id="d4d8b-229">[ドキュメントページ/シートあたりのページ] ÷ 2 (切り上げ)。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-229">[Document pages ÷ Pages per sheet] ÷ 2 (rounded up).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintTicket.Duplexing" />
        <altmember cref="P:System.Printing.PrintTicket.PagesPerSheet" />
      </Docs>
    </Member>
    <Member MemberName="NumberOfPagesPrinted">
      <MemberSignature Language="C#" Value="public int NumberOfPagesPrinted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfPagesPrinted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfPagesPrinted As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfPagesPrinted { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfPagesPrinted : int" Usage="System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-230">既に印刷したページ数を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-230">Gets the number of pages that have already printed.</span></span></summary>
        <value><span data-ttu-id="d4d8b-231">既に印刷したページ数を示す <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-231">An <see cref="T:System.Int32" /> that states the number of pages that have already printed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="printSystemJobInfo.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4d8b-232"><see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> が実行されるまで、ジョブの印刷を停止します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-232">Halts printing of the job until <see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> runs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-233">別のジョブがキューにある場合は、現在のジョブが一時停止しているときに印刷が開始されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-233">If another job is in the queue, it begins printing when the current job is paused.</span></span>  
  
 <span data-ttu-id="d4d8b-234">ホスティング <xref:System.Printing.PrintQueue> には、<xref:System.Printing.PrintQueue.Pause%2A> メソッドと <xref:System.Printing.PrintQueue.Resume%2A> メソッドもあります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-234">The hosting <xref:System.Printing.PrintQueue> also has <xref:System.Printing.PrintQueue.Pause%2A> and <xref:System.Printing.PrintQueue.Resume%2A> methods.</span></span> <span data-ttu-id="d4d8b-235">印刷キューが一時停止されている場合、個々のジョブを再開しても、ジョブは印刷を再開しません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-235">If the print queue is paused, resuming an individual job does not cause that job to resume printing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
      </Docs>
    </Member>
    <Member MemberName="PositionInPrintQueue">
      <MemberSignature Language="C#" Value="public int PositionInPrintQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionInPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.PositionInPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositionInPrintQueue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionInPrintQueue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PositionInPrintQueue : int" Usage="System.Printing.PrintSystemJobInfo.PositionInPrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-236">印刷キュー内の印刷ジョブの位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-236">Gets the print job's place in the print queue.</span></span></summary>
        <value><span data-ttu-id="d4d8b-237">キュー内の印刷ジョブの位置を示す <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-237">An <see cref="T:System.Int32" /> that states the print job's place in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobPriority Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintJobPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.Priority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Priority As PrintJobPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobPriority Priority { System::Printing::PrintJobPriority get(); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Printing.PrintJobPriority" Usage="System.Printing.PrintSystemJobInfo.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-238">印刷キュー内の他の印刷ジョブと比較した印刷ジョブの優先順位を表す、数字以外の表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-238">Gets a non-numerical expression that represents the priority of the print job relative to other jobs in the print queue.</span></span></summary>
        <value><span data-ttu-id="d4d8b-239">印刷ジョブの優先順位を、<see cref="T:System.Printing.PrintJobPriority" />、<see cref="F:System.Printing.PrintJobPriority.Maximum" />、<see cref="F:System.Printing.PrintJobPriority.Minimum" />、または <see cref="F:System.Printing.PrintJobPriority.Default" /> で表す <see cref="F:System.Printing.PrintJobPriority.None" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-239">A <see cref="T:System.Printing.PrintJobPriority" /> that represents the priority of the print job as <see cref="F:System.Printing.PrintJobPriority.Maximum" />, <see cref="F:System.Printing.PrintJobPriority.Minimum" />, <see cref="F:System.Printing.PrintJobPriority.Default" />, or <see cref="F:System.Printing.PrintJobPriority.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="printSystemJobInfo.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4d8b-240"><see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトのプロパティを更新して、その値をオブジェクトが表す実際の印刷ジョブの値と一致させます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-240">Updates the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object so that their values match the values of the actual print job that the object represents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-241"><xref:System.Printing.PrintSystemJobInfo> オブジェクトのプロパティに加えた変更は、<xref:System.Printing.PrintSystemJobInfo.Commit%2A> メソッドを使用して実際の印刷ジョブに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-241">Any changes that you make to the properties of a <xref:System.Printing.PrintSystemJobInfo> object must be written to the actual print job by using the <xref:System.Printing.PrintSystemJobInfo.Commit%2A> method.</span></span> <span data-ttu-id="d4d8b-242">コミットしていない変更は、<xref:System.Printing.PrintSystemJobInfo.Refresh%2A> メソッドの実行時に失われます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-242">Any changes that you have not committed are lost when the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method runs.</span></span>  
  
 <span data-ttu-id="d4d8b-243">追加のプロパティを持つ <xref:System.Printing.PrintSystemJobInfo> からクラスを派生させる場合は、独自のを実装して、<xref:System.Printing.PrintSystemJobInfo.Refresh%2A> メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-243">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional properties, then you must override the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method with an implementation of your own.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Commit" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="printSystemJobInfo.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4d8b-244">最初から印刷ジョブを再開します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-244">Restarts a print job from the beginning.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-245">必要に応じて、一時停止していた印刷ジョブを再開する <xref:System.Printing.PrintSystemJobInfo.Resume%2A> メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-245">Optionally, you can use the <xref:System.Printing.PrintSystemJobInfo.Resume%2A> method, which restarts a paused print job, starting at the point it was paused.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="printSystemJobInfo.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4d8b-246">一時停止された印刷ジョブの印刷を再開します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-246">Resumes the printing of a paused print job.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-247">ホスティング <xref:System.Printing.PrintQueue> には、<xref:System.Printing.PrintQueue.Pause%2A> メソッドと <xref:System.Printing.PrintQueue.Resume%2A> メソッドもあります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-247">The hosting <xref:System.Printing.PrintQueue> also has <xref:System.Printing.PrintQueue.Pause%2A> and <xref:System.Printing.PrintQueue.Resume%2A> methods.</span></span> <span data-ttu-id="d4d8b-248">印刷キューが一時停止されている場合、個々のジョブを再開しても印刷ジョブの印刷は再開されません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-248">If the print queue is paused, resuming an individual job does not resume the printing of the print job.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-249">次の例は、このメソッドを使用して、一時停止中の印刷ジョブを再開する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-249">The following example shows how to use this method to resume a paused print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
      </Docs>
    </Member>
    <Member MemberName="StartTimeOfDay">
      <MemberSignature Language="C#" Value="public int StartTimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartTimeOfDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeOfDay : int" Usage="System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-250">印刷ジョブが印刷を開始できる最も早い時刻を取得します。この時刻は、世界協定時刻 (UTC) (グリニッジ標準時 [GMT] とも呼ばれます) の午前 0 時からの分数で表現されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-250">Gets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</span></span></summary>
        <value><span data-ttu-id="d4d8b-251">印刷ジョブの開始可能な最も早い時刻を指定している <see cref="T:System.Int32" />。この時刻は、午前 0 時 (UTC) からの分数で表現されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-251">An <see cref="T:System.Int32" /> specifying the earliest possible start time for the print job, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="d4d8b-252">最大値は 1439 です。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-252">The maximum value is 1439.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-253">この値は、ジョブがキューに入ったときにホスト <xref:System.Printing.PrintQueue> の <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> プロパティから、各 <xref:System.Printing.PrintSystemJobInfo> オブジェクトに反映されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-253">This value is propagated to each <xref:System.Printing.PrintSystemJobInfo> object from the <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> property of the hosting <xref:System.Printing.PrintQueue> at the time the job enters the queue.</span></span> <span data-ttu-id="d4d8b-254"><xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> が変更された場合、<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> より前の <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A?displayProperty=nameWithType> 値は <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>の値に変更されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-254">If <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> is changed, then any <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A?displayProperty=nameWithType> value that is earlier than <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> is changed to the value of <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d4d8b-255">ジョブがキューに追加された後は、[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]を通じて新しい <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> 値を与えることができます。これは <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>より前のものではありません。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-255">After the job is added to the queue, it can be given a new <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> value through the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], provided that it is not earlier than <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d4d8b-256">UTC タイムゾーンを使用していない場合は、60の倍数を加算または減算して、タイムゾーンの正しい時刻を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-256">If you are not in the UTC time zone, you must add or subtract multiples of 60 to get the correct time for your time zone.</span></span> <span data-ttu-id="d4d8b-257">たとえば、北米の太平洋標準時ゾーンで、夏時間が有効でない場合、現地時刻は UTC より8時間前になります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-257">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="d4d8b-258"><xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> が960を返した場合は、UTC (960/60 = 16) で 16:00 (4:00 PM) を意味します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-258">If <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> returns 960, that means 16:00 (4:00 PM) in UTC (because 960/60 = 16).</span></span> <span data-ttu-id="d4d8b-259">これを太平洋標準時に変換するには、480 (= 8 \* 60) 分を減算する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-259">To convert this to Pacific Time, you must subtract 480 (= 8 \* 60) minutes.</span></span>  
  
 <span data-ttu-id="d4d8b-260">また、時間は24時間後に0にロールオーバーされることに注意する必要があります (つまり、1439th minute の後)。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-260">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="d4d8b-261"><xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> が120を返す場合は、UTC での 2:00 AM を意味します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-261">If <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> returns 120, that means 2:00 AM in UTC.</span></span> <span data-ttu-id="d4d8b-262">これを太平洋標準時に変換するには、480分を減算する必要があります。この場合、結果は-360 になります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-262">To convert this to Pacific Time, you must subtract 480 minutes, which results in -360.</span></span> <span data-ttu-id="d4d8b-263">意味のある正の値を取得するには、1440年の合計分数に負の数を加算します。その結果、最終的な値は 1080 (6:00 PM) 太平洋標準時になります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-263">To get a positive value that has meaning, add the negative number to the total minutes in a day, 1440, resulting in a final value of 1080 (6:00 PM) Pacific Time.</span></span>  
  
 <span data-ttu-id="d4d8b-264">タイムゾーン調整を行う方法については、<xref:System.TimeZone>、<xref:System.TimeSpan>、および <xref:System.DateTime> に関する説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-264">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> for methods that help make time-zone adjustments.</span></span>  
  
 <span data-ttu-id="d4d8b-265">プリンターが常に使用可能な場合、このプロパティはすべてのタイムゾーンで0を返します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-265">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-266">次の例は、問題のある印刷ジョブを診断するプロセスの一部として、このプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-266">The following example shows how to use this property as part of the process of diagnosing a problematic print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#usingjobstartanduntiltimes)]
 [!code-csharp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#usingjobstartanduntiltimes)]
 [!code-vb[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#usingjobstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="Submitter">
      <MemberSignature Language="C#" Value="public string Submitter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Submitter" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.Submitter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Submitter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Submitter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Submitter : string" Usage="System.Printing.PrintSystemJobInfo.Submitter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-267">印刷ジョブを送信したユーザーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-267">Gets the name of the user who submitted the print job.</span></span></summary>
        <value><span data-ttu-id="d4d8b-268">印刷ジョブを送信したユーザーを識別する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-268">A <see cref="T:System.String" /> that identifies the user who submitted the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4d8b-269">次の例は、印刷ジョブの問題を診断するときにこのプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-269">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeJobSubmitted">
      <MemberSignature Language="C#" Value="public DateTime TimeJobSubmitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeJobSubmitted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.TimeJobSubmitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeJobSubmitted As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeJobSubmitted { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeJobSubmitted : DateTime" Usage="System.Printing.PrintSystemJobInfo.TimeJobSubmitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-270">印刷ジョブが送信される日時を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-270">Gets the date and time that the print job is submitted.</span></span></summary>
        <value><span data-ttu-id="d4d8b-271">印刷ジョブが送信される日時を格納する <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-271">A <see cref="T:System.DateTime" /> object containing the date and time that the print job is submitted.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSinceStartedPrinting">
      <MemberSignature Language="C#" Value="public int TimeSinceStartedPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TimeSinceStartedPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeSinceStartedPrinting As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TimeSinceStartedPrinting { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeSinceStartedPrinting : int" Usage="System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-272">印刷ジョブの印刷開始後の時間 (ミリ秒単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-272">Gets the time, in milliseconds, since the print job started printing.</span></span></summary>
        <value><span data-ttu-id="d4d8b-273">印刷ジョブの開始後の時間 (ミリ秒単位) を表す <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-273">An <see cref="T:System.Int32" /> that represents the time, in milliseconds, since the print job started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UntilTimeOfDay">
      <MemberSignature Language="C#" Value="public int UntilTimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UntilTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UntilTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UntilTimeOfDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UntilTimeOfDay : int" Usage="System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4d8b-274">印刷ジョブが印刷を開始できる最も遅い時刻を取得します。この時刻は、世界協定時刻 (UTC) (グリニッジ標準時 [GMT] とも呼ばれます) の午前 0 時からの分数で表現されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-274">Gets the last time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</span></span></summary>
        <value><span data-ttu-id="d4d8b-275">ジョブが印刷できる最も遅い時刻を指定している <see cref="T:System.Int32" />。この時刻は、午前 0 時 (UTC) からの分数で表現されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-275">An <see cref="T:System.Int32" /> that specifies the last time that the job can print, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="d4d8b-276">最大値は 1439 です。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-276">The maximum value is 1439.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4d8b-277">この値は、ジョブがキューに入ったときにホスト <xref:System.Printing.PrintQueue> の <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> プロパティから、各 <xref:System.Printing.PrintSystemJobInfo> オブジェクトに反映されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-277">This value is propagated to each <xref:System.Printing.PrintSystemJobInfo> object from the <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> property of the hosting <xref:System.Printing.PrintQueue> at the time the job enters the queue.</span></span> <span data-ttu-id="d4d8b-278"><xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> が変更された場合、<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> より後の <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A?displayProperty=nameWithType> 値は <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>の値に変更されます。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-278">If <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> is changed, then any <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A?displayProperty=nameWithType> value that is later than <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> is changed to the value of <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d4d8b-279">ジョブがキューに追加された後、[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]を通じて新しい <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> 値を与えることができます (<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>よりも後である場合)。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-279">After the job is added to the queue, it can be given a new <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> value through the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], provided that it is not later than <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d4d8b-280">UTC タイムゾーンを使用していない場合は、60の倍数を加算または減算して、タイムゾーンの正しい時刻を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-280">If you are not in the UTC time zone, you must add or subtract multiples of 60 to get the correct time for your time zone.</span></span> <span data-ttu-id="d4d8b-281">たとえば、北米の太平洋標準時ゾーンで、夏時間が有効でない場合、現地時刻は UTC より8時間前になります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-281">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="d4d8b-282"><xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> が960を返した場合は、UTC (960/60 = 16) で 16:00 (4:00 PM) を意味します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-282">If <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> returns 960, that means 16:00 (4:00 PM) in UTC (because 960/60 = 16).</span></span> <span data-ttu-id="d4d8b-283">これを太平洋標準時に変換するには、480 (= 8 \* 60) 分を減算する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-283">To convert this to Pacific Time, you must subtract 480 (= 8 \* 60) minutes.</span></span>  
  
 <span data-ttu-id="d4d8b-284">また、時間は24時間後に0にロールオーバーされることに注意する必要があります (つまり、1439th minute の後)。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-284">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="d4d8b-285"><xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> が120を返す場合は、UTC での 2:00 AM を意味します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-285">If <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> returns 120, that means 2:00 AM in UTC.</span></span> <span data-ttu-id="d4d8b-286">これを太平洋標準時に変換するには、480分を減算する必要があります。この場合、結果は-360 になります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-286">To convert this to Pacific Time, you must subtract 480 minutes, which results in -360.</span></span> <span data-ttu-id="d4d8b-287">意味のある正の値を取得するには、1440年の合計分数に負の数を加算します。その結果、最終的な値は 1080 (6:00 PM) 太平洋標準時になります。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-287">To get a positive value that has meaning, add the negative number to the total minutes in a day, 1440, resulting in a final value of 1080 (6:00 PM) Pacific Time.</span></span>  
  
 <span data-ttu-id="d4d8b-288">タイムゾーン調整を行う方法については、<xref:System.TimeZone>、<xref:System.TimeSpan>、および <xref:System.DateTime> に関する説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-288">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> for methods that help make time-zone adjustments.</span></span>  
  
 <span data-ttu-id="d4d8b-289">プリンターが常に使用可能な場合、このプロパティはすべてのタイムゾーンで0を返します。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-289">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4d8b-290">次の例は、問題のある印刷ジョブを診断するプロセスの一部として、このプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d4d8b-290">The following example shows how to use this property as part of the process of diagnosing a problematic print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#usingjobstartanduntiltimes)]
 [!code-csharp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#usingjobstartanduntiltimes)]
 [!code-vb[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#usingjobstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      </Docs>
    </Member>
  </Members>
</Type>
