<Type Name="PrintQueueCollection" FullName="System.Printing.PrintQueueCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a41a6f2ffc11e01600e2f2d3b00bc13b5eb3c03" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83950659" /></Metadata><TypeSignature Language="C#" Value="public class PrintQueueCollection : System.Printing.PrintSystemObjects, IDisposable, System.Collections.Generic.IEnumerable&lt;System.Printing.PrintQueue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintQueueCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintQueue&gt;, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintQueueCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintQueueCollection&#xA;Inherits PrintSystemObjects&#xA;Implements IDisposable, IEnumerable(Of PrintQueue)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintQueueCollection : System::Printing::PrintSystemObjects, IDisposable, System::Collections::Generic::IEnumerable&lt;System::Printing::PrintQueue ^&gt;" />
  <TypeSignature Language="F#" Value="type PrintQueueCollection = class&#xA;    inherit PrintSystemObjects&#xA;    interface seq&lt;PrintQueue&gt;&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintQueueCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintQueue&gt;, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObjects</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Printing.PrintQueue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="25327-101"><see cref="T:System.Printing.PrintQueue" /> オブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="25327-101">Represents a collection of <see cref="T:System.Printing.PrintQueue" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="25327-102"><xref:System.Printing> 名前空間内のクラスは、Windows サービスまたは ASP.NET アプリケーションまたはサービス内での使用はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="25327-102">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="25327-103">これらのアプリケーションの種類の中からこれらのクラスを使用しようとすると、サービスパフォーマンスの低下や実行時の例外など、予期しない問題が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="25327-103">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="25327-104">Windows フォームアプリケーションから印刷する場合は、<xref:System.Drawing.Printing> 名前空間を参照してください。</span><span class="sxs-lookup"><span data-stu-id="25327-104">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25327-105">次の例は、このコレクションを使用してプリンターの機能をテストし、それらを活用するように印刷ジョブを構成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="25327-105">The following example shows how to use this collection to test a printer's capabilities and configure a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25327-106"><see cref="T:System.Printing.PrintQueueCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="25327-106">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25327-107"><see cref="T:System.Printing.PrintQueueCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="25327-107">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection (System.Printing.PrintServer printServer, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, propertyFilter As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection(System::Printing::PrintServer ^ printServer, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueueCollection : System.Printing.PrintServer * string[] -&gt; System.Printing.PrintQueueCollection" Usage="new System.Printing.PrintQueueCollection (printServer, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="25327-108">コレクションをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="25327-108">The print server that hosts the collection.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="25327-109">初期化されているコレクション メンバーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="25327-109">The properties of the collection members that are initialized.</span></span></param>
        <summary><span data-ttu-id="25327-110">指定した <see cref="T:System.Printing.PrintServer" /> の <see cref="T:System.Printing.PrintQueueCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="25327-110">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class for the specified <see cref="T:System.Printing.PrintServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25327-111">文字列配列に列挙されているプロパティのみが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="25327-111">Only the properties that are listed in the string array are initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection (System.Printing.PrintServer printServer, string[] propertyFilter, System.Printing.EnumeratedPrintQueueTypes[] enumerationFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string[] propertyFilter, valuetype System.Printing.EnumeratedPrintQueueTypes[] enumerationFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, propertyFilter As String(), enumerationFlag As EnumeratedPrintQueueTypes())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection(System::Printing::PrintServer ^ printServer, cli::array &lt;System::String ^&gt; ^ propertyFilter, cli::array &lt;System::Printing::EnumeratedPrintQueueTypes&gt; ^ enumerationFlag);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueueCollection : System.Printing.PrintServer * string[] * System.Printing.EnumeratedPrintQueueTypes[] -&gt; System.Printing.PrintQueueCollection" Usage="new System.Printing.PrintQueueCollection (printServer, propertyFilter, enumerationFlag)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
        <Parameter Name="enumerationFlag" Type="System.Printing.EnumeratedPrintQueueTypes[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="25327-112">コレクションをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="25327-112">The print server that hosts the collection.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="25327-113">初期化されているコレクション メンバーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="25327-113">The properties of the collection members that are initialized.</span></span></param>
        <param name="enumerationFlag"><span data-ttu-id="25327-114">コレクションに含まれる印刷キューの型を指定する配列。</span><span class="sxs-lookup"><span data-stu-id="25327-114">An array that specifies the types of print queues that are included in the collection.</span></span></param>
        <summary><span data-ttu-id="25327-115">指定した <see cref="T:System.Printing.PrintQueueCollection" /> のプリント サーバーのキューのみを含む、指定した <see cref="T:System.Printing.PrintServer" /> の <see cref="T:System.Printing.EnumeratedPrintQueueTypes" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="25327-115">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class for the specified <see cref="T:System.Printing.PrintServer" />, containing only the print server's queues of the specified <see cref="T:System.Printing.EnumeratedPrintQueueTypes" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25327-116">文字列配列に列挙されているプロパティのみが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="25327-116">Only the properties that are listed in the string array are initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Printing.PrintQueue printObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Printing.PrintQueue printObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (printObject As PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Printing::PrintQueue ^ printObject);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Printing.PrintQueue -&gt; unit" Usage="printQueueCollection.Add printObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printObject" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printObject"><span data-ttu-id="25327-117">追加される印刷キュー。</span><span class="sxs-lookup"><span data-stu-id="25327-117">The print queue that is added.</span></span></param>
        <summary><span data-ttu-id="25327-118"><see cref="T:System.Printing.PrintQueue" /> をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="25327-118">Adds a <see cref="T:System.Printing.PrintQueue" /> to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool A_0);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool A_0) cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (A_0 As Boolean)" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool A_0);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printQueueCollection.Dispose A_0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool ) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose ( As Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printQueueCollection.Dispose " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="25327-119">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25327-119"><see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <param name=""><span data-ttu-id="25327-120">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25327-120"><see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="25327-121"><see cref="T:System.Printing.PrintQueueCollection" /> オブジェクトによって使用されているアンマネージド リソースを解放します。オプションでマネージド リソースも解放できます。</span><span class="sxs-lookup"><span data-stu-id="25327-121">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintQueueCollection" />, and optionally releases the managed resources that are being used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25327-122">このメソッドは、パブリックな `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="25327-122">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="25327-123">`Dispose()` は、名前のないブール型パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="25327-123">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="25327-124"><xref:System.Object.Finalize%2A> は、パラメーターを `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="25327-124"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="25327-125">ブール型パラメーターが `true`場合、このメソッドは、この <xref:System.Printing.PrintQueueCollection> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="25327-125">When the Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueCollection> references.</span></span> <span data-ttu-id="25327-126">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="25327-126">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25327-127">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="25327-127">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="25327-128"><see langword="Dispose(Boolean)" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="25327-128">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="25327-129"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="25327-129">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="25327-130"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="25327-130">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Printing.PrintQueue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator(Of PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Printing::PrintQueue ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;" Usage="printQueueCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25327-131"><see cref="T:System.Collections.IEnumerator" /> によって閉じられたジェネリックの <see cref="T:System.Printing.PrintQueue" /> インターフェイスを実装するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="25327-131">Returns an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that has been closed with <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="25327-132">ジェネリックの <see cref="T:System.Collections.IEnumerator" /> を実装し、<see cref="T:System.Printing.PrintQueue" /> に含まれている <see cref="T:System.Printing.PrintQueueCollection" /> オブジェクトを反復処理できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="25327-132">An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25327-133">`foreach` ステートメントを使用して、コレクションのすべてのメンバーを反復処理することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="25327-133">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="25327-134"><xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> は、他のすべてのメンバーをスキップするなどして、イテレーションをカスタマイズする必要がある場合にのみ使用してください。</span><span class="sxs-lookup"><span data-stu-id="25327-134">Use <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25327-135">次の例は、この方法を使用してプリンターの機能をテストし、それらを活用するように印刷ジョブを構成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="25327-135">The following example shows how to use this method to test a printer's capabilities and configure a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonGenericEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetNonGenericEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetNonGenericEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNonGenericEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetNonGenericEnumerator();" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="printQueueCollection.GetNonGenericEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetNonGenericEnumerator() = System::Collections::IEnumerable::GetEnumerator;" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25327-136">非ジェネリックの <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="25327-136">Gets an object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface.</span></span></summary>
        <returns><span data-ttu-id="25327-137">非ジェネリックの <see cref="T:System.Collections.IEnumerator" /> を実装し、<see cref="T:System.Printing.PrintQueue" /> に含まれている <see cref="T:System.Printing.PrintQueueCollection" /> オブジェクトを反復処理できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="25327-137">An object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25327-138">`foreach` ステートメントを使用して、コレクションのすべてのメンバーを反復処理することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="25327-138">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="25327-139">他のすべてのメンバーをスキップするなどして、イテレーションをカスタマイズする必要がある場合にのみ、独自の列挙子オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="25327-139">Use your own enumerator object only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
 <span data-ttu-id="25327-140">独自の列挙子が必要な場合は、<xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A>ではなく、タイプセーフな汎用関数 <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="25327-140">If you need your own enumerator, we recommend that you use the generic, type-safe function <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> instead of <xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A>.</span></span> <span data-ttu-id="25327-141"><xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A> は、このコレクションによって実装される <xref:System.Collections.IEnumerable> インターフェイスの要件を満たすためにのみ公開されています。</span><span class="sxs-lookup"><span data-stu-id="25327-141">The <xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A> is public only to fulfill the requirements of the <xref:System.Collections.IEnumerable> interface, which is implemented by this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public static object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Printing.PrintQueueCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25327-142"><see cref="T:System.Printing.PrintQueueCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="25327-142">Gets an object that can be used to synchronize access to the <see cref="T:System.Printing.PrintQueueCollection" />.</span></span></summary>
        <value><span data-ttu-id="25327-143">コレクションへのアクセスの同期に使用できる <see cref="T:System.Object" /> です。</span><span class="sxs-lookup"><span data-stu-id="25327-143">A <see cref="T:System.Object" /> that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="printQueueCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25327-144"><see cref="T:System.Collections.IEnumerator" /> によって閉じられたジェネリックの <see cref="T:System.Printing.PrintQueue" /> インターフェイスを実装するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="25327-144">Returns an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that has been closed with <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="25327-145">ジェネリックの <see cref="T:System.Collections.IEnumerator" /> を実装し、<see cref="T:System.Printing.PrintQueue" /> に含まれている <see cref="T:System.Printing.PrintQueueCollection" /> オブジェクトを反復処理できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="25327-145">An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="25327-146">`foreach` ステートメントを使用して、コレクションのすべてのメンバーを反復処理することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="25327-146">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="25327-147"><xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> は、他のすべてのメンバーをスキップするなどして、イテレーションをカスタマイズする必要がある場合にのみ使用してください。</span><span class="sxs-lookup"><span data-stu-id="25327-147">Use <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> only when you need to customize iteration, such as by skipping every other member.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
