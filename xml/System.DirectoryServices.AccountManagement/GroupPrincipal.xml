<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55fe7d113a837fed199a641106f2625cca3a196e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75136899" /></Metadata><TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupPrincipal&#xA;Inherits Principal" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupPrincipal : System::DirectoryServices::AccountManagement::Principal" />
  <TypeSignature Language="F#" Value="type GroupPrincipal = class&#xA;    inherit Principal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1">
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>グループ アカウントをカプセル化します。 グループ アカウントは、プリンシパル オブジェクトの任意のコレクション、または管理目的で作成されたアカウントにすることができます。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">操作が実行されるサーバーまたはドメインを指定する <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />。</param>
        <summary>指定されたコンテキストを使用して、<see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 グループプリンシパルアカウントは、作成時に保持されません。 アカウントを永続化するには、<xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal (context, samAccountName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">操作が実行されるサーバーまたはドメインを指定する <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />。</param>
        <param name="samAccountName">このプリンシパルの SAM アカウント名。</param>
        <summary><see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> クラスの新しいインスタンスを初期化し、指定されたコンテキストおよび SAM アカウント名に割り当てます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 グループプリンシパルアカウントは、作成時に保持されません。 アカウントを永続化するには、<xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="groupPrincipal.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> オブジェクトのインスタンスを破棄します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された ID 値に一致するグループ プリンシパル オブジェクトを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As GroupPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">操作が実行されるサーバーまたはドメインを指定する <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />。</param>
        <param name="identityValue">グループ プリンシパルの ID。 このパラメーターは、<see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列挙体に含まれるどの形式でもかまいません。</param>
        <summary>指定された ID 値に一致するグループ プリンシパル オブジェクトを返します。</summary>
        <returns>指定された ID の値と型に一致する <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> オブジェクト。一致するオブジェクトが検出されなかった場合は null。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">現在のグループ オブジェクトに一致する複数のグループ プリンシパル オブジェクトが検出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * System.DirectoryServices.AccountManagement.IdentityType * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityType, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">操作が実行されるサーバーまたはドメインを指定する <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />。</param>
        <param name="identityType"><see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> パラメーターの形式を指定する <paramref name="identityValue" /> 列挙値。</param>
        <param name="identityValue">グループ プリンシパルの ID。 このパラメーターは、<see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列挙体に含まれるどの形式でもかまいません。</param>
        <summary>指定された ID の型と値に一致するグループ プリンシパル オブジェクトを返します。 このバージョンの <see cref="Overload:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> メソッドでは、ID 値の形式が指定されます。</summary>
        <returns>指定された ID の値と型に一致する <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />。一致するオブジェクトが検出されなかった場合は null。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">現在のグループ オブジェクトに一致する複数のグループ プリンシパル オブジェクトが検出されました。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">ID の値は有効な <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列挙値ではありません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>グループに格納されているプリンシパル オブジェクトのコレクションを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers();" />
      <MemberSignature Language="F#" Value="member this.GetMembers : unit -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>グループに格納されているプリンシパル オブジェクトのコレクションを返します。</summary>
        <returns>グループのメンバーであるプリンシパル オブジェクトを格納する <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> オブジェクト。グループにメンバーがない場合は空のコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、現在のグループを再帰的に検索しません。 したがって、グループオブジェクトはプリンシパルオブジェクトコレクションで返される場合があります。  
  
 メンバーはコンテキストに対して返されません。 たとえば、"CN = AD DS、DC = Fabrikam, DC = com" に基づいているコンテキストがある場合、PrincipalFindResult set には、"CN = NormalUsers, DC = Fabrikam, DC = com" の下にあるグループメンバーが含まれますが、これらのメンバーは、検索されるコンテキスト。 返されたプリンシパルコレクションには、グループとは異なるストアにあるメンバーも含まれる場合があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (recursive As Boolean) As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers(bool recursive);" />
      <MemberSignature Language="F#" Value="member this.GetMembers : bool -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">グループを再帰的に検索するかどうかを示すブール値。</param>
        <summary>グループに格納されているプリンシパル オブジェクトのコレクションを返します。 再帰フラグが true に設定されている場合、このメソッドは現在のグループを再帰的に検索し、入れ子になったすべてのグループ メンバーを返します。</summary>
        <returns>グループのメンバーであるプリンシパル オブジェクトを格納する <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> オブジェクト。グループにメンバーがない場合は空のコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recursive フラグが `true`に設定されている場合、返されるプリンシパルコレクションにはグループオブジェクトは含まれません。リーフノードのみが返されます。 たとえば、コンピューターオブジェクトとグループオブジェクト (ユーザープリンシパルのみ) を含むグループを再帰的に検索する場合、返されるコレクションには、入れ子になったグループ内の computer オブジェクトおよび user principal オブジェクトが含まれます。 グループオブジェクトはリーフではないため、空の場合でも、再帰検索では返されません。  Recursive フラグが `false`に設定されている場合、返されるコレクションには group オブジェクトが含まれる場合があります。  
  
 メンバーはコンテキストに対して返されません。 たとえば、"CN = AD DS、DC = Fabrikam, DC = com" に基づいているコンテキストがある場合、PrincipalFindResult set には、"CN = NormalUsers, DC = Fabrikam, DC = com" の下にあるグループメンバーが含まれますが、これらのメンバーは、検索されるコンテキスト。 返されたプリンシパルコレクションには、グループとは異なるストアにあるメンバーも含まれる場合があります。  
  
   
  
## Examples  
 次のコードは、ユーザー名が "administrator" に設定された LDAP ドメイン "fabrikam.com" に接続し、パスワードを <xref:System.DirectoryServices.AccountManagement.PrincipalContext> コンストラクターで "SecretPwd123" に設定します。  
  
 検索が実行され、"Domain Admins" という名前のグループが、<xref:System.DirectoryServices.AccountManagement.PrincipalContext> コンストラクター "DC = fabrikam, DC = com" で指定されたコンテナーの下に検索されます。 グループが見つかると、このグループのメンバーであるすべてのプリンシパル (再帰メンバーを含む) が列挙されます。  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupScope As Nullable(Of GroupScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; GroupScope { Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; get(); void set(Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.GroupScope : Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このグループ プリンシパルのスコープを指定する null 許容の <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> 列挙値を取得または設定します。</summary>
        <value>このグループのスコープを指定する null 許容の <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> 列挙値、またはスコープが設定されていない場合は null。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">アプリケーションは、このプロパティを null に設定できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecurityGroup As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsSecurityGroup { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityGroup : Nullable&lt;bool&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループのセキュリティが有効かどうかを示す null 許容のブール値を取得または設定します。</summary>
        <value>グループのセキュリティが有効な場合は <see langword="true" />。グループが永続化されていない場合は null。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが false を返す場合、グループは一時的にセキュリティが有効になっていません。 <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> プロパティが後で true にリセットされた場合、グループのプロパティは、false に設定されている前と同じになります。  
  
 プリンシパルがストアに永続化されていない場合、このプロパティは null を返します。 プリンシパルが永続化された後、既定のセキュリティが有効な設定はストアによって異なります。 AD DS と AD LDS は、永続化されたときに新しいプリンシパルを無効にしますが、SAM は永続化されたときに新しいプリンシパルを有効にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">アプリケーションは、このプロパティを null に設定できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As PrincipalCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::PrincipalCollection ^ Members { System::DirectoryServices::AccountManagement::PrincipalCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Members : System.DirectoryServices.AccountManagement.PrincipalCollection" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループのメンバーを表すプリンシパル オブジェクトのコレクションを取得します。</summary>
        <value>グループのメンバーを表すプリンシパル オブジェクトを格納する <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 AD DS グループの場合、<xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> プロパティには、primaryId 属性によってグループのメンバーであるユーザープリンシパルが含まれます。 グループにこれらの種類のメンバーが含まれている場合は、次の制限が適用されます。  
  
-   <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> メソッドを使用して、primaryId 属性のためにグループの一部であるメンバーを削除することはできません。  
  
-   <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> メソッドを使用して、primaryId 属性のためにグループの一部であるメンバーを消去することはできません。  
  
   
  
## Examples  
 次のコードは、ユーザー名が "administrator" に設定された LDAP ドメイン "fabrikam.com" に接続し、パスワードを <xref:System.DirectoryServices.AccountManagement.PrincipalContext> コンストラクターで "SecretPwd123" に設定します。  
  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext> コンストラクター "DC = fabrikam, DC = com" で指定されたコンテナーの下に "Domain Admins" という名前のグループを検索するための検索が実行されます。 グループが見つかると、"John Smith" という名前のユーザーがグループから削除され、"加藤 Daly" という名前のユーザーがグループに追加されます。  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
