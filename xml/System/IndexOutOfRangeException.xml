<Type Name="IndexOutOfRangeException" FullName="System.IndexOutOfRangeException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9cdbf4ae8c1bedd5e980907a7a1936801d829a67" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83476959" /></Metadata><TypeSignature Language="C#" Value="public sealed class IndexOutOfRangeException : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IndexOutOfRangeException extends System.Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.IndexOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IndexOutOfRangeException&#xA;Inherits Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class IndexOutOfRangeException sealed : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type IndexOutOfRangeException = class&#xA;    inherit Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public sealed class IndexOutOfRangeException : SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IndexOutOfRangeException extends System.SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IndexOutOfRangeException&#xA;Inherits SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class IndexOutOfRangeException sealed : SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type IndexOutOfRangeException = class&#xA;    inherit SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit IndexOutOfRangeException extends System.SystemException" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4d0fe-101">境界外のインデックスを使用して配列またはコレクションの要素にアクセスしようとしたときにスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-101">The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d0fe-102">無効なインデックスを使用して、配列またはコレクションのメンバーにアクセスする、またはバッファー内の特定の場所から読み取り/書き込みした場合<xref:System.IndexOutOfRangeException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-102">An <xref:System.IndexOutOfRangeException> exception is thrown when an invalid index is used to access a member of an array or a collection, or to read or write from a particular location in a buffer.</span></span> <span data-ttu-id="4d0fe-103">この例外は<xref:System.Exception>クラスを継承しますが、一意のメンバーの追加はありません。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-103">This exception  inherits from the <xref:System.Exception> class but adds no unique members.</span></span>  
  
 <span data-ttu-id="4d0fe-104">通常、<xref:System.IndexOutOfRangeException>例外は開発者のエラーの結果としてスローされます。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-104">Typically, an <xref:System.IndexOutOfRangeException> exception is thrown as a result of developer error.</span></span> <span data-ttu-id="4d0fe-105">例外を処理する代わりに、エラーの原因を診断し、コードを修正する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-105">Instead of handling the exception, you should diagnose the cause of the error and correct your code.</span></span> <span data-ttu-id="4d0fe-106">このエラーの最も一般的な原因は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-106">The most common causes of the error are:</span></span>  
  
-   <span data-ttu-id="4d0fe-107">次の例が示すように、コレクションまたは 0 ベースの配列の上限が、メンバーまたは要素数よりも 1 少ないことを忘れる。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-107">Forgetting that the upper bound of a collection or a zero-based array is one less than its number of members or elements, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length1.cs#3)]
     [!code-vb[System.IndexOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length1.vb#3)]  
  
     <span data-ttu-id="4d0fe-108">エラーを修正するには、次のようなコードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-108">To correct the error, you can use code like the following.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length2.cs#4)]
     [!code-vb[System.IndexOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length2.vb#4)]  
  
     <span data-ttu-id="4d0fe-109">または、配列内のすべての要素をインデックスで反復処理する代わりに、`foreach`ステートメント (C#)または`For Each`ステートメント (Visual Basic)を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-109">Alternately, instead of iterating all the elements in the array by their index, you can use the `foreach` statement (in C#) or the `For Each` statement (in Visual Basic).</span></span>  
  
-   <span data-ttu-id="4d0fe-110">適切な大きさでなく、元の配列よりも要素の数が少ない別の配列に、配列の要素を割り当てようとしています。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-110">Attempting to assign an array element to another array that has not been adequately dimensioned and that has fewer elements than the original array.</span></span> <span data-ttu-id="4d0fe-111">次の例は、`value1`配列内の最後の要素を、`value2`配列の同じ要素に代入しようとしています。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-111">The following example attempts to assign the last element in the `value1` array to the same element in the `value2` array.</span></span> <span data-ttu-id="4d0fe-112">ただし、`value2`配列は 7 ではなく 6 つの要素を持つ、適切でない大きさになっています。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-112">However, the `value2` array has been incorrectly dimensioned to have six instead of seven elements.</span></span> <span data-ttu-id="4d0fe-113">その結果、割り当てによって<xref:System.IndexOutOfRangeException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-113">As a result, the assignment throws an <xref:System.IndexOutOfRangeException> exception.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/Uninit1.cs#10)]
     [!code-vb[System.IndexOutOfRangeException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/Uninit1.vb#10)]  
  
-   <span data-ttu-id="4d0fe-114">検索メソッドから返された値を使用して、特定のインデックス位置から配列またはコレクションの一部を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-114">Using a value returned by a search method to iterate a portion of an array or collection starting at a particular index position.</span></span> <span data-ttu-id="4d0fe-115">検索操作で一致が見つかったかどうかを確認し忘れた場合、この例で示すようにランタイムは<xref:System.IndexOutOfRangeException>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-115">If you forget to check whether the search operation found a match, the runtime throws an <xref:System.IndexOutOfRangeException> exception, as shown in this example.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative1.cs#5)]
     [!code-vb[System.IndexOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative1.vb#5)]  
  
     <span data-ttu-id="4d0fe-116">ここで、<xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>メソッドは、検索に失敗した場合、無効なインデックス値である -1 を返します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-116">In this case, the <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType> method returns -1, which is an invalid index value, when it fails to find a match.</span></span> <span data-ttu-id="4d0fe-117">このエラーを修正するには、この例で示すように、配列を反復処理する前に、検索メソッドの戻り値を確認します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-117">To correct this error, check the search method's return value before iterating the array, as shown in this example.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative2.cs#6)]
     [!code-vb[System.IndexOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative2.vb#6)]  
  
-   <span data-ttu-id="4d0fe-118">返されたオブジェクトに有効なデータがあるかどうかをテストせずに、クエリから返された結果セット、コレクション、または配列を使用、または列挙しようとしました。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-118">Trying to use or enumerate a result set, collection, or array returned by a query without testing whether the returned object has any valid data.</span></span>  
  
-   <span data-ttu-id="4d0fe-119">計算値を使用して、開始インデックス、終了インデックス、または反復する項目数を定義します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-119">Using a computed value to define the starting index, the ending index, or the number of items to be iterated.</span></span> <span data-ttu-id="4d0fe-120">計算の結果が予期しないものである場合、<xref:System.IndexOutOfRangeException>例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-120">If the result of the computation is unexpected, it might result in an <xref:System.IndexOutOfRangeException> exception.</span></span> <span data-ttu-id="4d0fe-121">配列またはコレクションを反復処理する前に、インデックス値の計算のときにプログラムのロジックを確認し、値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-121">You should check your program's logic in calculating the index value and validate the value before iterating the array or collection.</span></span> <span data-ttu-id="4d0fe-122">次の条件をすべて満たす必要があります。そうでない場合、<xref:System.IndexOutOfRangeException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-122">The following conditions must all be true; otherwise, an <xref:System.IndexOutOfRangeException> exception is thrown:</span></span>  
  
    -   <span data-ttu-id="4d0fe-123">開始インデックスは、配列の次元を反復する場合は<xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType>以上、コレクションの場合は 0 以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-123">The starting index must be greater than or equal to <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> for the dimension of the array that you want to iterate, or greater than or equal to 0 for a collection.</span></span>  
  
    -   <span data-ttu-id="4d0fe-124">終了インデックスは、配列の次元を反復する場合は<xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType>よりも大きい値を指定、またはコレクションの`Count`プロパティ以上にできません。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-124">The ending index cannot exceed <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> for the dimension of the array that you want to iterate, or cannot be greater than or equal to the `Count` property of a collection.</span></span>  
  
    -   <span data-ttu-id="4d0fe-125">次の式は、配列の次元を反復する場合は true である必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-125">The following equation must be true for the dimension of the array that you want to iterate:</span></span>  
  
        ```  
        start_index >= lower_bound And start_index + items_to_iterate - 1 <= upper_bound  
        ```  
  
         <span data-ttu-id="4d0fe-126">コレクション場合は、次の式を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-126">For a collection, the following equation must be true:</span></span>  
  
        ```  
        start_index >= 0 And start_index + items_to_iterate <= Count  
        ```  
  
        > [!TIP]
        >  <span data-ttu-id="4d0fe-127">配列またはコレクションの開始インデックスは、負の数値を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-127">The starting index of an array or collection can never be a negative number.</span></span>  
  
-   <span data-ttu-id="4d0fe-128">配列が0から始まる必要があると仮定します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-128">Assuming that an array must be zero-based.</span></span> <span data-ttu-id="4d0fe-129">0 以外から始まる配列は<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType>メソッドで作成でき、COM 相互運用機能で返すことができますが、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-129">Arrays that are not zero-based can be created by the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> method and can be returned by COM interop, although they aren't CLS-compliant.</span></span> <span data-ttu-id="4d0fe-130">次の例は、<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType>メソッドで作成された、 0 から始まらない配列を反復処理するときにスローされる<xref:System.IndexOutOfRangeException>を示しています。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-130">The following example illustrates the <xref:System.IndexOutOfRangeException> that is thrown when you try to iterate a non-zero-based array created by the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero1.cs#1)]
     [!code-vb[System.IndexOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero1.vb#1)]  
  
     <span data-ttu-id="4d0fe-131">このエラーを解決するには、次の例に示すように、配列の開始インデックスに関する仮定を行うのではなく、<xref:System.Array.GetLowerBound%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-131">To correct the error, as the following example does, you can call the <xref:System.Array.GetLowerBound%2A> method instead of making assumptions about the starting index of an array.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero2.cs#2)]
     [!code-vb[System.IndexOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero2.vb#2)]  
  
     <span data-ttu-id="4d0fe-132"><xref:System.Array.GetLowerBound%2A>メソッドを呼び出して配列の開始インデックスを取得するときには、<xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType>も呼び出して終了インデックスを取得する必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-132">Note that when you call the <xref:System.Array.GetLowerBound%2A> method to get the starting index of an array, you should also call the <xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType> method to get its ending index.</span></span>  
  
-   <span data-ttu-id="4d0fe-133">数値の配列またはコレクション内のインデックスと、そのインデックスにある値を混同する。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-133">Confusing an index and the value at that index in a numeric array or collection.</span></span> <span data-ttu-id="4d0fe-134">通常、この問題は`foreach`ステートメント (C#) または`For Each`ステートメント (Visual Basic)を使用した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-134">This issue usually occurs when using the `foreach` statement (in C#) or the `For Each` statement (in Visual Basic).</span></span> <span data-ttu-id="4d0fe-135">この問題を説明する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-135">The following example illustrates the problem.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach1.cs#7)]
     [!code-vb[System.IndexOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach1.vb#7)]  
  
     <span data-ttu-id="4d0fe-136">イテレーションの構成体は、インデックスではなく、配列またはコレクションの各値を返します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-136">The iteration construct returns each value in an array or collection, not its index.</span></span> <span data-ttu-id="4d0fe-137">この例外を回避するには、次のコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-137">To eliminate the exception, use this code.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach2.cs#8)]
     [!code-vb[System.IndexOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach2.vb#8)]  
  
-   <span data-ttu-id="4d0fe-138"><xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>プロパティで、無効な列名を指定する。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-138">Providing an invalid column name to the <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="4d0fe-139">スレッド セーフに違反する。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-139">Violating thread safety.</span></span> <span data-ttu-id="4d0fe-140">同じ<xref:System.IO.StreamReader>オブジェクトからの読み取り、複数のスレッドからの同じ<xref:System.IO.StreamWriter>オブジェクトへの書き込み、または異なるスレッドからの<xref:System.Collections.Hashtable>内のオブジェクトの列挙などの操作は、オブジェクトがスレッド セーフな方法でアクセスされていない場合、<xref:System.IndexOutOfRangeException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-140">Operations such as reading from the same <xref:System.IO.StreamReader> object, writing to the same <xref:System.IO.StreamWriter> object from multiple threads, or enumerating the objects in a <xref:System.Collections.Hashtable> from different threads can throw an <xref:System.IndexOutOfRangeException> if the object isn't accessed in a thread-safe way.</span></span> <span data-ttu-id="4d0fe-141">この例外は競合状態に依存するために、通常は断続的です。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-141">This exception is typically intermittent because it relies on a race condition.</span></span>  
  
 <span data-ttu-id="4d0fe-142">ハード コーディングされたインデックス値を使用して配列を操作するとき、インデックス値が正しくないか無効な場合、または操作されている配列のサイズが予期されていない場合は、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-142">Using hard-coded index values to manipulate an array is likely to throw an exception if the index value is incorrect or invalid, or if the size of the array being manipulation is unexpected.</span></span> <span data-ttu-id="4d0fe-143">操作が<xref:System.IndexOutOfRangeException>例外をスローすることを防ぐためには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-143">To prevent an operation from throwing an  <xref:System.IndexOutOfRangeException> exception, you can do the following:</span></span>  
  
-   <span data-ttu-id="4d0fe-144">インデックスを使用して要素を反復処理する代わりに、[foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx)ステートメント(C#)または[For Each...Next](https://msdn.microsoft.com/library/5ebk1751.aspx)構造(Visual Basic)を使用して、配列の要素を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-144">Iterate the elements of the array using the [foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx) statement (in C#) or the [For Each...Next](https://msdn.microsoft.com/library/5ebk1751.aspx) construct (in Visual Basic)  instead of iterating elements by index.</span></span>  
  
-   <span data-ttu-id="4d0fe-145"><xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType>メソッドによって返されるインデックスで始まり、<xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType>メソッドによって返されるインデックスで終わるインデックスを使用して要素を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-145">Iterate the elements by index starting with the index returned by the <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> method and ending with the index returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="4d0fe-146">ある配列の要素を別の配列に割り当てる場合は、<xref:System.Array.Length%2A?displayProperty=nameWithType>プロパティを比較して、対象の配列に、少なくともソース配列と同じ数の要素があることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-146">If you are assigning elements in one array to another, ensure that  the target array has at least as many elements as the source array by comparing their <xref:System.Array.Length%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="4d0fe-147"><xref:System.IndexOutOfRangeException>インスタンスの初期プロパティ値の一覧については、<xref:System.IndexOutOfRangeException>コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-147">For a list of initial property values for an instance of <xref:System.IndexOutOfRangeException>, see the <xref:System.IndexOutOfRangeException> constructors.</span></span>  
  
 <span data-ttu-id="4d0fe-148">次の中間言語 (IL) 命令は、 <xref:System.IndexOutOfRangeException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-148">The following intermediate language (IL) instructions throw <xref:System.IndexOutOfRangeException>:</span></span>  
  
-   <span data-ttu-id="4d0fe-149">ldelem。\<の種類 ></span><span class="sxs-lookup"><span data-stu-id="4d0fe-149">ldelem.\<type></span></span>  
  
-   <span data-ttu-id="4d0fe-150">ldelema</span><span class="sxs-lookup"><span data-stu-id="4d0fe-150">ldelema</span></span>  
  
-   <span data-ttu-id="4d0fe-151">stelem。\<の種類 ></span><span class="sxs-lookup"><span data-stu-id="4d0fe-151">stelem.\<type></span></span>  
  
 <span data-ttu-id="4d0fe-152"><xref:System.IndexOutOfRangeException>は、値が 0x80131508 の HRESULT COR_E_INDEXOUTOFRANGE を使用します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-152"><xref:System.IndexOutOfRangeException> uses the HRESULT COR_E_INDEXOUTOFRANGE, which has the value 0x80131508.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="4d0fe-153">.NET での例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="4d0fe-153">Handling and throwing exceptions in .NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d0fe-154"><see cref="T:System.IndexOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-154">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d0fe-155"><see cref="T:System.IndexOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-155">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d0fe-156">このコンストラクターは、新しいインスタンスの<xref:System.Exception.Message%2A>プロパティを「配列のインデックスが範囲外です」など、エラーを説明するシステム提供のメッセージに初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-156">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "An array index is out of range."</span></span> <span data-ttu-id="4d0fe-157">このメッセージには、システムの現在のカルチャが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-157">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="4d0fe-158">次の表に、<xref:System.IndexOutOfRangeException> のインスタンスに対するプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-158">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="4d0fe-159">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4d0fe-159">Property</span></span>|<span data-ttu-id="4d0fe-160">値</span><span class="sxs-lookup"><span data-stu-id="4d0fe-160">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4d0fe-161">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-161">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4d0fe-162">ローカライズされたエラー メッセージの文字列です。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-162">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4d0fe-163">エラーを説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-163">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="4d0fe-164">指定したエラー メッセージを使用して、<see cref="T:System.IndexOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-164">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d0fe-165">このコンストラクターは、`message`パラメーターを使用して、新しい例外の<xref:System.Exception.Message%2A?displayProperty=nameWithType>プロパティを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-165">This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=nameWithType> property of the new exception using the `message` parameter.</span></span> <span data-ttu-id="4d0fe-166">`message` の内容は、ユーザーが理解できる内容にします。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-166">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="4d0fe-167">このコンストラクターの呼び出し元は、この文字列が現在のシステム環境向けにローカライズされていることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-167">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="4d0fe-168">次の表に、<xref:System.IndexOutOfRangeException> のインスタンスに対するプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-168">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="4d0fe-169">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4d0fe-169">Property</span></span>|<span data-ttu-id="4d0fe-170">値</span><span class="sxs-lookup"><span data-stu-id="4d0fe-170">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4d0fe-171">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-171">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4d0fe-172">エラー メッセージ文字列です。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-172">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string * Exception -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4d0fe-173">例外の原因を示すエラー メッセージです。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-173">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="4d0fe-174">現在の例外の原因になった例外です。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-174">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="4d0fe-175"><paramref name="innerException" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-175">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="4d0fe-176">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.IndexOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-176">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d0fe-177">前回の例外の直接的な結果としてスローされる例外は、<xref:System.Exception.InnerException%2A> プロパティに前回の例外への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-177">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="4d0fe-178">`InnerException` プロパティは、コンストラクターに渡されたものと同じ値を返します。内部例外値がコンストラクターに渡されなかった場合、`InnerException` プロパティはnull 参照 (Visual Basic の場合は `Nothing`) を返します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-178">The `InnerException` property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the `InnerException` property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="4d0fe-179">次の表に、<xref:System.IndexOutOfRangeException> のインスタンスに対するプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-179">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="4d0fe-180">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4d0fe-180">Property</span></span>|<span data-ttu-id="4d0fe-181">値</span><span class="sxs-lookup"><span data-stu-id="4d0fe-181">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4d0fe-182">内部例外の参照です。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-182">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4d0fe-183">エラー メッセージ文字列です。</span><span class="sxs-lookup"><span data-stu-id="4d0fe-183">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>
